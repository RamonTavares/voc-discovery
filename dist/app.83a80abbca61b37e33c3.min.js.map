{"version":3,"sources":["webpack:///app.83a80abbca61b37e33c3.min.js","webpack:///./src/main.ts","webpack:///./src/app/app.module.ts","webpack:///./~/@angular/forms/bundles/forms.umd.js","webpack:///./~/ng2-pagination/index.js","webpack:///./~/ng2-pagination/dist/ng2-pagination.js","webpack:///./~/ng2-pagination/dist/paginate.pipe.js","webpack:///./~/ng2-pagination/dist/pagination.service.js","webpack:///./~/ng2-pagination/dist/pagination-controls.component.js","webpack:///./~/ng2-pagination/dist/template.js","webpack:///./~/ng2-pagination/dist/pagination-controls.directive.js","webpack:///./~/@angular/material/material.umd.js","webpack:///./~/angular-2-data-table/dist/index.js","webpack:///./~/angular-2-data-table/dist/components/table.component.js","webpack:///./~/angular-2-data-table/dist/components/column.component.js","webpack:///./~/angular-2-data-table/dist/components/row.component.js","webpack:///./~/angular-2-data-table/dist/components/row.template.js","webpack:///./~/angular-2-data-table/dist/components/row.style.js","webpack:///./~/angular-2-data-table/dist/components/types.js","webpack:///./~/angular-2-data-table/dist/utils/drag.js","webpack:///./~/angular-2-data-table/dist/components/table.template.js","webpack:///./~/angular-2-data-table/dist/components/table.style.js","webpack:///./~/angular-2-data-table/dist/components/pagination.component.js","webpack:///./~/angular-2-data-table/dist/components/pagination.template.js","webpack:///./~/angular-2-data-table/dist/components/pagination.style.js","webpack:///./~/angular-2-data-table/dist/components/header.component.js","webpack:///./~/angular-2-data-table/dist/components/header.template.js","webpack:///./~/angular-2-data-table/dist/components/header.style.js","webpack:///./~/angular-2-data-table/dist/utils/px.js","webpack:///./~/angular-2-data-table/dist/utils/hide.js","webpack:///./~/angular-2-data-table/dist/utils/min.js","webpack:///./~/angular-2-data-table/dist/tools/data-table-resource.js","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.css","webpack:///./src/app/pages/review-overview.component.ts","webpack:///./src/app/services/query.service.ts","webpack:///./src/app/shared/constants.ts","webpack:///./src/app/pages/review-overview.component.html","webpack:///./src/app/pages/enrichment-visualizer.component.ts","webpack:///./src/app/shared/helpers.ts","webpack:///./src/app/pages/enrichment-visualizer.component.html","webpack:///./src/app/pages/product-search.component.ts","webpack:///./src/app/pages/product-search.component.html","webpack:///./src/app/components/query-form.component.ts","webpack:///./src/app/components/query-form.component.html","webpack:///./src/app/components/relations-list.component.ts","webpack:///./src/app/components/relations-list.component.html","webpack:///./src/app/components/keywords-chart.component.ts","webpack:///./src/app/components/keywords-chart.component.html","webpack:///./src/app/components/bubble-chart.component.ts","webpack:///./src/app/components/bubble-chart.component.html","webpack:///./src/app/components/stacked-barchart.component.ts","webpack:///./src/app/components/stacked-barchart.component.html","webpack:///./src/app/components/pie-chart.component.ts","webpack:///./src/app/components/pie-chart.component.html","webpack:///./src/app/components/number-line.component.ts","webpack:///./src/app/components/product-sentiment-timeline.component.ts","webpack:///./src/app/components/data-table.component.ts","webpack:///./src/app/components/data-table.component.html","webpack:///./src/app/components/concepts-table.component.ts","webpack:///./src/app/components/concepts-table.component.html","webpack:///./src/app/components/entities-table.component.ts","webpack:///./src/app/components/entities-table.component.html","webpack:///./src/app/components/keywords-table.component.ts","webpack:///./src/app/components/keywords-table.component.html"],"names":["webpackJsonp","0","module","exports","__webpack_require__","platform_browser_dynamic_1","core_1","app_module_1","enableProdMode","platformBrowserDynamic","bootstrapModule","AppModule","23","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","common_1","router_1","platform_browser_1","forms_1","http_1","ng2_pagination_1","material_1","angular_2_data_table_1","app_component_1","review_overview_component_1","enrichment_visualizer_component_1","product_search_component_1","query_form_component_1","relations_list_component_1","keywords_chart_component_1","bubble_chart_component_1","stacked_barchart_component_1","pie_chart_component_1","number_line_component_1","product_sentiment_timeline_component_1","data_table_component_1","concepts_table_component_1","entities_table_component_1","keywords_table_component_1","appRoutes","path","redirectTo","pathMatch","component","ReviewOverview","EnrichmentVisualizer","ProductSearch","NgModule","imports","RouterModule","forRoot","BrowserModule","FormsModule","HttpModule","JsonpModule","Ng2PaginationModule","MaterialModule","DataTableModule","providers","provide","LocationStrategy","useClass","HashLocationStrategy","declarations","AppComponent","StackedBarChart","NumberLine","ProductSentimentTimeline","QueryForm","RelationsList","KeywordsChart","BubbleChart","PieChart","ProductDataTable","ConceptsTable","EntitiesTable","KeywordsTable","bootstrap","56","global","factory","_angular_core","rxjs_operator_toPromise","rxjs_Subject","rxjs_Observable","rxjs_observable_fromPromise","isPresent","obj","isBlank","looseIdentical","a","b","isNaN","isJsObject","o","isPrimitive","isEmptyInputValue","value","_convertToPromise","isPromise","toPromise","call","_executeValidators","control","validators","map","_executeAsyncValidators","_mergeErrors","arrayOfErrors","res","reduce","errors","StringMapWrapper","merge","keys","normalizeValidator","validator","validate","normalizeAsyncValidator","unimplemented","Error","_buildValueString","id","slice","_extractId","valueString","split","_buildValueString$1","_extractId$1","controlPath","name","parent","concat","setUpControl","dir","_throwError","valueAccessor","Validators","compose","asyncValidator","composeAsync","writeValue","registerOnChange","newValue","viewToModelUpdate","markAsDirty","setValue","emitModelToViewChange","registerOnTouched","markAsTouched","emitModelEvent","setDisabledState","registerOnDisabledChange","isDisabled","_rawValidators","forEach","registerOnValidatorChange","updateValueAndValidity","_rawAsyncValidators","cleanUpControl","_noControlError","_clearChangeFns","setUpFormContainer","message","messageEnd","join","composeValidators","composeAsyncValidators","isPropertyUpdated","changes","viewModel","hasOwnProperty","change","isFirstChange","currentValue","isBuiltInAccessor","BUILTIN_ACCESSORS","some","constructor","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","DefaultValueAccessor","_find","delimiter","Array","FormGroup","controls","FormArray","at","toObservable","fromPromise","coerceToValidator","isArray","coerceToAsyncValidator","_hasInvalidParent","FormGroupName","FormGroupDirective","FormArrayName","AbstractControlDirective","prototype","get","enumerable","configurable","valid","invalid","pending","pristine","dirty","touched","untouched","disabled","enabled","statusChanges","valueChanges","reset","undefined","hasError","errorCode","getError","__extends$1","__extends","__","p","create","ControlContainer","_super","apply","m1","m2","m","_i","_a","_b","_c","equals","k1","k2","ListWrapper","removeAll","list","items","index","indexOf","splice","remove","el","flatten","flat","item","flatItem","__core_private__","NG_VALIDATORS","OpaqueToken","NG_ASYNC_VALIDATORS","required","minLength","minlength","requiredLength","actualLength","maxLength","maxlength","pattern","nullValidator","regex","regexStr","RegExp","toString","test","requiredPattern","actualValue","presentValidators","filter","promises","Promise","all","then","NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","useExisting","forwardRef","CheckboxControlValueAccessor","multi","_renderer","_elementRef","onChange","_","onTouched","setElementProperty","nativeElement","fn","type","Directive","args","selector","host","(change)","(blur)","ctorParameters","Renderer","ElementRef","DEFAULT_VALUE_ACCESSOR","normalizedValue","(input)","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","parseFloat","__extends$2","NgControl","_parent","RADIO_VALUE_ACCESSOR","RadioControlValueAccessor","RadioControlRegistry","_accessors","add","accessor","push","select","_this","_isSameGroup","fireUncheck","controlPair","_control","Injectable","_registry","_injector","ngOnInit","_checkName","ngOnDestroy","_state","_fn","formControlName","_throwNameError","Injector","propDecorators","Input","RANGE_VALUE_ACCESSOR","RangeValueAccessor","SELECT_VALUE_ACCESSOR","SelectControlValueAccessor","_optionMap","Map","_idCounter","_getOptionId","_getOptionValue","_registerOption","from","has","NgSelectOption","_element","_select","set","_setElementValue","delete","Optional","Host","ngValue","SELECT_MULTIPLE_VALUE_ACCESSOR","SelectMultipleControlValueAccessor","values","ids","opt","_setSelected","selected","options","selectedOptions","val","_value","NgSelectMultipleOption","AbstractFormGroupDirective","_checkParentType","formDirective","addFormGroup","removeFormGroup","getFormGroup","_validators","_asyncValidators","__extends$3","AbstractControlStatus","cd","_cd","ngControlStatusHost","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","NgControlStatus","Self","NgControlStatusGroup","__extends$5","EventEmitter","isAsync","__isAsync","emit","next","subscribe","generatorOrNext","error","complete","schedulerFn","errorFn","err","completeFn","setTimeout","Subject","__extends$6","VALID","INVALID","PENDING","DISABLED","AbstractControl","_onCollectionChange","_pristine","_touched","_onDisabledChange","_status","_errors","_valueChanges","_statusChanges","setValidators","newValidator","setAsyncValidators","clearValidators","clearAsyncValidators","onlySelf","markAsUntouched","_forEachChild","_updateTouched","markAsPristine","_updatePristine","markAsPending","disable","emitEvent","_updateValue","_updateAncestors","changeFn","enable","setParent","_setInitialStatus","_runValidator","_calculateStatus","_runAsyncValidator","_updateTreeValidity","ctrl","_allControlsDisabled","_cancelExistingSubscription","obs","_asyncValidationSubscription","setErrors","unsubscribe","_updateControlsErrors","x","_initObservables","_anyControlsHaveStatus","status","_anyControls","_anyControlsDirty","_anyControlsTouched","_isBoxedValue","formState","_registerOnCollectionChange","FormControl","_onChange","_applyFormState","emitViewToModelChange","patchValue","condition","cb","_setUpControls","registerControl","addControl","removeControl","setControl","contains","controlName","_checkAllValuesPresent","_throwIfControlMissing","getRawValue","_reduceChildren","acc","_reduceValue","initValue","_registerControl","insert","removeAt","__extends$4","formDirectiveProvider","NgForm","resolvedPromise","resolve","asyncValidators","_submitted","ngSubmit","form","container","_findContainer","getControl","group","updateModel","onSubmit","$event","onReset","resetForm","pop","(submit)","(reset)","outputs","exportAs","Inject","Examples","formGroupName","formArrayName","ngModelGroup","ngModelWithFormGroup","TemplateDrivenErrors","modelParentException","formGroupNameException","missingNameException","modelGroupParentException","__extends$8","modelGroupProvider","NgModelGroup","SkipSelf","__extends$7","formControlBinding","NgModel","resolvedPromise$1","_registered","update","ngOnChanges","_checkForErrors","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","standalone","disabledValue","Output","ReactiveErrors","controlParentException","ngModelGroupException","missingFormException","groupParentException","arrayParentException","disabledAttrWarning","console","warn","__extends$9","formControlBinding$1","FormControlDirective","_isControlChanged","__extends$11","formDirectiveProvider$1","directives","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","addFormArray","removeFormArray","getFormArray","newCtrl","_oldForm","sync","async","__extends$12","formGroupNameProvider","formArrayNameProvider","__extends$10","controlNameBinding","FormControlName","_added","REQUIRED_VALIDATOR","RequiredValidator","_required","[attr.required]","MIN_LENGTH_VALIDATOR","MinLengthValidator","_createValidator","_validator","parseInt","[attr.minlength]","MAX_LENGTH_VALIDATOR","MaxLengthValidator","[attr.maxlength]","PATTERN_VALIDATOR","PatternValidator","[attr.pattern]","FormBuilder","controlsConfig","extra","_reduceControls","array","_createControl","controlConfig","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","REACTIVE_DRIVEN_DIRECTIVES","InternalFormsSharedModule","ReactiveFormsModule","59","__export","60","paginate_pipe_1","pagination_service_1","pagination_controls_component_1","pagination_controls_directive_1","pagination_service_2","PaginationService","pagination_controls_component_2","PaginationControlsComponent","pagination_controls_directive_2","PaginationControlsDirective","paginate_pipe_2","PaginatePipe","CommonModule","61","LARGE_NUMBER","Number","MAX_SAFE_INTEGER","service","state","transform","collection","_id","defaultId","start","end","serverSideMode","totalItems","instance","createInstance","perPage","itemsPerPage","register","currentPage","isIdentical","stateIsIdentical","saveState","config","checkConfig","missing","prop","size","isMetaDataIdentical","every","element","Pipe","pure","62","instances","DEFAULT_ID","changed","updateInstance","getCurrentPage","setCurrentPage","page","maxPage","Math","ceil","setTotalItems","setItemsPerPage","getInstance","clone","63","template_1","maxSize","pageChange","_directionLinks","_autoHide","Component","template","DEFAULT_TEMPLATE","styles","DEFAULT_STYLES","changeDetection","ChangeDetectionStrategy","OnPush","directionLinks","autoHide","64","65","changeDetectorRef","pages","changeSub","updatePageLinks","markForCheck","detectChanges","previous","setCurrent","getCurrent","isFirstPage","isLastPage","getLastPage","inst","correctedCurrentPage","outOfBoundCorrection","createPageArray","totalPages","paginationRange","halfWay","isStart","isEnd","isMiddle","ellipsesNeeded","label","pageNumber","calculatePageNumber","openingEllipsesNeeded","closingEllipsesNeeded","ChangeDetectorRef","66","_angular_platformBrowser","_angular_forms","_angular_common","_angular_http","rxjs_add_observable_forkJoin","rxjs_add_observable_of","rxjs_add_operator_map","rxjs_add_operator_filter","rxjs_add_operator_do","rxjs_add_operator_share","rxjs_add_operator_finally","rxjs_add_operator_catch","rxjs_add_operator_first","formatCssUnit","applyCssTransform","transformValue","trim","style","webkitTransform","isNativeFormElement","nodeName","toLowerCase","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasAttribute","hasValidTabIndex","tabIndex","getAttribute","isPotentiallyFocusable","isFakeMousedownFromScreenReader","event","buttons","coerceBooleanProperty","coerceNumberProperty","fallbackValue","coerceToString","coerceToNumber","calc","exp","normalizeUnits","match","cloneSvg","svg","cloneNode","clamp","max","min","polarToCartesian","radius","pathRadius","angleInDegrees","angleInRadians","DEGREE_IN_RADIANS","cos","sin","linearEase","currentTime","startValue","changeInValue","duration","materialEase","time","timeCubed","pow","timeQuad","timeQuint","getSvgArc","rotation","largeArcFlag","startPoint","startAngle","MAX_ANGLE","endAngle","arcSweep","clamp$1","extendObject","dest","sources","TypeError","sources_1","source","_applyConfigDefaults","MdSnackBarConfig","_applyConfigDefaults$1","dialogConfig","MdDialogConfig","ForegroundRippleState","__decorate$1","__metadata$1","MdLine","MdLineSetter","_lines","_setLineClass","count","_resetClasses","_setClass","className","bool","setElementClass","MdLineModule","__decorate$2","__metadata$2","Dir","_dir","dirChange","old","String","HostBinding","RtlModule","ngModule","ForegroundRipple","rippleElement","NEW","RIPPLE_SPEED_PX_PER_SECOND","MIN_RIPPLE_FILL_TIME_SECONDS","MAX_RIPPLE_FILL_TIME_SECONDS","distanceToFurthestCorner","y","rect","distX","abs","left","right","distY","top","bottom","sqrt","RippleRenderer","_eventHandlers","_rippleElement","_backgroundDiv","document","createElement","classList","appendChild","setTriggerElement","newTrigger","_triggerElement","eventHandler","eventName","removeEventListener","addEventListener","setTriggerElementToHost","clearTriggerElement","createForegroundRipple","rippleOriginLeft","rippleOriginTop","color","centered","speedFactor","transitionEndCallback","parentRect","getBoundingClientRect","startX","width","startY","height","offsetX","offsetY","maxRadius","rippleDiv","backgroundColor","fadeInSeconds","transitionDuration","window","getComputedStyle","opacity","ripple","EXPANDING","fadeOutForegroundRipple","removeRippleFromDom","parentElement","removeChild","fadeInRippleBackground","fadeOutRippleBackground","__decorate$3","__metadata$3","MdRipple","eventHandlers","_mouseDown","_click","_mouseLeave","_rippleRenderer","trigger","changedInputs","forceCenter","e","_rippleTransitionEnded","propertyName","FADING_OUT","button","isKeyEvent","screenX","screenY","pageX","pageY","Boolean","MdRippleModule","MdError","MdNullPortalError","MdPortalAlreadyAttachedError","MdPortalHostAlreadyDisposedError","MdUnknownPortalTypeError","MdNullPortalHostError","MdNoPortalAttachedError","Portal","attach","hasAttached","_attachedHost","detach","setAttachedHost","ComponentPortal","viewContainerRef","injector","TemplatePortal","locals","templateRef","elementRef","BasePortalHost","_isDisposed","_attachedPortal","portal","attachComponentPortal","attachTemplatePortal","_disposeFn","dispose","setDisposeFn","__decorate$4","__metadata$4","TemplatePortalDirective","TemplateRef","ViewContainerRef","PortalHostDirective","_componentFactoryResolver","_viewContainerRef","_portal","_replaceAttachedPortal","componentFactory","resolveComponentFactory","ref","createComponent","parentInjector","destroy","createEmbeddedView","clear","inputs","ComponentFactoryResolver","PortalModule","OverlayState","hasBackdrop","backdropClass","direction","DomPortalHost","_hostDomElement","_appRef","_defaultInjector","componentRef","changeDetectorRef_1","registerChangeDetector","unregisterChangeDetector","componentRootNode","_getComponentRootNode","parentNode","viewContainer","viewRef","rootNodes","rootNode","hostView","OverlayRef","_portalHost","_pane","_backdropElement","_backdropClick","_attachBackdrop","attachResult","updateSize","updateDirection","updatePosition","_detatchBackdrop","backdropClick","asObservable","getState","positionStrategy","setAttribute","requestAnimationFrame","backdropToDetach","__decorate$8","__metadata$8","ViewportRuler","getViewportRect","documentRect","documentElement","scrollPosition","getViewportScrollPosition","innerHeight","innerWidth","body","scrollTop","scrollLeft","ConnectionPositionPair","origin","overlay","originX","originY","overlayX","overlayY","ConnectedPositionStrategy","_connectedTo","_originPos","_overlayPos","_viewportRuler","_offsetX","_offsetY","_preferredPositions","_origin","withFallbackPosition","originRect","overlayRect","viewportRect","firstOverlayPoint","pos","originPoint","_getOriginConnectionPoint","overlayPoint","_getOverlayPoint","_willOverlayFitWithinViewport","_setElementPosition","originPos","overlayPos","withDirection","withOffsetX","offset","withOffsetY","_getStartX","_isRtl","_getEndX","originStartX","originEndX","overlayStartX","overlayStartY","GlobalPositionStrategy","_cssPosition","_top","_bottom","_left","_right","_translateX","_translateY","fixed","absolute","centerHorizontally","centerVertically","position","tranlateX","_reduceTranslateValues","translateY","translateFn","t","__decorate$7","__metadata$7","OverlayPositionBuilder","connectedTo","OverlayContainer","getContainerElement","_containerElement","_createContainer","__decorate$6","__metadata$6","nextUniqueId","defaultState","Overlay","_overlayContainer","_positionBuilder","_createOverlayRef","_createPaneElement","pane","_createPortalHost","ApplicationRef","OVERLAY_PROVIDERS","__decorate$5","__metadata$5","__param","paramIndex","decorator","defaultPositionList","OverlayOrigin","ConnectedOverlayDirective","_overlay","_open","_hasBackdrop","_templatePortal","_attachOverlay","_detachOverlay","_overlayRef","_destroyOverlay","_createOverlay","positions","_buildConfig","overlayConfig","_createPositionStrategy","_backdropSubscription","OverlayModule","__decorate$11","__metadata$11","InteractivityChecker","isVisible","offsetWidth","offsetHeight","getClientRects","getPropertyValue","isTabbable","isFocusable","__decorate$10","__metadata$10","FocusTrap","_checker","focusFirstTabbableElement","redirectToElement","_getFirstTabbableElement","trappedContent","focus","focusLastTabbableElement","_getLastTabbableElement","root","childCount","children","tabbableChild","ViewChild","encapsulation","ViewEncapsulation","None","__decorate$12","__metadata$12","__param$1","LIVE_ANNOUNCER_ELEMENT_TOKEN","MdLiveAnnouncer","elementToken","_liveElement","_createLiveElement","announce","politeness","textContent","_removeLiveElement","liveEl","__decorate$9","__metadata$9","A11Y_PROVIDERS","A11yModule","__decorate$13","__metadata$13","MdGestureConfig","events","buildHammer","mc","Hammer","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","threshold","longpress","recognizeWith","base","inheritances","recognizer","HammerGestureConfig","__decorate$14","__metadata$14","MdUniqueSelectionDispatcher","_listeners","notify","listener","listen","UP_ARROW","DOWN_ARROW","RIGHT_ARROW","LEFT_ARROW","ENTER","SPACE","TAB","__decorate$15","__metadata$15","ELEMENTS_SELECTOR","StyleCompatibility","renderer","StyleCompatibilityModule","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MdCoreModule","__decorate$17","__metadata$17","__param$2","MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","MdButtonToggleGroup","_uniqueIdCounter","MdButtonToggleChange","_name","_disabled","_selected","_isInitialized","_controlValueAccessorChangeFn","_change","_buttonToggles","ngAfterViewInit","_updateButtonToggleNames","_updateSelectedButtonToggleFromValue","_emitChangeEvent","checked","toggle","isAlreadySelected","matchingButtonToggle","buttonToggle","Observable","ContentChildren","MdButtonToggle","QueryList","role","MdButtonToggleGroupMultiple","toggleGroup","toggleGroupMultiple","buttonToggleDispatcher","_checked","_isSingleSelector","buttonToggleGroup","buttonToggleGroupMultiple","_type","newCheckedState","_toggle","_onInputChange","stopPropagation","_onInputClick","MdButtonToggleModule","__decorate$18","__metadata$18","MdButton","_isKeyboardFocused","_isMouseDown","_disableRipple","_color","_updateColor","_setMousedown","newColor","_setElementColor","isAdd","_setKeyboardFocus","_removeKeyboardFocus","getHostElement","isRoundButton","_isRippleDisabled","disableRipple","[disabled]","[class.md-button-focus]","(mousedown)","(focus)","MdAnchor","_haltDisabledEvents","preventDefault","stopImmediatePropagation","[attr.disabled]","(click)","MdButtonModule","__decorate$19","__metadata$19","nextId","MD_CHECKBOX_CONTROL_VALUE_ACCESSOR","MdCheckbox","TransitionCheckState","MdCheckboxChange","ariaLabel","ariaLabelledby","align","tabindex","_currentAnimationClass","_currentCheckState","Init","_indeterminate","hasFocus","_transitionCheckState","Checked","Unchecked","indeterminate","Indeterminate","newState","oldState","_getAnimationClassForCheckStateTransition","_onInputFocus","_onInputBlur","_onInteractionEvent","animSuffix","[class.md-checkbox-indeterminate]","[class.md-checkbox-checked]","[class.md-checkbox-disabled]","[class.md-checkbox-align-end]","[class.md-checkbox-focused]","MdCheckboxModule","__decorate$20","__metadata$20","__param$3","MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","MdRadioGroup","_uniqueIdCounter$1","MdRadioChange","_radios","_updateRadioButtonNames","_updateSelectedRadioFromValue","ngAfterContentInit","_touch","radio","matchingRadio","event_1","MdRadioButton","radioGroup","radioDispatcher","_align","_isFocused","groupValueChanged","MdRadioModule","__decorate$21","__metadata$21","MD_SLIDE_TOGGLE_VALUE_ACCESSOR","MdSlideToggle","MdSlideToggleChange","nextId$1","_uniqueId","_isMousedown","_slideRenderer","_hasFocus","getInputId","SlideToggleRenderer","_onChangeEvent","isDragging","_onDragStart","startThumbDrag","_onDrag","updateThumbPosition","deltaX","_onDragEnd","stopThumbDrag","[class.md-checked]","[class.md-disabled]","[class.md-slide-toggle-focused]","_thumbEl","querySelector","_thumbBarEl","_thumbBarWidth","clientWidth","_percentage","distance","_getThumbPercentage","percentage","MdSlideToggleModule","HAMMER_GESTURE_CONFIG","__decorate$22","__metadata$22","MIN_AUTO_TICK_SEPARATION","MD_SLIDER_VALUE_ACCESSOR","MdSlider","MdSliderChange","_sliderDimensions","_thumbLabel","_lastEmittedValue","_isSliding","_isActive","_step","_tickInterval","_tickIntervalPercent","_percent","_min","_max","SliderRenderer","_clamp","_calculatePercentage","percent","tickIntervalPercent","ticksMarginLeft","_onMouseenter","getSliderDimensions","_updateTickIntervalPercent","_onClick","addFocus","_updateValueFromPosition","clientX","_emitValueIfChanged","_onSlide","center","_onSlideStart","_onSlideEnd","_onBlur","exactValue","_calculateValue","closestValue","round","step","tickInterval","pixelsPerStep","stepsPerTick","pixelsPerTick","(mouseenter)","(slide)","(slideend)","(slidestart)","[attr.aria-disabled]","[attr.aria-valuemax]","[attr.aria-valuemin]","[attr.aria-valuenow]","[class.md-slider-active]","[class.md-slider-disabled]","[class.md-slider-has-ticks]","[class.md-slider-sliding]","[class.md-slider-thumb-label-showing]","_sliderElement","trackElement","MdSliderModule","__decorate$23","__metadata$23","__param$4","MdDuplicatedSidenavError","MdSidenav","_valid","mode","_opened","onOpenStart","onOpen","onCloseStart","onClose","onAlignChanged","_transition","close","_openPromise","_openPromiseResolve","open","isOpen","opened","_closePromise","reject","_openPromiseReject","_closePromiseResolve","_closePromiseReject","_onTransitionEnd","transitionEvent","endsWith","(transitionend)","[attr.align]","[class.md-sidenav-closed]","[class.md-sidenav-closing]","[class.md-sidenav-end]","[class.md-sidenav-opened]","[class.md-sidenav-opening]","[class.md-sidenav-over]","[class.md-sidenav-push]","[class.md-sidenav-side]","[class.md-sidenav-invalid]","MdSidenavLayout","_validateDrawers","_start","_end","_sidenavs","sidenav","_watchSidenavToggle","_watchSidenavAlign","_setLayoutClass","_setDrawersValid","toArray","_closeModalSidenav","_isShowingBackdrop","_isSidenavOpen","side","_getSidenavEffectiveWidth","_width","_getMarginLeft","_getMarginRight","_getPositionLeft","_getPositionRight","_getPositionOffset","_getStyles","marginLeft","marginRight","MdSidenavModule","__decorate$24","__metadata$24","MdListDivider","MdList","MdListAvatar","MdListItem","avatar","_lineSetter","_handleFocus","_handleBlur","ContentChild","MdListModule","__decorate$26","__metadata$26","MdGridTile","_rowspan","_colspan","_setStyle","property","setElementStyle","MdGridTileText","MdGridListColsError","MdGridTileTooWideError","cols","listLength","MdGridListBadRatioError","TileCoordinator","numColumns","tiles","columnIndex","rowIndex","tracker","fill","tile","_trackTile","lastRowMax","rowCount","gapStartIndex","_findMatchingGap","colspan","_markTilePosition","TilePosition","tileCols","gapEndIndex","_nextRow","_findGapEndIndex","rowspan","row","col","TileStyler","_rows","init","_gutterSize","_cols","_direction","getBaseTileSize","sizePercent","gutterFraction","getTilePosition","baseSize","getTileSize","span","setStyle","colIndex","percentWidthPerTile","gutterWidthFractionPerTile","setColStyles","setRowStyles","percentWidth","gutterWidth","baseTileWidth","getGutterSpan","getTileSpan","tileHeight","getComputedHeight","FixedTileStyler","fixedRowHeight","gutterSize","RatioTileStyler","_parseRatio","percentHeightPerTile","rowHeightRatio","baseTileHeight","ratioParts","FitTileStyler","gutterHeightPerTile","__decorate$25","__metadata$25","__param$5","MD_FIT_MODE","MdGridList","_gutter","_rowHeight","_setTileStyler","_checkCols","_checkRowHeight","ngAfterContentChecked","_layoutTiles","_tileStyler","_tiles","_setListStyle","MdGridListModule","__decorate$27","__metadata$27","MdCardContent","MdCardTitle","MdCardSubtitle","MdCardActions","MdCardFooter","MdCard","MdCardHeader","MdCardTitleGroup","MdCardModule","__decorate$29","__metadata$29","MdIconNameNotFoundError","iconName","MdIconSvgTagNotFoundError","SvgIconConfig","url","svgElement","iconKey","namespace","MdIconRegistry","_http","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_defaultFontSetClass","addSvgIcon","addSvgIconInNamespace","addSvgIconSet","addSvgIconSetInNamespace","registerFontClassAlias","alias","classNameForFontAlias","setDefaultFontSetClass","getDefaultFontSetClass","getSvgIconFromUrl","of","_loadSvgIconFromConfig","do","getNamedSvgIcon","_getSvgFromConfig","iconSetConfigs","_getSvgFromIconSetConfigs","throw","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","catch","caught","log","forkJoin","ignoredResults","foundIcon","_extractSvgIconFromSet","_fetchUrl","svgText","_createSvgElementForSingleIcon","_svgElementFromString","responseText","_setSvgAttributes","iconSet","iconNode","tagName","str","div","innerHTML","req","response","text","finally","share","Http","__decorate$28","__metadata$28","MdIconInvalidNameError","MdIcon","_mdIconRegistry","hostAriaLabel","_splitIconName","parts","svgIcon","first","_setSvgElement","svgSrc","_usingFontIcon","_updateFontIconClasses","_updateAriaLabel","ngAfterViewChecked","_getAriaLabel","setElementAttribute","alt","fontIcon","layoutElement","projectNodes","elem","fontSetClass","fontSet","_previousFontSetClass","_previousFontIconClass","MdIconModule","__decorate$30","__metadata$30","PI","DURATION_INDETERMINATE","DURATION_DETERMINATE","startIndeterminate","endIndeterminate","MdProgressCircle","_changeDetectorRef","_ngZone","_lastAnimationId","_mode","_interdeterminateInterval","interval","clearInterval","_cleanupIndeterminateAnimation","_animateCircle","_startIndeterminateAnimation","animateFrom","animateTo","ease","startTime","Date","now","_renderArc","animation_1","elapsedTime","runOutsideAngular","rotationStartPoint","animate","temp","interdeterminateInterval","setInterval","_path","NgZone","MdSpinner","ngZone","MdProgressCircleModule","__decorate$31","__metadata$31","MdProgressBar","_bufferValue","_primaryTransform","scale","_bufferTransform","bufferValue","aria-valuemin","aria-valuemax","MdProgressBarModule","__extends$13","__decorate$32","__metadata$32","noop","MD_INPUT_CONTROL_VALUE_ACCESSOR","MdInput","MD_INPUT_INVALID_INPUT_TYPE","nextUniqueId$1","MdInputPlaceholderConflictError","MdInputUnsupportedTypeError","MdInputDuplicatedHintError","MdPlaceholder","MdHint","[class.md-right]","[class.md-hint]","_focused","_onTouchedCallback","_onChangeCallback","dividerColor","hintLabel","placeholder","rows","wrap","_floatingPlaceholder","_autofocus","_readonly","_spellcheck","_blurEmitter","_focusEmitter","_elementType","_ariaDisabled","_ariaRequired","_ariaInvalid","empty","_convertValueForInputType","_inputElement","_handleChange","_hasPlaceholder","_placeholderChild","_validateConstraints","_hintChildren","startHint_1","endHint_1","hint","MdInputModule","announcementMessage","MdSnackBarRef","containerInstance","_afterClosed","dismiss","closed","exit","afterDismissed","__extends$15","MdSnackBarContentAlreadyAttached","__extends$14","__decorate$34","__metadata$34","SHOW_ANIMATION","HIDE_ANIMATION","MdSnackBarContainer","_onExit","animationState","markAsExited","toState","run","enter","[@state]","(@state.done)","animations","transition","__decorate$35","__metadata$35","SimpleSnackBar","snackBarRef","action","__decorate$33","__metadata$33","MdSnackBar","_live","openFromComponent","overlayRef","snackBarContainer","_attachSnackBarContainer","_attachSnackbarContent","_snackBarRef","simpleSnackBarRef","containerPortal","containerRef","snackBarConfig","contentRef","MdSnackBarModule","entryComponents","__extends$16","__decorate$37","__metadata$37","MdTabLabel","__decorate$38","__metadata$38","MdTabLabelWrapper","__decorate$40","__metadata$40","MdInkBar","alignToElement","_getLeftPosition","_getElementWidth","offsetLeft","__decorate$39","__metadata$39","MdTabNavBar","updateActiveLink","_inkBar","MdTabLink","_mdTabNavBar","__decorate$36","__metadata$36","nextId$2","MdTabChangeEvent","MdTab","textLabel","_contentPortal","_content","MdTabGroup","_zone","_selectedIndex","_onFocusChange","_onSelectChange","_focusIndex","_groupId","isValidIndex","_createChangeEvent","_tabs","tab","selectChange","_updateInkBar","_currentLabelWrapper","_labelWrappers","selectedIndex","_getTabLabelId","_getTabContentId","handleKeydown","keyCode","focusNextTab","focusPreviousTab","focusIndex","moveFocus","tabs","ViewChildren","MdTabsModule","__decorate$41","__metadata$41","MdToolbarRow","MdToolbar","MdToolbarModule","__decorate$42","__metadata$42","TOOLTIP_HIDE_DELAY","MdTooltip","_position","_tooltipInstance","_disposeTooltip","_message","_setTooltipMessage","show","_createTooltip","hide","delay","_isTooltipVisible","TooltipComponent","afterHidden","_getOrigin","_getOverlayPosition","strategy","onMicrotaskEmpty","(mouseleave)","_closeOnInteraction","_transformOrigin","_onHide","_visibility","_setTransformOrigin","_hideTimeoutId","clearTimeout","_afterVisibilityAnimation","_handleBodyInteraction","(body:click)","MdTooltipModule","__extends$17","MdMenuMissingError","MdMenuInvalidPositionX","MdMenuInvalidPositionY","__decorate$45","__metadata$45","MdMenuItem","invokeElementMethod","_getHostElement","_checkDisabled","[attr.tabindex]","ListKeyManager","_items","_tabOut","_focusedItemIndex","onKeydown","_focusNextItem","_focusPreviousItem","_updateFocusedItemIndex","delta","transformMenu","fadeInItems","__decorate$44","__metadata$44","__param$6","MdMenu","posX","posY","_classList","positionX","positionY","_setPositionX","_setPositionY","_setPositionClasses","_keyManager","_tabSubscription","tabOut","_emitCloseEvent","classes","focusFirstItem","focusedItemIndex","Attribute","__decorate$46","__metadata$46","__param$7","MdMenuTrigger","_menuOpen","_openedByMouse","onMenuOpen","onMenuClose","_checkMenu","menu","closeMenu","destroyMenu","toggleMenu","openMenu","_subscribeToBackdrop","_initMenu","_resetMenu","_setIsMenuOpen","_getOverlayConfig","overlayState","_getPosition","_handleMousedown","aria-haspopup","__decorate$43","__metadata$43","MdMenuModule","disableClose","MdDialogRef","dialogResult","afterClosed","DialogInjector","_dialogRef","_parentInjector","token","notFoundValue","__extends$19","MdDialogContentAlreadyAttachedError","__extends$18","__decorate$48","__metadata$48","MdDialogContainer","_elementFocusedBeforeDialogWasOpened","activeElement","_focusTrap","handleEscapeKey","dialogRef","class","[attr.role]","(keydown.escape)","__decorate$47","__metadata$47","MdDialog","dialogContainer","_attachDialogContainer","_attachDialogContent","_getOverlayState","dialogInjector","contentPortal","componentInstance","MdDialogModule","__decorate$16","__metadata$16","MATERIAL_MODULES","MaterialRootModule","84","table_component_1","DataTable","column_component_1","DataTableColumn","row_component_1","DataTableRow","pagination_component_1","DataTablePagination","header_component_1","DataTableHeader","px_1","hide_1","min_1","DATA_TABLE_DIRECTIVES","PixelConverter","Hide","MinPipe","85","types_1","drag_1","table_template_1","table_style_1","header","pagination","indexColumn","indexColumnHeader","selectColumn","multiSelect","substituteRows","expandableRows","translations","defaultTranslations","selectOnRowClick","autoReload","showReloading","_sortAsc","_offset","_limit","_reloading","reload","_displayParams","_scheduledReload","rowClick","rowDoubleClick","headerClick","cellClick","selectedRows","_selectAllCheckbox","_resizeInProgress","resizeLimit","_onReloadFinished","_sortBy","_triggerReload","floor","limit","itemCount","sort","sortBy","asc","sortAsc","_initDefaultValues","_initDefaultClickEvents","_updateDisplayParams","reloadItems","indexColumnVisible","selectColumnVisible","expandColumnVisible","tableEvent","sortColumn","column","_getRemoteParameters","rowClicked","rowDoubleClicked","headerClicked","cellClicked","params","sortable","ascending","columns","visible","getRowColor","rowColors","_onSelectAllChanged","onRowSelectChanged","selectedRow","row_","displayParams","resizeColumnStart","columnElement","drag","move","moveEvent","dx","_isResizeInLimit","nextElementSibling","Function","TABLE_TEMPLATE","TABLE_STYLE","86","resizable","styleClassObject","getCellColor","cellColors","_initCellClass","styleClass","replace","87","row_template_1","row_style_1","dataTable","selectedChange","getTooltip","rowTooltip","ROW_TEMPLATE","ROW_STYLE","88","89","90","expandColumn","paginationLimit","91","mouseMoveHandler","dy","moved","mouseUpHandler","up","92","93","94","pagination_template_1","pagination_style_1","pageBack","pageForward","pageFirst","pageLast","PAGINATION_TEMPLATE","PAGINATION_STYLE","95","96","97","header_template_1","header_style_1","columnSelectorOpen","_closeSelector","HEADER_TEMPLATE","HEADER_STYLE","(document:click)","98","99","100","101","_prevCondition","newCondition","initDisplayStyle","_displayStyle","displayStyle","display","102","103","DataTableResource","query","result","localeCompare","reverse","104","router","navigateByUrl","Router","105","110","111","112","$","query_service_1","constants","queryService","showProductsOverview","bubbleChartResults","productResults","reviewTimeline","productOpened","bubbleOpened","reviewTimelineOpened","positiveLoaded","negativeLoaded","neutralLoaded","bubbleLoaded","productResultsLoaded","reviewTimelineLoaded","removeClass","getBubbleChartData","getProducts","getReviewTimeline","ngDoCheck","addClass","toggleProduct","toggleBubble","toggleReviewTimeline","queries","data","parseProducts","aggregations","results","parseBubbleChart","parseTimeline","json","word","date","sentiment","QueryService","114","Rx_1","http","queryUrl","query_url","paramObj","URLSearchParams","filterUnits","aggregation","return","search","395","location","href","escape_map","&","<",">","\"","?","[","]","^",".","|","*","+","{","}","(",")","~","escape_characters","review-timeline","product-search","bubble-chart","product-review-counts","pie-chart-positive","pie-chart-negative","pie-chart-neutral","sentiment-by-keywords","product-sentiment","average-product-sentiment","product-sentiment-timeline","396","397","d3","helpers","relations","concepts","entities","keywords","csvResults","onReceiveResult","popover","showRelations","showConcepts","showEntities","showKeywords","convertToCSV","doc","j","jsonObj","doc_1","relation","downloadAsCSV","csvFormat","exportToCSV","399","escapeHTML","s","csvFile","fileName","blob","Blob","navigator","msSaveBlob","link","download","URL","createObjectURL","visibility","click","400","401","sprintf","sentimentKeywordLoaded","averageSentimentLoaded","sentimentTimelineLoaded","noResults","product","onResize","localStorage","getItem","getPieChartData","getSentimentByKeyword","getAverageSentiment","getSentimentTimeline","autoComplete","searchTerm","datalist","suggestions","attr","append","searchProduct","html","formQuery","substr","param","product_name","setItem","queryReturn","input","pieChartResults","parsePieChartResults","sentimentByKeywordResults","parseKeywords","averageSentiment","sentimentTimeline","labels","percentages","total","keywordDict","positive","negative","neutral","keyword","(window:resize)","403","404","elRef","resultChange","storedParams","JSON","parse","stringify","405","406","sanitizer","onPageChange","number","tooltip","parseData","sentence","subject","object","regSub","createToolTip","regAction","regObj","regLoc","bypassSecurityTrustHtml","title","sentimentFromSubject","DomSanitizer","407","409","410","labelArea","chart","bar_height","rightOffset","lCol","rCol","xFrom","scaleLinear","range","xTo","setupData","node","firstChild","setup","render","words","kw","relevance","scaleBand","domain","extent","yPosByIndex","selectAll","bandwidth","411","413","414","output","jitter","plotData","plot","datum","setupBubble","submitKeywordQuery","bubbles","dragstarted","active","self","force","alphaTarget","restart","fx","fy","dragged","dragended","collide","collisionPadding","connectEvents","gravity","hashchange","idValue","margin","minCollisionRadius","mouseout","mouseover","rScale","rValue","textValue","tick","transformData","updateActive","updateLabels","updateNodes","scaleSqrt","rawData","random","dampenedAlpha","each","selection","maxDomainValue","svgEnter","on","forceSimulation","velocityDecay","forceR","nodes","encodeURIComponent","labelEnter","alpha","ax","ay","cx","cy","d2","minDistance","moveX","moveY","decodeURIComponent","hash","substring","classed","415","417","418","createBarChart","firstElementChild","g","rangeRound","padding","z","scaleOrdinal","stack","getKeys","nice","axisBottom","axisLeft","ticks","legend","419","421","422","randomData","pie","arc","outerArc","svgOriginal","createPieChart","outerRadius","innerRadius","transformWidth","schemeCategory20c","attrTween","_current","interpolate","423","425","426","createNumberLine","xAxis","axisTop","427","428","parseTime","timeParse","minDate","maxDate","createTimeline","w","scaleTime","line","ylabel","getDate","getMonth","getFullYear","429","431","432","itemResource","products","rowEvent","alert","jobTitle","433","435","436","reviews","concept","437","438","entity","score","csvReviews","439","440","441"],"mappings":"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","file":"app.83a80abbca61b37e33c3.min.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar platform_browser_dynamic_1 = __webpack_require__(1);\n\tvar core_1 = __webpack_require__(3);\n\tvar app_module_1 = __webpack_require__(23);\n\tif (true) {\n\t    core_1.enableProdMode();\n\t}\n\tplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);\n\n\n/***/ },\n\n/***/ 23:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar common_1 = __webpack_require__(22);\n\tvar router_1 = __webpack_require__(24);\n\tvar platform_browser_1 = __webpack_require__(21);\n\tvar forms_1 = __webpack_require__(56);\n\tvar http_1 = __webpack_require__(58);\n\tvar ng2_pagination_1 = __webpack_require__(59);\n\tvar material_1 = __webpack_require__(66);\n\tvar angular_2_data_table_1 = __webpack_require__(84);\n\tvar app_component_1 = __webpack_require__(104);\n\tvar review_overview_component_1 = __webpack_require__(112);\n\tvar enrichment_visualizer_component_1 = __webpack_require__(397);\n\tvar product_search_component_1 = __webpack_require__(401);\n\tvar query_form_component_1 = __webpack_require__(404);\n\tvar relations_list_component_1 = __webpack_require__(406);\n\tvar keywords_chart_component_1 = __webpack_require__(410);\n\tvar bubble_chart_component_1 = __webpack_require__(414);\n\tvar stacked_barchart_component_1 = __webpack_require__(418);\n\tvar pie_chart_component_1 = __webpack_require__(422);\n\tvar number_line_component_1 = __webpack_require__(426);\n\tvar product_sentiment_timeline_component_1 = __webpack_require__(428);\n\tvar data_table_component_1 = __webpack_require__(432);\n\tvar concepts_table_component_1 = __webpack_require__(436);\n\tvar entities_table_component_1 = __webpack_require__(438);\n\tvar keywords_table_component_1 = __webpack_require__(440);\n\tvar appRoutes = [\n\t    {\n\t        path: '',\n\t        redirectTo: '/home',\n\t        pathMatch: 'full'\n\t    },\n\t    { path: \"home\", component: review_overview_component_1.ReviewOverview },\n\t    { path: 'enrichment-visualizer', component: enrichment_visualizer_component_1.EnrichmentVisualizer },\n\t    { path: 'product-search', component: product_search_component_1.ProductSearch }\n\t];\n\tvar AppModule = (function () {\n\t    function AppModule() {\n\t    }\n\t    AppModule = __decorate([\n\t        core_1.NgModule({\n\t            imports: [\n\t                router_1.RouterModule.forRoot(appRoutes),\n\t                platform_browser_1.BrowserModule,\n\t                forms_1.FormsModule,\n\t                http_1.HttpModule,\n\t                http_1.JsonpModule,\n\t                ng2_pagination_1.Ng2PaginationModule,\n\t                material_1.MaterialModule,\n\t                angular_2_data_table_1.DataTableModule\n\t            ],\n\t            providers: [{ provide: common_1.LocationStrategy, useClass: common_1.HashLocationStrategy }],\n\t            declarations: [app_component_1.AppComponent, review_overview_component_1.ReviewOverview, enrichment_visualizer_component_1.EnrichmentVisualizer, product_search_component_1.ProductSearch, stacked_barchart_component_1.StackedBarChart, number_line_component_1.NumberLine, product_sentiment_timeline_component_1.ProductSentimentTimeline, query_form_component_1.QueryForm, relations_list_component_1.RelationsList, keywords_chart_component_1.KeywordsChart, bubble_chart_component_1.BubbleChart, pie_chart_component_1.PieChart, data_table_component_1.ProductDataTable, concepts_table_component_1.ConceptsTable, entities_table_component_1.EntitiesTable, keywords_table_component_1.KeywordsTable],\n\t            bootstrap: [app_component_1.AppComponent]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], AppModule);\n\t    return AppModule;\n\t}());\n\texports.AppModule = AppModule;\n\n\n/***/ },\n\n/***/ 56:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @license Angular v2.2.4\n\t * (c) 2010-2016 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(3), __webpack_require__(57), __webpack_require__(4), __webpack_require__(5), __webpack_require__(53)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/operator/toPromise', 'rxjs/Subject', 'rxjs/Observable', 'rxjs/observable/fromPromise'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.forms = global.ng.forms || {}),global.ng.core,global.Rx.Observable.prototype,global.Rx,global.Rx,global.Rx.Observable));\n\t}(this, function (exports,_angular_core,rxjs_operator_toPromise,rxjs_Subject,rxjs_Observable,rxjs_observable_fromPromise) { 'use strict';\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Base class for control directives.\n\t     *\n\t     * Only used internally in the forms module.\n\t     *\n\t     * @stable\n\t     */\n\t    var AbstractControlDirective = (function () {\n\t        function AbstractControlDirective() {\n\t        }\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n\t            get: function () { throw new Error('unimplemented'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n\t            get: function () { return this.control ? this.control.value : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n\t            get: function () { return this.control ? this.control.valid : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n\t            get: function () { return this.control ? this.control.invalid : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n\t            get: function () { return this.control ? this.control.pending : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n\t            get: function () { return this.control ? this.control.errors : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n\t            get: function () { return this.control ? this.control.pristine : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n\t            get: function () { return this.control ? this.control.dirty : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n\t            get: function () { return this.control ? this.control.touched : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n\t            get: function () { return this.control ? this.control.untouched : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n\t            get: function () { return this.control ? this.control.disabled : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n\t            get: function () { return this.control ? this.control.enabled : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n\t            get: function () { return this.control ? this.control.statusChanges : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n\t            get: function () { return this.control ? this.control.valueChanges : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        AbstractControlDirective.prototype.reset = function (value) {\n\t            if (value === void 0) { value = undefined; }\n\t            if (this.control)\n\t                this.control.reset(value);\n\t        };\n\t        AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            return this.control ? this.control.hasError(errorCode, path) : false;\n\t        };\n\t        AbstractControlDirective.prototype.getError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            return this.control ? this.control.getError(errorCode, path) : null;\n\t        };\n\t        return AbstractControlDirective;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * A directive that contains multiple {@link NgControl}s.\n\t     *\n\t     * Only used by the forms module.\n\t     *\n\t     * @stable\n\t     */\n\t    var ControlContainer = (function (_super) {\n\t        __extends$1(ControlContainer, _super);\n\t        function ControlContainer() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n\t            /**\n\t             * Get the form to which this container belongs.\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ControlContainer.prototype, \"path\", {\n\t            /**\n\t             * Get the path to this container.\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ControlContainer;\n\t    }(AbstractControlDirective));\n\t\n\t    function isPresent(obj) {\n\t        return obj != null;\n\t    }\n\t    function isBlank(obj) {\n\t        return obj == null;\n\t    }\n\t    // JS has NaN !== NaN\n\t    function looseIdentical(a, b) {\n\t        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n\t    }\n\t    function isJsObject(o) {\n\t        return o !== null && (typeof o === 'function' || typeof o === 'object');\n\t    }\n\t    function isPrimitive(obj) {\n\t        return !isJsObject(obj);\n\t    }\n\t\n\t    /**\n\t     * Wraps Javascript Objects\n\t     */\n\t    var StringMapWrapper = (function () {\n\t        function StringMapWrapper() {\n\t        }\n\t        StringMapWrapper.merge = function (m1, m2) {\n\t            var m = {};\n\t            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n\t                var k = _a[_i];\n\t                m[k] = m1[k];\n\t            }\n\t            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n\t                var k = _c[_b];\n\t                m[k] = m2[k];\n\t            }\n\t            return m;\n\t        };\n\t        StringMapWrapper.equals = function (m1, m2) {\n\t            var k1 = Object.keys(m1);\n\t            var k2 = Object.keys(m2);\n\t            if (k1.length != k2.length) {\n\t                return false;\n\t            }\n\t            for (var i = 0; i < k1.length; i++) {\n\t                var key = k1[i];\n\t                if (m1[key] !== m2[key]) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t        return StringMapWrapper;\n\t    }());\n\t    var ListWrapper = (function () {\n\t        function ListWrapper() {\n\t        }\n\t        ListWrapper.removeAll = function (list, items) {\n\t            for (var i = 0; i < items.length; ++i) {\n\t                var index = list.indexOf(items[i]);\n\t                if (index > -1) {\n\t                    list.splice(index, 1);\n\t                }\n\t            }\n\t        };\n\t        ListWrapper.remove = function (list, el) {\n\t            var index = list.indexOf(el);\n\t            if (index > -1) {\n\t                list.splice(index, 1);\n\t                return true;\n\t            }\n\t            return false;\n\t        };\n\t        ListWrapper.equals = function (a, b) {\n\t            if (a.length != b.length)\n\t                return false;\n\t            for (var i = 0; i < a.length; ++i) {\n\t                if (a[i] !== b[i])\n\t                    return false;\n\t            }\n\t            return true;\n\t        };\n\t        ListWrapper.flatten = function (list) {\n\t            return list.reduce(function (flat, item) {\n\t                var flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n\t                return flat.concat(flatItem);\n\t            }, []);\n\t        };\n\t        return ListWrapper;\n\t    }());\n\t\n\t    var isPromise = _angular_core.__core_private__.isPromise;\n\t\n\t    function isEmptyInputValue(value) {\n\t        return value == null || typeof value === 'string' && value.length === 0;\n\t    }\n\t    /**\n\t     * Providers for validators to be used for {@link FormControl}s in a form.\n\t     *\n\t     * Provide this using `multi: true` to add validators.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n\t     * @stable\n\t     */\n\t    var NG_VALIDATORS = new _angular_core.OpaqueToken('NgValidators');\n\t    /**\n\t     * Providers for asynchronous validators to be used for {@link FormControl}s\n\t     * in a form.\n\t     *\n\t     * Provide this using `multi: true` to add validators.\n\t     *\n\t     * See {@link NG_VALIDATORS} for more details.\n\t     *\n\t     * @stable\n\t     */\n\t    var NG_ASYNC_VALIDATORS = new _angular_core.OpaqueToken('NgAsyncValidators');\n\t    /**\n\t     * Provides a set of validators used by form controls.\n\t     *\n\t     * A validator is a function that processes a {@link FormControl} or collection of\n\t     * controls and returns a map of errors. A null map means that validation has passed.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * var loginControl = new FormControl(\"\", Validators.required)\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var Validators = (function () {\n\t        function Validators() {\n\t        }\n\t        /**\n\t         * Validator that requires controls to have a non-empty value.\n\t         */\n\t        Validators.required = function (control) {\n\t            return isEmptyInputValue(control.value) ? { 'required': true } : null;\n\t        };\n\t        /**\n\t         * Validator that requires controls to have a value of a minimum length.\n\t         */\n\t        Validators.minLength = function (minLength) {\n\t            return function (control) {\n\t                if (isEmptyInputValue(control.value)) {\n\t                    return null; // don't validate empty values to allow optional controls\n\t                }\n\t                var length = typeof control.value === 'string' ? control.value.length : 0;\n\t                return length < minLength ?\n\t                    { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n\t                    null;\n\t            };\n\t        };\n\t        /**\n\t         * Validator that requires controls to have a value of a maximum length.\n\t         */\n\t        Validators.maxLength = function (maxLength) {\n\t            return function (control) {\n\t                var length = typeof control.value === 'string' ? control.value.length : 0;\n\t                return length > maxLength ?\n\t                    { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n\t                    null;\n\t            };\n\t        };\n\t        /**\n\t         * Validator that requires a control to match a regex to its value.\n\t         */\n\t        Validators.pattern = function (pattern) {\n\t            if (!pattern)\n\t                return Validators.nullValidator;\n\t            var regex;\n\t            var regexStr;\n\t            if (typeof pattern === 'string') {\n\t                regexStr = \"^\" + pattern + \"$\";\n\t                regex = new RegExp(regexStr);\n\t            }\n\t            else {\n\t                regexStr = pattern.toString();\n\t                regex = pattern;\n\t            }\n\t            return function (control) {\n\t                if (isEmptyInputValue(control.value)) {\n\t                    return null; // don't validate empty values to allow optional controls\n\t                }\n\t                var value = control.value;\n\t                return regex.test(value) ? null :\n\t                    { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n\t            };\n\t        };\n\t        /**\n\t         * No-op validator.\n\t         */\n\t        Validators.nullValidator = function (c) { return null; };\n\t        /**\n\t         * Compose multiple validators into a single function that returns the union\n\t         * of the individual error maps.\n\t         */\n\t        Validators.compose = function (validators) {\n\t            if (!validators)\n\t                return null;\n\t            var presentValidators = validators.filter(isPresent);\n\t            if (presentValidators.length == 0)\n\t                return null;\n\t            return function (control) {\n\t                return _mergeErrors(_executeValidators(control, presentValidators));\n\t            };\n\t        };\n\t        Validators.composeAsync = function (validators) {\n\t            if (!validators)\n\t                return null;\n\t            var presentValidators = validators.filter(isPresent);\n\t            if (presentValidators.length == 0)\n\t                return null;\n\t            return function (control) {\n\t                var promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);\n\t                return Promise.all(promises).then(_mergeErrors);\n\t            };\n\t        };\n\t        return Validators;\n\t    }());\n\t    function _convertToPromise(obj) {\n\t        return isPromise(obj) ? obj : rxjs_operator_toPromise.toPromise.call(obj);\n\t    }\n\t    function _executeValidators(control, validators) {\n\t        return validators.map(function (v) { return v(control); });\n\t    }\n\t    function _executeAsyncValidators(control, validators) {\n\t        return validators.map(function (v) { return v(control); });\n\t    }\n\t    function _mergeErrors(arrayOfErrors) {\n\t        var res = arrayOfErrors.reduce(function (res, errors) {\n\t            return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n\t        }, {});\n\t        return Object.keys(res).length === 0 ? null : res;\n\t    }\n\t\n\t    /**\n\t     * Used to provide a {@link ControlValueAccessor} for form controls.\n\t     *\n\t     * See {@link DefaultValueAccessor} for how to implement one.\n\t     * @stable\n\t     */\n\t    var NG_VALUE_ACCESSOR = new _angular_core.OpaqueToken('NgValueAccessor');\n\t\n\t    var CHECKBOX_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return CheckboxControlValueAccessor; }),\n\t        multi: true,\n\t    };\n\t    /**\n\t     * The accessor for writing a value and listening to changes on a checkbox input element.\n\t     *\n\t     *  ### Example\n\t     *  ```\n\t     *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n\t     *  ```\n\t     *\n\t     *  @stable\n\t     */\n\t    var CheckboxControlValueAccessor = (function () {\n\t        function CheckboxControlValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n\t        };\n\t        CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n\t        CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        CheckboxControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n\t                        host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n\t                        providers: [CHECKBOX_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        CheckboxControlValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return CheckboxControlValueAccessor;\n\t    }());\n\t\n\t    var DEFAULT_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return DefaultValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * The default accessor for writing a value and listening to changes that is used by the\n\t     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n\t     *\n\t     *  ### Example\n\t     *  ```\n\t     *  <input type=\"text\" name=\"searchQuery\" ngModel>\n\t     *  ```\n\t     *\n\t     *  @stable\n\t     */\n\t    var DefaultValueAccessor = (function () {\n\t        function DefaultValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        DefaultValueAccessor.prototype.writeValue = function (value) {\n\t            var normalizedValue = value == null ? '' : value;\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n\t        };\n\t        DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n\t        DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        DefaultValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n\t                        // TODO: vsavkin replace the above selector with the one below it once\n\t                        // https://github.com/angular/angular/issues/3011 is implemented\n\t                        // selector: '[ngControl],[ngModel],[ngFormControl]',\n\t                        host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n\t                        providers: [DEFAULT_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        DefaultValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return DefaultValueAccessor;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    function normalizeValidator(validator) {\n\t        if (validator.validate) {\n\t            return function (c) { return validator.validate(c); };\n\t        }\n\t        else {\n\t            return validator;\n\t        }\n\t    }\n\t    function normalizeAsyncValidator(validator) {\n\t        if (validator.validate) {\n\t            return function (c) { return validator.validate(c); };\n\t        }\n\t        else {\n\t            return validator;\n\t        }\n\t    }\n\t\n\t    var NUMBER_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return NumberValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * The accessor for writing a number value and listening to changes that is used by the\n\t     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n\t     *\n\t     *  ### Example\n\t     *  ```\n\t     *  <input type=\"number\" [(ngModel)]=\"age\">\n\t     *  ```\n\t     */\n\t    var NumberValueAccessor = (function () {\n\t        function NumberValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        NumberValueAccessor.prototype.writeValue = function (value) {\n\t            // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n\t            var normalizedValue = value == null ? '' : value;\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n\t        };\n\t        NumberValueAccessor.prototype.registerOnChange = function (fn) {\n\t            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n\t        };\n\t        NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        NumberValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n\t                        host: {\n\t                            '(change)': 'onChange($event.target.value)',\n\t                            '(input)': 'onChange($event.target.value)',\n\t                            '(blur)': 'onTouched()'\n\t                        },\n\t                        providers: [NUMBER_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NumberValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return NumberValueAccessor;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    function unimplemented() {\n\t        throw new Error('unimplemented');\n\t    }\n\t    /**\n\t     * A base class that all control directive extend.\n\t     * It binds a {@link FormControl} object to a DOM element.\n\t     *\n\t     * Used internally by Angular forms.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgControl = (function (_super) {\n\t        __extends$2(NgControl, _super);\n\t        function NgControl() {\n\t            _super.apply(this, arguments);\n\t            /** @internal */\n\t            this._parent = null;\n\t            this.name = null;\n\t            this.valueAccessor = null;\n\t            /** @internal */\n\t            this._rawValidators = [];\n\t            /** @internal */\n\t            this._rawAsyncValidators = [];\n\t        }\n\t        Object.defineProperty(NgControl.prototype, \"validator\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return NgControl;\n\t    }(AbstractControlDirective));\n\t\n\t    var RADIO_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return RadioControlValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * Internal class used by Angular to uncheck radio buttons with the matching name.\n\t     */\n\t    var RadioControlRegistry = (function () {\n\t        function RadioControlRegistry() {\n\t            this._accessors = [];\n\t        }\n\t        RadioControlRegistry.prototype.add = function (control, accessor) {\n\t            this._accessors.push([control, accessor]);\n\t        };\n\t        RadioControlRegistry.prototype.remove = function (accessor) {\n\t            for (var i = this._accessors.length - 1; i >= 0; --i) {\n\t                if (this._accessors[i][1] === accessor) {\n\t                    this._accessors.splice(i, 1);\n\t                    return;\n\t                }\n\t            }\n\t        };\n\t        RadioControlRegistry.prototype.select = function (accessor) {\n\t            var _this = this;\n\t            this._accessors.forEach(function (c) {\n\t                if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n\t                    c[1].fireUncheck(accessor.value);\n\t                }\n\t            });\n\t        };\n\t        RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n\t            if (!controlPair[0].control)\n\t                return false;\n\t            return controlPair[0]._parent === accessor._control._parent &&\n\t                controlPair[1].name === accessor.name;\n\t        };\n\t        RadioControlRegistry.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        RadioControlRegistry.ctorParameters = [];\n\t        return RadioControlRegistry;\n\t    }());\n\t    /**\n\t     * @whatItDoes  Writes radio control values and listens to radio control changes.\n\t     *\n\t     * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n\t     * to keep the view synced with the {@link FormControl} model.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n\t     * value accessor will be active on any radio control that has a form directive. You do\n\t     * **not** need to add a special selector to activate it.\n\t     *\n\t     * ### How to use radio buttons with form directives\n\t     *\n\t     * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n\t     * in the same group have the same `name` attribute.  Radio buttons with different `name`\n\t     * attributes do not affect each other.\n\t     *\n\t     * {@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n\t     *\n\t     * When using radio buttons in a reactive form, radio buttons in the same group should have the\n\t     * same `formControlName`. You can also add a `name` attribute, but it's optional.\n\t     *\n\t     * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n\t     *\n\t     *  * **npm package**: `@angular/forms`\n\t     *\n\t     *  @stable\n\t     */\n\t    var RadioControlValueAccessor = (function () {\n\t        function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this._registry = _registry;\n\t            this._injector = _injector;\n\t            this.onChange = function () { };\n\t            this.onTouched = function () { };\n\t        }\n\t        RadioControlValueAccessor.prototype.ngOnInit = function () {\n\t            this._control = this._injector.get(NgControl);\n\t            this._checkName();\n\t            this._registry.add(this._control, this);\n\t        };\n\t        RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n\t        RadioControlValueAccessor.prototype.writeValue = function (value) {\n\t            this._state = value === this.value;\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n\t        };\n\t        RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n\t            var _this = this;\n\t            this._fn = fn;\n\t            this.onChange = function () {\n\t                fn(_this.value);\n\t                _this._registry.select(_this);\n\t            };\n\t        };\n\t        RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n\t        RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        RadioControlValueAccessor.prototype._checkName = function () {\n\t            if (this.name && this.formControlName && this.name !== this.formControlName) {\n\t                this._throwNameError();\n\t            }\n\t            if (!this.name && this.formControlName)\n\t                this.name = this.formControlName;\n\t        };\n\t        RadioControlValueAccessor.prototype._throwNameError = function () {\n\t            throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n\t        };\n\t        RadioControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n\t                        host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n\t                        providers: [RADIO_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RadioControlValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t            { type: RadioControlRegistry, },\n\t            { type: _angular_core.Injector, },\n\t        ];\n\t        RadioControlValueAccessor.propDecorators = {\n\t            'name': [{ type: _angular_core.Input },],\n\t            'formControlName': [{ type: _angular_core.Input },],\n\t            'value': [{ type: _angular_core.Input },],\n\t        };\n\t        return RadioControlValueAccessor;\n\t    }());\n\t\n\t    var RANGE_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return RangeValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * The accessor for writing a range value and listening to changes that is used by the\n\t     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n\t     *\n\t     *  ### Example\n\t     *  ```\n\t     *  <input type=\"range\" [(ngModel)]=\"age\" >\n\t     *  ```\n\t     */\n\t    var RangeValueAccessor = (function () {\n\t        function RangeValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        RangeValueAccessor.prototype.writeValue = function (value) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n\t        };\n\t        RangeValueAccessor.prototype.registerOnChange = function (fn) {\n\t            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n\t        };\n\t        RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        RangeValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n\t                        host: {\n\t                            '(change)': 'onChange($event.target.value)',\n\t                            '(input)': 'onChange($event.target.value)',\n\t                            '(blur)': 'onTouched()'\n\t                        },\n\t                        providers: [RANGE_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RangeValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return RangeValueAccessor;\n\t    }());\n\t\n\t    var SELECT_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return SelectControlValueAccessor; }),\n\t        multi: true\n\t    };\n\t    function _buildValueString(id, value) {\n\t        if (id == null)\n\t            return \"\" + value;\n\t        if (!isPrimitive(value))\n\t            value = 'Object';\n\t        return (id + \": \" + value).slice(0, 50);\n\t    }\n\t    function _extractId(valueString) {\n\t        return valueString.split(':')[0];\n\t    }\n\t    /**\n\t     * @whatItDoes Writes values and listens to changes on a select element.\n\t     *\n\t     * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n\t     * to keep the view synced with the {@link FormControl} model.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n\t     * value accessor will be active on any select control that has a form directive. You do\n\t     * **not** need to add a special selector to activate it.\n\t     *\n\t     * ### How to use select controls with form directives\n\t     *\n\t     * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n\t     * attribute to the main `<select>` tag.\n\t     *\n\t     * If your option values are simple strings, you can bind to the normal `value` property\n\t     * on the option.  If your option values happen to be objects (and you'd like to save the\n\t     * selection in your form as an object), use `ngValue` instead:\n\t     *\n\t     * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n\t     *\n\t     * In reactive forms, you'll also want to add your form directive (`formControlName` or\n\t     * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n\t     * choice of binding to the  `value` or `ngValue` property on the select's options.\n\t     *\n\t     * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n\t     *\n\t     * Note: We listen to the 'change' event because 'input' events aren't fired\n\t     * for selects in Firefox and IE:\n\t     * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n\t     * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * @stable\n\t     */\n\t    var SelectControlValueAccessor = (function () {\n\t        function SelectControlValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            /** @internal */\n\t            this._optionMap = new Map();\n\t            /** @internal */\n\t            this._idCounter = 0;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        SelectControlValueAccessor.prototype.writeValue = function (value) {\n\t            this.value = value;\n\t            var valueString = _buildValueString(this._getOptionId(value), value);\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n\t        };\n\t        SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n\t            var _this = this;\n\t            this.onChange = function (valueString) {\n\t                _this.value = valueString;\n\t                fn(_this._getOptionValue(valueString));\n\t            };\n\t        };\n\t        SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        /** @internal */\n\t        SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n\t        /** @internal */\n\t        SelectControlValueAccessor.prototype._getOptionId = function (value) {\n\t            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n\t                var id = _a[_i];\n\t                if (looseIdentical(this._optionMap.get(id), value))\n\t                    return id;\n\t            }\n\t            return null;\n\t        };\n\t        /** @internal */\n\t        SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n\t            var id = _extractId(valueString);\n\t            return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n\t        };\n\t        SelectControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n\t                        host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n\t                        providers: [SELECT_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        SelectControlValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return SelectControlValueAccessor;\n\t    }());\n\t    /**\n\t     * @whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * See docs for {@link SelectControlValueAccessor} for usage examples.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgSelectOption = (function () {\n\t        function NgSelectOption(_element, _renderer, _select) {\n\t            this._element = _element;\n\t            this._renderer = _renderer;\n\t            this._select = _select;\n\t            if (this._select)\n\t                this.id = this._select._registerOption();\n\t        }\n\t        Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n\t            set: function (value) {\n\t                if (this._select == null)\n\t                    return;\n\t                this._select._optionMap.set(this.id, value);\n\t                this._setElementValue(_buildValueString(this.id, value));\n\t                this._select.writeValue(this._select.value);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgSelectOption.prototype, \"value\", {\n\t            set: function (value) {\n\t                this._setElementValue(value);\n\t                if (this._select)\n\t                    this._select.writeValue(this._select.value);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        NgSelectOption.prototype._setElementValue = function (value) {\n\t            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n\t        };\n\t        NgSelectOption.prototype.ngOnDestroy = function () {\n\t            if (this._select) {\n\t                this._select._optionMap.delete(this.id);\n\t                this._select.writeValue(this._select.value);\n\t            }\n\t        };\n\t        NgSelectOption.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSelectOption.ctorParameters = [\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t            { type: SelectControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n\t        ];\n\t        NgSelectOption.propDecorators = {\n\t            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n\t            'value': [{ type: _angular_core.Input, args: ['value',] },],\n\t        };\n\t        return NgSelectOption;\n\t    }());\n\t\n\t    var SELECT_MULTIPLE_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n\t        multi: true\n\t    };\n\t    function _buildValueString$1(id, value) {\n\t        if (id == null)\n\t            return \"\" + value;\n\t        if (typeof value === 'string')\n\t            value = \"'\" + value + \"'\";\n\t        if (!isPrimitive(value))\n\t            value = 'Object';\n\t        return (id + \": \" + value).slice(0, 50);\n\t    }\n\t    function _extractId$1(valueString) {\n\t        return valueString.split(':')[0];\n\t    }\n\t    /**\n\t     * The accessor for writing a value and listening to changes on a select element.\n\t     *\n\t     * @stable\n\t     */\n\t    var SelectMultipleControlValueAccessor = (function () {\n\t        function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            /** @internal */\n\t            this._optionMap = new Map();\n\t            /** @internal */\n\t            this._idCounter = 0;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n\t            var _this = this;\n\t            this.value = value;\n\t            if (value == null)\n\t                return;\n\t            var values = value;\n\t            // convert values to ids\n\t            var ids = values.map(function (v) { return _this._getOptionId(v); });\n\t            this._optionMap.forEach(function (opt, o) { opt._setSelected(ids.indexOf(o.toString()) > -1); });\n\t        };\n\t        SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n\t            var _this = this;\n\t            this.onChange = function (_) {\n\t                var selected = [];\n\t                if (_.hasOwnProperty('selectedOptions')) {\n\t                    var options = _.selectedOptions;\n\t                    for (var i = 0; i < options.length; i++) {\n\t                        var opt = options.item(i);\n\t                        var val = _this._getOptionValue(opt.value);\n\t                        selected.push(val);\n\t                    }\n\t                }\n\t                else {\n\t                    var options = _.options;\n\t                    for (var i = 0; i < options.length; i++) {\n\t                        var opt = options.item(i);\n\t                        if (opt.selected) {\n\t                            var val = _this._getOptionValue(opt.value);\n\t                            selected.push(val);\n\t                        }\n\t                    }\n\t                }\n\t                fn(selected);\n\t            };\n\t        };\n\t        SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        /** @internal */\n\t        SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n\t            var id = (this._idCounter++).toString();\n\t            this._optionMap.set(id, value);\n\t            return id;\n\t        };\n\t        /** @internal */\n\t        SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n\t            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n\t                var id = _a[_i];\n\t                if (looseIdentical(this._optionMap.get(id)._value, value))\n\t                    return id;\n\t            }\n\t            return null;\n\t        };\n\t        /** @internal */\n\t        SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n\t            var id = _extractId$1(valueString);\n\t            return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n\t        };\n\t        SelectMultipleControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n\t                        host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n\t                        providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        SelectMultipleControlValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return SelectMultipleControlValueAccessor;\n\t    }());\n\t    /**\n\t     * Marks `<option>` as dynamic, so Angular can be notified when options change.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * <select multiple name=\"city\" ngModel>\n\t     *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n\t     * </select>\n\t     * ```\n\t     */\n\t    var NgSelectMultipleOption = (function () {\n\t        function NgSelectMultipleOption(_element, _renderer, _select) {\n\t            this._element = _element;\n\t            this._renderer = _renderer;\n\t            this._select = _select;\n\t            if (this._select) {\n\t                this.id = this._select._registerOption(this);\n\t            }\n\t        }\n\t        Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n\t            set: function (value) {\n\t                if (this._select == null)\n\t                    return;\n\t                this._value = value;\n\t                this._setElementValue(_buildValueString$1(this.id, value));\n\t                this._select.writeValue(this._select.value);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n\t            set: function (value) {\n\t                if (this._select) {\n\t                    this._value = value;\n\t                    this._setElementValue(_buildValueString$1(this.id, value));\n\t                    this._select.writeValue(this._select.value);\n\t                }\n\t                else {\n\t                    this._setElementValue(value);\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        NgSelectMultipleOption.prototype._setElementValue = function (value) {\n\t            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n\t        };\n\t        /** @internal */\n\t        NgSelectMultipleOption.prototype._setSelected = function (selected) {\n\t            this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n\t        };\n\t        NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n\t            if (this._select) {\n\t                this._select._optionMap.delete(this.id);\n\t                this._select.writeValue(this._select.value);\n\t            }\n\t        };\n\t        NgSelectMultipleOption.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSelectMultipleOption.ctorParameters = [\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t            { type: SelectMultipleControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n\t        ];\n\t        NgSelectMultipleOption.propDecorators = {\n\t            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n\t            'value': [{ type: _angular_core.Input, args: ['value',] },],\n\t        };\n\t        return NgSelectMultipleOption;\n\t    }());\n\t\n\t    function controlPath(name, parent) {\n\t        return parent.path.concat([name]);\n\t    }\n\t    function setUpControl(control, dir) {\n\t        if (!control)\n\t            _throwError(dir, 'Cannot find control with');\n\t        if (!dir.valueAccessor)\n\t            _throwError(dir, 'No value accessor for form control with');\n\t        control.validator = Validators.compose([control.validator, dir.validator]);\n\t        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n\t        dir.valueAccessor.writeValue(control.value);\n\t        // view -> model\n\t        dir.valueAccessor.registerOnChange(function (newValue) {\n\t            dir.viewToModelUpdate(newValue);\n\t            control.markAsDirty();\n\t            control.setValue(newValue, { emitModelToViewChange: false });\n\t        });\n\t        // touched\n\t        dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n\t        control.registerOnChange(function (newValue, emitModelEvent) {\n\t            // control -> view\n\t            dir.valueAccessor.writeValue(newValue);\n\t            // control -> ngModel\n\t            if (emitModelEvent)\n\t                dir.viewToModelUpdate(newValue);\n\t        });\n\t        if (dir.valueAccessor.setDisabledState) {\n\t            control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n\t        }\n\t        // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n\t        dir._rawValidators.forEach(function (validator) {\n\t            if (validator.registerOnValidatorChange)\n\t                validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n\t        });\n\t        dir._rawAsyncValidators.forEach(function (validator) {\n\t            if (validator.registerOnValidatorChange)\n\t                validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n\t        });\n\t    }\n\t    function cleanUpControl(control, dir) {\n\t        dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n\t        dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n\t        dir._rawValidators.forEach(function (validator) {\n\t            if (validator.registerOnValidatorChange) {\n\t                validator.registerOnValidatorChange(null);\n\t            }\n\t        });\n\t        dir._rawAsyncValidators.forEach(function (validator) {\n\t            if (validator.registerOnValidatorChange) {\n\t                validator.registerOnValidatorChange(null);\n\t            }\n\t        });\n\t        if (control)\n\t            control._clearChangeFns();\n\t    }\n\t    function setUpFormContainer(control, dir) {\n\t        if (isBlank(control))\n\t            _throwError(dir, 'Cannot find control with');\n\t        control.validator = Validators.compose([control.validator, dir.validator]);\n\t        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n\t    }\n\t    function _noControlError(dir) {\n\t        return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n\t    }\n\t    function _throwError(dir, message) {\n\t        var messageEnd;\n\t        if (dir.path.length > 1) {\n\t            messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n\t        }\n\t        else if (dir.path[0]) {\n\t            messageEnd = \"name: '\" + dir.path + \"'\";\n\t        }\n\t        else {\n\t            messageEnd = 'unspecified name attribute';\n\t        }\n\t        throw new Error(message + \" \" + messageEnd);\n\t    }\n\t    function composeValidators(validators) {\n\t        return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n\t    }\n\t    function composeAsyncValidators(validators) {\n\t        return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n\t            null;\n\t    }\n\t    function isPropertyUpdated(changes, viewModel) {\n\t        if (!changes.hasOwnProperty('model'))\n\t            return false;\n\t        var change = changes['model'];\n\t        if (change.isFirstChange())\n\t            return true;\n\t        return !looseIdentical(viewModel, change.currentValue);\n\t    }\n\t    var BUILTIN_ACCESSORS = [\n\t        CheckboxControlValueAccessor,\n\t        RangeValueAccessor,\n\t        NumberValueAccessor,\n\t        SelectControlValueAccessor,\n\t        SelectMultipleControlValueAccessor,\n\t        RadioControlValueAccessor,\n\t    ];\n\t    function isBuiltInAccessor(valueAccessor) {\n\t        return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n\t    }\n\t    // TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\n\t    function selectValueAccessor(dir, valueAccessors) {\n\t        if (!valueAccessors)\n\t            return null;\n\t        var defaultAccessor;\n\t        var builtinAccessor;\n\t        var customAccessor;\n\t        valueAccessors.forEach(function (v) {\n\t            if (v.constructor === DefaultValueAccessor) {\n\t                defaultAccessor = v;\n\t            }\n\t            else if (isBuiltInAccessor(v)) {\n\t                if (builtinAccessor)\n\t                    _throwError(dir, 'More than one built-in value accessor matches form control with');\n\t                builtinAccessor = v;\n\t            }\n\t            else {\n\t                if (customAccessor)\n\t                    _throwError(dir, 'More than one custom value accessor matches form control with');\n\t                customAccessor = v;\n\t            }\n\t        });\n\t        if (customAccessor)\n\t            return customAccessor;\n\t        if (builtinAccessor)\n\t            return builtinAccessor;\n\t        if (defaultAccessor)\n\t            return defaultAccessor;\n\t        _throwError(dir, 'No valid value accessor for form control with');\n\t        return null;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * This is a base class for code shared between {@link NgModelGroup} and {@link FormGroupName}.\n\t     *\n\t     * @stable\n\t     */\n\t    var AbstractFormGroupDirective = (function (_super) {\n\t        __extends(AbstractFormGroupDirective, _super);\n\t        function AbstractFormGroupDirective() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        AbstractFormGroupDirective.prototype.ngOnInit = function () {\n\t            this._checkParentType();\n\t            this.formDirective.addFormGroup(this);\n\t        };\n\t        AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n\t            if (this.formDirective) {\n\t                this.formDirective.removeFormGroup(this);\n\t            }\n\t        };\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n\t            /**\n\t             * Get the {@link FormGroup} backing this binding.\n\t             */\n\t            get: function () { return this.formDirective.getFormGroup(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n\t            /**\n\t             * Get the path to this control group.\n\t             */\n\t            get: function () { return controlPath(this.name, this._parent); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n\t            /**\n\t             * Get the {@link Form} to which this group belongs.\n\t             */\n\t            get: function () { return this._parent ? this._parent.formDirective : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n\t            get: function () { return composeValidators(this._validators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n\t            get: function () { return composeAsyncValidators(this._asyncValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        AbstractFormGroupDirective.prototype._checkParentType = function () { };\n\t        return AbstractFormGroupDirective;\n\t    }(ControlContainer));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var AbstractControlStatus = (function () {\n\t        function AbstractControlStatus(cd) {\n\t            this._cd = cd;\n\t        }\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n\t            get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n\t            get: function () { return this._cd.control ? this._cd.control.touched : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n\t            get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n\t            get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n\t            get: function () { return this._cd.control ? this._cd.control.valid : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n\t            get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n\t            get: function () { return this._cd.control ? this._cd.control.pending : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AbstractControlStatus;\n\t    }());\n\t    var ngControlStatusHost = {\n\t        '[class.ng-untouched]': 'ngClassUntouched',\n\t        '[class.ng-touched]': 'ngClassTouched',\n\t        '[class.ng-pristine]': 'ngClassPristine',\n\t        '[class.ng-dirty]': 'ngClassDirty',\n\t        '[class.ng-valid]': 'ngClassValid',\n\t        '[class.ng-invalid]': 'ngClassInvalid',\n\t        '[class.ng-pending]': 'ngClassPending',\n\t    };\n\t    /**\n\t     * Directive automatically applied to Angular form controls that sets CSS classes\n\t     * based on control status (valid/invalid/dirty/etc).\n\t     *\n\t     * @stable\n\t     */\n\t    var NgControlStatus = (function (_super) {\n\t        __extends$3(NgControlStatus, _super);\n\t        function NgControlStatus(cd) {\n\t            _super.call(this, cd);\n\t        }\n\t        NgControlStatus.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgControlStatus.ctorParameters = [\n\t            { type: NgControl, decorators: [{ type: _angular_core.Self },] },\n\t        ];\n\t        return NgControlStatus;\n\t    }(AbstractControlStatus));\n\t    /**\n\t     * Directive automatically applied to Angular form groups that sets CSS classes\n\t     * based on control status (valid/invalid/dirty/etc).\n\t     *\n\t     * @stable\n\t     */\n\t    var NgControlStatusGroup = (function (_super) {\n\t        __extends$3(NgControlStatusGroup, _super);\n\t        function NgControlStatusGroup(cd) {\n\t            _super.call(this, cd);\n\t        }\n\t        NgControlStatusGroup.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n\t                        host: ngControlStatusHost\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgControlStatusGroup.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Self },] },\n\t        ];\n\t        return NgControlStatusGroup;\n\t    }(AbstractControlStatus));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$5 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Use by directives and components to emit custom Events.\n\t     *\n\t     * ### Examples\n\t     *\n\t     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n\t     * title gets clicked:\n\t     *\n\t     * ```\n\t     * @Component({\n\t     *   selector: 'zippy',\n\t     *   template: `\n\t     *   <div class=\"zippy\">\n\t     *     <div (click)=\"toggle()\">Toggle</div>\n\t     *     <div [hidden]=\"!visible\">\n\t     *       <ng-content></ng-content>\n\t     *     </div>\n\t     *  </div>`})\n\t     * export class Zippy {\n\t     *   visible: boolean = true;\n\t     *   @Output() open: EventEmitter<any> = new EventEmitter();\n\t     *   @Output() close: EventEmitter<any> = new EventEmitter();\n\t     *\n\t     *   toggle() {\n\t     *     this.visible = !this.visible;\n\t     *     if (this.visible) {\n\t     *       this.open.emit(null);\n\t     *     } else {\n\t     *       this.close.emit(null);\n\t     *     }\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * The events payload can be accessed by the parameter `$event` on the components output event\n\t     * handler:\n\t     *\n\t     * ```\n\t     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n\t     * ```\n\t     *\n\t     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n\t     * https://github.com/jhusain/observable-spec\n\t     *\n\t     * Once a reference implementation of the spec is available, switch to it.\n\t     * @stable\n\t     */\n\t    var EventEmitter = (function (_super) {\n\t        __extends$5(EventEmitter, _super);\n\t        /**\n\t         * Creates an instance of [EventEmitter], which depending on [isAsync],\n\t         * delivers events synchronously or asynchronously.\n\t         */\n\t        function EventEmitter(isAsync) {\n\t            if (isAsync === void 0) { isAsync = false; }\n\t            _super.call(this);\n\t            this.__isAsync = isAsync;\n\t        }\n\t        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n\t        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n\t            var schedulerFn;\n\t            var errorFn = function (err) { return null; };\n\t            var completeFn = function () { return null; };\n\t            if (generatorOrNext && typeof generatorOrNext === 'object') {\n\t                schedulerFn = this.__isAsync ? function (value) {\n\t                    setTimeout(function () { return generatorOrNext.next(value); });\n\t                } : function (value) { generatorOrNext.next(value); };\n\t                if (generatorOrNext.error) {\n\t                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n\t                        function (err) { generatorOrNext.error(err); };\n\t                }\n\t                if (generatorOrNext.complete) {\n\t                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n\t                        function () { generatorOrNext.complete(); };\n\t                }\n\t            }\n\t            else {\n\t                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n\t                    function (value) { generatorOrNext(value); };\n\t                if (error) {\n\t                    errorFn =\n\t                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n\t                }\n\t                if (complete) {\n\t                    completeFn =\n\t                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n\t                }\n\t            }\n\t            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n\t        };\n\t        return EventEmitter;\n\t    }(rxjs_Subject.Subject));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$6 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n\t     */\n\t    var VALID = 'VALID';\n\t    /**\n\t     * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n\t     */\n\t    var INVALID = 'INVALID';\n\t    /**\n\t     * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n\t     * errors are not yet available for the input value.\n\t     */\n\t    var PENDING = 'PENDING';\n\t    /**\n\t     * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n\t     * calculations of validity or value.\n\t     */\n\t    var DISABLED = 'DISABLED';\n\t    function _find(control, path, delimiter) {\n\t        if (path == null)\n\t            return null;\n\t        if (!(path instanceof Array)) {\n\t            path = path.split(delimiter);\n\t        }\n\t        if (path instanceof Array && (path.length === 0))\n\t            return null;\n\t        return path.reduce(function (v, name) {\n\t            if (v instanceof FormGroup) {\n\t                return v.controls[name] || null;\n\t            }\n\t            if (v instanceof FormArray) {\n\t                return v.at(name) || null;\n\t            }\n\t            return null;\n\t        }, control);\n\t    }\n\t    function toObservable(r) {\n\t        return isPromise(r) ? rxjs_observable_fromPromise.fromPromise(r) : r;\n\t    }\n\t    function coerceToValidator(validator) {\n\t        return Array.isArray(validator) ? composeValidators(validator) : validator;\n\t    }\n\t    function coerceToAsyncValidator(asyncValidator) {\n\t        return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n\t    }\n\t    /**\n\t     * @whatItDoes This is the base class for {@link FormControl}, {@link FormGroup}, and\n\t     * {@link FormArray}.\n\t     *\n\t     * It provides some of the shared behavior that all controls and groups of controls have, like\n\t     * running validators, calculating status, and resetting state. It also defines the properties\n\t     * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n\t     * instantiated directly.\n\t     *\n\t     * @stable\n\t     */\n\t    var AbstractControl = (function () {\n\t        function AbstractControl(validator, asyncValidator) {\n\t            this.validator = validator;\n\t            this.asyncValidator = asyncValidator;\n\t            /** @internal */\n\t            this._onCollectionChange = function () { };\n\t            this._pristine = true;\n\t            this._touched = false;\n\t            /** @internal */\n\t            this._onDisabledChange = [];\n\t        }\n\t        Object.defineProperty(AbstractControl.prototype, \"value\", {\n\t            /**\n\t             * The value of the control.\n\t             */\n\t            get: function () { return this._value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"parent\", {\n\t            /**\n\t             * The parent control.\n\t             */\n\t            get: function () { return this._parent; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"status\", {\n\t            /**\n\t             * The validation status of the control. There are four possible\n\t             * validation statuses:\n\t             *\n\t             * * **VALID**:  control has passed all validation checks\n\t             * * **INVALID**: control has failed at least one validation check\n\t             * * **PENDING**: control is in the midst of conducting a validation check\n\t             * * **DISABLED**: control is exempt from validation checks\n\t             *\n\t             * These statuses are mutually exclusive, so a control cannot be\n\t             * both valid AND invalid or invalid AND disabled.\n\t             */\n\t            get: function () { return this._status; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"valid\", {\n\t            /**\n\t             * A control is `valid` when its `status === VALID`.\n\t             *\n\t             * In order to have this status, the control must have passed all its\n\t             * validation checks.\n\t             */\n\t            get: function () { return this._status === VALID; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n\t            /**\n\t             * A control is `invalid` when its `status === INVALID`.\n\t             *\n\t             * In order to have this status, the control must have failed\n\t             * at least one of its validation checks.\n\t             */\n\t            get: function () { return this._status === INVALID; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"pending\", {\n\t            /**\n\t             * A control is `pending` when its `status === PENDING`.\n\t             *\n\t             * In order to have this status, the control must be in the\n\t             * middle of conducting a validation check.\n\t             */\n\t            get: function () { return this._status == PENDING; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n\t            /**\n\t             * A control is `disabled` when its `status === DISABLED`.\n\t             *\n\t             * Disabled controls are exempt from validation checks and\n\t             * are not included in the aggregate value of their ancestor\n\t             * controls.\n\t             */\n\t            get: function () { return this._status === DISABLED; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n\t            /**\n\t             * A control is `enabled` as long as its `status !== DISABLED`.\n\t             *\n\t             * In other words, it has a status of `VALID`, `INVALID`, or\n\t             * `PENDING`.\n\t             */\n\t            get: function () { return this._status !== DISABLED; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"errors\", {\n\t            /**\n\t             * Returns any errors generated by failing validation. If there\n\t             * are no errors, it will return null.\n\t             */\n\t            get: function () { return this._errors; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n\t            /**\n\t             * A control is `pristine` if the user has not yet changed\n\t             * the value in the UI.\n\t             *\n\t             * Note that programmatic changes to a control's value will\n\t             * *not* mark it dirty.\n\t             */\n\t            get: function () { return this._pristine; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n\t            /**\n\t             * A control is `dirty` if the user has changed the value\n\t             * in the UI.\n\t             *\n\t             * Note that programmatic changes to a control's value will\n\t             * *not* mark it dirty.\n\t             */\n\t            get: function () { return !this.pristine; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"touched\", {\n\t            /**\n\t            * A control is marked `touched` once the user has triggered\n\t            * a `blur` event on it.\n\t            */\n\t            get: function () { return this._touched; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n\t            /**\n\t             * A control is `untouched` if the user has not yet triggered\n\t             * a `blur` event on it.\n\t             */\n\t            get: function () { return !this._touched; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n\t            /**\n\t             * Emits an event every time the value of the control changes, in\n\t             * the UI or programmatically.\n\t             */\n\t            get: function () { return this._valueChanges; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n\t            /**\n\t             * Emits an event every time the validation status of the control\n\t             * is re-calculated.\n\t             */\n\t            get: function () { return this._statusChanges; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Sets the synchronous validators that are active on this control.  Calling\n\t         * this will overwrite any existing sync validators.\n\t         */\n\t        AbstractControl.prototype.setValidators = function (newValidator) {\n\t            this.validator = coerceToValidator(newValidator);\n\t        };\n\t        /**\n\t         * Sets the async validators that are active on this control. Calling this\n\t         * will overwrite any existing async validators.\n\t         */\n\t        AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n\t            this.asyncValidator = coerceToAsyncValidator(newValidator);\n\t        };\n\t        /**\n\t         * Empties out the sync validator list.\n\t         */\n\t        AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n\t        /**\n\t         * Empties out the async validator list.\n\t         */\n\t        AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n\t        /**\n\t         * Marks the control as `touched`.\n\t         *\n\t         * This will also mark all direct ancestors as `touched` to maintain\n\t         * the model.\n\t         */\n\t        AbstractControl.prototype.markAsTouched = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._touched = true;\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.markAsTouched({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Marks the control as `untouched`.\n\t         *\n\t         * If the control has any children, it will also mark all children as `untouched`\n\t         * to maintain the model, and re-calculate the `touched` status of all parent\n\t         * controls.\n\t         */\n\t        AbstractControl.prototype.markAsUntouched = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._touched = false;\n\t            this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updateTouched({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Marks the control as `dirty`.\n\t         *\n\t         * This will also mark all direct ancestors as `dirty` to maintain\n\t         * the model.\n\t         */\n\t        AbstractControl.prototype.markAsDirty = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._pristine = false;\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.markAsDirty({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Marks the control as `pristine`.\n\t         *\n\t         * If the control has any children, it will also mark all children as `pristine`\n\t         * to maintain the model, and re-calculate the `pristine` status of all parent\n\t         * controls.\n\t         */\n\t        AbstractControl.prototype.markAsPristine = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._pristine = true;\n\t            this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updatePristine({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Marks the control as `pending`.\n\t         */\n\t        AbstractControl.prototype.markAsPending = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._status = PENDING;\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.markAsPending({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Disables the control. This means the control will be exempt from validation checks and\n\t         * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n\t         *\n\t         * If the control has children, all children will be disabled to maintain the model.\n\t         */\n\t        AbstractControl.prototype.disable = function (_a) {\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._status = DISABLED;\n\t            this._errors = null;\n\t            this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n\t            this._updateValue();\n\t            if (emitEvent !== false) {\n\t                this._valueChanges.emit(this._value);\n\t                this._statusChanges.emit(this._status);\n\t            }\n\t            this._updateAncestors(onlySelf);\n\t            this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n\t        };\n\t        /**\n\t         * Enables the control. This means the control will be included in validation checks and\n\t         * the aggregate value of its parent. Its status is re-calculated based on its value and\n\t         * its validators.\n\t         *\n\t         * If the control has children, all children will be enabled.\n\t         */\n\t        AbstractControl.prototype.enable = function (_a) {\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._status = VALID;\n\t            this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n\t            this._updateAncestors(onlySelf);\n\t            this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n\t        };\n\t        AbstractControl.prototype._updateAncestors = function (onlySelf) {\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.updateValueAndValidity();\n\t                this._parent._updatePristine();\n\t                this._parent._updateTouched();\n\t            }\n\t        };\n\t        AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n\t        /**\n\t         * Re-calculates the value and validation status of the control.\n\t         *\n\t         * By default, it will also update the value and validity of its ancestors.\n\t         */\n\t        AbstractControl.prototype.updateValueAndValidity = function (_a) {\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._setInitialStatus();\n\t            this._updateValue();\n\t            if (this.enabled) {\n\t                this._errors = this._runValidator();\n\t                this._status = this._calculateStatus();\n\t                if (this._status === VALID || this._status === PENDING) {\n\t                    this._runAsyncValidator(emitEvent);\n\t                }\n\t            }\n\t            if (emitEvent !== false) {\n\t                this._valueChanges.emit(this._value);\n\t                this._statusChanges.emit(this._status);\n\t            }\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t            }\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._updateTreeValidity = function (_a) {\n\t            var emitEvent = (_a === void 0 ? { emitEvent: true } : _a).emitEvent;\n\t            this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity({ emitEvent: emitEvent }); });\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n\t        };\n\t        AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n\t        AbstractControl.prototype._runValidator = function () {\n\t            return this.validator ? this.validator(this) : null;\n\t        };\n\t        AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n\t            var _this = this;\n\t            if (this.asyncValidator) {\n\t                this._status = PENDING;\n\t                this._cancelExistingSubscription();\n\t                var obs = toObservable(this.asyncValidator(this));\n\t                this._asyncValidationSubscription =\n\t                    obs.subscribe({ next: function (res) { return _this.setErrors(res, { emitEvent: emitEvent }); } });\n\t            }\n\t        };\n\t        AbstractControl.prototype._cancelExistingSubscription = function () {\n\t            if (this._asyncValidationSubscription) {\n\t                this._asyncValidationSubscription.unsubscribe();\n\t            }\n\t        };\n\t        /**\n\t         * Sets errors on a form control.\n\t         *\n\t         * This is used when validations are run manually by the user, rather than automatically.\n\t         *\n\t         * Calling `setErrors` will also update the validity of the parent control.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```\n\t         * const login = new FormControl(\"someLogin\");\n\t         * login.setErrors({\n\t         *   \"notUnique\": true\n\t         * });\n\t         *\n\t         * expect(login.valid).toEqual(false);\n\t         * expect(login.errors).toEqual({\"notUnique\": true});\n\t         *\n\t         * login.setValue(\"someOtherLogin\");\n\t         *\n\t         * expect(login.valid).toEqual(true);\n\t         * ```\n\t         */\n\t        AbstractControl.prototype.setErrors = function (errors, _a) {\n\t            var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n\t            this._errors = errors;\n\t            this._updateControlsErrors(emitEvent !== false);\n\t        };\n\t        /**\n\t         * Retrieves a child control given the control's name or path.\n\t         *\n\t         * Paths can be passed in as an array or a string delimited by a dot.\n\t         *\n\t         * To get a control nested within a `person` sub-group:\n\t         *\n\t         * * `this.form.get('person.name');`\n\t         *\n\t         * -OR-\n\t         *\n\t         * * `this.form.get(['person', 'name']);`\n\t         */\n\t        AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n\t        /**\n\t         * Returns true if the control with the given path has the error specified. Otherwise\n\t         * returns null or undefined.\n\t         *\n\t         * If no path is given, it checks for the error on the present control.\n\t         */\n\t        AbstractControl.prototype.getError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            var control = path ? this.get(path) : this;\n\t            return control && control._errors ? control._errors[errorCode] : null;\n\t        };\n\t        /**\n\t         * Returns true if the control with the given path has the error specified. Otherwise\n\t         * returns false.\n\t         *\n\t         * If no path is given, it checks for the error on the present control.\n\t         */\n\t        AbstractControl.prototype.hasError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            return !!this.getError(errorCode, path);\n\t        };\n\t        Object.defineProperty(AbstractControl.prototype, \"root\", {\n\t            /**\n\t             * Retrieves the top-level ancestor of this control.\n\t             */\n\t            get: function () {\n\t                var x = this;\n\t                while (x._parent) {\n\t                    x = x._parent;\n\t                }\n\t                return x;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n\t            this._status = this._calculateStatus();\n\t            if (emitEvent) {\n\t                this._statusChanges.emit(this._status);\n\t            }\n\t            if (this._parent) {\n\t                this._parent._updateControlsErrors(emitEvent);\n\t            }\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._initObservables = function () {\n\t            this._valueChanges = new EventEmitter();\n\t            this._statusChanges = new EventEmitter();\n\t        };\n\t        AbstractControl.prototype._calculateStatus = function () {\n\t            if (this._allControlsDisabled())\n\t                return DISABLED;\n\t            if (this._errors)\n\t                return INVALID;\n\t            if (this._anyControlsHaveStatus(PENDING))\n\t                return PENDING;\n\t            if (this._anyControlsHaveStatus(INVALID))\n\t                return INVALID;\n\t            return VALID;\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n\t            return this._anyControls(function (control) { return control.status === status; });\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._anyControlsDirty = function () {\n\t            return this._anyControls(function (control) { return control.dirty; });\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._anyControlsTouched = function () {\n\t            return this._anyControls(function (control) { return control.touched; });\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._updatePristine = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._pristine = !this._anyControlsDirty();\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updatePristine({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._updateTouched = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._touched = this._anyControlsTouched();\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updateTouched({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._isBoxedValue = function (formState) {\n\t            return typeof formState === 'object' && formState !== null &&\n\t                Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n\t        return AbstractControl;\n\t    }());\n\t    /**\n\t     * @whatItDoes Tracks the value and validation status of an individual form control.\n\t     *\n\t     * It is one of the three fundamental building blocks of Angular forms, along with\n\t     * {@link FormGroup} and {@link FormArray}.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * When instantiating a {@link FormControl}, you can pass in an initial value as the\n\t     * first argument. Example:\n\t     *\n\t     * ```ts\n\t     * const ctrl = new FormControl('some value');\n\t     * console.log(ctrl.value);     // 'some value'\n\t     *```\n\t     *\n\t     * You can also initialize the control with a form state object on instantiation,\n\t     * which includes both the value and whether or not the control is disabled.\n\t     * You can't use the value key without the disabled key; both are required\n\t     * to use this way of initialization.\n\t     *\n\t     * ```ts\n\t     * const ctrl = new FormControl({value: 'n/a', disabled: true});\n\t     * console.log(ctrl.value);     // 'n/a'\n\t     * console.log(ctrl.status);   // 'DISABLED'\n\t     * ```\n\t     *\n\t     * To include a sync validator (or an array of sync validators) with the control,\n\t     * pass it in as the second argument. Async validators are also supported, but\n\t     * have to be passed in separately as the third arg.\n\t     *\n\t     * ```ts\n\t     * const ctrl = new FormControl('', Validators.required);\n\t     * console.log(ctrl.value);     // ''\n\t     * console.log(ctrl.status);   // 'INVALID'\n\t     * ```\n\t     *\n\t     * See its superclass, {@link AbstractControl}, for more properties and methods.\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * @stable\n\t     */\n\t    var FormControl = (function (_super) {\n\t        __extends$6(FormControl, _super);\n\t        function FormControl(formState, validator, asyncValidator) {\n\t            if (formState === void 0) { formState = null; }\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n\t            /** @internal */\n\t            this._onChange = [];\n\t            this._applyFormState(formState);\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n\t            this._initObservables();\n\t        }\n\t        /**\n\t         * Set the value of the form control to `value`.\n\t         *\n\t         * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n\t         * and not its parent component. This defaults to false.\n\t         *\n\t         * If `emitEvent` is `true`, this\n\t         * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n\t         * to true (as it falls through to `updateValueAndValidity`).\n\t         *\n\t         * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n\t         * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n\t         * specified.\n\t         *\n\t         * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n\t         * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n\t         */\n\t        FormControl.prototype.setValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n\t            this._value = value;\n\t            if (this._onChange.length && emitModelToViewChange !== false) {\n\t                this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange !== false); });\n\t            }\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         * Patches the value of a control.\n\t         *\n\t         * This function is functionally the same as {@link FormControl.setValue} at this level.\n\t         * It exists for symmetry with {@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,\n\t         * where it does behave differently.\n\t         */\n\t        FormControl.prototype.patchValue = function (value, options) {\n\t            if (options === void 0) { options = {}; }\n\t            this.setValue(value, options);\n\t        };\n\t        /**\n\t         * Resets the form control. This means by default:\n\t         *\n\t         * * it is marked as `pristine`\n\t         * * it is marked as `untouched`\n\t         * * value is set to null\n\t         *\n\t         * You can also reset to a specific form state by passing through a standalone\n\t         * value or a form state object that contains both a value and a disabled state\n\t         * (these are the only two properties that cannot be calculated).\n\t         *\n\t         * Ex:\n\t         *\n\t         * ```ts\n\t         * this.control.reset('Nancy');\n\t         *\n\t         * console.log(this.control.value);  // 'Nancy'\n\t         * ```\n\t         *\n\t         * OR\n\t         *\n\t         * ```\n\t         * this.control.reset({value: 'Nancy', disabled: true});\n\t         *\n\t         * console.log(this.control.value);  // 'Nancy'\n\t         * console.log(this.control.status);  // 'DISABLED'\n\t         * ```\n\t         */\n\t        FormControl.prototype.reset = function (formState, _a) {\n\t            if (formState === void 0) { formState = null; }\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._applyFormState(formState);\n\t            this.markAsPristine({ onlySelf: onlySelf });\n\t            this.markAsUntouched({ onlySelf: onlySelf });\n\t            this.setValue(this._value, { onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         * @internal\n\t         */\n\t        FormControl.prototype._updateValue = function () { };\n\t        /**\n\t         * @internal\n\t         */\n\t        FormControl.prototype._anyControls = function (condition) { return false; };\n\t        /**\n\t         * @internal\n\t         */\n\t        FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n\t        /**\n\t         * Register a listener for change events.\n\t         */\n\t        FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n\t        /**\n\t         * @internal\n\t         */\n\t        FormControl.prototype._clearChangeFns = function () {\n\t            this._onChange = [];\n\t            this._onDisabledChange = [];\n\t            this._onCollectionChange = function () { };\n\t        };\n\t        /**\n\t         * Register a listener for disabled events.\n\t         */\n\t        FormControl.prototype.registerOnDisabledChange = function (fn) {\n\t            this._onDisabledChange.push(fn);\n\t        };\n\t        /**\n\t         * @internal\n\t         */\n\t        FormControl.prototype._forEachChild = function (cb) { };\n\t        FormControl.prototype._applyFormState = function (formState) {\n\t            if (this._isBoxedValue(formState)) {\n\t                this._value = formState.value;\n\t                formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n\t                    this.enable({ onlySelf: true, emitEvent: false });\n\t            }\n\t            else {\n\t                this._value = formState;\n\t            }\n\t        };\n\t        return FormControl;\n\t    }(AbstractControl));\n\t    /**\n\t     * @whatItDoes Tracks the value and validity state of a group of {@link FormControl}\n\t     * instances.\n\t     *\n\t     * A `FormGroup` aggregates the values of each child {@link FormControl} into one object,\n\t     * with each control name as the key.  It calculates its status by reducing the statuses\n\t     * of its children. For example, if one of the controls in a group is invalid, the entire\n\t     * group becomes invalid.\n\t     *\n\t     * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n\t     * along with {@link FormControl} and {@link FormArray}.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * When instantiating a {@link FormGroup}, pass in a collection of child controls as the first\n\t     * argument. The key for each child will be the name under which it is registered.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * const form = new FormGroup({\n\t     *   first: new FormControl('Nancy', Validators.minLength(2)),\n\t     *   last: new FormControl('Drew'),\n\t     * });\n\t     *\n\t     * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n\t     * console.log(form.status);  // 'VALID'\n\t     * ```\n\t     *\n\t     * You can also include group-level validators as the second arg, or group-level async\n\t     * validators as the third arg. These come in handy when you want to perform validation\n\t     * that considers the value of more than one child control.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * const form = new FormGroup({\n\t     *   password: new FormControl('', Validators.minLength(2)),\n\t     *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n\t     * }, passwordMatchValidator);\n\t     *\n\t     *\n\t     * function passwordMatchValidator(g: FormGroup) {\n\t     *    return g.get('password').value === g.get('passwordConfirm').value\n\t     *       ? null : {'mismatch': true};\n\t     * }\n\t     * ```\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * @stable\n\t     */\n\t    var FormGroup = (function (_super) {\n\t        __extends$6(FormGroup, _super);\n\t        function FormGroup(controls, validator, asyncValidator) {\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            _super.call(this, validator, asyncValidator);\n\t            this.controls = controls;\n\t            this._initObservables();\n\t            this._setUpControls();\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n\t        }\n\t        /**\n\t         * Registers a control with the group's list of controls.\n\t         *\n\t         * This method does not update value or validity of the control, so for\n\t         * most cases you'll want to use {@link FormGroup.addControl} instead.\n\t         */\n\t        FormGroup.prototype.registerControl = function (name, control) {\n\t            if (this.controls[name])\n\t                return this.controls[name];\n\t            this.controls[name] = control;\n\t            control.setParent(this);\n\t            control._registerOnCollectionChange(this._onCollectionChange);\n\t            return control;\n\t        };\n\t        /**\n\t         * Add a control to this group.\n\t         */\n\t        FormGroup.prototype.addControl = function (name, control) {\n\t            this.registerControl(name, control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Remove a control from this group.\n\t         */\n\t        FormGroup.prototype.removeControl = function (name) {\n\t            if (this.controls[name])\n\t                this.controls[name]._registerOnCollectionChange(function () { });\n\t            delete (this.controls[name]);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Replace an existing control.\n\t         */\n\t        FormGroup.prototype.setControl = function (name, control) {\n\t            if (this.controls[name])\n\t                this.controls[name]._registerOnCollectionChange(function () { });\n\t            delete (this.controls[name]);\n\t            if (control)\n\t                this.registerControl(name, control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Check whether there is an enabled control with the given name in the group.\n\t         *\n\t         * It will return false for disabled controls. If you'd like to check for\n\t         * existence in the group only, use {@link AbstractControl.get} instead.\n\t         */\n\t        FormGroup.prototype.contains = function (controlName) {\n\t            return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n\t        };\n\t        /**\n\t         *  Sets the value of the {@link FormGroup}. It accepts an object that matches\n\t         *  the structure of the group, with control names as keys.\n\t         *\n\t         * This method performs strict checks, so it will throw an error if you try\n\t         * to set the value of a control that doesn't exist or if you exclude the\n\t         * value of a control.\n\t         *\n\t         *  ### Example\n\t         *\n\t         *  ```\n\t         *  const form = new FormGroup({\n\t         *     first: new FormControl(),\n\t         *     last: new FormControl()\n\t         *  });\n\t         *  console.log(form.value);   // {first: null, last: null}\n\t         *\n\t         *  form.setValue({first: 'Nancy', last: 'Drew'});\n\t         *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n\t         *\n\t         *  ```\n\t         */\n\t        FormGroup.prototype.setValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._checkAllValuesPresent(value);\n\t            Object.keys(value).forEach(function (name) {\n\t                _this._throwIfControlMissing(name);\n\t                _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         *  Patches the value of the {@link FormGroup}. It accepts an object with control\n\t         *  names as keys, and will do its best to match the values to the correct controls\n\t         *  in the group.\n\t         *\n\t         *  It accepts both super-sets and sub-sets of the group without throwing an error.\n\t         *\n\t         *  ### Example\n\t         *\n\t         *  ```\n\t         *  const form = new FormGroup({\n\t         *     first: new FormControl(),\n\t         *     last: new FormControl()\n\t         *  });\n\t         *  console.log(form.value);   // {first: null, last: null}\n\t         *\n\t         *  form.patchValue({first: 'Nancy'});\n\t         *  console.log(form.value);   // {first: 'Nancy', last: null}\n\t         *\n\t         *  ```\n\t         */\n\t        FormGroup.prototype.patchValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            Object.keys(value).forEach(function (name) {\n\t                if (_this.controls[name]) {\n\t                    _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n\t                }\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         * Resets the {@link FormGroup}. This means by default:\n\t         *\n\t         * * The group and all descendants are marked `pristine`\n\t         * * The group and all descendants are marked `untouched`\n\t         * * The value of all descendants will be null or null maps\n\t         *\n\t         * You can also reset to a specific form state by passing in a map of states\n\t         * that matches the structure of your form, with control names as keys. The state\n\t         * can be a standalone value or a form state object with both a value and a disabled\n\t         * status.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```ts\n\t         * this.form.reset({first: 'name', last: 'last name'});\n\t         *\n\t         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n\t         * ```\n\t         *\n\t         * - OR -\n\t         *\n\t         * ```\n\t         * this.form.reset({\n\t         *   first: {value: 'name', disabled: true},\n\t         *   last: 'last'\n\t         * });\n\t         *\n\t         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n\t         * console.log(this.form.get('first').status);  // 'DISABLED'\n\t         * ```\n\t         */\n\t        FormGroup.prototype.reset = function (value, _a) {\n\t            if (value === void 0) { value = {}; }\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._forEachChild(function (control, name) {\n\t                control.reset(value[name], { onlySelf: true, emitEvent: emitEvent });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t            this._updatePristine({ onlySelf: onlySelf });\n\t            this._updateTouched({ onlySelf: onlySelf });\n\t        };\n\t        /**\n\t         * The aggregate value of the {@link FormGroup}, including any disabled controls.\n\t         *\n\t         * If you'd like to include all values regardless of disabled status, use this method.\n\t         * Otherwise, the `value` property is the best way to get the value of the group.\n\t         */\n\t        FormGroup.prototype.getRawValue = function () {\n\t            return this._reduceChildren({}, function (acc, control, name) {\n\t                acc[name] = control.value;\n\t                return acc;\n\t            });\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._throwIfControlMissing = function (name) {\n\t            if (!Object.keys(this.controls).length) {\n\t                throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n\t            }\n\t            if (!this.controls[name]) {\n\t                throw new Error(\"Cannot find form control with name: \" + name + \".\");\n\t            }\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._forEachChild = function (cb) {\n\t            var _this = this;\n\t            Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._setUpControls = function () {\n\t            var _this = this;\n\t            this._forEachChild(function (control) {\n\t                control.setParent(_this);\n\t                control._registerOnCollectionChange(_this._onCollectionChange);\n\t            });\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n\t        /** @internal */\n\t        FormGroup.prototype._anyControls = function (condition) {\n\t            var _this = this;\n\t            var res = false;\n\t            this._forEachChild(function (control, name) {\n\t                res = res || (_this.contains(name) && condition(control));\n\t            });\n\t            return res;\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._reduceValue = function () {\n\t            var _this = this;\n\t            return this._reduceChildren({}, function (acc, control, name) {\n\t                if (control.enabled || _this.disabled) {\n\t                    acc[name] = control.value;\n\t                }\n\t                return acc;\n\t            });\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._reduceChildren = function (initValue, fn) {\n\t            var res = initValue;\n\t            this._forEachChild(function (control, name) { res = fn(res, control, name); });\n\t            return res;\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._allControlsDisabled = function () {\n\t            for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n\t                var controlName = _a[_i];\n\t                if (this.controls[controlName].enabled) {\n\t                    return false;\n\t                }\n\t            }\n\t            return Object.keys(this.controls).length > 0 || this.disabled;\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._checkAllValuesPresent = function (value) {\n\t            this._forEachChild(function (control, name) {\n\t                if (value[name] === undefined) {\n\t                    throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n\t                }\n\t            });\n\t        };\n\t        return FormGroup;\n\t    }(AbstractControl));\n\t    /**\n\t     * @whatItDoes Tracks the value and validity state of an array of {@link FormControl}\n\t     * instances.\n\t     *\n\t     * A `FormArray` aggregates the values of each child {@link FormControl} into an array.\n\t     * It calculates its status by reducing the statuses of its children. For example, if one of\n\t     * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n\t     *\n\t     * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n\t     * along with {@link FormControl} and {@link FormGroup}.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * When instantiating a {@link FormArray}, pass in an array of child controls as the first\n\t     * argument.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * const arr = new FormArray([\n\t     *   new FormControl('Nancy', Validators.minLength(2)),\n\t     *   new FormControl('Drew'),\n\t     * ]);\n\t     *\n\t     * console.log(arr.value);   // ['Nancy', 'Drew']\n\t     * console.log(arr.status);  // 'VALID'\n\t     * ```\n\t     *\n\t     * You can also include array-level validators as the second arg, or array-level async\n\t     * validators as the third arg. These come in handy when you want to perform validation\n\t     * that considers the value of more than one child control.\n\t     *\n\t     * ### Adding or removing controls\n\t     *\n\t     * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n\t     * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n\t     * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n\t     * the `FormArray` directly, as that will result in strange and unexpected behavior such\n\t     * as broken change detection.\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * @stable\n\t     */\n\t    var FormArray = (function (_super) {\n\t        __extends$6(FormArray, _super);\n\t        function FormArray(controls, validator, asyncValidator) {\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            _super.call(this, validator, asyncValidator);\n\t            this.controls = controls;\n\t            this._initObservables();\n\t            this._setUpControls();\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n\t        }\n\t        /**\n\t         * Get the {@link AbstractControl} at the given `index` in the array.\n\t         */\n\t        FormArray.prototype.at = function (index) { return this.controls[index]; };\n\t        /**\n\t         * Insert a new {@link AbstractControl} at the end of the array.\n\t         */\n\t        FormArray.prototype.push = function (control) {\n\t            this.controls.push(control);\n\t            this._registerControl(control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Insert a new {@link AbstractControl} at the given `index` in the array.\n\t         */\n\t        FormArray.prototype.insert = function (index, control) {\n\t            this.controls.splice(index, 0, control);\n\t            this._registerControl(control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Remove the control at the given `index` in the array.\n\t         */\n\t        FormArray.prototype.removeAt = function (index) {\n\t            if (this.controls[index])\n\t                this.controls[index]._registerOnCollectionChange(function () { });\n\t            this.controls.splice(index, 1);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Replace an existing control.\n\t         */\n\t        FormArray.prototype.setControl = function (index, control) {\n\t            if (this.controls[index])\n\t                this.controls[index]._registerOnCollectionChange(function () { });\n\t            this.controls.splice(index, 1);\n\t            if (control) {\n\t                this.controls.splice(index, 0, control);\n\t                this._registerControl(control);\n\t            }\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        Object.defineProperty(FormArray.prototype, \"length\", {\n\t            /**\n\t             * Length of the control array.\n\t             */\n\t            get: function () { return this.controls.length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         *  Sets the value of the {@link FormArray}. It accepts an array that matches\n\t         *  the structure of the control.\n\t         *\n\t         * This method performs strict checks, so it will throw an error if you try\n\t         * to set the value of a control that doesn't exist or if you exclude the\n\t         * value of a control.\n\t         *\n\t         *  ### Example\n\t         *\n\t         *  ```\n\t         *  const arr = new FormArray([\n\t         *     new FormControl(),\n\t         *     new FormControl()\n\t         *  ]);\n\t         *  console.log(arr.value);   // [null, null]\n\t         *\n\t         *  arr.setValue(['Nancy', 'Drew']);\n\t         *  console.log(arr.value);   // ['Nancy', 'Drew']\n\t         *  ```\n\t         */\n\t        FormArray.prototype.setValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._checkAllValuesPresent(value);\n\t            value.forEach(function (newValue, index) {\n\t                _this._throwIfControlMissing(index);\n\t                _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         *  Patches the value of the {@link FormArray}. It accepts an array that matches the\n\t         *  structure of the control, and will do its best to match the values to the correct\n\t         *  controls in the group.\n\t         *\n\t         *  It accepts both super-sets and sub-sets of the array without throwing an error.\n\t         *\n\t         *  ### Example\n\t         *\n\t         *  ```\n\t         *  const arr = new FormArray([\n\t         *     new FormControl(),\n\t         *     new FormControl()\n\t         *  ]);\n\t         *  console.log(arr.value);   // [null, null]\n\t         *\n\t         *  arr.patchValue(['Nancy']);\n\t         *  console.log(arr.value);   // ['Nancy', null]\n\t         *  ```\n\t         */\n\t        FormArray.prototype.patchValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            value.forEach(function (newValue, index) {\n\t                if (_this.at(index)) {\n\t                    _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n\t                }\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         * Resets the {@link FormArray}. This means by default:\n\t         *\n\t         * * The array and all descendants are marked `pristine`\n\t         * * The array and all descendants are marked `untouched`\n\t         * * The value of all descendants will be null or null maps\n\t         *\n\t         * You can also reset to a specific form state by passing in an array of states\n\t         * that matches the structure of the control. The state can be a standalone value\n\t         * or a form state object with both a value and a disabled status.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```ts\n\t         * this.arr.reset(['name', 'last name']);\n\t         *\n\t         * console.log(this.arr.value);  // ['name', 'last name']\n\t         * ```\n\t         *\n\t         * - OR -\n\t         *\n\t         * ```\n\t         * this.arr.reset([\n\t         *   {value: 'name', disabled: true},\n\t         *   'last'\n\t         * ]);\n\t         *\n\t         * console.log(this.arr.value);  // ['name', 'last name']\n\t         * console.log(this.arr.get(0).status);  // 'DISABLED'\n\t         * ```\n\t         */\n\t        FormArray.prototype.reset = function (value, _a) {\n\t            if (value === void 0) { value = []; }\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._forEachChild(function (control, index) {\n\t                control.reset(value[index], { onlySelf: true, emitEvent: emitEvent });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t            this._updatePristine({ onlySelf: onlySelf });\n\t            this._updateTouched({ onlySelf: onlySelf });\n\t        };\n\t        /**\n\t         * The aggregate value of the array, including any disabled controls.\n\t         *\n\t         * If you'd like to include all values regardless of disabled status, use this method.\n\t         * Otherwise, the `value` property is the best way to get the value of the array.\n\t         */\n\t        FormArray.prototype.getRawValue = function () { return this.controls.map(function (control) { return control.value; }); };\n\t        /** @internal */\n\t        FormArray.prototype._throwIfControlMissing = function (index) {\n\t            if (!this.controls.length) {\n\t                throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n\t            }\n\t            if (!this.at(index)) {\n\t                throw new Error(\"Cannot find form control at index \" + index);\n\t            }\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._forEachChild = function (cb) {\n\t            this.controls.forEach(function (control, index) { cb(control, index); });\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._updateValue = function () {\n\t            var _this = this;\n\t            this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n\t                .map(function (control) { return control.value; });\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._anyControls = function (condition) {\n\t            return this.controls.some(function (control) { return control.enabled && condition(control); });\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._setUpControls = function () {\n\t            var _this = this;\n\t            this._forEachChild(function (control) { return _this._registerControl(control); });\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._checkAllValuesPresent = function (value) {\n\t            this._forEachChild(function (control, i) {\n\t                if (value[i] === undefined) {\n\t                    throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n\t                }\n\t            });\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._allControlsDisabled = function () {\n\t            for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n\t                var control = _a[_i];\n\t                if (control.enabled)\n\t                    return false;\n\t            }\n\t            return this.controls.length > 0 || this.disabled;\n\t        };\n\t        FormArray.prototype._registerControl = function (control) {\n\t            control.setParent(this);\n\t            control._registerOnCollectionChange(this._onCollectionChange);\n\t        };\n\t        return FormArray;\n\t    }(AbstractControl));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var formDirectiveProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return NgForm; })\n\t    };\n\t    var resolvedPromise = Promise.resolve(null);\n\t    /**\n\t     * @whatItDoes Creates a top-level {@link FormGroup} instance and binds it to a form\n\t     * to track aggregate form value and validation status.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * As soon as you import the `FormsModule`, this directive becomes active by default on\n\t     * all `<form>` tags.  You don't need to add a special selector.\n\t     *\n\t     * You can export the directive into a local template variable using `ngForm` as the key\n\t     * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n\t     * {@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n\t     * will give you access to the aggregate value and validity status of the form, as well as\n\t     * user interaction properties like `dirty` and `touched`.\n\t     *\n\t     * To register child controls with the form, you'll want to use {@link NgModel} with a\n\t     * `name` attribute.  You can also use {@link NgModelGroup} if you'd like to create\n\t     * sub-groups within the form.\n\t     *\n\t     * You can listen to the directive's `ngSubmit` event to be notified when the user has\n\t     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n\t     * submission event.\n\t     *\n\t     * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * * **NgModule**: `FormsModule`\n\t     *\n\t     *  @stable\n\t     */\n\t    var NgForm = (function (_super) {\n\t        __extends$4(NgForm, _super);\n\t        function NgForm(validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._submitted = false;\n\t            this.ngSubmit = new EventEmitter();\n\t            this.form =\n\t                new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n\t        }\n\t        Object.defineProperty(NgForm.prototype, \"submitted\", {\n\t            get: function () { return this._submitted; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"formDirective\", {\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"control\", {\n\t            get: function () { return this.form; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"path\", {\n\t            get: function () { return []; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"controls\", {\n\t            get: function () { return this.form.controls; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgForm.prototype.addControl = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var container = _this._findContainer(dir.path);\n\t                dir._control = container.registerControl(dir.name, dir.control);\n\t                setUpControl(dir.control, dir);\n\t                dir.control.updateValueAndValidity({ emitEvent: false });\n\t            });\n\t        };\n\t        NgForm.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n\t        NgForm.prototype.removeControl = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var container = _this._findContainer(dir.path);\n\t                if (container) {\n\t                    container.removeControl(dir.name);\n\t                }\n\t            });\n\t        };\n\t        NgForm.prototype.addFormGroup = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var container = _this._findContainer(dir.path);\n\t                var group = new FormGroup({});\n\t                setUpFormContainer(group, dir);\n\t                container.registerControl(dir.name, group);\n\t                group.updateValueAndValidity({ emitEvent: false });\n\t            });\n\t        };\n\t        NgForm.prototype.removeFormGroup = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var container = _this._findContainer(dir.path);\n\t                if (container) {\n\t                    container.removeControl(dir.name);\n\t                }\n\t            });\n\t        };\n\t        NgForm.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n\t        NgForm.prototype.updateModel = function (dir, value) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var ctrl = _this.form.get(dir.path);\n\t                ctrl.setValue(value);\n\t            });\n\t        };\n\t        NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n\t        NgForm.prototype.onSubmit = function ($event) {\n\t            this._submitted = true;\n\t            this.ngSubmit.emit($event);\n\t            return false;\n\t        };\n\t        NgForm.prototype.onReset = function () { this.resetForm(); };\n\t        NgForm.prototype.resetForm = function (value) {\n\t            if (value === void 0) { value = undefined; }\n\t            this.form.reset(value);\n\t            this._submitted = false;\n\t        };\n\t        /** @internal */\n\t        NgForm.prototype._findContainer = function (path) {\n\t            path.pop();\n\t            return path.length ? this.form.get(path) : this.form;\n\t        };\n\t        NgForm.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n\t                        providers: [formDirectiveProvider],\n\t                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n\t                        outputs: ['ngSubmit'],\n\t                        exportAs: 'ngForm'\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgForm.ctorParameters = [\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ];\n\t        return NgForm;\n\t    }(ControlContainer));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var Examples = {\n\t        formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n\t        formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n\t        formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; let i=index\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n\t        ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n\t        ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n\t    };\n\t\n\t    var TemplateDrivenErrors = (function () {\n\t        function TemplateDrivenErrors() {\n\t        }\n\t        TemplateDrivenErrors.modelParentException = function () {\n\t            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + Examples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + Examples.ngModelWithFormGroup);\n\t        };\n\t        TemplateDrivenErrors.formGroupNameException = function () {\n\t            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n\t        };\n\t        TemplateDrivenErrors.missingNameException = function () {\n\t            throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n\t        };\n\t        TemplateDrivenErrors.modelGroupParentException = function () {\n\t            throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n\t        };\n\t        return TemplateDrivenErrors;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$8 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var modelGroupProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return NgModelGroup; })\n\t    };\n\t    /**\n\t     * @whatItDoes Creates and binds a {@link FormGroup} instance to a DOM element.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive can only be used as a child of {@link NgForm} (or in other words,\n\t     * within `<form>` tags).\n\t     *\n\t     * Use this directive if you'd like to create a sub-group within a form. This can\n\t     * come in handy if you want to validate a sub-group of your form separately from\n\t     * the rest of your form, or if some values in your domain model make more sense to\n\t     * consume together in a nested object.\n\t     *\n\t     * Pass in the name you'd like this sub-group to have and it will become the key\n\t     * for the sub-group in the form's full value. You can also export the directive into\n\t     * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n\t     *\n\t     * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * * **NgModule**: `FormsModule`\n\t     *\n\t     * @stable\n\t     */\n\t    var NgModelGroup = (function (_super) {\n\t        __extends$8(NgModelGroup, _super);\n\t        function NgModelGroup(parent, validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._parent = parent;\n\t            this._validators = validators;\n\t            this._asyncValidators = asyncValidators;\n\t        }\n\t        /** @internal */\n\t        NgModelGroup.prototype._checkParentType = function () {\n\t            if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n\t                TemplateDrivenErrors.modelGroupParentException();\n\t            }\n\t        };\n\t        NgModelGroup.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgModelGroup.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ];\n\t        NgModelGroup.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['ngModelGroup',] },],\n\t        };\n\t        return NgModelGroup;\n\t    }(AbstractFormGroupDirective));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$7 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var formControlBinding = {\n\t        provide: NgControl,\n\t        useExisting: _angular_core.forwardRef(function () { return NgModel; })\n\t    };\n\t    /**\n\t     * `ngModel` forces an additional change detection run when its inputs change:\n\t     * E.g.:\n\t     * ```\n\t     * <div>{{myModel.valid}}</div>\n\t     * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n\t     * ```\n\t     * I.e. `ngModel` can export itself on the element and then be used in the template.\n\t     * Normally, this would result in expressions before the `input` that use the exported directive\n\t     * to have and old value as they have been\n\t     * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n\t     * detection run.\n\t     *\n\t     * Notes:\n\t     * - this is just one extra run no matter how many `ngModel` have been changed.\n\t     * - this is a general problem when using `exportAs` for directives!\n\t     */\n\t    var resolvedPromise$1 = Promise.resolve(null);\n\t    /**\n\t     * @whatItDoes Creates a {@link FormControl} instance from a domain model and binds it\n\t     * to a form control element.\n\t     *\n\t     * The {@link FormControl} instance will track the value, user interaction, and\n\t     * validation status of the control and keep the view synced with the model. If used\n\t     * within a parent form, the directive will also register itself with the form as a child\n\t     * control.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive can be used by itself or as part of a larger form. All you need is the\n\t     * `ngModel` selector to activate it.\n\t     *\n\t     * It accepts a domain model as an optional {@link @Input}. If you have a one-way binding\n\t     * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n\t     * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n\t     * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n\t     * the domain model in your class as well.\n\t     *\n\t     * If you wish to inspect the properties of the associated {@link FormControl} (like\n\t     * validity state), you can also export the directive into a local template variable using\n\t     * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n\t     * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n\t     * will fall through to the control anyway, so you can access them directly. You can see a\n\t     * full list of properties directly available in {@link AbstractControlDirective}.\n\t     *\n\t     * The following is an example of a simple standalone control using `ngModel`:\n\t     *\n\t     * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n\t     *\n\t     * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n\t     * so that the control can be registered with the parent form under that name.\n\t     *\n\t     * It's worth noting that in the context of a parent form, you often can skip one-way or\n\t     * two-way binding because the parent form will sync the value for you. You can access\n\t     * its properties by exporting it into a local template variable using `ngForm` (ex:\n\t     * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n\t     *\n\t     * If you do need to populate initial values into your form, using a one-way binding for\n\t     * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n\t     * than the domain model's value on submit.\n\t     *\n\t     * Take a look at an example of using `ngModel` within a form:\n\t     *\n\t     * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n\t     *\n\t     * To see `ngModel` examples with different form control types, see:\n\t     *\n\t     * * Radio buttons: {@link RadioControlValueAccessor}\n\t     * * Selects: {@link SelectControlValueAccessor}\n\t     *\n\t     * **npm package**: `@angular/forms`\n\t     *\n\t     * **NgModule**: `FormsModule`\n\t     *\n\t     *  @stable\n\t     */\n\t    var NgModel = (function (_super) {\n\t        __extends$7(NgModel, _super);\n\t        function NgModel(parent, validators, asyncValidators, valueAccessors) {\n\t            _super.call(this);\n\t            /** @internal */\n\t            this._control = new FormControl();\n\t            /** @internal */\n\t            this._registered = false;\n\t            this.update = new EventEmitter();\n\t            this._parent = parent;\n\t            this._rawValidators = validators || [];\n\t            this._rawAsyncValidators = asyncValidators || [];\n\t            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n\t        }\n\t        NgModel.prototype.ngOnChanges = function (changes) {\n\t            this._checkForErrors();\n\t            if (!this._registered)\n\t                this._setUpControl();\n\t            if ('isDisabled' in changes) {\n\t                this._updateDisabled(changes);\n\t            }\n\t            if (isPropertyUpdated(changes, this.viewModel)) {\n\t                this._updateValue(this.model);\n\t                this.viewModel = this.model;\n\t            }\n\t        };\n\t        NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n\t        Object.defineProperty(NgModel.prototype, \"control\", {\n\t            get: function () { return this._control; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"path\", {\n\t            get: function () {\n\t                return this._parent ? controlPath(this.name, this._parent) : [this.name];\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"formDirective\", {\n\t            get: function () { return this._parent ? this._parent.formDirective : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"validator\", {\n\t            get: function () { return composeValidators(this._rawValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n\t            get: function () {\n\t                return composeAsyncValidators(this._rawAsyncValidators);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgModel.prototype.viewToModelUpdate = function (newValue) {\n\t            this.viewModel = newValue;\n\t            this.update.emit(newValue);\n\t        };\n\t        NgModel.prototype._setUpControl = function () {\n\t            this._isStandalone() ? this._setUpStandalone() :\n\t                this.formDirective.addControl(this);\n\t            this._registered = true;\n\t        };\n\t        NgModel.prototype._isStandalone = function () {\n\t            return !this._parent || (this.options && this.options.standalone);\n\t        };\n\t        NgModel.prototype._setUpStandalone = function () {\n\t            setUpControl(this._control, this);\n\t            this._control.updateValueAndValidity({ emitEvent: false });\n\t        };\n\t        NgModel.prototype._checkForErrors = function () {\n\t            if (!this._isStandalone()) {\n\t                this._checkParentType();\n\t            }\n\t            this._checkName();\n\t        };\n\t        NgModel.prototype._checkParentType = function () {\n\t            if (!(this._parent instanceof NgModelGroup) &&\n\t                this._parent instanceof AbstractFormGroupDirective) {\n\t                TemplateDrivenErrors.formGroupNameException();\n\t            }\n\t            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n\t                TemplateDrivenErrors.modelParentException();\n\t            }\n\t        };\n\t        NgModel.prototype._checkName = function () {\n\t            if (this.options && this.options.name)\n\t                this.name = this.options.name;\n\t            if (!this._isStandalone() && !this.name) {\n\t                TemplateDrivenErrors.missingNameException();\n\t            }\n\t        };\n\t        NgModel.prototype._updateValue = function (value) {\n\t            var _this = this;\n\t            resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n\t        };\n\t        NgModel.prototype._updateDisabled = function (changes) {\n\t            var _this = this;\n\t            var disabledValue = changes['isDisabled'].currentValue;\n\t            var isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n\t            resolvedPromise$1.then(function () {\n\t                if (isDisabled && !_this.control.disabled) {\n\t                    _this.control.disable();\n\t                }\n\t                else if (!isDisabled && _this.control.disabled) {\n\t                    _this.control.enable();\n\t                }\n\t            });\n\t        };\n\t        NgModel.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[ngModel]:not([formControlName]):not([formControl])',\n\t                        providers: [formControlBinding],\n\t                        exportAs: 'ngModel'\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgModel.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n\t        ];\n\t        NgModel.propDecorators = {\n\t            'name': [{ type: _angular_core.Input },],\n\t            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n\t            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n\t            'options': [{ type: _angular_core.Input, args: ['ngModelOptions',] },],\n\t            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n\t        };\n\t        return NgModel;\n\t    }(NgControl));\n\t\n\t    var ReactiveErrors = (function () {\n\t        function ReactiveErrors() {\n\t        }\n\t        ReactiveErrors.controlParentException = function () {\n\t            throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formControlName);\n\t        };\n\t        ReactiveErrors.ngModelGroupException = function () {\n\t            throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + Examples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + Examples.ngModelGroup);\n\t        };\n\t        ReactiveErrors.missingFormException = function () {\n\t            throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + Examples.formControlName);\n\t        };\n\t        ReactiveErrors.groupParentException = function () {\n\t            throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formGroupName);\n\t        };\n\t        ReactiveErrors.arrayParentException = function () {\n\t            throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + Examples.formArrayName);\n\t        };\n\t        ReactiveErrors.disabledAttrWarning = function () {\n\t            console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n\t        };\n\t        return ReactiveErrors;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$9 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var formControlBinding$1 = {\n\t        provide: NgControl,\n\t        useExisting: _angular_core.forwardRef(function () { return FormControlDirective; })\n\t    };\n\t    /**\n\t     * @whatItDoes Syncs a standalone {@link FormControl} instance to a form control element.\n\t     *\n\t     * In other words, this directive ensures that any values written to the {@link FormControl}\n\t     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n\t     * any values written to the DOM element through user input will be reflected in the\n\t     * {@link FormControl} instance (view -> model).\n\t     *\n\t     * @howToUse\n\t     *\n\t     * Use this directive if you'd like to create and manage a {@link FormControl} instance directly.\n\t     * Simply create a {@link FormControl}, save it to your component class, and pass it into the\n\t     * {@link FormControlDirective}.\n\t     *\n\t     * This directive is designed to be used as a standalone control.  Unlike {@link FormControlName},\n\t     * it does not require that your {@link FormControl} instance be part of any parent\n\t     * {@link FormGroup}, and it won't be registered to any {@link FormGroupDirective} that\n\t     * exists above it.\n\t     *\n\t     * **Get the value**: the `value` property is always synced and available on the\n\t     * {@link FormControl} instance. See a full list of available properties in\n\t     * {@link AbstractControl}.\n\t     *\n\t     * **Set the value**: You can pass in an initial value when instantiating the {@link FormControl},\n\t     * or you can set it programmatically later using {@link AbstractControl.setValue} or\n\t     * {@link AbstractControl.patchValue}.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n\t     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n\t     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n\t     * re-calculated.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * * **NgModule**: `ReactiveFormsModule`\n\t     *\n\t     *  @stable\n\t     */\n\t    var FormControlDirective = (function (_super) {\n\t        __extends$9(FormControlDirective, _super);\n\t        function FormControlDirective(validators, asyncValidators, valueAccessors) {\n\t            _super.call(this);\n\t            this.update = new EventEmitter();\n\t            this._rawValidators = validators || [];\n\t            this._rawAsyncValidators = asyncValidators || [];\n\t            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n\t        }\n\t        Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n\t            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormControlDirective.prototype.ngOnChanges = function (changes) {\n\t            if (this._isControlChanged(changes)) {\n\t                setUpControl(this.form, this);\n\t                if (this.control.disabled && this.valueAccessor.setDisabledState) {\n\t                    this.valueAccessor.setDisabledState(true);\n\t                }\n\t                this.form.updateValueAndValidity({ emitEvent: false });\n\t            }\n\t            if (isPropertyUpdated(changes, this.viewModel)) {\n\t                this.form.setValue(this.model);\n\t                this.viewModel = this.model;\n\t            }\n\t        };\n\t        Object.defineProperty(FormControlDirective.prototype, \"path\", {\n\t            get: function () { return []; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n\t            get: function () { return composeValidators(this._rawValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n\t            get: function () {\n\t                return composeAsyncValidators(this._rawAsyncValidators);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlDirective.prototype, \"control\", {\n\t            get: function () { return this.form; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n\t            this.viewModel = newValue;\n\t            this.update.emit(newValue);\n\t        };\n\t        FormControlDirective.prototype._isControlChanged = function (changes) {\n\t            return changes.hasOwnProperty('form');\n\t        };\n\t        FormControlDirective.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormControlDirective.ctorParameters = [\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n\t        ];\n\t        FormControlDirective.propDecorators = {\n\t            'form': [{ type: _angular_core.Input, args: ['formControl',] },],\n\t            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n\t            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n\t            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n\t        };\n\t        return FormControlDirective;\n\t    }(NgControl));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$11 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var formDirectiveProvider$1 = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return FormGroupDirective; })\n\t    };\n\t    /**\n\t     * @whatItDoes Binds an existing {@link FormGroup} to a DOM element.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive accepts an existing {@link FormGroup} instance. It will then use this\n\t     * {@link FormGroup} instance to match any child {@link FormControl}, {@link FormGroup},\n\t     * and {@link FormArray} instances to child {@link FormControlName}, {@link FormGroupName},\n\t     * and {@link FormArrayName} directives.\n\t     *\n\t     * **Set value**: You can set the form's initial value when instantiating the\n\t     * {@link FormGroup}, or you can set it programmatically later using the {@link FormGroup}'s\n\t     * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue} methods.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n\t     * to the {@link FormGroup}'s {@link AbstractControl.valueChanges} event.  You can also listen to\n\t     * its {@link AbstractControl.statusChanges} event to be notified when the validation status is\n\t     * re-calculated.\n\t     *\n\t     * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n\t     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n\t     * submission event.\n\t     *\n\t     * ### Example\n\t     *\n\t     * In this example, we create form controls for first name and last name.\n\t     *\n\t     * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n\t     *\n\t     * **npm package**: `@angular/forms`\n\t     *\n\t     * **NgModule**: {@link ReactiveFormsModule}\n\t     *\n\t     *  @stable\n\t     */\n\t    var FormGroupDirective = (function (_super) {\n\t        __extends$11(FormGroupDirective, _super);\n\t        function FormGroupDirective(_validators, _asyncValidators) {\n\t            _super.call(this);\n\t            this._validators = _validators;\n\t            this._asyncValidators = _asyncValidators;\n\t            this._submitted = false;\n\t            this.directives = [];\n\t            this.form = null;\n\t            this.ngSubmit = new EventEmitter();\n\t        }\n\t        FormGroupDirective.prototype.ngOnChanges = function (changes) {\n\t            this._checkFormPresent();\n\t            if (changes.hasOwnProperty('form')) {\n\t                this._updateValidators();\n\t                this._updateDomValue();\n\t                this._updateRegistrations();\n\t            }\n\t        };\n\t        Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n\t            get: function () { return this._submitted; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n\t            get: function () { return this.form; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n\t            get: function () { return []; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormGroupDirective.prototype.addControl = function (dir) {\n\t            var ctrl = this.form.get(dir.path);\n\t            setUpControl(ctrl, dir);\n\t            ctrl.updateValueAndValidity({ emitEvent: false });\n\t            this.directives.push(dir);\n\t            return ctrl;\n\t        };\n\t        FormGroupDirective.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n\t        FormGroupDirective.prototype.removeControl = function (dir) { ListWrapper.remove(this.directives, dir); };\n\t        FormGroupDirective.prototype.addFormGroup = function (dir) {\n\t            var ctrl = this.form.get(dir.path);\n\t            setUpFormContainer(ctrl, dir);\n\t            ctrl.updateValueAndValidity({ emitEvent: false });\n\t        };\n\t        FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n\t        FormGroupDirective.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n\t        FormGroupDirective.prototype.addFormArray = function (dir) {\n\t            var ctrl = this.form.get(dir.path);\n\t            setUpFormContainer(ctrl, dir);\n\t            ctrl.updateValueAndValidity({ emitEvent: false });\n\t        };\n\t        FormGroupDirective.prototype.removeFormArray = function (dir) { };\n\t        FormGroupDirective.prototype.getFormArray = function (dir) { return this.form.get(dir.path); };\n\t        FormGroupDirective.prototype.updateModel = function (dir, value) {\n\t            var ctrl = this.form.get(dir.path);\n\t            ctrl.setValue(value);\n\t        };\n\t        FormGroupDirective.prototype.onSubmit = function ($event) {\n\t            this._submitted = true;\n\t            this.ngSubmit.emit($event);\n\t            return false;\n\t        };\n\t        FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n\t        FormGroupDirective.prototype.resetForm = function (value) {\n\t            if (value === void 0) { value = undefined; }\n\t            this.form.reset(value);\n\t            this._submitted = false;\n\t        };\n\t        /** @internal */\n\t        FormGroupDirective.prototype._updateDomValue = function () {\n\t            var _this = this;\n\t            this.directives.forEach(function (dir) {\n\t                var newCtrl = _this.form.get(dir.path);\n\t                if (dir._control !== newCtrl) {\n\t                    cleanUpControl(dir._control, dir);\n\t                    if (newCtrl)\n\t                        setUpControl(newCtrl, dir);\n\t                    dir._control = newCtrl;\n\t                }\n\t            });\n\t            this.form._updateTreeValidity({ emitEvent: false });\n\t        };\n\t        FormGroupDirective.prototype._updateRegistrations = function () {\n\t            var _this = this;\n\t            this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n\t            if (this._oldForm)\n\t                this._oldForm._registerOnCollectionChange(function () { });\n\t            this._oldForm = this.form;\n\t        };\n\t        FormGroupDirective.prototype._updateValidators = function () {\n\t            var sync = composeValidators(this._validators);\n\t            this.form.validator = Validators.compose([this.form.validator, sync]);\n\t            var async = composeAsyncValidators(this._asyncValidators);\n\t            this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n\t        };\n\t        FormGroupDirective.prototype._checkFormPresent = function () {\n\t            if (!this.form) {\n\t                ReactiveErrors.missingFormException();\n\t            }\n\t        };\n\t        FormGroupDirective.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[formGroup]',\n\t                        providers: [formDirectiveProvider$1],\n\t                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n\t                        exportAs: 'ngForm'\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormGroupDirective.ctorParameters = [\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ];\n\t        FormGroupDirective.propDecorators = {\n\t            'form': [{ type: _angular_core.Input, args: ['formGroup',] },],\n\t            'ngSubmit': [{ type: _angular_core.Output },],\n\t        };\n\t        return FormGroupDirective;\n\t    }(ControlContainer));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$12 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var formGroupNameProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return FormGroupName; })\n\t    };\n\t    /**\n\t     * @whatItDoes Syncs a nested {@link FormGroup} to a DOM element.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive can only be used with a parent {@link FormGroupDirective} (selector:\n\t     * `[formGroup]`).\n\t     *\n\t     * It accepts the string name of the nested {@link FormGroup} you want to link, and\n\t     * will look for a {@link FormGroup} registered with that name in the parent\n\t     * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n\t     *\n\t     * Nested form groups can come in handy when you want to validate a sub-group of a\n\t     * form separately from the rest or when you'd like to group the values of certain\n\t     * controls into their own nested object.\n\t     *\n\t     * **Access the group**: You can access the associated {@link FormGroup} using the\n\t     * {@link AbstractControl.get} method. Ex: `this.form.get('name')`.\n\t     *\n\t     * You can also access individual controls within the group using dot syntax.\n\t     * Ex: `this.form.get('name.first')`\n\t     *\n\t     * **Get the value**: the `value` property is always synced and available on the\n\t     * {@link FormGroup}. See a full list of available properties in {@link AbstractControl}.\n\t     *\n\t     * **Set the value**: You can set an initial value for each child control when instantiating\n\t     * the {@link FormGroup}, or you can set it programmatically later using\n\t     * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the group, you can\n\t     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n\t     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n\t     * re-calculated.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * * **NgModule**: `ReactiveFormsModule`\n\t     *\n\t     * @stable\n\t     */\n\t    var FormGroupName = (function (_super) {\n\t        __extends$12(FormGroupName, _super);\n\t        function FormGroupName(parent, validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._parent = parent;\n\t            this._validators = validators;\n\t            this._asyncValidators = asyncValidators;\n\t        }\n\t        /** @internal */\n\t        FormGroupName.prototype._checkParentType = function () {\n\t            if (_hasInvalidParent(this._parent)) {\n\t                ReactiveErrors.groupParentException();\n\t            }\n\t        };\n\t        FormGroupName.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormGroupName.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ];\n\t        FormGroupName.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['formGroupName',] },],\n\t        };\n\t        return FormGroupName;\n\t    }(AbstractFormGroupDirective));\n\t    var formArrayNameProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return FormArrayName; })\n\t    };\n\t    /**\n\t     * @whatItDoes Syncs a nested {@link FormArray} to a DOM element.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n\t     * `[formGroup]`).\n\t     *\n\t     * It accepts the string name of the nested {@link FormArray} you want to link, and\n\t     * will look for a {@link FormArray} registered with that name in the parent\n\t     * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n\t     *\n\t     * Nested form arrays can come in handy when you have a group of form controls but\n\t     * you're not sure how many there will be. Form arrays allow you to create new\n\t     * form controls dynamically.\n\t     *\n\t     * **Access the array**: You can access the associated {@link FormArray} using the\n\t     * {@link AbstractControl.get} method on the parent {@link FormGroup}.\n\t     * Ex: `this.form.get('cities')`.\n\t     *\n\t     * **Get the value**: the `value` property is always synced and available on the\n\t     * {@link FormArray}. See a full list of available properties in {@link AbstractControl}.\n\t     *\n\t     * **Set the value**: You can set an initial value for each child control when instantiating\n\t     * the {@link FormArray}, or you can set the value programmatically later using the\n\t     * {@link FormArray}'s {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}\n\t     * methods.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the array, you can\n\t     * subscribe to the {@link FormArray}'s {@link AbstractControl.valueChanges} event.  You can also\n\t     * listen to its {@link AbstractControl.statusChanges} event to be notified when the validation\n\t     * status is re-calculated.\n\t     *\n\t     * **Add new controls**: You can add new controls to the {@link FormArray} dynamically by\n\t     * calling its {@link FormArray.push} method.\n\t     *  Ex: `this.form.get('cities').push(new FormControl());`\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * * **NgModule**: `ReactiveFormsModule`\n\t     *\n\t     * @stable\n\t     */\n\t    var FormArrayName = (function (_super) {\n\t        __extends$12(FormArrayName, _super);\n\t        function FormArrayName(parent, validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._parent = parent;\n\t            this._validators = validators;\n\t            this._asyncValidators = asyncValidators;\n\t        }\n\t        FormArrayName.prototype.ngOnInit = function () {\n\t            this._checkParentType();\n\t            this.formDirective.addFormArray(this);\n\t        };\n\t        FormArrayName.prototype.ngOnDestroy = function () {\n\t            if (this.formDirective) {\n\t                this.formDirective.removeFormArray(this);\n\t            }\n\t        };\n\t        Object.defineProperty(FormArrayName.prototype, \"control\", {\n\t            get: function () { return this.formDirective.getFormArray(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n\t            get: function () {\n\t                return this._parent ? this._parent.formDirective : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"path\", {\n\t            get: function () { return controlPath(this.name, this._parent); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"validator\", {\n\t            get: function () { return composeValidators(this._validators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n\t            get: function () { return composeAsyncValidators(this._asyncValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormArrayName.prototype._checkParentType = function () {\n\t            if (_hasInvalidParent(this._parent)) {\n\t                ReactiveErrors.arrayParentException();\n\t            }\n\t        };\n\t        FormArrayName.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormArrayName.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ];\n\t        FormArrayName.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['formArrayName',] },],\n\t        };\n\t        return FormArrayName;\n\t    }(ControlContainer));\n\t    function _hasInvalidParent(parent) {\n\t        return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n\t            !(parent instanceof FormArrayName);\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$10 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var controlNameBinding = {\n\t        provide: NgControl,\n\t        useExisting: _angular_core.forwardRef(function () { return FormControlName; })\n\t    };\n\t    /**\n\t     * @whatItDoes  Syncs a {@link FormControl} in an existing {@link FormGroup} to a form control\n\t     * element by name.\n\t     *\n\t     * In other words, this directive ensures that any values written to the {@link FormControl}\n\t     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n\t     * any values written to the DOM element through user input will be reflected in the\n\t     * {@link FormControl} instance (view -> model).\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n\t     * `[formGroup]`).\n\t     *\n\t     * It accepts the string name of the {@link FormControl} instance you want to\n\t     * link, and will look for a {@link FormControl} registered with that name in the\n\t     * closest {@link FormGroup} or {@link FormArray} above it.\n\t     *\n\t     * **Access the control**: You can access the {@link FormControl} associated with\n\t     * this directive by using the {@link AbstractControl.get} method.\n\t     * Ex: `this.form.get('first');`\n\t     *\n\t     * **Get value**: the `value` property is always synced and available on the {@link FormControl}.\n\t     * See a full list of available properties in {@link AbstractControl}.\n\t     *\n\t     *  **Set value**: You can set an initial value for the control when instantiating the\n\t     *  {@link FormControl}, or you can set it programmatically later using\n\t     *  {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n\t     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n\t     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n\t     * re-calculated.\n\t     *\n\t     * ### Example\n\t     *\n\t     * In this example, we create form controls for first name and last name.\n\t     *\n\t     * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n\t     *\n\t     * To see `formControlName` examples with different form control types, see:\n\t     *\n\t     * * Radio buttons: {@link RadioControlValueAccessor}\n\t     * * Selects: {@link SelectControlValueAccessor}\n\t     *\n\t     * **npm package**: `@angular/forms`\n\t     *\n\t     * **NgModule**: {@link ReactiveFormsModule}\n\t     *\n\t     *  @stable\n\t     */\n\t    var FormControlName = (function (_super) {\n\t        __extends$10(FormControlName, _super);\n\t        function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n\t            _super.call(this);\n\t            this._added = false;\n\t            this.update = new EventEmitter();\n\t            this._parent = parent;\n\t            this._rawValidators = validators || [];\n\t            this._rawAsyncValidators = asyncValidators || [];\n\t            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n\t        }\n\t        Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n\t            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormControlName.prototype.ngOnChanges = function (changes) {\n\t            if (!this._added)\n\t                this._setUpControl();\n\t            if (isPropertyUpdated(changes, this.viewModel)) {\n\t                this.viewModel = this.model;\n\t                this.formDirective.updateModel(this, this.model);\n\t            }\n\t        };\n\t        FormControlName.prototype.ngOnDestroy = function () {\n\t            if (this.formDirective) {\n\t                this.formDirective.removeControl(this);\n\t            }\n\t        };\n\t        FormControlName.prototype.viewToModelUpdate = function (newValue) {\n\t            this.viewModel = newValue;\n\t            this.update.emit(newValue);\n\t        };\n\t        Object.defineProperty(FormControlName.prototype, \"path\", {\n\t            get: function () { return controlPath(this.name, this._parent); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n\t            get: function () { return this._parent ? this._parent.formDirective : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"validator\", {\n\t            get: function () { return composeValidators(this._rawValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n\t            get: function () {\n\t                return composeAsyncValidators(this._rawAsyncValidators);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"control\", {\n\t            get: function () { return this._control; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormControlName.prototype._checkParentType = function () {\n\t            if (!(this._parent instanceof FormGroupName) &&\n\t                this._parent instanceof AbstractFormGroupDirective) {\n\t                ReactiveErrors.ngModelGroupException();\n\t            }\n\t            else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n\t                !(this._parent instanceof FormArrayName)) {\n\t                ReactiveErrors.controlParentException();\n\t            }\n\t        };\n\t        FormControlName.prototype._setUpControl = function () {\n\t            this._checkParentType();\n\t            this._control = this.formDirective.addControl(this);\n\t            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n\t                this.valueAccessor.setDisabledState(true);\n\t            }\n\t            this._added = true;\n\t        };\n\t        FormControlName.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormControlName.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n\t        ];\n\t        FormControlName.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['formControlName',] },],\n\t            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n\t            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n\t            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n\t        };\n\t        return FormControlName;\n\t    }(NgControl));\n\t\n\t    var REQUIRED_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return RequiredValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * A Directive that adds the `required` validator to any controls marked with the\n\t     * `required` attribute, via the {@link NG_VALIDATORS} binding.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * <input name=\"fullName\" ngModel required>\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var RequiredValidator = (function () {\n\t        function RequiredValidator() {\n\t        }\n\t        Object.defineProperty(RequiredValidator.prototype, \"required\", {\n\t            get: function () { return this._required; },\n\t            set: function (value) {\n\t                this._required = value != null && value !== false && \"\" + value !== 'false';\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        RequiredValidator.prototype.validate = function (c) {\n\t            return this.required ? Validators.required(c) : null;\n\t        };\n\t        RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        RequiredValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[required][formControlName],[required][formControl],[required][ngModel]',\n\t                        providers: [REQUIRED_VALIDATOR],\n\t                        host: { '[attr.required]': 'required ? \"\" : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RequiredValidator.ctorParameters = [];\n\t        RequiredValidator.propDecorators = {\n\t            'required': [{ type: _angular_core.Input },],\n\t        };\n\t        return RequiredValidator;\n\t    }());\n\t    /**\n\t     * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n\t     *\n\t     * ## Example:\n\t     *\n\t     * {@example common/forms/ts/validators/validators.ts region='min'}\n\t     */\n\t    var MIN_LENGTH_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return MinLengthValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * A directive which installs the {@link MinLengthValidator} for any `formControlName`,\n\t     * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n\t     *\n\t     * @stable\n\t     */\n\t    var MinLengthValidator = (function () {\n\t        function MinLengthValidator() {\n\t        }\n\t        MinLengthValidator.prototype.ngOnChanges = function (changes) {\n\t            if ('minlength' in changes) {\n\t                this._createValidator();\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            }\n\t        };\n\t        MinLengthValidator.prototype.validate = function (c) {\n\t            return this.minlength == null ? null : this._validator(c);\n\t        };\n\t        MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        MinLengthValidator.prototype._createValidator = function () {\n\t            this._validator = Validators.minLength(parseInt(this.minlength, 10));\n\t        };\n\t        MinLengthValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n\t                        providers: [MIN_LENGTH_VALIDATOR],\n\t                        host: { '[attr.minlength]': 'minlength ? minlength : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        MinLengthValidator.ctorParameters = [];\n\t        MinLengthValidator.propDecorators = {\n\t            'minlength': [{ type: _angular_core.Input },],\n\t        };\n\t        return MinLengthValidator;\n\t    }());\n\t    /**\n\t     * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n\t     *\n\t     * ## Example:\n\t     *\n\t     * {@example common/forms/ts/validators/validators.ts region='max'}\n\t     */\n\t    var MAX_LENGTH_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return MaxLengthValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * A directive which installs the {@link MaxLengthValidator} for any `formControlName,\n\t     * `formControl`,\n\t     * or control with `ngModel` that also has a `maxlength` attribute.\n\t     *\n\t     * @stable\n\t     */\n\t    var MaxLengthValidator = (function () {\n\t        function MaxLengthValidator() {\n\t        }\n\t        MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n\t            if ('maxlength' in changes) {\n\t                this._createValidator();\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            }\n\t        };\n\t        MaxLengthValidator.prototype.validate = function (c) {\n\t            return this.maxlength != null ? this._validator(c) : null;\n\t        };\n\t        MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        MaxLengthValidator.prototype._createValidator = function () {\n\t            this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n\t        };\n\t        MaxLengthValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n\t                        providers: [MAX_LENGTH_VALIDATOR],\n\t                        host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        MaxLengthValidator.ctorParameters = [];\n\t        MaxLengthValidator.propDecorators = {\n\t            'maxlength': [{ type: _angular_core.Input },],\n\t        };\n\t        return MaxLengthValidator;\n\t    }());\n\t    var PATTERN_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return PatternValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * A Directive that adds the `pattern` validator to any controls marked with the\n\t     * `pattern` attribute, via the {@link NG_VALIDATORS} binding. Uses attribute value\n\t     * as the regex to validate Control value against.  Follows pattern attribute\n\t     * semantics; i.e. regex must match entire Control value.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n\t     * ```\n\t     * @stable\n\t     */\n\t    var PatternValidator = (function () {\n\t        function PatternValidator() {\n\t        }\n\t        PatternValidator.prototype.ngOnChanges = function (changes) {\n\t            if ('pattern' in changes) {\n\t                this._createValidator();\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            }\n\t        };\n\t        PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n\t        PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n\t        PatternValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n\t                        providers: [PATTERN_VALIDATOR],\n\t                        host: { '[attr.pattern]': 'pattern ? pattern : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        PatternValidator.ctorParameters = [];\n\t        PatternValidator.propDecorators = {\n\t            'pattern': [{ type: _angular_core.Input },],\n\t        };\n\t        return PatternValidator;\n\t    }());\n\t\n\t    /**\n\t     * @whatItDoes Creates an {@link AbstractControl} from a user-specified configuration.\n\t     *\n\t     * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n\t     * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n\t     * forms.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * To use, inject `FormBuilder` into your component class. You can then call its methods\n\t     * directly.\n\t     *\n\t     * {@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n\t     *\n\t     *  * **npm package**: `@angular/forms`\n\t     *\n\t     *  * **NgModule**: {@link ReactiveFormsModule}\n\t     *\n\t     * @stable\n\t     */\n\t    var FormBuilder = (function () {\n\t        function FormBuilder() {\n\t        }\n\t        /**\n\t         * Construct a new {@link FormGroup} with the given map of configuration.\n\t         * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n\t         *\n\t         * See the {@link FormGroup} constructor for more details.\n\t         */\n\t        FormBuilder.prototype.group = function (controlsConfig, extra) {\n\t            if (extra === void 0) { extra = null; }\n\t            var controls = this._reduceControls(controlsConfig);\n\t            var validator = isPresent(extra) ? extra['validator'] : null;\n\t            var asyncValidator = isPresent(extra) ? extra['asyncValidator'] : null;\n\t            return new FormGroup(controls, validator, asyncValidator);\n\t        };\n\t        /**\n\t         * Construct a new {@link FormControl} with the given `formState`,`validator`, and\n\t         * `asyncValidator`.\n\t         *\n\t         * `formState` can either be a standalone value for the form control or an object\n\t         * that contains both a value and a disabled status.\n\t         *\n\t         */\n\t        FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            return new FormControl(formState, validator, asyncValidator);\n\t        };\n\t        /**\n\t         * Construct a {@link FormArray} from the given `controlsConfig` array of\n\t         * configuration, with the given optional `validator` and `asyncValidator`.\n\t         */\n\t        FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n\t            var _this = this;\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            var controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n\t            return new FormArray(controls, validator, asyncValidator);\n\t        };\n\t        /** @internal */\n\t        FormBuilder.prototype._reduceControls = function (controlsConfig) {\n\t            var _this = this;\n\t            var controls = {};\n\t            Object.keys(controlsConfig).forEach(function (controlName) {\n\t                controls[controlName] = _this._createControl(controlsConfig[controlName]);\n\t            });\n\t            return controls;\n\t        };\n\t        /** @internal */\n\t        FormBuilder.prototype._createControl = function (controlConfig) {\n\t            if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n\t                controlConfig instanceof FormArray) {\n\t                return controlConfig;\n\t            }\n\t            else if (Array.isArray(controlConfig)) {\n\t                var value = controlConfig[0];\n\t                var validator = controlConfig.length > 1 ? controlConfig[1] : null;\n\t                var asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n\t                return this.control(value, validator, asyncValidator);\n\t            }\n\t            else {\n\t                return this.control(controlConfig);\n\t            }\n\t        };\n\t        FormBuilder.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        FormBuilder.ctorParameters = [];\n\t        return FormBuilder;\n\t    }());\n\t\n\t    var SHARED_FORM_DIRECTIVES = [\n\t        NgSelectOption, NgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor,\n\t        RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor,\n\t        SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus,\n\t        NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator\n\t    ];\n\t    var TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\n\t    var REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n\t    /**\n\t     * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n\t     */\n\t    var InternalFormsSharedModule = (function () {\n\t        function InternalFormsSharedModule() {\n\t        }\n\t        InternalFormsSharedModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: SHARED_FORM_DIRECTIVES,\n\t                        exports: SHARED_FORM_DIRECTIVES,\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        InternalFormsSharedModule.ctorParameters = [];\n\t        return InternalFormsSharedModule;\n\t    }());\n\t\n\t    /**\n\t     * The ng module for forms.\n\t     * @stable\n\t     */\n\t    var FormsModule = (function () {\n\t        function FormsModule() {\n\t        }\n\t        FormsModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n\t                        providers: [RadioControlRegistry],\n\t                        exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormsModule.ctorParameters = [];\n\t        return FormsModule;\n\t    }());\n\t    /**\n\t     * The ng module for reactive forms.\n\t     * @stable\n\t     */\n\t    var ReactiveFormsModule = (function () {\n\t        function ReactiveFormsModule() {\n\t        }\n\t        ReactiveFormsModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n\t                        providers: [FormBuilder, RadioControlRegistry],\n\t                        exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        ReactiveFormsModule.ctorParameters = [];\n\t        return ReactiveFormsModule;\n\t    }());\n\t\n\t    exports.AbstractControlDirective = AbstractControlDirective;\n\t    exports.AbstractFormGroupDirective = AbstractFormGroupDirective;\n\t    exports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;\n\t    exports.ControlContainer = ControlContainer;\n\t    exports.NG_VALUE_ACCESSOR = NG_VALUE_ACCESSOR;\n\t    exports.DefaultValueAccessor = DefaultValueAccessor;\n\t    exports.NgControl = NgControl;\n\t    exports.NgControlStatus = NgControlStatus;\n\t    exports.NgControlStatusGroup = NgControlStatusGroup;\n\t    exports.NgForm = NgForm;\n\t    exports.NgModel = NgModel;\n\t    exports.NgModelGroup = NgModelGroup;\n\t    exports.RadioControlValueAccessor = RadioControlValueAccessor;\n\t    exports.FormControlDirective = FormControlDirective;\n\t    exports.FormControlName = FormControlName;\n\t    exports.FormGroupDirective = FormGroupDirective;\n\t    exports.FormArrayName = FormArrayName;\n\t    exports.FormGroupName = FormGroupName;\n\t    exports.NgSelectOption = NgSelectOption;\n\t    exports.SelectControlValueAccessor = SelectControlValueAccessor;\n\t    exports.SelectMultipleControlValueAccessor = SelectMultipleControlValueAccessor;\n\t    exports.MaxLengthValidator = MaxLengthValidator;\n\t    exports.MinLengthValidator = MinLengthValidator;\n\t    exports.PatternValidator = PatternValidator;\n\t    exports.RequiredValidator = RequiredValidator;\n\t    exports.FormBuilder = FormBuilder;\n\t    exports.AbstractControl = AbstractControl;\n\t    exports.FormArray = FormArray;\n\t    exports.FormControl = FormControl;\n\t    exports.FormGroup = FormGroup;\n\t    exports.NG_ASYNC_VALIDATORS = NG_ASYNC_VALIDATORS;\n\t    exports.NG_VALIDATORS = NG_VALIDATORS;\n\t    exports.Validators = Validators;\n\t    exports.FormsModule = FormsModule;\n\t    exports.ReactiveFormsModule = ReactiveFormsModule;\n\t\n\t}));\n\n/***/ },\n\n/***/ 59:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(60));\r\n\n\n/***/ },\n\n/***/ 60:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar common_1 = __webpack_require__(22);\r\n\tvar paginate_pipe_1 = __webpack_require__(61);\r\n\tvar pagination_service_1 = __webpack_require__(62);\r\n\tvar pagination_controls_component_1 = __webpack_require__(63);\r\n\tvar pagination_controls_directive_1 = __webpack_require__(65);\r\n\tvar pagination_service_2 = __webpack_require__(62);\r\n\texports.PaginationService = pagination_service_2.PaginationService;\r\n\tvar pagination_controls_component_2 = __webpack_require__(63);\r\n\texports.PaginationControlsComponent = pagination_controls_component_2.PaginationControlsComponent;\r\n\tvar pagination_controls_directive_2 = __webpack_require__(65);\r\n\texports.PaginationControlsDirective = pagination_controls_directive_2.PaginationControlsDirective;\r\n\tvar paginate_pipe_2 = __webpack_require__(61);\r\n\texports.PaginatePipe = paginate_pipe_2.PaginatePipe;\r\n\tvar Ng2PaginationModule = (function () {\r\n\t    function Ng2PaginationModule() {\r\n\t    }\r\n\t    Ng2PaginationModule.decorators = [\r\n\t        { type: core_1.NgModule, args: [{\r\n\t                    imports: [common_1.CommonModule],\r\n\t                    declarations: [\r\n\t                        paginate_pipe_1.PaginatePipe,\r\n\t                        pagination_controls_component_1.PaginationControlsComponent,\r\n\t                        pagination_controls_directive_1.PaginationControlsDirective\r\n\t                    ],\r\n\t                    providers: [pagination_service_1.PaginationService],\r\n\t                    exports: [paginate_pipe_1.PaginatePipe, pagination_controls_component_1.PaginationControlsComponent, pagination_controls_directive_1.PaginationControlsDirective]\r\n\t                },] },\r\n\t    ];\r\n\t    /** @nocollapse */\r\n\t    Ng2PaginationModule.ctorParameters = [];\r\n\t    return Ng2PaginationModule;\r\n\t}());\r\n\texports.Ng2PaginationModule = Ng2PaginationModule;\r\n\n\n/***/ },\n\n/***/ 61:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar pagination_service_1 = __webpack_require__(62);\r\n\tvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\n\tvar PaginatePipe = (function () {\r\n\t    function PaginatePipe(service) {\r\n\t        this.service = service;\r\n\t        // store the values from the last time the pipe was invoked\r\n\t        this.state = {};\r\n\t    }\r\n\t    PaginatePipe.prototype.transform = function (collection, args) {\r\n\t        // When an observable is passed through the AsyncPipe, it will output\r\n\t        // `null` until the subscription resolves. In this case, we want to\r\n\t        // use the cached data from the `state` object to prevent the NgFor\r\n\t        // from flashing empty until the real values arrive.\r\n\t        if (args instanceof Array) {\r\n\t            // compatible with angular2 before beta16\r\n\t            args = args[0];\r\n\t        }\r\n\t        if (!(collection instanceof Array)) {\r\n\t            var _id = args.id || this.service.defaultId;\r\n\t            if (this.state[_id]) {\r\n\t                return this.state[_id].slice;\r\n\t            }\r\n\t            else {\r\n\t                return collection;\r\n\t            }\r\n\t        }\r\n\t        var serverSideMode = args.totalItems !== undefined;\r\n\t        var instance = this.createInstance(collection, args);\r\n\t        var id = instance.id;\r\n\t        var start, end;\r\n\t        var perPage = instance.itemsPerPage;\r\n\t        this.service.register(instance);\r\n\t        if (!serverSideMode && collection instanceof Array) {\r\n\t            perPage = +perPage || LARGE_NUMBER;\r\n\t            start = (instance.currentPage - 1) * perPage;\r\n\t            end = start + perPage;\r\n\t            var isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n\t            if (isIdentical) {\r\n\t                return this.state[id].slice;\r\n\t            }\r\n\t            else {\r\n\t                var slice = collection.slice(start, end);\r\n\t                this.saveState(id, collection, slice, start, end);\r\n\t                this.service.change.emit(id);\r\n\t                return slice;\r\n\t            }\r\n\t        }\r\n\t        // save the state for server-side collection to avoid null\r\n\t        // flash as new data loads.\r\n\t        this.saveState(id, collection, collection, start, end);\r\n\t        return collection;\r\n\t    };\r\n\t    /**\r\n\t     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n\t     */\r\n\t    PaginatePipe.prototype.createInstance = function (collection, args) {\r\n\t        var config = args;\r\n\t        this.checkConfig(config);\r\n\t        return {\r\n\t            id: config.id || this.service.defaultId(),\r\n\t            itemsPerPage: config.itemsPerPage || 0,\r\n\t            currentPage: config.currentPage || 1,\r\n\t            totalItems: config.totalItems || collection.length\r\n\t        };\r\n\t    };\r\n\t    /**\r\n\t     * Ensure the argument passed to the filter contains the required properties.\r\n\t     */\r\n\t    PaginatePipe.prototype.checkConfig = function (config) {\r\n\t        var required = ['itemsPerPage', 'currentPage'];\r\n\t        var missing = required.filter(function (prop) { return !config.hasOwnProperty(prop); });\r\n\t        if (0 < missing.length) {\r\n\t            throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n\t     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n\t     * need to check that the collection, start and end points are all identical, and if so, return the\r\n\t     * last sliced array.\r\n\t     */\r\n\t    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\r\n\t        this.state[id] = {\r\n\t            collection: collection,\r\n\t            size: collection.length,\r\n\t            slice: slice,\r\n\t            start: start,\r\n\t            end: end\r\n\t        };\r\n\t    };\r\n\t    /**\r\n\t     * For a given id, returns true if the collection, size, start and end values are identical.\r\n\t     */\r\n\t    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\r\n\t        var state = this.state[id];\r\n\t        if (!state) {\r\n\t            return false;\r\n\t        }\r\n\t        var isMetaDataIdentical = state.size === collection.length &&\r\n\t            state.start === start &&\r\n\t            state.end === end;\r\n\t        if (!isMetaDataIdentical) {\r\n\t            return false;\r\n\t        }\r\n\t        return state.slice.every(function (element, index) { return element === collection[start + index]; });\r\n\t    };\r\n\t    PaginatePipe.decorators = [\r\n\t        { type: core_1.Pipe, args: [{\r\n\t                    name: 'paginate',\r\n\t                    pure: false\r\n\t                },] },\r\n\t    ];\r\n\t    /** @nocollapse */\r\n\t    PaginatePipe.ctorParameters = [\r\n\t        { type: pagination_service_1.PaginationService, },\r\n\t    ];\r\n\t    return PaginatePipe;\r\n\t}());\r\n\texports.PaginatePipe = PaginatePipe;\r\n\n\n/***/ },\n\n/***/ 62:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar PaginationService = (function () {\r\n\t    function PaginationService() {\r\n\t        this.change = new core_1.EventEmitter();\r\n\t        this.instances = {};\r\n\t        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n\t    }\r\n\t    PaginationService.prototype.defaultId = function () { return this.DEFAULT_ID; };\r\n\t    PaginationService.prototype.register = function (instance) {\r\n\t        if (!instance.id) {\r\n\t            instance.id = this.DEFAULT_ID;\r\n\t        }\r\n\t        if (!this.instances[instance.id]) {\r\n\t            this.instances[instance.id] = instance;\r\n\t            this.change.emit(instance.id);\r\n\t        }\r\n\t        else {\r\n\t            var changed = this.updateInstance(instance);\r\n\t            if (changed) {\r\n\t                this.change.emit(instance.id);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Check each property of the instance and update any that have changed. Return\r\n\t     * true if any changes were made, else return false.\r\n\t     */\r\n\t    PaginationService.prototype.updateInstance = function (instance) {\r\n\t        var changed = false;\r\n\t        for (var prop in this.instances[instance.id]) {\r\n\t            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n\t                this.instances[instance.id][prop] = instance[prop];\r\n\t                changed = true;\r\n\t            }\r\n\t        }\r\n\t        return changed;\r\n\t    };\r\n\t    /**\r\n\t     * Returns the current page number.\r\n\t     */\r\n\t    PaginationService.prototype.getCurrentPage = function (id) {\r\n\t        if (this.instances[id]) {\r\n\t            return this.instances[id].currentPage;\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Sets the current page number.\r\n\t     */\r\n\t    PaginationService.prototype.setCurrentPage = function (id, page) {\r\n\t        if (this.instances[id]) {\r\n\t            var instance = this.instances[id];\r\n\t            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n\t            if (page <= maxPage && 1 <= page) {\r\n\t                this.instances[id].currentPage = page;\r\n\t                this.change.emit(id);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Sets the value of instance.totalItems\r\n\t     */\r\n\t    PaginationService.prototype.setTotalItems = function (id, totalItems) {\r\n\t        if (this.instances[id] && 0 <= totalItems) {\r\n\t            this.instances[id].totalItems = totalItems;\r\n\t            this.change.emit(id);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Sets the value of instance.itemsPerPage.\r\n\t     */\r\n\t    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\r\n\t        if (this.instances[id]) {\r\n\t            this.instances[id].itemsPerPage = itemsPerPage;\r\n\t            this.change.emit(id);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Returns a clone of the pagination instance object matching the id. If no\r\n\t     * id specified, returns the instance corresponding to the default id.\r\n\t     */\r\n\t    PaginationService.prototype.getInstance = function (id) {\r\n\t        if (id === void 0) { id = this.DEFAULT_ID; }\r\n\t        if (this.instances[id]) {\r\n\t            return this.clone(this.instances[id]);\r\n\t        }\r\n\t        return {};\r\n\t    };\r\n\t    /**\r\n\t     * Perform a shallow clone of an object.\r\n\t     */\r\n\t    PaginationService.prototype.clone = function (obj) {\r\n\t        var target = {};\r\n\t        for (var i in obj) {\r\n\t            if (obj.hasOwnProperty(i)) {\r\n\t                target[i] = obj[i];\r\n\t            }\r\n\t        }\r\n\t        return target;\r\n\t    };\r\n\t    return PaginationService;\r\n\t}());\r\n\texports.PaginationService = PaginationService;\r\n\n\n/***/ },\n\n/***/ 63:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar template_1 = __webpack_require__(64);\r\n\t/**\r\n\t * The default pagination controls component. Actually just a default implementation of a custom template.\r\n\t */\r\n\tvar PaginationControlsComponent = (function () {\r\n\t    function PaginationControlsComponent() {\r\n\t        this.maxSize = 7;\r\n\t        this.pageChange = new core_1.EventEmitter();\r\n\t        this._directionLinks = true;\r\n\t        this._autoHide = false;\r\n\t    }\r\n\t    Object.defineProperty(PaginationControlsComponent.prototype, \"directionLinks\", {\r\n\t        get: function () {\r\n\t            return this._directionLinks;\r\n\t        },\r\n\t        set: function (value) {\r\n\t            this._directionLinks = !!value && value !== 'false';\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(PaginationControlsComponent.prototype, \"autoHide\", {\r\n\t        get: function () {\r\n\t            return this._autoHide;\r\n\t        },\r\n\t        set: function (value) {\r\n\t            this._autoHide = !!value && value !== 'false';\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    PaginationControlsComponent.decorators = [\r\n\t        { type: core_1.Component, args: [{\r\n\t                    selector: 'pagination-controls',\r\n\t                    template: template_1.DEFAULT_TEMPLATE,\r\n\t                    styles: [template_1.DEFAULT_STYLES],\r\n\t                    changeDetection: core_1.ChangeDetectionStrategy.OnPush\r\n\t                },] },\r\n\t    ];\r\n\t    /** @nocollapse */\r\n\t    PaginationControlsComponent.ctorParameters = [];\r\n\t    PaginationControlsComponent.propDecorators = {\r\n\t        'id': [{ type: core_1.Input },],\r\n\t        'maxSize': [{ type: core_1.Input },],\r\n\t        'directionLinks': [{ type: core_1.Input },],\r\n\t        'autoHide': [{ type: core_1.Input },],\r\n\t        'pageChange': [{ type: core_1.Output },],\r\n\t    };\r\n\t    return PaginationControlsComponent;\r\n\t}());\r\n\texports.PaginationControlsComponent = PaginationControlsComponent;\r\n\n\n/***/ },\n\n/***/ 64:\n/***/ function(module, exports) {\n\n\t/**\r\n\t * The default template and styles for the pagination links are borrowed directly\r\n\t * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n\t */\r\n\t\"use strict\";\r\n\texports.DEFAULT_TEMPLATE = \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\">\\n    <ul class=\\\"ng2-pagination\\\" \\n        role=\\\"navigation\\\" \\n        aria-label=\\\"Pagination\\\" \\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a *ngIf=\\\"1 < p.getCurrent()\\\" (click)=\\\"p.previous()\\\" aria-label=\\\"Next page\\\">\\n                Previous <span class=\\\"show-for-sr\\\">page</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\">Previous <span class=\\\"show-for-sr\\\">page</span></span>\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" *ngFor=\\\"let page of p.pages\\\">\\n            <a (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">Page</span>\\n                <span>{{ page.label }}</span>\\n            </a>\\n            <div *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">You're on page</span>\\n                <span>{{ page.label }}</span> \\n            </div>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a *ngIf=\\\"!p.isLastPage()\\\" (click)=\\\"p.next()\\\" aria-label=\\\"Next page\\\">\\n                Next <span class=\\\"show-for-sr\\\">page</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\">Next <span class=\\\"show-for-sr\\\">page</span></span>\\n        </li>\\n\\n    </ul>\\n    </pagination-template>\\n    \";\r\n\texports.DEFAULT_STYLES = \"\\n.ng2-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ng2-pagination::before, .ng2-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ng2-pagination::after {\\n    clear: both; }\\n  .ng2-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    font-size: 0.875rem;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ng2-pagination li {\\n    display: inline-block; }\\n  .ng2-pagination a,\\n  .ng2-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ng2-pagination a:hover,\\n    .ng2-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ng2-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ng2-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ng2-pagination .disabled:hover {\\n      background: transparent; }\\n  .ng2-pagination .ellipsis::after {\\n    content: '\\u2026';\\n    padding: 0.1875rem 0.625rem;\\n    color: #0a0a0a; }\\n\\n.ng2-pagination .pagination-previous a::before,\\n.ng2-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ng2-pagination .pagination-next a::after,\\n.ng2-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ng2-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\";\r\n\n\n/***/ },\n\n/***/ 65:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar pagination_service_1 = __webpack_require__(62);\r\n\t/**\r\n\t * This directive is what powers all pagination controls components, including the default one.\r\n\t * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n\t * with the pagination controls.\r\n\t */\r\n\tvar PaginationControlsDirective = (function () {\r\n\t    function PaginationControlsDirective(service, changeDetectorRef) {\r\n\t        var _this = this;\r\n\t        this.service = service;\r\n\t        this.changeDetectorRef = changeDetectorRef;\r\n\t        this.maxSize = 7;\r\n\t        this.pageChange = new core_1.EventEmitter();\r\n\t        this.pages = [];\r\n\t        this.changeSub = this.service.change\r\n\t            .subscribe(function (id) {\r\n\t            if (_this.id === id) {\r\n\t                _this.updatePageLinks();\r\n\t                _this.changeDetectorRef.markForCheck();\r\n\t                _this.changeDetectorRef.detectChanges();\r\n\t            }\r\n\t        });\r\n\t    }\r\n\t    PaginationControlsDirective.prototype.ngOnInit = function () {\r\n\t        if (this.id === undefined) {\r\n\t            this.id = this.service.defaultId();\r\n\t        }\r\n\t        this.updatePageLinks();\r\n\t    };\r\n\t    PaginationControlsDirective.prototype.ngOnChanges = function (changes) {\r\n\t        this.updatePageLinks();\r\n\t    };\r\n\t    PaginationControlsDirective.prototype.ngOnDestroy = function () {\r\n\t        this.changeSub.unsubscribe();\r\n\t    };\r\n\t    /**\r\n\t     * Go to the previous page\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.previous = function () {\r\n\t        this.setCurrent(this.getCurrent() - 1);\r\n\t    };\r\n\t    /**\r\n\t     * Go to the next page\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.next = function () {\r\n\t        this.setCurrent(this.getCurrent() + 1);\r\n\t    };\r\n\t    /**\r\n\t     * Returns true if current page is first page\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.isFirstPage = function () {\r\n\t        return this.getCurrent() === 1;\r\n\t    };\r\n\t    /**\r\n\t     * Returns true if current page is last page\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.isLastPage = function () {\r\n\t        return this.getLastPage() === this.getCurrent();\r\n\t    };\r\n\t    /**\r\n\t     * Set the current page number.\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.setCurrent = function (page) {\r\n\t        this.pageChange.emit(page);\r\n\t    };\r\n\t    /**\r\n\t     * Get the current page number.\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.getCurrent = function () {\r\n\t        return this.service.getCurrentPage(this.id);\r\n\t    };\r\n\t    /**\r\n\t     * Returns the last page number\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.getLastPage = function () {\r\n\t        var inst = this.service.getInstance(this.id);\r\n\t        if (inst.totalItems < 1) {\r\n\t            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n\t            // but it makes sense to consider a single, empty page as the last page.\r\n\t            return 1;\r\n\t        }\r\n\t        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n\t    };\r\n\t    /**\r\n\t     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n\t     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n\t     * input values changes.\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.updatePageLinks = function () {\r\n\t        var _this = this;\r\n\t        var inst = this.service.getInstance(this.id);\r\n\t        var correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n\t        if (correctedCurrentPage !== inst.currentPage) {\r\n\t            setTimeout(function () {\r\n\t                _this.setCurrent(correctedCurrentPage);\r\n\t                _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);\r\n\t            });\r\n\t        }\r\n\t        else {\r\n\t            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n\t     * If not, return a correct value for currentPage, or the current value if OK.\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {\r\n\t        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n\t        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n\t            return totalPages;\r\n\t        }\r\n\t        else if (instance.currentPage < 1) {\r\n\t            return 1;\r\n\t        }\r\n\t        return instance.currentPage;\r\n\t    };\r\n\t    /**\r\n\t     * Returns an array of Page objects to use in the pagination controls.\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\r\n\t        // paginationRange could be a string if passed from attribute, so cast to number.\r\n\t        paginationRange = +paginationRange;\r\n\t        var pages = [];\r\n\t        var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n\t        var halfWay = Math.ceil(paginationRange / 2);\r\n\t        var isStart = currentPage <= halfWay;\r\n\t        var isEnd = totalPages - halfWay < currentPage;\r\n\t        var isMiddle = !isStart && !isEnd;\r\n\t        var ellipsesNeeded = paginationRange < totalPages;\r\n\t        var i = 1;\r\n\t        while (i <= totalPages && i <= paginationRange) {\r\n\t            var label = void 0;\r\n\t            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n\t            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n\t            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n\t            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n\t                label = '...';\r\n\t            }\r\n\t            else {\r\n\t                label = pageNumber;\r\n\t            }\r\n\t            pages.push({\r\n\t                label: label,\r\n\t                value: pageNumber\r\n\t            });\r\n\t            i++;\r\n\t        }\r\n\t        return pages;\r\n\t    };\r\n\t    /**\r\n\t     * Given the position in the sequence of pagination links [i],\r\n\t     * figure out what page number corresponds to that position.\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\r\n\t        var halfWay = Math.ceil(paginationRange / 2);\r\n\t        if (i === paginationRange) {\r\n\t            return totalPages;\r\n\t        }\r\n\t        else if (i === 1) {\r\n\t            return i;\r\n\t        }\r\n\t        else if (paginationRange < totalPages) {\r\n\t            if (totalPages - halfWay < currentPage) {\r\n\t                return totalPages - paginationRange + i;\r\n\t            }\r\n\t            else if (halfWay < currentPage) {\r\n\t                return currentPage - halfWay + i;\r\n\t            }\r\n\t            else {\r\n\t                return i;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            return i;\r\n\t        }\r\n\t    };\r\n\t    PaginationControlsDirective.decorators = [\r\n\t        { type: core_1.Directive, args: [{\r\n\t                    selector: 'pagination-template,[pagination-template]',\r\n\t                    exportAs: 'paginationApi'\r\n\t                },] },\r\n\t    ];\r\n\t    /** @nocollapse */\r\n\t    PaginationControlsDirective.ctorParameters = [\r\n\t        { type: pagination_service_1.PaginationService, },\r\n\t        { type: core_1.ChangeDetectorRef, },\r\n\t    ];\r\n\t    PaginationControlsDirective.propDecorators = {\r\n\t        'id': [{ type: core_1.Input },],\r\n\t        'maxSize': [{ type: core_1.Input },],\r\n\t        'pageChange': [{ type: core_1.Output },],\r\n\t    };\r\n\t    return PaginationControlsDirective;\r\n\t}());\r\n\texports.PaginationControlsDirective = PaginationControlsDirective;\r\n\n\n/***/ },\n\n/***/ 66:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(3), __webpack_require__(4), __webpack_require__(21), __webpack_require__(56), __webpack_require__(5), __webpack_require__(22), __webpack_require__(58), __webpack_require__(67), __webpack_require__(70), __webpack_require__(71), __webpack_require__(72), __webpack_require__(73), __webpack_require__(75), __webpack_require__(80), __webpack_require__(82), __webpack_require__(83)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/Subject', '@angular/platform-browser', '@angular/forms', 'rxjs/Observable', '@angular/common', '@angular/http', 'rxjs/add/observable/forkJoin', 'rxjs/add/observable/of', 'rxjs/add/operator/map', 'rxjs/add/operator/filter', 'rxjs/add/operator/do', 'rxjs/add/operator/share', 'rxjs/add/operator/finally', 'rxjs/add/operator/catch', 'rxjs/add/operator/first'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}),global.ng.core,global.Rx,global.ng.platformBrowser,global.ng.forms,global.Rx,global.ng.common,global.ng.http,global.Rx.Observable,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype));\n\t}(this, (function (exports,_angular_core,rxjs_Subject,_angular_platformBrowser,_angular_forms,rxjs_Observable,_angular_common,_angular_http,rxjs_add_observable_forkJoin,rxjs_add_observable_of,rxjs_add_operator_map,rxjs_add_operator_filter,rxjs_add_operator_do,rxjs_add_operator_share,rxjs_add_operator_finally,rxjs_add_operator_catch,rxjs_add_operator_first) { 'use strict';\n\t\n\tvar __decorate$1 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$1 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/**\n\t * Shared directive to count lines inside a text area, such as a list item.\n\t * Line elements can be extracted with a @ContentChildren(MdLine) query, then\n\t * counted by checking the query list's length.\n\t */\n\tvar MdLine = (function () {\n\t    function MdLine() {\n\t    }\n\t    MdLine = __decorate$1([\n\t        _angular_core.Directive({ selector: '[md-line]' }), \n\t        __metadata$1('design:paramtypes', [])\n\t    ], MdLine);\n\t    return MdLine;\n\t}());\n\t/* Helper that takes a query list of lines and sets the correct class on the host */\n\tvar MdLineSetter = (function () {\n\t    function MdLineSetter(_lines, _renderer, _element) {\n\t        var _this = this;\n\t        this._lines = _lines;\n\t        this._renderer = _renderer;\n\t        this._element = _element;\n\t        this._setLineClass(this._lines.length);\n\t        this._lines.changes.subscribe(function () {\n\t            _this._setLineClass(_this._lines.length);\n\t        });\n\t    }\n\t    MdLineSetter.prototype._setLineClass = function (count) {\n\t        this._resetClasses();\n\t        if (count === 2 || count === 3) {\n\t            this._setClass(\"md-\" + count + \"-line\", true);\n\t        }\n\t        else if (count > 3) {\n\t            this._setClass(\"md-multi-line\", true);\n\t        }\n\t    };\n\t    MdLineSetter.prototype._resetClasses = function () {\n\t        this._setClass('md-2-line', false);\n\t        this._setClass('md-3-line', false);\n\t        this._setClass('md-multi-line', false);\n\t    };\n\t    MdLineSetter.prototype._setClass = function (className, bool) {\n\t        this._renderer.setElementClass(this._element.nativeElement, className, bool);\n\t    };\n\t    return MdLineSetter;\n\t}());\n\tvar MdLineModule = (function () {\n\t    function MdLineModule() {\n\t    }\n\t    MdLineModule = __decorate$1([\n\t        _angular_core.NgModule({\n\t            exports: [MdLine],\n\t            declarations: [MdLine],\n\t        }), \n\t        __metadata$1('design:paramtypes', [])\n\t    ], MdLineModule);\n\t    return MdLineModule;\n\t}());\n\t\n\tvar __decorate$2 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$2 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/**\n\t * Directive to listen to changes of direction of part of the DOM.\n\t *\n\t * Applications should use this directive instead of the native attribute so that Material\n\t * components can listen on changes of direction.\n\t */\n\tvar Dir = (function () {\n\t    function Dir() {\n\t        this._dir = 'ltr';\n\t        this.dirChange = new _angular_core.EventEmitter();\n\t    }\n\t    Object.defineProperty(Dir.prototype, \"dir\", {\n\t        get: function () {\n\t            return this._dir;\n\t        },\n\t        set: function (v) {\n\t            var old = this._dir;\n\t            this._dir = v;\n\t            if (old != this._dir) {\n\t                this.dirChange.emit();\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(Dir.prototype, \"value\", {\n\t        get: function () { return this.dir; },\n\t        set: function (v) { this.dir = v; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    __decorate$2([\n\t        _angular_core.Input('dir'), \n\t        __metadata$2('design:type', String)\n\t    ], Dir.prototype, \"_dir\", void 0);\n\t    __decorate$2([\n\t        _angular_core.Output(), \n\t        __metadata$2('design:type', Object)\n\t    ], Dir.prototype, \"dirChange\", void 0);\n\t    __decorate$2([\n\t        _angular_core.HostBinding('attr.dir'), \n\t        __metadata$2('design:type', String)\n\t    ], Dir.prototype, \"dir\", null);\n\t    Dir = __decorate$2([\n\t        _angular_core.Directive({\n\t            selector: '[dir]',\n\t            // TODO(hansl): maybe `$implicit` isn't the best option here, but for now that's the best we got.\n\t            exportAs: '$implicit'\n\t        }), \n\t        __metadata$2('design:paramtypes', [])\n\t    ], Dir);\n\t    return Dir;\n\t}());\n\tvar RtlModule = (function () {\n\t    function RtlModule() {\n\t    }\n\t    RtlModule.forRoot = function () {\n\t        return {\n\t            ngModule: RtlModule,\n\t            providers: []\n\t        };\n\t    };\n\t    RtlModule = __decorate$2([\n\t        _angular_core.NgModule({\n\t            exports: [Dir],\n\t            declarations: [Dir]\n\t        }), \n\t        __metadata$2('design:paramtypes', [])\n\t    ], RtlModule);\n\t    return RtlModule;\n\t}());\n\t\n\t/** TODO: internal */\n\tvar ForegroundRippleState;\n\t(function (ForegroundRippleState) {\n\t    ForegroundRippleState[ForegroundRippleState[\"NEW\"] = 0] = \"NEW\";\n\t    ForegroundRippleState[ForegroundRippleState[\"EXPANDING\"] = 1] = \"EXPANDING\";\n\t    ForegroundRippleState[ForegroundRippleState[\"FADING_OUT\"] = 2] = \"FADING_OUT\";\n\t})(ForegroundRippleState || (ForegroundRippleState = {}));\n\t/**\n\t * Wrapper for a foreground ripple DOM element and its animation state.\n\t * TODO: internal\n\t */\n\tvar ForegroundRipple = (function () {\n\t    function ForegroundRipple(rippleElement) {\n\t        this.rippleElement = rippleElement;\n\t        this.state = ForegroundRippleState.NEW;\n\t    }\n\t    return ForegroundRipple;\n\t}());\n\tvar RIPPLE_SPEED_PX_PER_SECOND = 1000;\n\tvar MIN_RIPPLE_FILL_TIME_SECONDS = 0.1;\n\tvar MAX_RIPPLE_FILL_TIME_SECONDS = 0.3;\n\t/**\n\t * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n\t */\n\tvar distanceToFurthestCorner = function (x, y, rect) {\n\t    var distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n\t    var distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n\t    return Math.sqrt(distX * distX + distY * distY);\n\t};\n\t/**\n\t * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n\t * The constructor takes a reference to the ripple directive's host element and a map of DOM\n\t * event handlers to be installed on the element that triggers ripple animations.\n\t * This will eventually become a custom renderer once Angular support exists.\n\t * TODO: internal\n\t */\n\tvar RippleRenderer = (function () {\n\t    function RippleRenderer(_elementRef, _eventHandlers) {\n\t        this._eventHandlers = _eventHandlers;\n\t        this._rippleElement = _elementRef.nativeElement;\n\t        // It might be nice to delay creating the background until it's needed, but doing this in\n\t        // fadeInRippleBackground causes the first click event to not be handled reliably.\n\t        this._backgroundDiv = document.createElement('div');\n\t        this._backgroundDiv.classList.add('md-ripple-background');\n\t        this._rippleElement.appendChild(this._backgroundDiv);\n\t    }\n\t    /**\n\t     * Installs event handlers on the given trigger element, and removes event handlers from the\n\t     * previous trigger if needed.\n\t     */\n\t    RippleRenderer.prototype.setTriggerElement = function (newTrigger) {\n\t        var _this = this;\n\t        if (this._triggerElement !== newTrigger) {\n\t            if (this._triggerElement) {\n\t                this._eventHandlers.forEach(function (eventHandler, eventName) {\n\t                    _this._triggerElement.removeEventListener(eventName, eventHandler);\n\t                });\n\t            }\n\t            this._triggerElement = newTrigger;\n\t            if (this._triggerElement) {\n\t                this._eventHandlers.forEach(function (eventHandler, eventName) {\n\t                    _this._triggerElement.addEventListener(eventName, eventHandler);\n\t                });\n\t            }\n\t        }\n\t    };\n\t    /**\n\t     * Installs event handlers on the host element of the md-ripple directive.\n\t     */\n\t    RippleRenderer.prototype.setTriggerElementToHost = function () {\n\t        this.setTriggerElement(this._rippleElement);\n\t    };\n\t    /**\n\t     * Removes event handlers from the current trigger element if needed.\n\t     */\n\t    RippleRenderer.prototype.clearTriggerElement = function () {\n\t        this.setTriggerElement(null);\n\t    };\n\t    /**\n\t     * Creates a foreground ripple and sets its animation to expand and fade in from the position\n\t     * given by rippleOriginLeft and rippleOriginTop (or from the center of the <md-ripple>\n\t     * bounding rect if centered is true).\n\t     */\n\t    RippleRenderer.prototype.createForegroundRipple = function (rippleOriginLeft, rippleOriginTop, color, centered, radius, speedFactor, transitionEndCallback) {\n\t        var parentRect = this._rippleElement.getBoundingClientRect();\n\t        // Create a foreground ripple div with the size and position of the fully expanded ripple.\n\t        // When the div is created, it's given a transform style that causes the ripple to be displayed\n\t        // small and centered on the event location (or the center of the bounding rect if the centered\n\t        // argument is true). Removing that transform causes the ripple to animate to its natural size.\n\t        var startX = centered ? (parentRect.left + parentRect.width / 2) : rippleOriginLeft;\n\t        var startY = centered ? (parentRect.top + parentRect.height / 2) : rippleOriginTop;\n\t        var offsetX = startX - parentRect.left;\n\t        var offsetY = startY - parentRect.top;\n\t        var maxRadius = radius > 0 ? radius : distanceToFurthestCorner(startX, startY, parentRect);\n\t        var rippleDiv = document.createElement('div');\n\t        this._rippleElement.appendChild(rippleDiv);\n\t        rippleDiv.classList.add('md-ripple-foreground');\n\t        rippleDiv.style.left = (offsetX - maxRadius) + \"px\";\n\t        rippleDiv.style.top = (offsetY - maxRadius) + \"px\";\n\t        rippleDiv.style.width = 2 * maxRadius + \"px\";\n\t        rippleDiv.style.height = rippleDiv.style.width;\n\t        // If color input is not set, this will default to the background color defined in CSS.\n\t        rippleDiv.style.backgroundColor = color;\n\t        // Start the ripple tiny.\n\t        rippleDiv.style.transform = \"scale(0.001)\";\n\t        var fadeInSeconds = (1 / (speedFactor || 1)) * Math.max(MIN_RIPPLE_FILL_TIME_SECONDS, Math.min(MAX_RIPPLE_FILL_TIME_SECONDS, maxRadius / RIPPLE_SPEED_PX_PER_SECOND));\n\t        rippleDiv.style.transitionDuration = fadeInSeconds + \"s\";\n\t        // https://timtaubert.de/blog/2012/09/css-transitions-for-dynamically-created-dom-elements/\n\t        window.getComputedStyle(rippleDiv).opacity;\n\t        rippleDiv.classList.add('md-ripple-fade-in');\n\t        // Clearing the transform property causes the ripple to animate to its full size.\n\t        rippleDiv.style.transform = '';\n\t        var ripple = new ForegroundRipple(rippleDiv);\n\t        ripple.state = ForegroundRippleState.EXPANDING;\n\t        rippleDiv.addEventListener('transitionend', function (event) { return transitionEndCallback(ripple, event); });\n\t    };\n\t    /**\n\t     * Fades out a foreground ripple after it has fully expanded and faded in.\n\t     */\n\t    RippleRenderer.prototype.fadeOutForegroundRipple = function (ripple) {\n\t        ripple.classList.remove('md-ripple-fade-in');\n\t        ripple.classList.add('md-ripple-fade-out');\n\t    };\n\t    /**\n\t     * Removes a foreground ripple from the DOM after it has faded out.\n\t     */\n\t    RippleRenderer.prototype.removeRippleFromDom = function (ripple) {\n\t        ripple.parentElement.removeChild(ripple);\n\t    };\n\t    /**\n\t     * Fades in the ripple background.\n\t     */\n\t    RippleRenderer.prototype.fadeInRippleBackground = function (color) {\n\t        this._backgroundDiv.classList.add('md-ripple-active');\n\t        // If color is not set, this will default to the background color defined in CSS.\n\t        this._backgroundDiv.style.backgroundColor = color;\n\t    };\n\t    /**\n\t     * Fades out the ripple background.\n\t     */\n\t    RippleRenderer.prototype.fadeOutRippleBackground = function () {\n\t        if (this._backgroundDiv) {\n\t            this._backgroundDiv.classList.remove('md-ripple-active');\n\t        }\n\t    };\n\t    return RippleRenderer;\n\t}());\n\t\n\tvar __decorate$3 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$3 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar MdRipple = (function () {\n\t    function MdRipple(_elementRef) {\n\t        var _this = this;\n\t        /**\n\t         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n\t         * will be the distance from the center of the ripple to the furthest corner of the host element's\n\t         * bounding rectangle.\n\t         */\n\t        this.maxRadius = 0;\n\t        /**\n\t         * If set, the normal duration of ripple animations is divided by this value. For example,\n\t         * setting it to 0.5 will cause the animations to take twice as long.\n\t         */\n\t        this.speedFactor = 1;\n\t        // These event handlers are attached to the element that triggers the ripple animations.\n\t        var eventHandlers = new Map();\n\t        eventHandlers.set('mousedown', function (event) { return _this._mouseDown(event); });\n\t        eventHandlers.set('click', function (event) { return _this._click(event); });\n\t        eventHandlers.set('mouseleave', function (event) { return _this._mouseLeave(event); });\n\t        this._rippleRenderer = new RippleRenderer(_elementRef, eventHandlers);\n\t    }\n\t    /** TODO: internal */\n\t    MdRipple.prototype.ngOnInit = function () {\n\t        // If no trigger element was explicity set, use the host element\n\t        if (!this.trigger) {\n\t            this._rippleRenderer.setTriggerElementToHost();\n\t        }\n\t    };\n\t    /** TODO: internal */\n\t    MdRipple.prototype.ngOnDestroy = function () {\n\t        // Remove event listeners on the trigger element.\n\t        this._rippleRenderer.clearTriggerElement();\n\t    };\n\t    /** TODO: internal */\n\t    MdRipple.prototype.ngOnChanges = function (changes) {\n\t        // If the trigger element changed (or is being initially set), add event listeners to it.\n\t        var changedInputs = Object.keys(changes);\n\t        if (changedInputs.indexOf('trigger') !== -1) {\n\t            this._rippleRenderer.setTriggerElement(this.trigger);\n\t        }\n\t    };\n\t    /**\n\t     * Responds to the start of a ripple animation trigger by fading the background in.\n\t     */\n\t    MdRipple.prototype.start = function () {\n\t        this._rippleRenderer.fadeInRippleBackground(this.backgroundColor);\n\t    };\n\t    /**\n\t     * Responds to the end of a ripple animation trigger by fading the background out, and creating a\n\t     * foreground ripple that expands from the event location (or from the center of the element if\n\t     * the \"centered\" property is set or forceCenter is true).\n\t     */\n\t    MdRipple.prototype.end = function (left, top, forceCenter) {\n\t        var _this = this;\n\t        if (forceCenter === void 0) { forceCenter = true; }\n\t        this._rippleRenderer.createForegroundRipple(left, top, this.color, this.centered || forceCenter, this.maxRadius, this.speedFactor, function (ripple, e) { return _this._rippleTransitionEnded(ripple, e); });\n\t        this._rippleRenderer.fadeOutRippleBackground();\n\t    };\n\t    MdRipple.prototype._rippleTransitionEnded = function (ripple, event) {\n\t        if (event.propertyName === 'opacity') {\n\t            // If the ripple finished expanding, start fading it out. If it finished fading out,\n\t            // remove it from the DOM.\n\t            switch (ripple.state) {\n\t                case ForegroundRippleState.EXPANDING:\n\t                    this._rippleRenderer.fadeOutForegroundRipple(ripple.rippleElement);\n\t                    ripple.state = ForegroundRippleState.FADING_OUT;\n\t                    break;\n\t                case ForegroundRippleState.FADING_OUT:\n\t                    this._rippleRenderer.removeRippleFromDom(ripple.rippleElement);\n\t                    break;\n\t            }\n\t        }\n\t    };\n\t    /**\n\t     * Called when the trigger element receives a mousedown event. Starts the ripple animation by\n\t     * fading in the background.\n\t     */\n\t    MdRipple.prototype._mouseDown = function (event) {\n\t        if (!this.disabled && event.button === 0) {\n\t            this.start();\n\t        }\n\t    };\n\t    /**\n\t     * Called when the trigger element receives a click event. Creates a foreground ripple and\n\t     * runs its animation.\n\t     */\n\t    MdRipple.prototype._click = function (event) {\n\t        if (!this.disabled && event.button === 0) {\n\t            // If screen and page positions are all 0, this was probably triggered by a keypress.\n\t            // In that case, use the center of the bounding rect as the ripple origin.\n\t            // FIXME: This fails on IE11, which still sets pageX/Y and screenX/Y on keyboard clicks.\n\t            var isKeyEvent = (event.screenX === 0 && event.screenY === 0 && event.pageX === 0 && event.pageY === 0);\n\t            this.end(event.pageX, event.pageY, isKeyEvent);\n\t        }\n\t    };\n\t    /**\n\t     * Called when the trigger element receives a mouseleave event. Fades out the background.\n\t     */\n\t    MdRipple.prototype._mouseLeave = function (event) {\n\t        // We can always fade out the background here; It's a no-op if it was already inactive.\n\t        this._rippleRenderer.fadeOutRippleBackground();\n\t    };\n\t    __decorate$3([\n\t        _angular_core.Input('md-ripple-trigger'), \n\t        __metadata$3('design:type', Object)\n\t    ], MdRipple.prototype, \"trigger\", void 0);\n\t    __decorate$3([\n\t        _angular_core.Input('md-ripple-centered'), \n\t        __metadata$3('design:type', Boolean)\n\t    ], MdRipple.prototype, \"centered\", void 0);\n\t    __decorate$3([\n\t        _angular_core.Input('md-ripple-disabled'), \n\t        __metadata$3('design:type', Boolean)\n\t    ], MdRipple.prototype, \"disabled\", void 0);\n\t    __decorate$3([\n\t        _angular_core.Input('md-ripple-max-radius'), \n\t        __metadata$3('design:type', Number)\n\t    ], MdRipple.prototype, \"maxRadius\", void 0);\n\t    __decorate$3([\n\t        _angular_core.Input('md-ripple-speed-factor'), \n\t        __metadata$3('design:type', Number)\n\t    ], MdRipple.prototype, \"speedFactor\", void 0);\n\t    __decorate$3([\n\t        _angular_core.Input('md-ripple-color'), \n\t        __metadata$3('design:type', String)\n\t    ], MdRipple.prototype, \"color\", void 0);\n\t    __decorate$3([\n\t        _angular_core.Input('md-ripple-background-color'), \n\t        __metadata$3('design:type', String)\n\t    ], MdRipple.prototype, \"backgroundColor\", void 0);\n\t    __decorate$3([\n\t        _angular_core.HostBinding('class.md-ripple-focused'),\n\t        _angular_core.Input('md-ripple-focused'), \n\t        __metadata$3('design:type', Boolean)\n\t    ], MdRipple.prototype, \"focused\", void 0);\n\t    __decorate$3([\n\t        _angular_core.HostBinding('class.md-ripple-unbounded'),\n\t        _angular_core.Input('md-ripple-unbounded'), \n\t        __metadata$3('design:type', Boolean)\n\t    ], MdRipple.prototype, \"unbounded\", void 0);\n\t    MdRipple = __decorate$3([\n\t        _angular_core.Directive({\n\t            selector: '[md-ripple]',\n\t        }), \n\t        __metadata$3('design:paramtypes', [_angular_core.ElementRef])\n\t    ], MdRipple);\n\t    return MdRipple;\n\t}());\n\tvar MdRippleModule = (function () {\n\t    function MdRippleModule() {\n\t    }\n\t    MdRippleModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdRippleModule,\n\t            providers: []\n\t        };\n\t    };\n\t    MdRippleModule = __decorate$3([\n\t        _angular_core.NgModule({\n\t            exports: [MdRipple],\n\t            declarations: [MdRipple],\n\t        }), \n\t        __metadata$3('design:paramtypes', [])\n\t    ], MdRippleModule);\n\t    return MdRippleModule;\n\t}());\n\t\n\t// TODO(kara): Revisit why error messages are not being properly set.\n\tvar __extends$3 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * Wrapper around Error that sets the error message.\n\t */\n\tvar MdError = (function (_super) {\n\t    __extends$3(MdError, _super);\n\t    function MdError(value) {\n\t        _super.call(this);\n\t        this.message = value;\n\t    }\n\t    return MdError;\n\t}(Error));\n\t\n\tvar __extends$2 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/** Exception thrown when attempting to attach a null portal to a host. */\n\tvar MdNullPortalError = (function (_super) {\n\t    __extends$2(MdNullPortalError, _super);\n\t    function MdNullPortalError() {\n\t        _super.call(this, 'Must provide a portal to attach');\n\t    }\n\t    return MdNullPortalError;\n\t}(MdError));\n\t/** Exception thrown when attempting to attach a portal to a host that is already attached. */\n\tvar MdPortalAlreadyAttachedError = (function (_super) {\n\t    __extends$2(MdPortalAlreadyAttachedError, _super);\n\t    function MdPortalAlreadyAttachedError() {\n\t        _super.call(this, 'Host already has a portal attached');\n\t    }\n\t    return MdPortalAlreadyAttachedError;\n\t}(MdError));\n\t/** Exception thrown when attempting to attach a portal to an already-disposed host. */\n\tvar MdPortalHostAlreadyDisposedError = (function (_super) {\n\t    __extends$2(MdPortalHostAlreadyDisposedError, _super);\n\t    function MdPortalHostAlreadyDisposedError() {\n\t        _super.call(this, 'This PortalHost has already been disposed');\n\t    }\n\t    return MdPortalHostAlreadyDisposedError;\n\t}(MdError));\n\t/** Exception thrown when attempting to attach an unknown portal type. */\n\tvar MdUnknownPortalTypeError = (function (_super) {\n\t    __extends$2(MdUnknownPortalTypeError, _super);\n\t    function MdUnknownPortalTypeError() {\n\t        _super.call(this, 'Attempting to attach an unknown Portal type. ' +\n\t            'BasePortalHost accepts either a ComponentPortal or a TemplatePortal.');\n\t    }\n\t    return MdUnknownPortalTypeError;\n\t}(MdError));\n\t/** Exception thrown when attempting to attach a portal to a null host. */\n\tvar MdNullPortalHostError = (function (_super) {\n\t    __extends$2(MdNullPortalHostError, _super);\n\t    function MdNullPortalHostError() {\n\t        _super.call(this, 'Attempting to attach a portal to a null PortalHost');\n\t    }\n\t    return MdNullPortalHostError;\n\t}(MdError));\n\t/** Exception thrown when attempting to detach a portal that is not attached. */\n\tvar MdNoPortalAttachedError = (function (_super) {\n\t    __extends$2(MdNoPortalAttachedError, _super);\n\t    function MdNoPortalAttachedError() {\n\t        _super.call(this, 'Attempting to detach a portal that is not attached to a host');\n\t    }\n\t    return MdNoPortalAttachedError;\n\t}(MdError));\n\t\n\tvar __extends$1 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * A `Portal` is something that you want to render somewhere else.\n\t * It can be attach to / detached from a `PortalHost`.\n\t */\n\tvar Portal = (function () {\n\t    function Portal() {\n\t    }\n\t    /** Attach this portal to a host. */\n\t    Portal.prototype.attach = function (host) {\n\t        if (host == null) {\n\t            throw new MdNullPortalHostError();\n\t        }\n\t        if (host.hasAttached()) {\n\t            throw new MdPortalAlreadyAttachedError();\n\t        }\n\t        this._attachedHost = host;\n\t        return host.attach(this);\n\t    };\n\t    /** Detach this portal from its host */\n\t    Portal.prototype.detach = function () {\n\t        var host = this._attachedHost;\n\t        if (host == null) {\n\t            throw new MdNoPortalAttachedError();\n\t        }\n\t        this._attachedHost = null;\n\t        return host.detach();\n\t    };\n\t    Object.defineProperty(Portal.prototype, \"isAttached\", {\n\t        /** Whether this portal is attached to a host. */\n\t        get: function () {\n\t            return this._attachedHost != null;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /**\n\t     * Sets the PortalHost reference without performing `attach()`. This is used directly by\n\t     * the PortalHost when it is performing an `attach()` or `detatch()`.\n\t     */\n\t    Portal.prototype.setAttachedHost = function (host) {\n\t        this._attachedHost = host;\n\t    };\n\t    return Portal;\n\t}());\n\t/**\n\t * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n\t */\n\tvar ComponentPortal = (function (_super) {\n\t    __extends$1(ComponentPortal, _super);\n\t    function ComponentPortal(component, viewContainerRef, injector) {\n\t        if (viewContainerRef === void 0) { viewContainerRef = null; }\n\t        if (injector === void 0) { injector = null; }\n\t        _super.call(this);\n\t        this.component = component;\n\t        this.viewContainerRef = viewContainerRef;\n\t        this.injector = injector;\n\t    }\n\t    return ComponentPortal;\n\t}(Portal));\n\t/**\n\t * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n\t */\n\tvar TemplatePortal = (function (_super) {\n\t    __extends$1(TemplatePortal, _super);\n\t    function TemplatePortal(template, viewContainerRef) {\n\t        _super.call(this);\n\t        /**\n\t         * Additional locals for the instantiated embedded view.\n\t         * These locals can be seen as \"exports\" for the template, such as how ngFor has\n\t         * index / event / odd.\n\t         * See https://angular.io/docs/ts/latest/api/core/EmbeddedViewRef-class.html\n\t         */\n\t        this.locals = new Map();\n\t        this.templateRef = template;\n\t        this.viewContainerRef = viewContainerRef;\n\t    }\n\t    Object.defineProperty(TemplatePortal.prototype, \"origin\", {\n\t        get: function () {\n\t            return this.templateRef.elementRef;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    TemplatePortal.prototype.attach = function (host, locals) {\n\t        this.locals = locals == null ? new Map() : locals;\n\t        return _super.prototype.attach.call(this, host);\n\t    };\n\t    TemplatePortal.prototype.detach = function () {\n\t        this.locals = new Map();\n\t        return _super.prototype.detach.call(this);\n\t    };\n\t    return TemplatePortal;\n\t}(Portal));\n\t/**\n\t * Partial implementation of PortalHost that only deals with attaching either a\n\t * ComponentPortal or a TemplatePortal.\n\t */\n\tvar BasePortalHost = (function () {\n\t    function BasePortalHost() {\n\t        /** Whether this host has already been permanently disposed. */\n\t        this._isDisposed = false;\n\t    }\n\t    /** Whether this host has an attached portal. */\n\t    BasePortalHost.prototype.hasAttached = function () {\n\t        return this._attachedPortal != null;\n\t    };\n\t    BasePortalHost.prototype.attach = function (portal) {\n\t        if (portal == null) {\n\t            throw new MdNullPortalError();\n\t        }\n\t        if (this.hasAttached()) {\n\t            throw new MdPortalAlreadyAttachedError();\n\t        }\n\t        if (this._isDisposed) {\n\t            throw new MdPortalHostAlreadyDisposedError();\n\t        }\n\t        if (portal instanceof ComponentPortal) {\n\t            this._attachedPortal = portal;\n\t            return this.attachComponentPortal(portal);\n\t        }\n\t        else if (portal instanceof TemplatePortal) {\n\t            this._attachedPortal = portal;\n\t            return this.attachTemplatePortal(portal);\n\t        }\n\t        throw new MdUnknownPortalTypeError();\n\t    };\n\t    BasePortalHost.prototype.detach = function () {\n\t        if (this._attachedPortal) {\n\t            this._attachedPortal.setAttachedHost(null);\n\t        }\n\t        this._attachedPortal = null;\n\t        if (this._disposeFn != null) {\n\t            this._disposeFn();\n\t            this._disposeFn = null;\n\t        }\n\t    };\n\t    BasePortalHost.prototype.dispose = function () {\n\t        if (this.hasAttached()) {\n\t            this.detach();\n\t        }\n\t        this._isDisposed = true;\n\t    };\n\t    BasePortalHost.prototype.setDisposeFn = function (fn) {\n\t        this._disposeFn = fn;\n\t    };\n\t    return BasePortalHost;\n\t}());\n\t\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate$4 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$4 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/**\n\t * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n\t * the directive instance itself can be attached to a host, enabling declarative use of portals.\n\t *\n\t * Usage:\n\t * <template portal #greeting>\n\t *   <p> Hello {{name}} </p>\n\t * </template>\n\t */\n\tvar TemplatePortalDirective = (function (_super) {\n\t    __extends(TemplatePortalDirective, _super);\n\t    function TemplatePortalDirective(templateRef, viewContainerRef) {\n\t        _super.call(this, templateRef, viewContainerRef);\n\t    }\n\t    TemplatePortalDirective = __decorate$4([\n\t        _angular_core.Directive({\n\t            selector: '[portal]',\n\t            exportAs: 'portal',\n\t        }), \n\t        __metadata$4('design:paramtypes', [_angular_core.TemplateRef, _angular_core.ViewContainerRef])\n\t    ], TemplatePortalDirective);\n\t    return TemplatePortalDirective;\n\t}(TemplatePortal));\n\t/**\n\t * Directive version of a PortalHost. Because the directive *is* a PortalHost, portals can be\n\t * directly attached to it, enabling declarative use.\n\t *\n\t * Usage:\n\t * <template [portalHost]=\"greeting\"></template>\n\t */\n\tvar PortalHostDirective = (function (_super) {\n\t    __extends(PortalHostDirective, _super);\n\t    function PortalHostDirective(_componentFactoryResolver, _viewContainerRef) {\n\t        _super.call(this);\n\t        this._componentFactoryResolver = _componentFactoryResolver;\n\t        this._viewContainerRef = _viewContainerRef;\n\t    }\n\t    Object.defineProperty(PortalHostDirective.prototype, \"portal\", {\n\t        get: function () {\n\t            return this._portal;\n\t        },\n\t        set: function (p) {\n\t            this._replaceAttachedPortal(p);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    PortalHostDirective.prototype.ngOnDestroy = function () {\n\t        this.dispose();\n\t    };\n\t    /** Attach the given ComponentPortal to this PortalHost using the ComponentFactoryResolver. */\n\t    PortalHostDirective.prototype.attachComponentPortal = function (portal) {\n\t        portal.setAttachedHost(this);\n\t        // If the portal specifies an origin, use that as the logical location of the component\n\t        // in the application tree. Otherwise use the location of this PortalHost.\n\t        var viewContainerRef = portal.viewContainerRef != null ?\n\t            portal.viewContainerRef :\n\t            this._viewContainerRef;\n\t        var componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n\t        var ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.parentInjector);\n\t        this.setDisposeFn(function () { return ref.destroy(); });\n\t        return ref;\n\t    };\n\t    /** Attach the given TemplatePortal to this PortlHost as an embedded View. */\n\t    PortalHostDirective.prototype.attachTemplatePortal = function (portal) {\n\t        var _this = this;\n\t        portal.setAttachedHost(this);\n\t        this._viewContainerRef.createEmbeddedView(portal.templateRef);\n\t        this.setDisposeFn(function () { return _this._viewContainerRef.clear(); });\n\t        // TODO(jelbourn): return locals from view\n\t        return new Map();\n\t    };\n\t    /** Detatches the currently attached Portal (if there is one) and attaches the given Portal. */\n\t    PortalHostDirective.prototype._replaceAttachedPortal = function (p) {\n\t        if (this.hasAttached()) {\n\t            this.detach();\n\t        }\n\t        if (p) {\n\t            this.attach(p);\n\t            this._portal = p;\n\t        }\n\t    };\n\t    PortalHostDirective = __decorate$4([\n\t        _angular_core.Directive({\n\t            selector: '[portalHost]',\n\t            inputs: ['portal: portalHost']\n\t        }), \n\t        __metadata$4('design:paramtypes', [_angular_core.ComponentFactoryResolver, _angular_core.ViewContainerRef])\n\t    ], PortalHostDirective);\n\t    return PortalHostDirective;\n\t}(BasePortalHost));\n\tvar PortalModule = (function () {\n\t    function PortalModule() {\n\t    }\n\t    PortalModule.forRoot = function () {\n\t        return {\n\t            ngModule: PortalModule,\n\t            providers: []\n\t        };\n\t    };\n\t    PortalModule = __decorate$4([\n\t        _angular_core.NgModule({\n\t            exports: [TemplatePortalDirective, PortalHostDirective],\n\t            declarations: [TemplatePortalDirective, PortalHostDirective],\n\t        }), \n\t        __metadata$4('design:paramtypes', [])\n\t    ], PortalModule);\n\t    return PortalModule;\n\t}());\n\t\n\t/**\n\t * OverlayState is a bag of values for either the initial configuration or current state of an\n\t * overlay.\n\t */\n\tvar OverlayState = (function () {\n\t    function OverlayState() {\n\t        /** Whether the overlay has a backdrop. */\n\t        this.hasBackdrop = false;\n\t        /** Custom class to add to the backdrop **/\n\t        this.backdropClass = 'md-overlay-dark-backdrop';\n\t        /** The direction of the text in the overlay panel. */\n\t        this.direction = 'ltr';\n\t    }\n\t    return OverlayState;\n\t}());\n\t\n\tvar __extends$4 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n\t * application context.\n\t *\n\t * This is the only part of the portal core that directly touches the DOM.\n\t */\n\tvar DomPortalHost = (function (_super) {\n\t    __extends$4(DomPortalHost, _super);\n\t    function DomPortalHost(_hostDomElement, _componentFactoryResolver, _appRef, _defaultInjector) {\n\t        _super.call(this);\n\t        this._hostDomElement = _hostDomElement;\n\t        this._componentFactoryResolver = _componentFactoryResolver;\n\t        this._appRef = _appRef;\n\t        this._defaultInjector = _defaultInjector;\n\t    }\n\t    /** Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver. */\n\t    DomPortalHost.prototype.attachComponentPortal = function (portal) {\n\t        var _this = this;\n\t        var componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n\t        var componentRef;\n\t        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n\t        // for the component (in terms of Angular's component tree, not rendering).\n\t        // When the ViewContainerRef is missing, we use the factory to create the component directly\n\t        // and then manually attach the ChangeDetector for that component to the application (which\n\t        // happens automatically when using a ViewContainer).\n\t        if (portal.viewContainerRef) {\n\t            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.parentInjector);\n\t            this.setDisposeFn(function () { return componentRef.destroy(); });\n\t        }\n\t        else {\n\t            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n\t            // When creating a component outside of a ViewContainer, we need to manually register\n\t            // its ChangeDetector with the application. This API is unfortunately not yet published\n\t            // in Angular core. The change detector must also be deregistered when the component\n\t            // is destroyed to prevent memory leaks.\n\t            //\n\t            // See https://github.com/angular/angular/pull/12674\n\t            var changeDetectorRef_1 = componentRef.changeDetectorRef;\n\t            this._appRef.registerChangeDetector(changeDetectorRef_1);\n\t            this.setDisposeFn(function () {\n\t                _this._appRef.unregisterChangeDetector(changeDetectorRef_1);\n\t                // Normally the ViewContainer will remove the component's nodes from the DOM.\n\t                // Without a ViewContainer, we need to manually remove the nodes.\n\t                var componentRootNode = _this._getComponentRootNode(componentRef);\n\t                if (componentRootNode.parentNode) {\n\t                    componentRootNode.parentNode.removeChild(componentRootNode);\n\t                }\n\t                componentRef.destroy();\n\t            });\n\t        }\n\t        // At this point the component has been instantiated, so we move it to the location in the DOM\n\t        // where we want it to be rendered.\n\t        this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n\t        return componentRef;\n\t    };\n\t    DomPortalHost.prototype.attachTemplatePortal = function (portal) {\n\t        var _this = this;\n\t        var viewContainer = portal.viewContainerRef;\n\t        var viewRef = viewContainer.createEmbeddedView(portal.templateRef);\n\t        viewRef.rootNodes.forEach(function (rootNode) { return _this._hostDomElement.appendChild(rootNode); });\n\t        this.setDisposeFn((function () {\n\t            var index = viewContainer.indexOf(viewRef);\n\t            if (index != -1) {\n\t                viewContainer.remove(index);\n\t            }\n\t        }));\n\t        // TODO(jelbourn): Return locals from view.\n\t        return new Map();\n\t    };\n\t    DomPortalHost.prototype.dispose = function () {\n\t        _super.prototype.dispose.call(this);\n\t        if (this._hostDomElement.parentNode != null) {\n\t            this._hostDomElement.parentNode.removeChild(this._hostDomElement);\n\t        }\n\t    };\n\t    /** Gets the root HTMLElement for an instantiated component. */\n\t    DomPortalHost.prototype._getComponentRootNode = function (componentRef) {\n\t        return componentRef.hostView.rootNodes[0];\n\t    };\n\t    return DomPortalHost;\n\t}(BasePortalHost));\n\t\n\t/**\n\t * Reference to an overlay that has been created with the Overlay service.\n\t * Used to manipulate or dispose of said overlay.\n\t */\n\tvar OverlayRef = (function () {\n\t    function OverlayRef(_portalHost, _pane, _state) {\n\t        this._portalHost = _portalHost;\n\t        this._pane = _pane;\n\t        this._state = _state;\n\t        this._backdropElement = null;\n\t        this._backdropClick = new rxjs_Subject.Subject();\n\t    }\n\t    OverlayRef.prototype.attach = function (portal) {\n\t        if (this._state.hasBackdrop) {\n\t            this._attachBackdrop();\n\t        }\n\t        var attachResult = this._portalHost.attach(portal);\n\t        this.updateSize();\n\t        this.updateDirection();\n\t        this.updatePosition();\n\t        return attachResult;\n\t    };\n\t    OverlayRef.prototype.detach = function () {\n\t        this._detatchBackdrop();\n\t        return this._portalHost.detach();\n\t    };\n\t    OverlayRef.prototype.dispose = function () {\n\t        this._detatchBackdrop();\n\t        this._portalHost.dispose();\n\t    };\n\t    OverlayRef.prototype.hasAttached = function () {\n\t        return this._portalHost.hasAttached();\n\t    };\n\t    OverlayRef.prototype.backdropClick = function () {\n\t        return this._backdropClick.asObservable();\n\t    };\n\t    /** Gets the current state config of the overlay. */\n\t    OverlayRef.prototype.getState = function () {\n\t        return this._state;\n\t    };\n\t    /** Updates the position of the overlay based on the position strategy. */\n\t    OverlayRef.prototype.updatePosition = function () {\n\t        if (this._state.positionStrategy) {\n\t            this._state.positionStrategy.apply(this._pane);\n\t        }\n\t    };\n\t    /** Updates the text direction of the overlay panel. **/\n\t    OverlayRef.prototype.updateDirection = function () {\n\t        this._pane.setAttribute('dir', this._state.direction);\n\t    };\n\t    /** Updates the size of the overlay based on the overlay config. */\n\t    OverlayRef.prototype.updateSize = function () {\n\t        if (this._state.width || this._state.width === 0) {\n\t            this._pane.style.width = formatCssUnit(this._state.width);\n\t        }\n\t        if (this._state.height || this._state.height === 0) {\n\t            this._pane.style.height = formatCssUnit(this._state.height);\n\t        }\n\t    };\n\t    /** Attaches a backdrop for this overlay. */\n\t    OverlayRef.prototype._attachBackdrop = function () {\n\t        var _this = this;\n\t        this._backdropElement = document.createElement('div');\n\t        this._backdropElement.classList.add('md-overlay-backdrop');\n\t        this._backdropElement.classList.add(this._state.backdropClass);\n\t        this._pane.parentElement.appendChild(this._backdropElement);\n\t        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n\t        // action desired when such a click occurs (usually closing the overlay).\n\t        this._backdropElement.addEventListener('click', function () {\n\t            _this._backdropClick.next(null);\n\t        });\n\t        // Add class to fade-in the backdrop after one frame.\n\t        requestAnimationFrame(function () {\n\t            _this._backdropElement.classList.add('md-overlay-backdrop-showing');\n\t        });\n\t    };\n\t    /** Detaches the backdrop (if any) associated with the overlay. */\n\t    OverlayRef.prototype._detatchBackdrop = function () {\n\t        var _this = this;\n\t        var backdropToDetach = this._backdropElement;\n\t        if (backdropToDetach) {\n\t            backdropToDetach.classList.remove('md-overlay-backdrop-showing');\n\t            backdropToDetach.classList.remove(this._state.backdropClass);\n\t            backdropToDetach.addEventListener('transitionend', function () {\n\t                backdropToDetach.parentNode.removeChild(backdropToDetach);\n\t                // It is possible that a new portal has been attached to this overlay since we started\n\t                // removing the backdrop. If that is the case, only clear the backdrop reference if it\n\t                // is still the same instance that we started to remove.\n\t                if (_this._backdropElement == backdropToDetach) {\n\t                    _this._backdropElement = null;\n\t                }\n\t            });\n\t        }\n\t    };\n\t    return OverlayRef;\n\t}());\n\tfunction formatCssUnit(value) {\n\t    return typeof value === 'string' ? value : value + \"px\";\n\t}\n\t\n\tvar __decorate$8 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$8 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/**\n\t * Simple utility for getting the bounds of the browser viewport.\n\t * TODO: internal\n\t */\n\tvar ViewportRuler = (function () {\n\t    function ViewportRuler() {\n\t    }\n\t    // TODO(jelbourn): cache the document's bounding rect and only update it when the window\n\t    // is resized (debounced).\n\t    /** Gets a ClientRect for the viewport's bounds. */\n\t    ViewportRuler.prototype.getViewportRect = function () {\n\t        // Use the document element's bounding rect rather than the window scroll properties\n\t        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n\t        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n\t        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n\t        // can disagree when the page is pinch-zoomed (on devices that support touch).\n\t        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n\t        // We use the documentElement instead of the body because, by default (without a css reset)\n\t        // browsers typically give the document body an 8px margin, which is not included in\n\t        // getBoundingClientRect().\n\t        var documentRect = document.documentElement.getBoundingClientRect();\n\t        var scrollPosition = this.getViewportScrollPosition(documentRect);\n\t        var height = window.innerHeight;\n\t        var width = window.innerWidth;\n\t        return {\n\t            top: scrollPosition.top,\n\t            left: scrollPosition.left,\n\t            bottom: scrollPosition.top + height,\n\t            right: scrollPosition.left + width,\n\t            height: height,\n\t            width: width,\n\t        };\n\t    };\n\t    /**\n\t     * Gets the (top, left) scroll position of the viewport.\n\t     * @param documentRect\n\t     */\n\t    ViewportRuler.prototype.getViewportScrollPosition = function (documentRect) {\n\t        if (documentRect === void 0) { documentRect = document.documentElement.getBoundingClientRect(); }\n\t        // The top-left-corner of the viewport is determined by the scroll position of the document\n\t        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n\t        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n\t        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n\t        // `document.documentElement` works consistently, where the `top` and `left` values will\n\t        // equal negative the scroll position.\n\t        var top = documentRect.top < 0 && document.body.scrollTop == 0 ?\n\t            -documentRect.top :\n\t            document.body.scrollTop;\n\t        var left = documentRect.left < 0 && document.body.scrollLeft == 0 ?\n\t            -documentRect.left :\n\t            document.body.scrollLeft;\n\t        return { top: top, left: left };\n\t    };\n\t    ViewportRuler = __decorate$8([\n\t        _angular_core.Injectable(), \n\t        __metadata$8('design:paramtypes', [])\n\t    ], ViewportRuler);\n\t    return ViewportRuler;\n\t}());\n\t\n\t/**\n\t * Applies a CSS transform to an element, including browser-prefixed properties.\n\t * @param element\n\t * @param transformValue\n\t */\n\tfunction applyCssTransform(element, transformValue) {\n\t    // It's important to trim the result, because the browser will ignore the set operation\n\t    // if the string contains only whitespace.\n\t    var value = transformValue.trim();\n\t    element.style.transform = value;\n\t    element.style.webkitTransform = value;\n\t}\n\t\n\t/** The points of the origin element and the overlay element to connect. */\n\tvar ConnectionPositionPair = (function () {\n\t    function ConnectionPositionPair(origin, overlay) {\n\t        this.originX = origin.originX;\n\t        this.originY = origin.originY;\n\t        this.overlayX = overlay.overlayX;\n\t        this.overlayY = overlay.overlayY;\n\t    }\n\t    return ConnectionPositionPair;\n\t}());\n\t\n\t/**\n\t * A strategy for positioning overlays. Using this strategy, an overlay is given an\n\t * implicit position relative some origin element. The relative position is defined in terms of\n\t * a point on the origin element that is connected to a point on the overlay element. For example,\n\t * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n\t * of the overlay.\n\t */\n\tvar ConnectedPositionStrategy = (function () {\n\t    function ConnectedPositionStrategy(_connectedTo, _originPos, _overlayPos, _viewportRuler) {\n\t        this._connectedTo = _connectedTo;\n\t        this._originPos = _originPos;\n\t        this._overlayPos = _overlayPos;\n\t        this._viewportRuler = _viewportRuler;\n\t        this._dir = 'ltr';\n\t        /** The offset in pixels for the overlay connection point on the x-axis */\n\t        this._offsetX = 0;\n\t        /** The offset in pixels for the overlay connection point on the y-axis */\n\t        this._offsetY = 0;\n\t        /** Ordered list of preferred positions, from most to least desirable. */\n\t        this._preferredPositions = [];\n\t        this._origin = this._connectedTo.nativeElement;\n\t        this.withFallbackPosition(_originPos, _overlayPos);\n\t    }\n\t    Object.defineProperty(ConnectedPositionStrategy.prototype, \"_isRtl\", {\n\t        /** Whether the we're dealing with an RTL context */\n\t        get: function () {\n\t            return this._dir === 'rtl';\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(ConnectedPositionStrategy.prototype, \"positions\", {\n\t        get: function () {\n\t            return this._preferredPositions;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /**\n\t     * Updates the position of the overlay element, using whichever preferred position relative\n\t     * to the origin fits on-screen.\n\t     * TODO: internal\n\t     */\n\t    ConnectedPositionStrategy.prototype.apply = function (element) {\n\t        // We need the bounding rects for the origin and the overlay to determine how to position\n\t        // the overlay relative to the origin.\n\t        var originRect = this._origin.getBoundingClientRect();\n\t        var overlayRect = element.getBoundingClientRect();\n\t        // We use the viewport rect to determine whether a position would go off-screen.\n\t        var viewportRect = this._viewportRuler.getViewportRect();\n\t        var firstOverlayPoint = null;\n\t        // We want to place the overlay in the first of the preferred positions such that the\n\t        // overlay fits on-screen.\n\t        for (var _i = 0, _a = this._preferredPositions; _i < _a.length; _i++) {\n\t            var pos = _a[_i];\n\t            // Get the (x, y) point of connection on the origin, and then use that to get the\n\t            // (top, left) coordinate for the overlay at `pos`.\n\t            var originPoint = this._getOriginConnectionPoint(originRect, pos);\n\t            var overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n\t            firstOverlayPoint = firstOverlayPoint || overlayPoint;\n\t            // If the overlay in the calculated position fits on-screen, put it there and we're done.\n\t            if (this._willOverlayFitWithinViewport(overlayPoint, overlayRect, viewportRect)) {\n\t                this._setElementPosition(element, overlayPoint);\n\t                return Promise.resolve(null);\n\t            }\n\t        }\n\t        // TODO(jelbourn): fallback behavior for when none of the preferred positions fit on-screen.\n\t        // For now, just stick it in the first position and let it go off-screen.\n\t        this._setElementPosition(element, firstOverlayPoint);\n\t        return Promise.resolve(null);\n\t    };\n\t    ConnectedPositionStrategy.prototype.withFallbackPosition = function (originPos, overlayPos) {\n\t        this._preferredPositions.push(new ConnectionPositionPair(originPos, overlayPos));\n\t        return this;\n\t    };\n\t    /** Sets the layout direction so the overlay's position can be adjusted to match. */\n\t    ConnectedPositionStrategy.prototype.withDirection = function (dir) {\n\t        this._dir = dir;\n\t        return this;\n\t    };\n\t    /** Sets an offset for the overlay's connection point on the x-axis */\n\t    ConnectedPositionStrategy.prototype.withOffsetX = function (offset) {\n\t        this._offsetX = offset;\n\t        return this;\n\t    };\n\t    /** Sets an offset for the overlay's connection point on the y-axis */\n\t    ConnectedPositionStrategy.prototype.withOffsetY = function (offset) {\n\t        this._offsetY = offset;\n\t        return this;\n\t    };\n\t    /**\n\t     * Gets the horizontal (x) \"start\" dimension based on whether the overlay is in an RTL context.\n\t     * @param rect\n\t     */\n\t    ConnectedPositionStrategy.prototype._getStartX = function (rect) {\n\t        return this._isRtl ? rect.right : rect.left;\n\t    };\n\t    /**\n\t     * Gets the horizontal (x) \"end\" dimension based on whether the overlay is in an RTL context.\n\t     * @param rect\n\t     */\n\t    ConnectedPositionStrategy.prototype._getEndX = function (rect) {\n\t        return this._isRtl ? rect.left : rect.right;\n\t    };\n\t    /**\n\t     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n\t     * @param originRect\n\t     * @param pos\n\t     */\n\t    ConnectedPositionStrategy.prototype._getOriginConnectionPoint = function (originRect, pos) {\n\t        var originStartX = this._getStartX(originRect);\n\t        var originEndX = this._getEndX(originRect);\n\t        var x;\n\t        if (pos.originX == 'center') {\n\t            x = originStartX + (originRect.width / 2);\n\t        }\n\t        else {\n\t            x = pos.originX == 'start' ? originStartX : originEndX;\n\t        }\n\t        var y;\n\t        if (pos.originY == 'center') {\n\t            y = originRect.top + (originRect.height / 2);\n\t        }\n\t        else {\n\t            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n\t        }\n\t        return { x: x, y: y };\n\t    };\n\t    /**\n\t     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n\t     * origin point to which the overlay should be connected.\n\t     * @param originPoint\n\t     * @param overlayRect\n\t     * @param pos\n\t     */\n\t    ConnectedPositionStrategy.prototype._getOverlayPoint = function (originPoint, overlayRect, pos) {\n\t        // Calculate the (overlayStartX, overlayStartY), the start of the potential overlay position\n\t        // relative to the origin point.\n\t        var overlayStartX;\n\t        if (pos.overlayX == 'center') {\n\t            overlayStartX = -overlayRect.width / 2;\n\t        }\n\t        else if (pos.overlayX === 'start') {\n\t            overlayStartX = this._isRtl ? -overlayRect.width : 0;\n\t        }\n\t        else {\n\t            overlayStartX = this._isRtl ? 0 : -overlayRect.width;\n\t        }\n\t        var overlayStartY;\n\t        if (pos.overlayY == 'center') {\n\t            overlayStartY = -overlayRect.height / 2;\n\t        }\n\t        else {\n\t            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n\t        }\n\t        return {\n\t            x: originPoint.x + overlayStartX + this._offsetX,\n\t            y: originPoint.y + overlayStartY + this._offsetY\n\t        };\n\t    };\n\t    /**\n\t     * Gets whether the overlay positioned at the given point will fit on-screen.\n\t     * @param overlayPoint The top-left coordinate of the overlay.\n\t     * @param overlayRect Bounding rect of the overlay, used to get its size.\n\t     * @param viewportRect The bounding viewport.\n\t     */\n\t    ConnectedPositionStrategy.prototype._willOverlayFitWithinViewport = function (overlayPoint, overlayRect, viewportRect) {\n\t        // TODO(jelbourn): probably also want some space between overlay edge and viewport edge.\n\t        return overlayPoint.x >= viewportRect.left &&\n\t            overlayPoint.x + overlayRect.width <= viewportRect.right &&\n\t            overlayPoint.y >= viewportRect.top &&\n\t            overlayPoint.y + overlayRect.height <= viewportRect.bottom;\n\t    };\n\t    /**\n\t     * Physically positions the overlay element to the given coordinate.\n\t     * @param element\n\t     * @param overlayPoint\n\t     */\n\t    ConnectedPositionStrategy.prototype._setElementPosition = function (element, overlayPoint) {\n\t        var x = overlayPoint.x;\n\t        var y = overlayPoint.y;\n\t        // TODO(jelbourn): we don't want to always overwrite the transform property here,\n\t        // because it will need to be used for animations.\n\t        applyCssTransform(element, \"translateX(\" + x + \"px) translateY(\" + y + \"px)\");\n\t    };\n\t    return ConnectedPositionStrategy;\n\t}());\n\t\n\t/**\n\t * A strategy for positioning overlays. Using this strategy, an overlay is given an\n\t * explicit position relative to the browser's viewport.\n\t */\n\tvar GlobalPositionStrategy = (function () {\n\t    function GlobalPositionStrategy() {\n\t        this._cssPosition = 'absolute';\n\t        this._top = '';\n\t        this._bottom = '';\n\t        this._left = '';\n\t        this._right = '';\n\t        /** Array of individual applications of translateX(). Currently only for centering. */\n\t        this._translateX = [];\n\t        /** Array of individual applications of translateY(). Currently only for centering. */\n\t        this._translateY = [];\n\t    }\n\t    /** Sets the element to use CSS position: fixed */\n\t    GlobalPositionStrategy.prototype.fixed = function () {\n\t        this._cssPosition = 'fixed';\n\t        return this;\n\t    };\n\t    /** Sets the element to use CSS position: absolute. This is the default. */\n\t    GlobalPositionStrategy.prototype.absolute = function () {\n\t        this._cssPosition = 'absolute';\n\t        return this;\n\t    };\n\t    /** Sets the top position of the overlay. Clears any previously set vertical position. */\n\t    GlobalPositionStrategy.prototype.top = function (value) {\n\t        this._bottom = '';\n\t        this._translateY = [];\n\t        this._top = value;\n\t        return this;\n\t    };\n\t    /** Sets the left position of the overlay. Clears any previously set horizontal position. */\n\t    GlobalPositionStrategy.prototype.left = function (value) {\n\t        this._right = '';\n\t        this._translateX = [];\n\t        this._left = value;\n\t        return this;\n\t    };\n\t    /** Sets the bottom position of the overlay. Clears any previously set vertical position. */\n\t    GlobalPositionStrategy.prototype.bottom = function (value) {\n\t        this._top = '';\n\t        this._translateY = [];\n\t        this._bottom = value;\n\t        return this;\n\t    };\n\t    /** Sets the right position of the overlay. Clears any previously set horizontal position. */\n\t    GlobalPositionStrategy.prototype.right = function (value) {\n\t        this._left = '';\n\t        this._translateX = [];\n\t        this._right = value;\n\t        return this;\n\t    };\n\t    /**\n\t     * Centers the overlay horizontally with an optional offset.\n\t     * Clears any previously set horizontal position.\n\t     */\n\t    GlobalPositionStrategy.prototype.centerHorizontally = function (offset) {\n\t        if (offset === void 0) { offset = '0px'; }\n\t        this._left = '50%';\n\t        this._right = '';\n\t        this._translateX = ['-50%', offset];\n\t        return this;\n\t    };\n\t    /**\n\t     * Centers the overlay vertically with an optional offset.\n\t     * Clears any previously set vertical position.\n\t     */\n\t    GlobalPositionStrategy.prototype.centerVertically = function (offset) {\n\t        if (offset === void 0) { offset = '0px'; }\n\t        this._top = '50%';\n\t        this._bottom = '';\n\t        this._translateY = ['-50%', offset];\n\t        return this;\n\t    };\n\t    /**\n\t     * Apply the position to the element.\n\t     * TODO: internal\n\t     */\n\t    GlobalPositionStrategy.prototype.apply = function (element) {\n\t        element.style.position = this._cssPosition;\n\t        element.style.top = this._top;\n\t        element.style.left = this._left;\n\t        element.style.bottom = this._bottom;\n\t        element.style.right = this._right;\n\t        // TODO(jelbourn): we don't want to always overwrite the transform property here,\n\t        // because it will need to be used for animations.\n\t        var tranlateX = this._reduceTranslateValues('translateX', this._translateX);\n\t        var translateY = this._reduceTranslateValues('translateY', this._translateY);\n\t        applyCssTransform(element, tranlateX + \" \" + translateY);\n\t        return Promise.resolve(null);\n\t    };\n\t    /** Reduce a list of translate values to a string that can be used in the transform property */\n\t    GlobalPositionStrategy.prototype._reduceTranslateValues = function (translateFn, values) {\n\t        return values.map(function (t) { return (translateFn + \"(\" + t + \")\"); }).join(' ');\n\t    };\n\t    return GlobalPositionStrategy;\n\t}());\n\t\n\tvar __decorate$7 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$7 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/** Builder for overlay position strategy. */\n\tvar OverlayPositionBuilder = (function () {\n\t    function OverlayPositionBuilder(_viewportRuler) {\n\t        this._viewportRuler = _viewportRuler;\n\t    }\n\t    /** Creates a global position strategy. */\n\t    OverlayPositionBuilder.prototype.global = function () {\n\t        return new GlobalPositionStrategy();\n\t    };\n\t    /** Creates a relative position strategy. */\n\t    OverlayPositionBuilder.prototype.connectedTo = function (elementRef, originPos, overlayPos) {\n\t        return new ConnectedPositionStrategy(elementRef, originPos, overlayPos, this._viewportRuler);\n\t    };\n\t    OverlayPositionBuilder = __decorate$7([\n\t        _angular_core.Injectable(), \n\t        __metadata$7('design:paramtypes', [ViewportRuler])\n\t    ], OverlayPositionBuilder);\n\t    return OverlayPositionBuilder;\n\t}());\n\t\n\t/**\n\t * The OverlayContainer is the container in which all overlays will load.\n\t * It should be provided in the root component to ensure it is properly shared.\n\t */\n\tvar OverlayContainer = (function () {\n\t    function OverlayContainer() {\n\t    }\n\t    /**\n\t     * This method returns the overlay container element.  It will lazily\n\t     * create the element the first time  it is called to facilitate using\n\t     * the container in non-browser environments.\n\t     * @returns {HTMLElement} the container element\n\t     */\n\t    OverlayContainer.prototype.getContainerElement = function () {\n\t        if (!this._containerElement) {\n\t            this._createContainer();\n\t        }\n\t        return this._containerElement;\n\t    };\n\t    /**\n\t     * Create the overlay container element, which is simply a div\n\t     * with the 'md-overlay-container' class on the document body.\n\t     */\n\t    OverlayContainer.prototype._createContainer = function () {\n\t        var container = document.createElement('div');\n\t        container.classList.add('md-overlay-container');\n\t        document.body.appendChild(container);\n\t        this._containerElement = container;\n\t    };\n\t    return OverlayContainer;\n\t}());\n\t\n\tvar __decorate$6 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$6 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/** Next overlay unique ID. */\n\tvar nextUniqueId = 0;\n\t/** The default state for newly created overlays. */\n\tvar defaultState = new OverlayState();\n\t/**\n\t * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n\t * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n\t * selects, etc. can all be built using overlays. The service should primarily be used by authors\n\t * of re-usable components rather than developers building end-user applications.\n\t *\n\t * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n\t */\n\tvar Overlay = (function () {\n\t    function Overlay(_overlayContainer, _componentFactoryResolver, _positionBuilder, _appRef, _injector) {\n\t        this._overlayContainer = _overlayContainer;\n\t        this._componentFactoryResolver = _componentFactoryResolver;\n\t        this._positionBuilder = _positionBuilder;\n\t        this._appRef = _appRef;\n\t        this._injector = _injector;\n\t    }\n\t    /**\n\t     * Creates an overlay.\n\t     * @param state State to apply to the overlay.\n\t     * @returns A reference to the created overlay.\n\t     */\n\t    Overlay.prototype.create = function (state) {\n\t        if (state === void 0) { state = defaultState; }\n\t        return this._createOverlayRef(this._createPaneElement(), state);\n\t    };\n\t    /**\n\t     * Returns a position builder that can be used, via fluent API,\n\t     * to construct and configure a position strategy.\n\t     */\n\t    Overlay.prototype.position = function () {\n\t        return this._positionBuilder;\n\t    };\n\t    /**\n\t     * Creates the DOM element for an overlay and appends it to the overlay container.\n\t     * @returns Promise resolving to the created element.\n\t     */\n\t    Overlay.prototype._createPaneElement = function () {\n\t        var pane = document.createElement('div');\n\t        pane.id = \"md-overlay-\" + nextUniqueId++;\n\t        pane.classList.add('md-overlay-pane');\n\t        this._overlayContainer.getContainerElement().appendChild(pane);\n\t        return pane;\n\t    };\n\t    /**\n\t     * Create a DomPortalHost into which the overlay content can be loaded.\n\t     * @param pane The DOM element to turn into a portal host.\n\t     * @returns A portal host for the given DOM element.\n\t     */\n\t    Overlay.prototype._createPortalHost = function (pane) {\n\t        return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef, this._injector);\n\t    };\n\t    /**\n\t     * Creates an OverlayRef for an overlay in the given DOM element.\n\t     * @param pane DOM element for the overlay\n\t     * @param state\n\t     * @returns {OverlayRef}\n\t     */\n\t    Overlay.prototype._createOverlayRef = function (pane, state) {\n\t        return new OverlayRef(this._createPortalHost(pane), pane, state);\n\t    };\n\t    Overlay = __decorate$6([\n\t        _angular_core.Injectable(), \n\t        __metadata$6('design:paramtypes', [OverlayContainer, _angular_core.ComponentFactoryResolver, OverlayPositionBuilder, _angular_core.ApplicationRef, _angular_core.Injector])\n\t    ], Overlay);\n\t    return Overlay;\n\t}());\n\t/** Providers for Overlay and its related injectables. */\n\tvar OVERLAY_PROVIDERS = [\n\t    ViewportRuler,\n\t    OverlayPositionBuilder,\n\t    Overlay,\n\t    OverlayContainer,\n\t];\n\t\n\tvar __decorate$5 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$5 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\n\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t};\n\t/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\n\tvar defaultPositionList = [\n\t    new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n\t    new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n\t];\n\t/**\n\t * Directive applied to an element to make it usable as an origin for an Overlay using a\n\t * ConnectedPositionStrategy.\n\t */\n\tvar OverlayOrigin = (function () {\n\t    function OverlayOrigin(_elementRef) {\n\t        this._elementRef = _elementRef;\n\t    }\n\t    Object.defineProperty(OverlayOrigin.prototype, \"elementRef\", {\n\t        get: function () {\n\t            return this._elementRef;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    OverlayOrigin = __decorate$5([\n\t        _angular_core.Directive({\n\t            selector: '[overlay-origin]',\n\t            exportAs: 'overlayOrigin',\n\t        }), \n\t        __metadata$5('design:paramtypes', [_angular_core.ElementRef])\n\t    ], OverlayOrigin);\n\t    return OverlayOrigin;\n\t}());\n\t/**\n\t * Directive to facilitate declarative creation of an Overlay using a ConnectedPositionStrategy.\n\t */\n\tvar ConnectedOverlayDirective = (function () {\n\t    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n\t    function ConnectedOverlayDirective(_overlay, templateRef, viewContainerRef, _dir) {\n\t        this._overlay = _overlay;\n\t        this._dir = _dir;\n\t        this._open = false;\n\t        this._hasBackdrop = false;\n\t        /** The offset in pixels for the overlay connection point on the x-axis */\n\t        this.offsetX = 0;\n\t        /** The offset in pixels for the overlay connection point on the y-axis */\n\t        this.offsetY = 0;\n\t        /** Event emitted when the backdrop is clicked. */\n\t        this.backdropClick = new _angular_core.EventEmitter();\n\t        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n\t    }\n\t    Object.defineProperty(ConnectedOverlayDirective.prototype, \"hasBackdrop\", {\n\t        /** Whether or not the overlay should attach a backdrop. */\n\t        get: function () {\n\t            return this._hasBackdrop;\n\t        },\n\t        // TODO: move the boolean coercion logic to a shared function in core\n\t        set: function (value) {\n\t            this._hasBackdrop = value != null && \"\" + value !== 'false';\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(ConnectedOverlayDirective.prototype, \"open\", {\n\t        get: function () {\n\t            return this._open;\n\t        },\n\t        set: function (value) {\n\t            value ? this._attachOverlay() : this._detachOverlay();\n\t            this._open = value;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(ConnectedOverlayDirective.prototype, \"overlayRef\", {\n\t        get: function () {\n\t            return this._overlayRef;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(ConnectedOverlayDirective.prototype, \"dir\", {\n\t        get: function () {\n\t            return this._dir ? this._dir.value : 'ltr';\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /** TODO: internal */\n\t    ConnectedOverlayDirective.prototype.ngOnDestroy = function () {\n\t        this._destroyOverlay();\n\t    };\n\t    /** Creates an overlay */\n\t    ConnectedOverlayDirective.prototype._createOverlay = function () {\n\t        if (!this.positions || !this.positions.length) {\n\t            this.positions = defaultPositionList;\n\t        }\n\t        this._overlayRef = this._overlay.create(this._buildConfig());\n\t    };\n\t    /** Builds the overlay config based on the directive's inputs */\n\t    ConnectedOverlayDirective.prototype._buildConfig = function () {\n\t        var overlayConfig = new OverlayState();\n\t        if (this.width || this.width === 0) {\n\t            overlayConfig.width = this.width;\n\t        }\n\t        if (this.height || this.height === 0) {\n\t            overlayConfig.height = this.height;\n\t        }\n\t        overlayConfig.hasBackdrop = this.hasBackdrop;\n\t        if (this.backdropClass) {\n\t            overlayConfig.backdropClass = this.backdropClass;\n\t        }\n\t        overlayConfig.positionStrategy = this._createPositionStrategy();\n\t        overlayConfig.direction = this.dir;\n\t        return overlayConfig;\n\t    };\n\t    /** Returns the position strategy of the overlay to be set on the overlay config */\n\t    ConnectedOverlayDirective.prototype._createPositionStrategy = function () {\n\t        var pos = this.positions[0];\n\t        var originPoint = { originX: pos.originX, originY: pos.originY };\n\t        var overlayPoint = { overlayX: pos.overlayX, overlayY: pos.overlayY };\n\t        return this._overlay.position()\n\t            .connectedTo(this.origin.elementRef, originPoint, overlayPoint)\n\t            .withDirection(this.dir)\n\t            .withOffsetX(this.offsetX)\n\t            .withOffsetY(this.offsetY);\n\t    };\n\t    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n\t    ConnectedOverlayDirective.prototype._attachOverlay = function () {\n\t        var _this = this;\n\t        if (!this._overlayRef) {\n\t            this._createOverlay();\n\t        }\n\t        if (!this._overlayRef.hasAttached()) {\n\t            this._overlayRef.attach(this._templatePortal);\n\t        }\n\t        if (this.hasBackdrop) {\n\t            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(function () {\n\t                _this.backdropClick.emit();\n\t            });\n\t        }\n\t    };\n\t    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n\t    ConnectedOverlayDirective.prototype._detachOverlay = function () {\n\t        if (this._overlayRef) {\n\t            this._overlayRef.detach();\n\t        }\n\t        if (this._backdropSubscription) {\n\t            this._backdropSubscription.unsubscribe();\n\t            this._backdropSubscription = null;\n\t        }\n\t    };\n\t    /** Destroys the overlay created by this directive. */\n\t    ConnectedOverlayDirective.prototype._destroyOverlay = function () {\n\t        if (this._overlayRef) {\n\t            this._overlayRef.dispose();\n\t        }\n\t        if (this._backdropSubscription) {\n\t            this._backdropSubscription.unsubscribe();\n\t        }\n\t    };\n\t    __decorate$5([\n\t        _angular_core.Input(), \n\t        __metadata$5('design:type', OverlayOrigin)\n\t    ], ConnectedOverlayDirective.prototype, \"origin\", void 0);\n\t    __decorate$5([\n\t        _angular_core.Input(), \n\t        __metadata$5('design:type', Array)\n\t    ], ConnectedOverlayDirective.prototype, \"positions\", void 0);\n\t    __decorate$5([\n\t        _angular_core.Input(), \n\t        __metadata$5('design:type', Number)\n\t    ], ConnectedOverlayDirective.prototype, \"offsetX\", void 0);\n\t    __decorate$5([\n\t        _angular_core.Input(), \n\t        __metadata$5('design:type', Number)\n\t    ], ConnectedOverlayDirective.prototype, \"offsetY\", void 0);\n\t    __decorate$5([\n\t        _angular_core.Input(), \n\t        __metadata$5('design:type', Object)\n\t    ], ConnectedOverlayDirective.prototype, \"width\", void 0);\n\t    __decorate$5([\n\t        _angular_core.Input(), \n\t        __metadata$5('design:type', Object)\n\t    ], ConnectedOverlayDirective.prototype, \"height\", void 0);\n\t    __decorate$5([\n\t        _angular_core.Input(), \n\t        __metadata$5('design:type', String)\n\t    ], ConnectedOverlayDirective.prototype, \"backdropClass\", void 0);\n\t    __decorate$5([\n\t        _angular_core.Input(), \n\t        __metadata$5('design:type', Object)\n\t    ], ConnectedOverlayDirective.prototype, \"hasBackdrop\", null);\n\t    __decorate$5([\n\t        _angular_core.Input(), \n\t        __metadata$5('design:type', Object)\n\t    ], ConnectedOverlayDirective.prototype, \"open\", null);\n\t    __decorate$5([\n\t        _angular_core.Output(), \n\t        __metadata$5('design:type', Object)\n\t    ], ConnectedOverlayDirective.prototype, \"backdropClick\", void 0);\n\t    ConnectedOverlayDirective = __decorate$5([\n\t        _angular_core.Directive({\n\t            selector: '[connected-overlay]',\n\t            exportAs: 'connectedOverlay'\n\t        }),\n\t        __param(3, _angular_core.Optional()), \n\t        __metadata$5('design:paramtypes', [Overlay, _angular_core.TemplateRef, _angular_core.ViewContainerRef, Dir])\n\t    ], ConnectedOverlayDirective);\n\t    return ConnectedOverlayDirective;\n\t}());\n\tvar OverlayModule = (function () {\n\t    function OverlayModule() {\n\t    }\n\t    OverlayModule.forRoot = function () {\n\t        return {\n\t            ngModule: OverlayModule,\n\t            providers: OVERLAY_PROVIDERS,\n\t        };\n\t    };\n\t    OverlayModule = __decorate$5([\n\t        _angular_core.NgModule({\n\t            imports: [PortalModule],\n\t            exports: [ConnectedOverlayDirective, OverlayOrigin],\n\t            declarations: [ConnectedOverlayDirective, OverlayOrigin],\n\t        }), \n\t        __metadata$5('design:paramtypes', [])\n\t    ], OverlayModule);\n\t    return OverlayModule;\n\t}());\n\t\n\tvar __decorate$11 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$11 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/**\n\t * Utility for checking the interactivity of an element, such as whether is is focusable or\n\t * tabbable.\n\t *\n\t * NOTE: Currently does not capture any special element behaviors, browser quirks, or edge cases.\n\t * This is a basic/naive starting point onto which further behavior will be added.\n\t *\n\t * This class uses instance methods instead of static functions so that alternate implementations\n\t * can be injected.\n\t *\n\t * TODO(jelbourn): explore using ally.js directly for its significantly more robust\n\t * checks (need to evaluate payload size, performance, and compatibility with tree-shaking).\n\t */\n\tvar InteractivityChecker = (function () {\n\t    function InteractivityChecker() {\n\t    }\n\t    /** Gets whether an element is disabled. */\n\t    InteractivityChecker.prototype.isDisabled = function (element) {\n\t        // This does not capture some cases, such as a non-form control with a disabled attribute or\n\t        // a form control inside of a disabled form, but should capture the most common cases.\n\t        return element.hasAttribute('disabled');\n\t    };\n\t    /**\n\t     * Gets whether an element is visible for the purposes of interactivity.\n\t     *\n\t     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n\t     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n\t     */\n\t    InteractivityChecker.prototype.isVisible = function (element) {\n\t        // There are additional special cases that this does not capture, but this will work for\n\t        // the most common cases.\n\t        // Use logic from jQuery to check for `display: none`.\n\t        // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n\t        if (!(element.offsetWidth || element.offsetHeight || element.getClientRects().length)) {\n\t            return false;\n\t        }\n\t        // Check for css `visibility` property.\n\t        // TODO(jelbourn): do any browsers we support return an empty string instead of 'visible'?\n\t        return getComputedStyle(element).getPropertyValue('visibility') == 'visible';\n\t    };\n\t    /**\n\t     * Gets whether an element can be reached via Tab key.\n\t     * Assumes that the element has already been checked with isFocusable.\n\t     */\n\t    InteractivityChecker.prototype.isTabbable = function (element) {\n\t        // Again, naive approach that does not capture many special cases and browser quirks.\n\t        return element.tabIndex >= 0;\n\t    };\n\t    /** Gets whether an element can be focused by the user. */\n\t    InteractivityChecker.prototype.isFocusable = function (element) {\n\t        // Perform checks in order of left to most expensive.\n\t        // Again, naive approach that does not capture many edge cases and browser quirks.\n\t        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n\t    };\n\t    InteractivityChecker = __decorate$11([\n\t        _angular_core.Injectable(), \n\t        __metadata$11('design:paramtypes', [])\n\t    ], InteractivityChecker);\n\t    return InteractivityChecker;\n\t}());\n\t/** Gets whether an element's  */\n\tfunction isNativeFormElement(element) {\n\t    var nodeName = element.nodeName.toLowerCase();\n\t    return nodeName === 'input' ||\n\t        nodeName === 'select' ||\n\t        nodeName === 'button' ||\n\t        nodeName === 'textarea';\n\t}\n\t/** Gets whether an element is an <input type=\"hidden\">. */\n\tfunction isHiddenInput(element) {\n\t    return isInputElement(element) && element.type == 'hidden';\n\t}\n\t/** Gets whether an element is an anchor that has an href attribute. */\n\tfunction isAnchorWithHref(element) {\n\t    return isAnchorElement(element) && element.hasAttribute('href');\n\t}\n\t/** Gets whether an element is an input element. */\n\tfunction isInputElement(element) {\n\t    return element.nodeName == 'input';\n\t}\n\t/** Gets whether an element is an anchor element. */\n\tfunction isAnchorElement(element) {\n\t    return element.nodeName.toLowerCase() == 'a';\n\t}\n\t/** Gets whether an element has a valid tabindex. */\n\tfunction hasValidTabIndex(element) {\n\t    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n\t        return false;\n\t    }\n\t    var tabIndex = element.getAttribute('tabindex');\n\t    // IE11 parses tabindex=\"\" as the value \"-32768\"\n\t    if (tabIndex == '-32768') {\n\t        return false;\n\t    }\n\t    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n\t}\n\t/**\n\t * Gets whether an element is potentially focusable without taking current visible/disabled state\n\t * into account.\n\t */\n\tfunction isPotentiallyFocusable(element) {\n\t    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n\t    if (isHiddenInput(element)) {\n\t        return false;\n\t    }\n\t    return isNativeFormElement(element) ||\n\t        isAnchorWithHref(element) ||\n\t        element.hasAttribute('contenteditable') ||\n\t        hasValidTabIndex(element);\n\t}\n\t\n\tvar __decorate$10 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$10 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/**\n\t * Directive for trapping focus within a region.\n\t *\n\t * NOTE: This directive currently uses a very simple (naive) approach to focus trapping.\n\t * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n\t * Things like tabIndex > 0, flex `order`, and shadow roots can cause to two to misalign.\n\t * This will be replaced with a more intelligent solution before the library is considered stable.\n\t */\n\tvar FocusTrap = (function () {\n\t    function FocusTrap(_checker) {\n\t        this._checker = _checker;\n\t    }\n\t    /** Focuses the first tabbable element within the focus trap region. */\n\t    FocusTrap.prototype.focusFirstTabbableElement = function () {\n\t        var redirectToElement = this._getFirstTabbableElement(this.trappedContent.nativeElement);\n\t        if (redirectToElement) {\n\t            redirectToElement.focus();\n\t        }\n\t    };\n\t    /** Focuses the last tabbable element within the focus trap region. */\n\t    FocusTrap.prototype.focusLastTabbableElement = function () {\n\t        var redirectToElement = this._getLastTabbableElement(this.trappedContent.nativeElement);\n\t        if (redirectToElement) {\n\t            redirectToElement.focus();\n\t        }\n\t    };\n\t    /** Get the first tabbable element from a DOM subtree (inclusive). */\n\t    FocusTrap.prototype._getFirstTabbableElement = function (root) {\n\t        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n\t            return root;\n\t        }\n\t        // Iterate in DOM order.\n\t        var childCount = root.children.length;\n\t        for (var i = 0; i < childCount; i++) {\n\t            var tabbableChild = this._getFirstTabbableElement(root.children[i]);\n\t            if (tabbableChild) {\n\t                return tabbableChild;\n\t            }\n\t        }\n\t        return null;\n\t    };\n\t    /** Get the last tabbable element from a DOM subtree (inclusive). */\n\t    FocusTrap.prototype._getLastTabbableElement = function (root) {\n\t        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n\t            return root;\n\t        }\n\t        // Iterate in reverse DOM order.\n\t        for (var i = root.children.length - 1; i >= 0; i--) {\n\t            var tabbableChild = this._getLastTabbableElement(root.children[i]);\n\t            if (tabbableChild) {\n\t                return tabbableChild;\n\t            }\n\t        }\n\t        return null;\n\t    };\n\t    __decorate$10([\n\t        _angular_core.ViewChild('trappedContent'), \n\t        __metadata$10('design:type', _angular_core.ElementRef)\n\t    ], FocusTrap.prototype, \"trappedContent\", void 0);\n\t    FocusTrap = __decorate$10([\n\t        _angular_core.Component({selector: 'focus-trap',\n\t            // TODO(jelbourn): move this to a separate file.\n\t            template: \"\\n  <div tabindex=\\\"0\\\" (focus)=\\\"focusLastTabbableElement()\\\"></div>\\n  <div #trappedContent><ng-content></ng-content></div>\\n  <div tabindex=\\\"0\\\" (focus)=\\\"focusFirstTabbableElement()\\\"></div>\",\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t        }), \n\t        __metadata$10('design:paramtypes', [InteractivityChecker])\n\t    ], FocusTrap);\n\t    return FocusTrap;\n\t}());\n\t\n\tvar __decorate$12 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$12 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar __param$1 = (this && this.__param) || function (paramIndex, decorator) {\n\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t};\n\tvar LIVE_ANNOUNCER_ELEMENT_TOKEN = new _angular_core.OpaqueToken('mdLiveAnnouncerElement');\n\tvar MdLiveAnnouncer = (function () {\n\t    function MdLiveAnnouncer(elementToken) {\n\t        // We inject the live element as `any` because the constructor signature cannot reference\n\t        // browser globals (HTMLElement) on non-browser environments, since having a class decorator\n\t        // causes TypeScript to preserve the constructor signature types.\n\t        this._liveElement = elementToken || this._createLiveElement();\n\t    }\n\t    /**\n\t     * @param message Message to be announced to the screenreader\n\t     * @param politeness The politeness of the announcer element.\n\t     */\n\t    MdLiveAnnouncer.prototype.announce = function (message, politeness) {\n\t        var _this = this;\n\t        if (politeness === void 0) { politeness = 'polite'; }\n\t        this._liveElement.textContent = '';\n\t        // TODO: ensure changing the politeness works on all environments we support.\n\t        this._liveElement.setAttribute('aria-live', politeness);\n\t        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n\t        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n\t        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n\t        //   second time without clearing and then using a non-zero delay.\n\t        // (using JAWS 17 at time of this writing).\n\t        setTimeout(function () { return _this._liveElement.textContent = message; }, 100);\n\t    };\n\t    /** Removes the aria-live element from the DOM. */\n\t    MdLiveAnnouncer.prototype._removeLiveElement = function () {\n\t        if (this._liveElement && this._liveElement.parentNode) {\n\t            this._liveElement.parentNode.removeChild(this._liveElement);\n\t        }\n\t    };\n\t    MdLiveAnnouncer.prototype._createLiveElement = function () {\n\t        var liveEl = document.createElement('div');\n\t        liveEl.classList.add('md-visually-hidden');\n\t        liveEl.setAttribute('aria-atomic', 'true');\n\t        liveEl.setAttribute('aria-live', 'polite');\n\t        document.body.appendChild(liveEl);\n\t        return liveEl;\n\t    };\n\t    MdLiveAnnouncer = __decorate$12([\n\t        _angular_core.Injectable(),\n\t        __param$1(0, _angular_core.Optional()),\n\t        __param$1(0, _angular_core.Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)), \n\t        __metadata$12('design:paramtypes', [Object])\n\t    ], MdLiveAnnouncer);\n\t    return MdLiveAnnouncer;\n\t}());\n\t\n\tvar __decorate$9 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$9 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar A11Y_PROVIDERS = [MdLiveAnnouncer, InteractivityChecker];\n\tvar A11yModule = (function () {\n\t    function A11yModule() {\n\t    }\n\t    A11yModule.forRoot = function () {\n\t        return {\n\t            ngModule: A11yModule,\n\t            providers: A11Y_PROVIDERS,\n\t        };\n\t    };\n\t    A11yModule = __decorate$9([\n\t        _angular_core.NgModule({\n\t            declarations: [FocusTrap],\n\t            exports: [FocusTrap],\n\t        }), \n\t        __metadata$9('design:paramtypes', [])\n\t    ], A11yModule);\n\t    return A11yModule;\n\t}());\n\t\n\tvar __extends$5 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate$13 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$13 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/* Adjusts configuration of our gesture library, Hammer. */\n\tvar MdGestureConfig = (function (_super) {\n\t    __extends$5(MdGestureConfig, _super);\n\t    function MdGestureConfig() {\n\t        _super.apply(this, arguments);\n\t        /* List of new event names to add to the gesture support list */\n\t        this.events = [\n\t            'longpress',\n\t            'slide',\n\t            'slidestart',\n\t            'slideend',\n\t            'slideright',\n\t            'slideleft'\n\t        ];\n\t    }\n\t    /*\n\t     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n\t     *\n\t     * Our gesture names come from the Material Design gestures spec:\n\t     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n\t     *\n\t     * More information on default recognizers can be found in Hammer docs:\n\t     * http://hammerjs.github.io/recognizer-pan/\n\t     * http://hammerjs.github.io/recognizer-press/\n\t     *\n\t     * TODO: Confirm threshold numbers with Material Design UX Team\n\t     * */\n\t    MdGestureConfig.prototype.buildHammer = function (element) {\n\t        var mc = new Hammer(element);\n\t        // Default Hammer Recognizers.\n\t        var pan = new Hammer.Pan();\n\t        var swipe = new Hammer.Swipe();\n\t        var press = new Hammer.Press();\n\t        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n\t        // Otherwise the previous `recognizeWith` will be dropped.\n\t        var slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n\t        var longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n\t        // Overwrite the default `pan` event to use the swipe event.\n\t        pan.recognizeWith(swipe);\n\t        // Add customized gestures to Hammer manager\n\t        mc.add([swipe, press, pan, slide, longpress]);\n\t        return mc;\n\t    };\n\t    /** Creates a new recognizer, without affecting the default recognizers of HammerJS */\n\t    MdGestureConfig.prototype._createRecognizer = function (base, options) {\n\t        var inheritances = [];\n\t        for (var _i = 2; _i < arguments.length; _i++) {\n\t            inheritances[_i - 2] = arguments[_i];\n\t        }\n\t        var recognizer = new base.constructor(options);\n\t        inheritances.push(base);\n\t        inheritances.forEach(function (item) { return recognizer.recognizeWith(item); });\n\t        return recognizer;\n\t    };\n\t    MdGestureConfig = __decorate$13([\n\t        _angular_core.Injectable(), \n\t        __metadata$13('design:paramtypes', [])\n\t    ], MdGestureConfig);\n\t    return MdGestureConfig;\n\t}(_angular_platformBrowser.HammerGestureConfig));\n\t\n\t/**\n\t * Screenreaders will often fire fake mousedown events when a focusable element\n\t * is activated using the keyboard. We can typically distinguish between these faked\n\t * mousedown events and real mousedown events using the \"buttons\" property. While\n\t * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n\t * the left mouse button), faked mousedowns will usually set the property value to 0.\n\t */\n\tfunction isFakeMousedownFromScreenReader(event) {\n\t    return event.buttons === 0;\n\t}\n\t\n\tvar __decorate$14 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$14 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/**\n\t * Class to coordinate unique selection based on name.\n\t * Intended to be consumed as an Angular service.\n\t * This service is needed because native radio change events are only fired on the item currently\n\t * being selected, and we still need to uncheck the previous selection.\n\t *\n\t * This service does not *store* any IDs and names because they may change at any time, so it is\n\t * less error-prone if they are simply passed through when the events occur.\n\t */\n\tvar MdUniqueSelectionDispatcher = (function () {\n\t    function MdUniqueSelectionDispatcher() {\n\t        this._listeners = [];\n\t    }\n\t    /** Notify other items that selection for the given name has been set. */\n\t    MdUniqueSelectionDispatcher.prototype.notify = function (id, name) {\n\t        for (var _i = 0, _a = this._listeners; _i < _a.length; _i++) {\n\t            var listener = _a[_i];\n\t            listener(id, name);\n\t        }\n\t    };\n\t    /** Listen for future changes to item selection. */\n\t    MdUniqueSelectionDispatcher.prototype.listen = function (listener) {\n\t        this._listeners.push(listener);\n\t    };\n\t    MdUniqueSelectionDispatcher = __decorate$14([\n\t        _angular_core.Injectable(), \n\t        __metadata$14('design:paramtypes', [])\n\t    ], MdUniqueSelectionDispatcher);\n\t    return MdUniqueSelectionDispatcher;\n\t}());\n\t\n\t// Due to a bug in the ChromeDriver, Angular 2 keyboard events are not triggered by `sendKeys`\n\t// during E2E tests when using dot notation such as `(keydown.rightArrow)`. To get around this,\n\t// we are temporarily using a single (keydown) handler.\n\t// See: https://github.com/angular/angular/issues/9419\n\tvar UP_ARROW = 38;\n\tvar DOWN_ARROW = 40;\n\tvar RIGHT_ARROW = 39;\n\tvar LEFT_ARROW = 37;\n\tvar ENTER = 13;\n\tvar SPACE = 32;\n\tvar TAB = 9;\n\t\n\tvar __decorate$15 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$15 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/** Selector that matches all elements that may have style collisions with material1. */\n\tvar ELEMENTS_SELECTOR = \"\\n  md-card,\\n  md-card-actions,\\n  md-card-content,\\n  md-card-footer,\\n  md-card-header,\\n  md-card-subtitle,\\n  md-card-title,\\n  md-card-title-group,\\n  md-checkbox,\\n  md-dialog-container,\\n  md-divider,\\n  md-grid-list,\\n  md-grid-tile,\\n  md-grid-tile-footer,\\n  md-grid-tile-header,\\n  md-hint,\\n  md-icon,\\n  md-ink-bar,\\n  md-input,\\n  md-list,\\n  md-list-item,\\n  md-menu,\\n  md-nav-list,\\n  md-option,\\n  md-placeholder,\\n  md-progress-bar,\\n  md-progress-circle,\\n  md-radio-button,\\n  md-radio-group,\\n  md-select,\\n  md-sidenav,\\n  md-slider,\\n  md-spinner,\\n  md-tab,\\n  md-toolbar\\n\";\n\t/**\n\t * Directive to apply to all material2 components that use the same element name as a\n\t * component in material2. It does two things:\n\t * 1) Adds the css class \"md2\" to the host element so that material1 can use this class with a\n\t *    :not() in order to avoid affecting material2 elements.\n\t * 2) Adds a css class to the element that is identical to the element's tag. E.g., the element\n\t *    `<md-card>` would be given a css class `md-card`. This is done so that material2 can style\n\t *    only these classes instead of defining element rules that would affect material1 components.\n\t */\n\tvar StyleCompatibility = (function () {\n\t    function StyleCompatibility(renderer, elementRef) {\n\t        var element = elementRef.nativeElement;\n\t        renderer.setElementClass(element, 'md2', true);\n\t        renderer.setElementClass(element, element.nodeName.toLowerCase(), true);\n\t    }\n\t    StyleCompatibility = __decorate$15([\n\t        _angular_core.Directive({\n\t            selector: ELEMENTS_SELECTOR,\n\t        }), \n\t        __metadata$15('design:paramtypes', [_angular_core.Renderer, _angular_core.ElementRef])\n\t    ], StyleCompatibility);\n\t    return StyleCompatibility;\n\t}());\n\tvar StyleCompatibilityModule = (function () {\n\t    function StyleCompatibilityModule() {\n\t    }\n\t    StyleCompatibilityModule.forRoot = function () {\n\t        return {\n\t            ngModule: StyleCompatibilityModule,\n\t            providers: [],\n\t        };\n\t    };\n\t    StyleCompatibilityModule = __decorate$15([\n\t        _angular_core.NgModule({\n\t            declarations: [StyleCompatibility],\n\t            exports: [StyleCompatibility],\n\t        }), \n\t        __metadata$15('design:paramtypes', [])\n\t    ], StyleCompatibilityModule);\n\t    return StyleCompatibilityModule;\n\t}());\n\t\n\tvar AnimationCurves = (function () {\n\t    function AnimationCurves() {\n\t    }\n\t    AnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n\t    AnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n\t    AnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n\t    AnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n\t    return AnimationCurves;\n\t}());\n\t;\n\tvar AnimationDurations = (function () {\n\t    function AnimationDurations() {\n\t    }\n\t    AnimationDurations.COMPLEX = '375ms';\n\t    AnimationDurations.ENTERING = '225ms';\n\t    AnimationDurations.EXITING = '195ms';\n\t    return AnimationDurations;\n\t}());\n\t;\n\t\n\t/** Coerces a data-bound value (typically a string) to a boolean. */\n\tfunction coerceBooleanProperty(value) {\n\t    return value != null && \"\" + value !== 'false';\n\t}\n\t\n\t/** Coerces a data-bound value (typically a string) to a number. */\n\tfunction coerceNumberProperty(value, fallbackValue) {\n\t    if (fallbackValue === void 0) { fallbackValue = 0; }\n\t    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n\t    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n\t    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n\t    return isNaN(parseFloat(value)) || isNaN(Number(value)) ? fallbackValue : Number(value);\n\t}\n\t\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar MdCoreModule = (function () {\n\t    function MdCoreModule() {\n\t    }\n\t    MdCoreModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdCoreModule,\n\t            providers: [A11Y_PROVIDERS, OVERLAY_PROVIDERS],\n\t        };\n\t    };\n\t    MdCoreModule = __decorate([\n\t        _angular_core.NgModule({\n\t            imports: [MdLineModule, RtlModule, MdRippleModule, PortalModule, OverlayModule, A11yModule],\n\t            exports: [MdLineModule, RtlModule, MdRippleModule, PortalModule, OverlayModule, A11yModule],\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], MdCoreModule);\n\t    return MdCoreModule;\n\t}());\n\t\n\tvar __decorate$17 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$17 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar __param$2 = (this && this.__param) || function (paramIndex, decorator) {\n\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t};\n\t/**\n\t * Provider Expression that allows md-button-toggle-group to register as a ControlValueAccessor.\n\t * This allows it to support [(ngModel)].\n\t */\n\tvar MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n\t    provide: _angular_forms.NG_VALUE_ACCESSOR,\n\t    useExisting: _angular_core.forwardRef(function () { return MdButtonToggleGroup; }),\n\t    multi: true\n\t};\n\tvar _uniqueIdCounter = 0;\n\t/** A simple change event emitted by either MdButtonToggle or MdButtonToggleGroup. */\n\tvar MdButtonToggleChange = (function () {\n\t    function MdButtonToggleChange() {\n\t    }\n\t    return MdButtonToggleChange;\n\t}());\n\t/** Exclusive selection button toggle group that behaves like a radio-button group. */\n\tvar MdButtonToggleGroup = (function () {\n\t    function MdButtonToggleGroup() {\n\t        /** The value for the button toggle group. Should match currently selected button toggle. */\n\t        this._value = null;\n\t        /** The HTML name attribute applied to toggles in this group. */\n\t        this._name = \"md-radio-group-\" + _uniqueIdCounter++;\n\t        /** Disables all toggles in the group. */\n\t        this._disabled = null;\n\t        /** The currently selected button toggle, should match the value. */\n\t        this._selected = null;\n\t        /** Whether the button toggle group is initialized or not. */\n\t        this._isInitialized = false;\n\t        /**\n\t         * The method to be called in order to update ngModel.\n\t         * Now `ngModel` binding is not supported in multiple selection mode.\n\t         */\n\t        this._controlValueAccessorChangeFn = function (value) { };\n\t        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n\t        this.onTouched = function () { };\n\t        /** Event emitted when the group's value changes. */\n\t        this._change = new _angular_core.EventEmitter();\n\t        /** Child button toggle buttons. */\n\t        this._buttonToggles = null;\n\t    }\n\t    Object.defineProperty(MdButtonToggleGroup.prototype, \"change\", {\n\t        get: function () {\n\t            return this._change.asObservable();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /** TODO: internal */\n\t    MdButtonToggleGroup.prototype.ngAfterViewInit = function () {\n\t        this._isInitialized = true;\n\t    };\n\t    Object.defineProperty(MdButtonToggleGroup.prototype, \"name\", {\n\t        get: function () {\n\t            return this._name;\n\t        },\n\t        set: function (value) {\n\t            this._name = value;\n\t            this._updateButtonToggleNames();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdButtonToggleGroup.prototype, \"disabled\", {\n\t        get: function () {\n\t            return this._disabled;\n\t        },\n\t        set: function (value) {\n\t            this._disabled = coerceBooleanProperty(value);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdButtonToggleGroup.prototype, \"value\", {\n\t        get: function () {\n\t            return this._value;\n\t        },\n\t        set: function (newValue) {\n\t            if (this._value != newValue) {\n\t                this._value = newValue;\n\t                this._updateSelectedButtonToggleFromValue();\n\t                // Only emit a change event if the view is completely initialized.\n\t                // We don't want to emit a change event for the initial values.\n\t                if (this._isInitialized) {\n\t                    this._emitChangeEvent();\n\t                }\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdButtonToggleGroup.prototype, \"selected\", {\n\t        get: function () {\n\t            return this._selected;\n\t        },\n\t        set: function (selected) {\n\t            this._selected = selected;\n\t            this.value = selected ? selected.value : null;\n\t            if (selected && !selected.checked) {\n\t                selected.checked = true;\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    MdButtonToggleGroup.prototype._updateButtonToggleNames = function () {\n\t        var _this = this;\n\t        if (this._buttonToggles) {\n\t            this._buttonToggles.forEach(function (toggle) {\n\t                toggle.name = _this._name;\n\t            });\n\t        }\n\t    };\n\t    // TODO: Refactor into shared code with radio.\n\t    MdButtonToggleGroup.prototype._updateSelectedButtonToggleFromValue = function () {\n\t        var _this = this;\n\t        var isAlreadySelected = this._selected != null && this._selected.value == this._value;\n\t        if (this._buttonToggles != null && !isAlreadySelected) {\n\t            var matchingButtonToggle = this._buttonToggles.filter(function (buttonToggle) { return buttonToggle.value == _this._value; })[0];\n\t            if (matchingButtonToggle) {\n\t                this.selected = matchingButtonToggle;\n\t            }\n\t            else if (this.value == null) {\n\t                this.selected = null;\n\t                this._buttonToggles.forEach(function (buttonToggle) {\n\t                    buttonToggle.checked = false;\n\t                });\n\t            }\n\t        }\n\t    };\n\t    /** Dispatch change event with current selection and group value. */\n\t    MdButtonToggleGroup.prototype._emitChangeEvent = function () {\n\t        var event = new MdButtonToggleChange();\n\t        event.source = this._selected;\n\t        event.value = this._value;\n\t        this._controlValueAccessorChangeFn(event.value);\n\t        this._change.emit(event);\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     * TODO: internal\n\t     */\n\t    MdButtonToggleGroup.prototype.writeValue = function (value) {\n\t        this.value = value;\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     * TODO: internal\n\t     */\n\t    MdButtonToggleGroup.prototype.registerOnChange = function (fn) {\n\t        this._controlValueAccessorChangeFn = fn;\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     * TODO: internal\n\t     */\n\t    MdButtonToggleGroup.prototype.registerOnTouched = function (fn) {\n\t        this.onTouched = fn;\n\t    };\n\t    __decorate$17([\n\t        _angular_core.Output(), \n\t        __metadata$17('design:type', rxjs_Observable.Observable)\n\t    ], MdButtonToggleGroup.prototype, \"change\", null);\n\t    __decorate$17([\n\t        _angular_core.ContentChildren(_angular_core.forwardRef(function () { return MdButtonToggle; })), \n\t        __metadata$17('design:type', _angular_core.QueryList)\n\t    ], MdButtonToggleGroup.prototype, \"_buttonToggles\", void 0);\n\t    __decorate$17([\n\t        _angular_core.Input(), \n\t        __metadata$17('design:type', String)\n\t    ], MdButtonToggleGroup.prototype, \"name\", null);\n\t    __decorate$17([\n\t        _angular_core.Input(), \n\t        __metadata$17('design:type', Boolean)\n\t    ], MdButtonToggleGroup.prototype, \"disabled\", null);\n\t    __decorate$17([\n\t        _angular_core.Input(), \n\t        __metadata$17('design:type', Object)\n\t    ], MdButtonToggleGroup.prototype, \"value\", null);\n\t    __decorate$17([\n\t        _angular_core.Input(), \n\t        __metadata$17('design:type', Object)\n\t    ], MdButtonToggleGroup.prototype, \"selected\", null);\n\t    MdButtonToggleGroup = __decorate$17([\n\t        _angular_core.Directive({\n\t            selector: 'md-button-toggle-group:not([multiple])',\n\t            providers: [MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR],\n\t            host: {\n\t                'role': 'radiogroup',\n\t            },\n\t            exportAs: 'mdButtonToggleGroup',\n\t        }), \n\t        __metadata$17('design:paramtypes', [])\n\t    ], MdButtonToggleGroup);\n\t    return MdButtonToggleGroup;\n\t}());\n\t/** Multiple selection button-toggle group. `ngModel` is not supported in this mode. */\n\tvar MdButtonToggleGroupMultiple = (function () {\n\t    function MdButtonToggleGroupMultiple() {\n\t        /** Disables all toggles in the group. */\n\t        this._disabled = null;\n\t    }\n\t    Object.defineProperty(MdButtonToggleGroupMultiple.prototype, \"disabled\", {\n\t        get: function () {\n\t            return this._disabled;\n\t        },\n\t        set: function (value) {\n\t            this._disabled = (value != null && value !== false) ? true : null;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    __decorate$17([\n\t        _angular_core.Input(), \n\t        __metadata$17('design:type', Boolean)\n\t    ], MdButtonToggleGroupMultiple.prototype, \"disabled\", null);\n\t    MdButtonToggleGroupMultiple = __decorate$17([\n\t        _angular_core.Directive({\n\t            selector: 'md-button-toggle-group[multiple]',\n\t            exportAs: 'mdButtonToggleGroup',\n\t        }), \n\t        __metadata$17('design:paramtypes', [])\n\t    ], MdButtonToggleGroupMultiple);\n\t    return MdButtonToggleGroupMultiple;\n\t}());\n\tvar MdButtonToggle = (function () {\n\t    function MdButtonToggle(toggleGroup, toggleGroupMultiple, buttonToggleDispatcher) {\n\t        var _this = this;\n\t        this.buttonToggleDispatcher = buttonToggleDispatcher;\n\t        /** Whether or not this button toggle is checked. */\n\t        this._checked = false;\n\t        /** Whether or not this button toggle is disabled. */\n\t        this._disabled = null;\n\t        /** Value assigned to this button toggle. */\n\t        this._value = null;\n\t        /** Whether or not the button toggle is a single selection. */\n\t        this._isSingleSelector = null;\n\t        /** Event emitted when the group value changes. */\n\t        this._change = new _angular_core.EventEmitter();\n\t        this.buttonToggleGroup = toggleGroup;\n\t        this.buttonToggleGroupMultiple = toggleGroupMultiple;\n\t        if (this.buttonToggleGroup) {\n\t            buttonToggleDispatcher.listen(function (id, name) {\n\t                if (id != _this.id && name == _this.name) {\n\t                    _this.checked = false;\n\t                }\n\t            });\n\t            this._type = 'radio';\n\t            this.name = this.buttonToggleGroup.name;\n\t            this._isSingleSelector = true;\n\t        }\n\t        else {\n\t            // Even if there is no group at all, treat the button toggle as a checkbox so it can be\n\t            // toggled on or off.\n\t            this._type = 'checkbox';\n\t            this._isSingleSelector = false;\n\t        }\n\t    }\n\t    Object.defineProperty(MdButtonToggle.prototype, \"change\", {\n\t        get: function () {\n\t            return this._change.asObservable();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    MdButtonToggle.prototype.ngOnInit = function () {\n\t        if (this.id == null) {\n\t            this.id = \"md-button-toggle-\" + _uniqueIdCounter++;\n\t        }\n\t        if (this.buttonToggleGroup && this._value == this.buttonToggleGroup.value) {\n\t            this._checked = true;\n\t        }\n\t    };\n\t    Object.defineProperty(MdButtonToggle.prototype, \"inputId\", {\n\t        get: function () {\n\t            return this.id + \"-input\";\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdButtonToggle.prototype, \"checked\", {\n\t        get: function () {\n\t            return this._checked;\n\t        },\n\t        set: function (newCheckedState) {\n\t            if (this._isSingleSelector) {\n\t                if (newCheckedState) {\n\t                    // Notify all button toggles with the same name (in the same group) to un-check.\n\t                    this.buttonToggleDispatcher.notify(this.id, this.name);\n\t                }\n\t            }\n\t            this._checked = newCheckedState;\n\t            if (newCheckedState && this._isSingleSelector && this.buttonToggleGroup.value != this.value) {\n\t                this.buttonToggleGroup.selected = this;\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdButtonToggle.prototype, \"value\", {\n\t        /** MdButtonToggleGroup reads this to assign its own value. */\n\t        get: function () {\n\t            return this._value;\n\t        },\n\t        set: function (value) {\n\t            if (this._value != value) {\n\t                if (this.buttonToggleGroup != null && this.checked) {\n\t                    this.buttonToggleGroup.value = value;\n\t                }\n\t                this._value = value;\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /** Dispatch change event with current value. */\n\t    MdButtonToggle.prototype._emitChangeEvent = function () {\n\t        var event = new MdButtonToggleChange();\n\t        event.source = this;\n\t        event.value = this._value;\n\t        this._change.emit(event);\n\t    };\n\t    Object.defineProperty(MdButtonToggle.prototype, \"disabled\", {\n\t        get: function () {\n\t            return this._disabled || (this.buttonToggleGroup != null && this.buttonToggleGroup.disabled) ||\n\t                (this.buttonToggleGroupMultiple != null && this.buttonToggleGroupMultiple.disabled);\n\t        },\n\t        set: function (value) {\n\t            this._disabled = (value != null && value !== false) ? true : null;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /** Toggle the state of the current button toggle. */\n\t    MdButtonToggle.prototype._toggle = function () {\n\t        this.checked = !this.checked;\n\t    };\n\t    /** Checks the button toggle due to an interaction with the underlying native input. */\n\t    MdButtonToggle.prototype._onInputChange = function (event) {\n\t        event.stopPropagation();\n\t        if (this._isSingleSelector) {\n\t            // Propagate the change one-way via the group, which will in turn mark this\n\t            // button toggle as checked.\n\t            this.checked = true;\n\t            this.buttonToggleGroup.selected = this;\n\t            this.buttonToggleGroup.onTouched();\n\t        }\n\t        else {\n\t            this._toggle();\n\t        }\n\t        // Emit a change event when the native input does.\n\t        this._emitChangeEvent();\n\t    };\n\t    /** TODO: internal */\n\t    MdButtonToggle.prototype._onInputClick = function (event) {\n\t        // We have to stop propagation for click events on the visual hidden input element.\n\t        // By default, when a user clicks on a label element, a generated click event will be\n\t        // dispatched on the associated input element. Since we are using a label element as our\n\t        // root container, the click event on the `slide-toggle` will be executed twice.\n\t        // The real click event will bubble up, and the generated click event also tries to bubble up.\n\t        // This will lead to multiple click events.\n\t        // Preventing bubbling for the second event will solve that issue.\n\t        event.stopPropagation();\n\t    };\n\t    __decorate$17([\n\t        _angular_core.HostBinding(),\n\t        _angular_core.Input(), \n\t        __metadata$17('design:type', String)\n\t    ], MdButtonToggle.prototype, \"id\", void 0);\n\t    __decorate$17([\n\t        _angular_core.Input(), \n\t        __metadata$17('design:type', String)\n\t    ], MdButtonToggle.prototype, \"name\", void 0);\n\t    __decorate$17([\n\t        _angular_core.Output(), \n\t        __metadata$17('design:type', rxjs_Observable.Observable)\n\t    ], MdButtonToggle.prototype, \"change\", null);\n\t    __decorate$17([\n\t        _angular_core.HostBinding('class.md-button-toggle-checked'),\n\t        _angular_core.Input(), \n\t        __metadata$17('design:type', Boolean)\n\t    ], MdButtonToggle.prototype, \"checked\", null);\n\t    __decorate$17([\n\t        _angular_core.Input(), \n\t        __metadata$17('design:type', Object)\n\t    ], MdButtonToggle.prototype, \"value\", null);\n\t    __decorate$17([\n\t        _angular_core.HostBinding('class.md-button-toggle-disabled'),\n\t        _angular_core.Input(), \n\t        __metadata$17('design:type', Boolean)\n\t    ], MdButtonToggle.prototype, \"disabled\", null);\n\t    MdButtonToggle = __decorate$17([\n\t        _angular_core.Component({selector: 'md-button-toggle',\n\t            template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"md-button-toggle-label\\\"> <input #input class=\\\"md-button-toggle-input md-visually-hidden\\\" [type]=\\\"_type\\\" [id]=\\\"inputId\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [name]=\\\"name\\\" (change)=\\\"_onInputChange($event)\\\" (click)=\\\"_onInputClick($event)\\\"> <div class=\\\"md-button-toggle-label-content\\\"> <ng-content></ng-content> </div> </label> \",\n\t            styles: [\"md-button-toggle-group { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); position: relative; display: inline-flex; border-radius: 2px; cursor: pointer; white-space: nowrap; } .md-button-toggle-disabled .md-button-toggle-label-content { cursor: default; } md-button-toggle { white-space: nowrap; } .md-button-toggle-label-content { display: inline-block; line-height: 36px; padding: 0 16px; cursor: pointer; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } .md-button-toggle-label-content > * { vertical-align: middle; } /*# sourceMappingURL=button-toggle.css.map */ \"],\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t        }),\n\t        __param$2(0, _angular_core.Optional()),\n\t        __param$2(1, _angular_core.Optional()), \n\t        __metadata$17('design:paramtypes', [MdButtonToggleGroup, MdButtonToggleGroupMultiple, MdUniqueSelectionDispatcher])\n\t    ], MdButtonToggle);\n\t    return MdButtonToggle;\n\t}());\n\tvar MdButtonToggleModule = (function () {\n\t    function MdButtonToggleModule() {\n\t    }\n\t    MdButtonToggleModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdButtonToggleModule,\n\t            providers: [MdUniqueSelectionDispatcher]\n\t        };\n\t    };\n\t    MdButtonToggleModule = __decorate$17([\n\t        _angular_core.NgModule({\n\t            imports: [_angular_forms.FormsModule],\n\t            exports: [MdButtonToggleGroup, MdButtonToggleGroupMultiple, MdButtonToggle],\n\t            declarations: [MdButtonToggleGroup, MdButtonToggleGroupMultiple, MdButtonToggle],\n\t        }), \n\t        __metadata$17('design:paramtypes', [])\n\t    ], MdButtonToggleModule);\n\t    return MdButtonToggleModule;\n\t}());\n\t\n\tvar __extends$6 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate$18 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$18 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t// TODO(jelbourn): Make the `isMouseDown` stuff done with one global listener.\n\t// TODO(kara): Convert attribute selectors to classes when attr maps become available\n\tvar MdButton = (function () {\n\t    function MdButton(_elementRef, _renderer) {\n\t        this._elementRef = _elementRef;\n\t        this._renderer = _renderer;\n\t        /** Whether the button has focus from the keyboard (not the mouse). Used for class binding. */\n\t        this._isKeyboardFocused = false;\n\t        /** Whether a mousedown has occurred on this element in the last 100ms. */\n\t        this._isMouseDown = false;\n\t        /** Whether the ripple effect on click should be disabled. */\n\t        this._disableRipple = false;\n\t        this._disabled = false;\n\t    }\n\t    Object.defineProperty(MdButton.prototype, \"disableRipple\", {\n\t        get: function () { return this._disableRipple; },\n\t        set: function (v) { this._disableRipple = coerceBooleanProperty(v); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdButton.prototype, \"disabled\", {\n\t        get: function () { return this._disabled; },\n\t        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdButton.prototype, \"color\", {\n\t        get: function () {\n\t            return this._color;\n\t        },\n\t        set: function (value) {\n\t            this._updateColor(value);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    MdButton.prototype._setMousedown = function () {\n\t        var _this = this;\n\t        // We only *show* the focus style when focus has come to the button via the keyboard.\n\t        // The Material Design spec is silent on this topic, and without doing this, the\n\t        // button continues to look :active after clicking.\n\t        // @see http://marcysutton.com/button-focus-hell/\n\t        this._isMouseDown = true;\n\t        setTimeout(function () { _this._isMouseDown = false; }, 100);\n\t    };\n\t    MdButton.prototype._updateColor = function (newColor) {\n\t        this._setElementColor(this._color, false);\n\t        this._setElementColor(newColor, true);\n\t        this._color = newColor;\n\t    };\n\t    MdButton.prototype._setElementColor = function (color, isAdd) {\n\t        if (color != null && color != '') {\n\t            this._renderer.setElementClass(this._elementRef.nativeElement, \"md-\" + color, isAdd);\n\t        }\n\t    };\n\t    MdButton.prototype._setKeyboardFocus = function () {\n\t        this._isKeyboardFocused = !this._isMouseDown;\n\t    };\n\t    MdButton.prototype._removeKeyboardFocus = function () {\n\t        this._isKeyboardFocused = false;\n\t    };\n\t    /** TODO(hansl): e2e test this function. */\n\t    MdButton.prototype.focus = function () {\n\t        this._elementRef.nativeElement.focus();\n\t    };\n\t    MdButton.prototype.getHostElement = function () {\n\t        return this._elementRef.nativeElement;\n\t    };\n\t    MdButton.prototype.isRoundButton = function () {\n\t        var el = this._elementRef.nativeElement;\n\t        return el.hasAttribute('md-icon-button') ||\n\t            el.hasAttribute('md-fab') ||\n\t            el.hasAttribute('md-mini-fab');\n\t    };\n\t    MdButton.prototype._isRippleDisabled = function () {\n\t        return this.disableRipple || this.disabled;\n\t    };\n\t    __decorate$18([\n\t        _angular_core.Input(), \n\t        __metadata$18('design:type', Object)\n\t    ], MdButton.prototype, \"disableRipple\", null);\n\t    __decorate$18([\n\t        _angular_core.Input(), \n\t        __metadata$18('design:type', Object)\n\t    ], MdButton.prototype, \"disabled\", null);\n\t    __decorate$18([\n\t        _angular_core.Input(), \n\t        __metadata$18('design:type', String)\n\t    ], MdButton.prototype, \"color\", null);\n\t    MdButton = __decorate$18([\n\t        _angular_core.Component({selector: 'button[md-button], button[md-raised-button], button[md-icon-button], ' +\n\t                'button[md-fab], button[md-mini-fab]',\n\t            host: {\n\t                '[disabled]': 'disabled',\n\t                '[class.md-button-focus]': '_isKeyboardFocused',\n\t                '(mousedown)': '_setMousedown()',\n\t                '(focus)': '_setKeyboardFocus()',\n\t                '(blur)': '_removeKeyboardFocus()',\n\t            },\n\t            template: \"<span class=\\\"md-button-wrapper\\\"><ng-content></ng-content></span> <div md-ripple *ngIf=\\\"!_isRippleDisabled()\\\" class=\\\"md-button-ripple\\\" [class.md-button-ripple-round]=\\\"isRoundButton()\\\" [md-ripple-trigger]=\\\"getHostElement()\\\" [md-ripple-color]=\\\"isRoundButton() ? 'rgba(255, 255, 255, 0.2)' : ''\\\" md-ripple-background-color=\\\"rgba(0, 0, 0, 0)\\\"></div> \",\n\t            styles: [\"[md-raised-button], [md-fab], [md-mini-fab], [md-button], [md-icon-button] { box-sizing: border-box; position: relative; cursor: pointer; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; outline: none; border: none; display: inline-block; white-space: nowrap; text-decoration: none; vertical-align: baseline; font-size: 14px; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; font-weight: 500; color: currentColor; text-align: center; margin: 0; min-width: 88px; line-height: 36px; padding: 0 16px; border-radius: 2px; } [disabled][md-raised-button], [disabled][md-fab], [disabled][md-mini-fab], [disabled][md-button], [disabled][md-icon-button] { cursor: default; } .md-button-focus[md-raised-button]::after, .md-button-focus[md-fab]::after, .md-button-focus[md-mini-fab]::after, .md-button-focus[md-button]::after, .md-button-focus[md-icon-button]::after { position: absolute; top: 0; left: 0; bottom: 0; right: 0; content: ''; background-color: rgba(0, 0, 0, 0.12); border-radius: inherit; pointer-events: none; } [md-raised-button], [md-fab], [md-mini-fab] { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); transform: translate3d(0, 0, 0); transition: background 400ms cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); } [md-raised-button]:active, [md-fab]:active, [md-mini-fab]:active { box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); } [disabled][md-raised-button], [disabled][md-fab], [disabled][md-mini-fab] { box-shadow: none; } [md-button]:hover::after, [md-icon-button]:hover::after { position: absolute; top: 0; left: 0; bottom: 0; right: 0; content: ''; background-color: rgba(0, 0, 0, 0.12); border-radius: inherit; pointer-events: none; } [md-button][disabled]:hover.md-primary, [md-button][disabled]:hover.md-accent, [md-button][disabled]:hover.md-warn, [md-button][disabled]:hover::after, [md-icon-button][disabled]:hover.md-primary, [md-icon-button][disabled]:hover.md-accent, [md-icon-button][disabled]:hover.md-warn, [md-icon-button][disabled]:hover::after { background-color: transparent; } [md-fab] { min-width: 0; border-radius: 50%; width: 56px; height: 56px; padding: 0; } [md-fab] i, [md-fab] md-icon { padding: 16px 0; line-height: 24px; } [md-mini-fab] { min-width: 0; border-radius: 50%; width: 40px; height: 40px; padding: 0; } [md-mini-fab] i, [md-mini-fab] md-icon { padding: 8px 0; line-height: 24px; } [md-icon-button] { min-width: 0; padding: 0; width: 40px; height: 40px; line-height: 24px; border-radius: 50%; } [md-icon-button] .md-button-wrapper > * { line-height: 24px; vertical-align: middle; } [md-button] .md-button-wrapper > *, [md-raised-button] .md-button-wrapper > * { vertical-align: middle; } .md-button-ripple { position: absolute; top: 0; left: 0; bottom: 0; right: 0; } .md-button-ripple-round { border-radius: 50%; z-index: 1; } @media screen and (-ms-high-contrast: active) { .md-raised-button, .md-fab, .md-mini-fab { border: 1px solid #fff; } } /*# sourceMappingURL=button.css.map */ \"],\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n\t        }), \n\t        __metadata$18('design:paramtypes', [_angular_core.ElementRef, _angular_core.Renderer])\n\t    ], MdButton);\n\t    return MdButton;\n\t}());\n\tvar MdAnchor = (function (_super) {\n\t    __extends$6(MdAnchor, _super);\n\t    function MdAnchor(elementRef, renderer) {\n\t        _super.call(this, elementRef, renderer);\n\t    }\n\t    Object.defineProperty(MdAnchor.prototype, \"tabIndex\", {\n\t        get: function () {\n\t            return this.disabled ? -1 : 0;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdAnchor.prototype, \"isAriaDisabled\", {\n\t        get: function () {\n\t            return this.disabled ? 'true' : 'false';\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    MdAnchor.prototype._haltDisabledEvents = function (event) {\n\t        // A disabled button shouldn't apply any actions\n\t        if (this.disabled) {\n\t            event.preventDefault();\n\t            event.stopImmediatePropagation();\n\t        }\n\t    };\n\t    __decorate$18([\n\t        _angular_core.HostBinding('tabIndex'), \n\t        __metadata$18('design:type', Number)\n\t    ], MdAnchor.prototype, \"tabIndex\", null);\n\t    __decorate$18([\n\t        _angular_core.HostBinding('attr.aria-disabled'), \n\t        __metadata$18('design:type', String)\n\t    ], MdAnchor.prototype, \"isAriaDisabled\", null);\n\t    MdAnchor = __decorate$18([\n\t        _angular_core.Component({selector: 'a[md-button], a[md-raised-button], a[md-icon-button], a[md-fab], a[md-mini-fab]',\n\t            inputs: ['color', 'disabled', 'disableRipple'],\n\t            host: {\n\t                '[attr.disabled]': 'disabled',\n\t                '[class.md-button-focus]': '_isKeyboardFocused',\n\t                '(mousedown)': '_setMousedown()',\n\t                '(focus)': '_setKeyboardFocus()',\n\t                '(blur)': '_removeKeyboardFocus()',\n\t                '(click)': '_haltDisabledEvents($event)',\n\t            },\n\t            template: \"<span class=\\\"md-button-wrapper\\\"><ng-content></ng-content></span> <div md-ripple *ngIf=\\\"!_isRippleDisabled()\\\" class=\\\"md-button-ripple\\\" [class.md-button-ripple-round]=\\\"isRoundButton()\\\" [md-ripple-trigger]=\\\"getHostElement()\\\" [md-ripple-color]=\\\"isRoundButton() ? 'rgba(255, 255, 255, 0.2)' : ''\\\" md-ripple-background-color=\\\"rgba(0, 0, 0, 0)\\\"></div> \",\n\t            styles: [\"[md-raised-button], [md-fab], [md-mini-fab], [md-button], [md-icon-button] { box-sizing: border-box; position: relative; cursor: pointer; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; outline: none; border: none; display: inline-block; white-space: nowrap; text-decoration: none; vertical-align: baseline; font-size: 14px; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; font-weight: 500; color: currentColor; text-align: center; margin: 0; min-width: 88px; line-height: 36px; padding: 0 16px; border-radius: 2px; } [disabled][md-raised-button], [disabled][md-fab], [disabled][md-mini-fab], [disabled][md-button], [disabled][md-icon-button] { cursor: default; } .md-button-focus[md-raised-button]::after, .md-button-focus[md-fab]::after, .md-button-focus[md-mini-fab]::after, .md-button-focus[md-button]::after, .md-button-focus[md-icon-button]::after { position: absolute; top: 0; left: 0; bottom: 0; right: 0; content: ''; background-color: rgba(0, 0, 0, 0.12); border-radius: inherit; pointer-events: none; } [md-raised-button], [md-fab], [md-mini-fab] { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); transform: translate3d(0, 0, 0); transition: background 400ms cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); } [md-raised-button]:active, [md-fab]:active, [md-mini-fab]:active { box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); } [disabled][md-raised-button], [disabled][md-fab], [disabled][md-mini-fab] { box-shadow: none; } [md-button]:hover::after, [md-icon-button]:hover::after { position: absolute; top: 0; left: 0; bottom: 0; right: 0; content: ''; background-color: rgba(0, 0, 0, 0.12); border-radius: inherit; pointer-events: none; } [md-button][disabled]:hover.md-primary, [md-button][disabled]:hover.md-accent, [md-button][disabled]:hover.md-warn, [md-button][disabled]:hover::after, [md-icon-button][disabled]:hover.md-primary, [md-icon-button][disabled]:hover.md-accent, [md-icon-button][disabled]:hover.md-warn, [md-icon-button][disabled]:hover::after { background-color: transparent; } [md-fab] { min-width: 0; border-radius: 50%; width: 56px; height: 56px; padding: 0; } [md-fab] i, [md-fab] md-icon { padding: 16px 0; line-height: 24px; } [md-mini-fab] { min-width: 0; border-radius: 50%; width: 40px; height: 40px; padding: 0; } [md-mini-fab] i, [md-mini-fab] md-icon { padding: 8px 0; line-height: 24px; } [md-icon-button] { min-width: 0; padding: 0; width: 40px; height: 40px; line-height: 24px; border-radius: 50%; } [md-icon-button] .md-button-wrapper > * { line-height: 24px; vertical-align: middle; } [md-button] .md-button-wrapper > *, [md-raised-button] .md-button-wrapper > * { vertical-align: middle; } .md-button-ripple { position: absolute; top: 0; left: 0; bottom: 0; right: 0; } .md-button-ripple-round { border-radius: 50%; z-index: 1; } @media screen and (-ms-high-contrast: active) { .md-raised-button, .md-fab, .md-mini-fab { border: 1px solid #fff; } } /*# sourceMappingURL=button.css.map */ \"],\n\t            encapsulation: _angular_core.ViewEncapsulation.None\n\t        }), \n\t        __metadata$18('design:paramtypes', [_angular_core.ElementRef, _angular_core.Renderer])\n\t    ], MdAnchor);\n\t    return MdAnchor;\n\t}(MdButton));\n\tvar MdButtonModule = (function () {\n\t    function MdButtonModule() {\n\t    }\n\t    MdButtonModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdButtonModule,\n\t            providers: []\n\t        };\n\t    };\n\t    MdButtonModule = __decorate$18([\n\t        _angular_core.NgModule({\n\t            imports: [_angular_common.CommonModule, MdRippleModule],\n\t            exports: [MdButton, MdAnchor],\n\t            declarations: [MdButton, MdAnchor],\n\t        }), \n\t        __metadata$18('design:paramtypes', [])\n\t    ], MdButtonModule);\n\t    return MdButtonModule;\n\t}());\n\t\n\tvar __decorate$19 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$19 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/**\n\t * Monotonically increasing integer used to auto-generate unique ids for checkbox components.\n\t */\n\tvar nextId = 0;\n\t/**\n\t * Provider Expression that allows md-checkbox to register as a ControlValueAccessor. This allows it\n\t * to support [(ngModel)].\n\t */\n\tvar MD_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n\t    provide: _angular_forms.NG_VALUE_ACCESSOR,\n\t    useExisting: _angular_core.forwardRef(function () { return MdCheckbox; }),\n\t    multi: true\n\t};\n\t/**\n\t * Represents the different states that require custom transitions between them.\n\t */\n\t(function (TransitionCheckState) {\n\t    /** The initial state of the component before any user interaction. */\n\t    TransitionCheckState[TransitionCheckState[\"Init\"] = 0] = \"Init\";\n\t    /** The state representing the component when it's becoming checked. */\n\t    TransitionCheckState[TransitionCheckState[\"Checked\"] = 1] = \"Checked\";\n\t    /** The state representing the component when it's becoming unchecked. */\n\t    TransitionCheckState[TransitionCheckState[\"Unchecked\"] = 2] = \"Unchecked\";\n\t    /** The state representing the component when it's becoming indeterminate. */\n\t    TransitionCheckState[TransitionCheckState[\"Indeterminate\"] = 3] = \"Indeterminate\";\n\t})(exports.TransitionCheckState || (exports.TransitionCheckState = {}));\n\t// A simple change event emitted by the MdCheckbox component.\n\tvar MdCheckboxChange = (function () {\n\t    function MdCheckboxChange() {\n\t    }\n\t    return MdCheckboxChange;\n\t}());\n\t/**\n\t * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n\t * and exposes a similar API. An MdCheckbox can be either checked, unchecked, indeterminate, or\n\t * disabled. Note that all additional accessibility attributes are taken care of by the component,\n\t * so there is no need to provide them yourself. However, if you want to omit a label and still\n\t * have the checkbox be accessible, you may supply an [aria-label] input.\n\t * See: https://www.google.com/design/spec/components/selection-controls.html\n\t */\n\tvar MdCheckbox = (function () {\n\t    function MdCheckbox(_renderer, _elementRef) {\n\t        this._renderer = _renderer;\n\t        this._elementRef = _elementRef;\n\t        /**\n\t         * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n\t         * take precedence so this may be omitted.\n\t         */\n\t        this.ariaLabel = '';\n\t        /**\n\t         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n\t         */\n\t        this.ariaLabelledby = null;\n\t        /** A unique id for the checkbox. If one is not supplied, it is auto-generated. */\n\t        this.id = \"md-checkbox-\" + ++nextId;\n\t        /** Whether or not the checkbox should come before or after the label. */\n\t        this.align = 'start';\n\t        /**\n\t         * The tabindex attribute for the checkbox. Note that when the checkbox is disabled, the attribute\n\t         * on the host element will be removed. It will be placed back when the checkbox is re-enabled.\n\t         */\n\t        this.tabindex = 0;\n\t        /** Name value will be applied to the input element if present */\n\t        this.name = null;\n\t        /** Event emitted when the checkbox's `checked` value changes. */\n\t        this.change = new _angular_core.EventEmitter();\n\t        /** Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor. */\n\t        this.onTouched = function () { };\n\t        this._currentAnimationClass = '';\n\t        this._currentCheckState = exports.TransitionCheckState.Init;\n\t        this._checked = false;\n\t        this._indeterminate = false;\n\t        this._controlValueAccessorChangeFn = function (value) { };\n\t        this.hasFocus = false;\n\t        this.color = 'accent';\n\t    }\n\t    Object.defineProperty(MdCheckbox.prototype, \"disableRipple\", {\n\t        get: function () { return this._disableRipple; },\n\t        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdCheckbox.prototype, \"inputId\", {\n\t        /** ID to be applied to the `input` element */\n\t        get: function () {\n\t            return \"input-\" + this.id;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdCheckbox.prototype, \"required\", {\n\t        /** Whether the checkbox is required or not. */\n\t        get: function () { return this._required; },\n\t        set: function (value) { this._required = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdCheckbox.prototype, \"disabled\", {\n\t        /**\n\t         * Whether the checkbox is disabled. When the checkbox is disabled it cannot be interacted with.\n\t         * The correct ARIA attributes are applied to denote this to assistive technology.\n\t         */\n\t        get: function () { return this._disabled; },\n\t        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdCheckbox.prototype, \"checked\", {\n\t        /**\n\t         * Whether the checkbox is checked. Note that setting `checked` will immediately set\n\t         * `indeterminate` to false.\n\t         */\n\t        get: function () {\n\t            return this._checked;\n\t        },\n\t        set: function (checked) {\n\t            if (checked != this.checked) {\n\t                this._indeterminate = false;\n\t                this._checked = checked;\n\t                this._transitionCheckState(this._checked ? exports.TransitionCheckState.Checked : exports.TransitionCheckState.Unchecked);\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdCheckbox.prototype, \"indeterminate\", {\n\t        /**\n\t         * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n\t         * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n\t         * checkable items. Note that whenever `checked` is set, indeterminate is immediately set to\n\t         * false. This differs from the web platform in that indeterminate state on native\n\t         * checkboxes is only remove when the user manually checks the checkbox (rather than setting the\n\t         * `checked` property programmatically). However, we feel that this behavior is more accommodating\n\t         * to the way consumers would envision using this component.\n\t         */\n\t        get: function () {\n\t            return this._indeterminate;\n\t        },\n\t        set: function (indeterminate) {\n\t            this._indeterminate = indeterminate;\n\t            if (this._indeterminate) {\n\t                this._transitionCheckState(exports.TransitionCheckState.Indeterminate);\n\t            }\n\t            else {\n\t                this._transitionCheckState(this.checked ? exports.TransitionCheckState.Checked : exports.TransitionCheckState.Unchecked);\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdCheckbox.prototype, \"color\", {\n\t        /** Sets the color of the checkbox */\n\t        get: function () {\n\t            return this._color;\n\t        },\n\t        set: function (value) {\n\t            this._updateColor(value);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    MdCheckbox.prototype._updateColor = function (newColor) {\n\t        this._setElementColor(this._color, false);\n\t        this._setElementColor(newColor, true);\n\t        this._color = newColor;\n\t    };\n\t    MdCheckbox.prototype._setElementColor = function (color, isAdd) {\n\t        if (color != null && color != '') {\n\t            this._renderer.setElementClass(this._elementRef.nativeElement, \"md-\" + color, isAdd);\n\t        }\n\t    };\n\t    MdCheckbox.prototype._isRippleDisabled = function () {\n\t        return this.disableRipple || this.disabled;\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     * TODO: internal\n\t     */\n\t    MdCheckbox.prototype.writeValue = function (value) {\n\t        this.checked = !!value;\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     * TODO: internal\n\t     */\n\t    MdCheckbox.prototype.registerOnChange = function (fn) {\n\t        this._controlValueAccessorChangeFn = fn;\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     * TODO: internal\n\t     */\n\t    MdCheckbox.prototype.registerOnTouched = function (fn) {\n\t        this.onTouched = fn;\n\t    };\n\t    MdCheckbox.prototype._transitionCheckState = function (newState) {\n\t        var oldState = this._currentCheckState;\n\t        var renderer = this._renderer;\n\t        var elementRef = this._elementRef;\n\t        if (oldState === newState) {\n\t            return;\n\t        }\n\t        if (this._currentAnimationClass.length > 0) {\n\t            renderer.setElementClass(elementRef.nativeElement, this._currentAnimationClass, false);\n\t        }\n\t        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n\t        this._currentCheckState = newState;\n\t        if (this._currentAnimationClass.length > 0) {\n\t            renderer.setElementClass(elementRef.nativeElement, this._currentAnimationClass, true);\n\t        }\n\t    };\n\t    MdCheckbox.prototype._emitChangeEvent = function () {\n\t        var event = new MdCheckboxChange();\n\t        event.source = this;\n\t        event.checked = this.checked;\n\t        this._controlValueAccessorChangeFn(this.checked);\n\t        this.change.emit(event);\n\t    };\n\t    /** Informs the component when the input has focus so that we can style accordingly */\n\t    MdCheckbox.prototype._onInputFocus = function () {\n\t        this.hasFocus = true;\n\t    };\n\t    /** Informs the component when we lose focus in order to style accordingly */\n\t    MdCheckbox.prototype._onInputBlur = function () {\n\t        this.hasFocus = false;\n\t        this.onTouched();\n\t    };\n\t    /**\n\t     * Toggles the `checked` value between true and false\n\t     */\n\t    MdCheckbox.prototype.toggle = function () {\n\t        this.checked = !this.checked;\n\t    };\n\t    /**\n\t     * Event handler for checkbox input element.\n\t     * Toggles checked state if element is not disabled.\n\t     * @param event\n\t     */\n\t    MdCheckbox.prototype._onInteractionEvent = function (event) {\n\t        // We always have to stop propagation on the change event.\n\t        // Otherwise the change event, from the input element, will bubble up and\n\t        // emit its event object to the `change` output.\n\t        event.stopPropagation();\n\t        if (!this.disabled) {\n\t            this.toggle();\n\t            // Emit our custom change event if the native input emitted one.\n\t            // It is important to only emit it, if the native input triggered one, because\n\t            // we don't want to trigger a change event, when the `checked` variable changes for example.\n\t            this._emitChangeEvent();\n\t        }\n\t    };\n\t    MdCheckbox.prototype._onInputClick = function (event) {\n\t        // We have to stop propagation for click events on the visual hidden input element.\n\t        // By default, when a user clicks on a label element, a generated click event will be\n\t        // dispatched on the associated input element. Since we are using a label element as our\n\t        // root container, the click event on the `checkbox` will be executed twice.\n\t        // The real click event will bubble up, and the generated click event also tries to bubble up.\n\t        // This will lead to multiple click events.\n\t        // Preventing bubbling for the second event will solve that issue.\n\t        event.stopPropagation();\n\t    };\n\t    MdCheckbox.prototype._getAnimationClassForCheckStateTransition = function (oldState, newState) {\n\t        var animSuffix;\n\t        switch (oldState) {\n\t            case exports.TransitionCheckState.Init:\n\t                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n\t                // [checked] bound to it.\n\t                if (newState === exports.TransitionCheckState.Checked) {\n\t                    animSuffix = 'unchecked-checked';\n\t                }\n\t                else {\n\t                    return '';\n\t                }\n\t                break;\n\t            case exports.TransitionCheckState.Unchecked:\n\t                animSuffix = newState === exports.TransitionCheckState.Checked ?\n\t                    'unchecked-checked' : 'unchecked-indeterminate';\n\t                break;\n\t            case exports.TransitionCheckState.Checked:\n\t                animSuffix = newState === exports.TransitionCheckState.Unchecked ?\n\t                    'checked-unchecked' : 'checked-indeterminate';\n\t                break;\n\t            case exports.TransitionCheckState.Indeterminate:\n\t                animSuffix = newState === exports.TransitionCheckState.Checked ?\n\t                    'indeterminate-checked' : 'indeterminate-unchecked';\n\t        }\n\t        return \"md-checkbox-anim-\" + animSuffix;\n\t    };\n\t    MdCheckbox.prototype.getHostElement = function () {\n\t        return this._elementRef.nativeElement;\n\t    };\n\t    __decorate$19([\n\t        _angular_core.Input('aria-label'), \n\t        __metadata$19('design:type', String)\n\t    ], MdCheckbox.prototype, \"ariaLabel\", void 0);\n\t    __decorate$19([\n\t        _angular_core.Input('aria-labelledby'), \n\t        __metadata$19('design:type', String)\n\t    ], MdCheckbox.prototype, \"ariaLabelledby\", void 0);\n\t    __decorate$19([\n\t        _angular_core.Input(), \n\t        __metadata$19('design:type', String)\n\t    ], MdCheckbox.prototype, \"id\", void 0);\n\t    __decorate$19([\n\t        _angular_core.Input(), \n\t        __metadata$19('design:type', Boolean)\n\t    ], MdCheckbox.prototype, \"disableRipple\", null);\n\t    __decorate$19([\n\t        _angular_core.Input(), \n\t        __metadata$19('design:type', Boolean)\n\t    ], MdCheckbox.prototype, \"required\", null);\n\t    __decorate$19([\n\t        _angular_core.Input(), \n\t        __metadata$19('design:type', Object)\n\t    ], MdCheckbox.prototype, \"align\", void 0);\n\t    __decorate$19([\n\t        _angular_core.Input(), \n\t        __metadata$19('design:type', Boolean)\n\t    ], MdCheckbox.prototype, \"disabled\", null);\n\t    __decorate$19([\n\t        _angular_core.Input(), \n\t        __metadata$19('design:type', Number)\n\t    ], MdCheckbox.prototype, \"tabindex\", void 0);\n\t    __decorate$19([\n\t        _angular_core.Input(), \n\t        __metadata$19('design:type', String)\n\t    ], MdCheckbox.prototype, \"name\", void 0);\n\t    __decorate$19([\n\t        _angular_core.Output(), \n\t        __metadata$19('design:type', _angular_core.EventEmitter)\n\t    ], MdCheckbox.prototype, \"change\", void 0);\n\t    __decorate$19([\n\t        _angular_core.Input(), \n\t        __metadata$19('design:type', Object)\n\t    ], MdCheckbox.prototype, \"checked\", null);\n\t    __decorate$19([\n\t        _angular_core.Input(), \n\t        __metadata$19('design:type', Object)\n\t    ], MdCheckbox.prototype, \"indeterminate\", null);\n\t    __decorate$19([\n\t        _angular_core.Input(), \n\t        __metadata$19('design:type', String)\n\t    ], MdCheckbox.prototype, \"color\", null);\n\t    MdCheckbox = __decorate$19([\n\t        _angular_core.Component({selector: 'md-checkbox',\n\t            template: \"<label class=\\\"md-checkbox-layout\\\"> <div class=\\\"md-checkbox-inner-container\\\"> <input class=\\\"md-checkbox-input md-visually-hidden\\\" type=\\\"checkbox\\\" [id]=\\\"inputId\\\" [required]=\\\"required\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [name]=\\\"name\\\" [tabIndex]=\\\"tabindex\\\" [indeterminate]=\\\"indeterminate\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledby\\\" (focus)=\\\"_onInputFocus()\\\" (blur)=\\\"_onInputBlur()\\\" (change)=\\\"_onInteractionEvent($event)\\\" (click)=\\\"_onInputClick($event)\\\"> <div md-ripple *ngIf=\\\"!_isRippleDisabled()\\\" class=\\\"md-checkbox-ripple\\\" [md-ripple-trigger]=\\\"getHostElement()\\\" [md-ripple-centered]=\\\"true\\\" [md-ripple-speed-factor]=\\\"0.3\\\" md-ripple-background-color=\\\"rgba(0, 0, 0, 0)\\\"></div> <div class=\\\"md-checkbox-frame\\\"></div> <div class=\\\"md-checkbox-background\\\"> <svg version=\\\"1.1\\\" class=\\\"md-checkbox-checkmark\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" xml:space=\\\"preserve\\\"> <path class=\\\"md-checkbox-checkmark-path\\\" fill=\\\"none\\\" stroke=\\\"white\\\" d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/> </svg> <!-- Element for rendering the indeterminate state checkbox. --> <div class=\\\"md-checkbox-mixedmark\\\"></div> </div> </div> <span class=\\\"md-checkbox-label\\\"> <ng-content></ng-content> </span> </label> \",\n\t            styles: [\"@keyframes md-checkbox-fade-in-background { 0% { opacity: 0; } 50% { opacity: 1; } } @keyframes md-checkbox-fade-out-background { 0%, 50% { opacity: 1; } 100% { opacity: 0; } } @keyframes md-checkbox-unchecked-checked-checkmark-path { 0%, 50% { stroke-dashoffset: 22.91026; } 50% { animation-timing-function: cubic-bezier(0, 0, 0.2, 0.1); } 100% { stroke-dashoffset: 0; } } @keyframes md-checkbox-unchecked-indeterminate-mixedmark { 0%, 68.2% { transform: scaleX(0); } 68.2% { animation-timing-function: cubic-bezier(0, 0, 0, 1); } 100% { transform: scaleX(1); } } @keyframes md-checkbox-checked-unchecked-checkmark-path { from { animation-timing-function: cubic-bezier(0.4, 0, 1, 1); stroke-dashoffset: 0; } to { stroke-dashoffset: -22.91026; } } @keyframes md-checkbox-checked-indeterminate-checkmark { from { animation-timing-function: cubic-bezier(0, 0, 0.2, 0.1); opacity: 1; transform: rotate(0deg); } to { opacity: 0; transform: rotate(45deg); } } @keyframes md-checkbox-indeterminate-checked-checkmark { from { animation-timing-function: cubic-bezier(0.14, 0, 0, 1); opacity: 0; transform: rotate(45deg); } to { opacity: 1; transform: rotate(360deg); } } @keyframes md-checkbox-checked-indeterminate-mixedmark { from { animation-timing-function: cubic-bezier(0, 0, 0.2, 0.1); opacity: 0; transform: rotate(-45deg); } to { opacity: 1; transform: rotate(0deg); } } @keyframes md-checkbox-indeterminate-checked-mixedmark { from { animation-timing-function: cubic-bezier(0.14, 0, 0, 1); opacity: 1; transform: rotate(0deg); } to { opacity: 0; transform: rotate(315deg); } } @keyframes md-checkbox-indeterminate-unchecked-mixedmark { 0% { animation-timing-function: linear; opacity: 1; transform: scaleX(1); } 32.8%, 100% { opacity: 0; transform: scaleX(0); } } .md-checkbox-frame, .md-checkbox-background, .md-checkbox-checkmark { bottom: 0; left: 0; position: absolute; right: 0; top: 0; } .md-checkbox-checkmark, .md-checkbox-mixedmark { width: calc(100% - 4px); } .md-checkbox-frame, .md-checkbox-background { border-radius: 2px; box-sizing: border-box; pointer-events: none; } md-checkbox { cursor: pointer; transition: background 400ms cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); } .md-checkbox-layout { cursor: inherit; align-items: baseline; vertical-align: middle; display: inline-flex; } .md-checkbox-inner-container { display: inline-block; height: 20px; line-height: 0; margin: auto; margin-right: 8px; order: 0; position: relative; vertical-align: middle; white-space: nowrap; width: 20px; flex-shrink: 0; } [dir='rtl'] .md-checkbox-inner-container { margin-left: 8px; margin-right: auto; } .md-checkbox-layout .md-checkbox-label { line-height: 24px; } .md-checkbox-frame { background-color: transparent; border: 2px solid; transition: border-color 90ms cubic-bezier(0, 0, 0.2, 0.1); will-change: border-color; } .md-checkbox-background { align-items: center; display: inline-flex; justify-content: center; transition: background-color 90ms cubic-bezier(0, 0, 0.2, 0.1), opacity 90ms cubic-bezier(0, 0, 0.2, 0.1); will-change: background-color, opacity; } .md-checkbox-checkmark { width: 100%; } .md-checkbox-checkmark-path { stroke-dashoffset: 22.91026; stroke-dasharray: 22.91026; stroke-width: 2.66667px; } .md-checkbox-mixedmark { height: 2px; opacity: 0; transform: scaleX(0) rotate(0deg); } .md-checkbox-align-end .md-checkbox-inner-container { order: 1; margin-left: 8px; margin-right: auto; } [dir='rtl'] .md-checkbox-align-end .md-checkbox-inner-container { margin-left: auto; margin-right: 8px; } .md-checkbox-checked .md-checkbox-checkmark { opacity: 1; } .md-checkbox-checked .md-checkbox-checkmark-path { stroke-dashoffset: 0; } .md-checkbox-checked .md-checkbox-mixedmark { transform: scaleX(1) rotate(-45deg); } .md-checkbox-indeterminate .md-checkbox-checkmark { opacity: 0; transform: rotate(45deg); } .md-checkbox-indeterminate .md-checkbox-checkmark-path { stroke-dashoffset: 0; } .md-checkbox-indeterminate .md-checkbox-mixedmark { opacity: 1; transform: scaleX(1) rotate(0deg); } .md-checkbox-unchecked .md-checkbox-background { background-color: transparent; } .md-checkbox-disabled { cursor: default; } .md-checkbox-anim-unchecked-checked .md-checkbox-background { animation: 180ms linear 0ms md-checkbox-fade-in-background; } .md-checkbox-anim-unchecked-checked .md-checkbox-checkmark-path { animation: 180ms linear 0ms md-checkbox-unchecked-checked-checkmark-path; } .md-checkbox-anim-unchecked-indeterminate .md-checkbox-background { animation: 180ms linear 0ms md-checkbox-fade-in-background; } .md-checkbox-anim-unchecked-indeterminate .md-checkbox-mixedmark { animation: 90ms linear 0ms md-checkbox-unchecked-indeterminate-mixedmark; } .md-checkbox-anim-checked-unchecked .md-checkbox-background { animation: 180ms linear 0ms md-checkbox-fade-out-background; } .md-checkbox-anim-checked-unchecked .md-checkbox-checkmark-path { animation: 90ms linear 0ms md-checkbox-checked-unchecked-checkmark-path; } .md-checkbox-anim-checked-indeterminate .md-checkbox-checkmark { animation: 90ms linear 0ms md-checkbox-checked-indeterminate-checkmark; } .md-checkbox-anim-checked-indeterminate .md-checkbox-mixedmark { animation: 90ms linear 0ms md-checkbox-checked-indeterminate-mixedmark; } .md-checkbox-anim-indeterminate-checked .md-checkbox-checkmark { animation: 500ms linear 0ms md-checkbox-indeterminate-checked-checkmark; } .md-checkbox-anim-indeterminate-checked .md-checkbox-mixedmark { animation: 500ms linear 0ms md-checkbox-indeterminate-checked-mixedmark; } .md-checkbox-anim-indeterminate-unchecked .md-checkbox-background { animation: 180ms linear 0ms md-checkbox-fade-out-background; } .md-checkbox-anim-indeterminate-unchecked .md-checkbox-mixedmark { animation: 300ms linear 0ms md-checkbox-indeterminate-unchecked-mixedmark; } .md-checkbox-input { bottom: 0; left: 50%; } .md-checkbox-ripple { position: absolute; left: -15px; top: -15px; right: -15px; bottom: -15px; border-radius: 50%; z-index: 1; pointer-events: none; } /*# sourceMappingURL=checkbox.css.map */ \"],\n\t            host: {\n\t                '[class.md-checkbox-indeterminate]': 'indeterminate',\n\t                '[class.md-checkbox-checked]': 'checked',\n\t                '[class.md-checkbox-disabled]': 'disabled',\n\t                '[class.md-checkbox-align-end]': 'align == \"end\"',\n\t                '[class.md-checkbox-focused]': 'hasFocus',\n\t            },\n\t            providers: [MD_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush\n\t        }), \n\t        __metadata$19('design:paramtypes', [_angular_core.Renderer, _angular_core.ElementRef])\n\t    ], MdCheckbox);\n\t    return MdCheckbox;\n\t}());\n\tvar MdCheckboxModule = (function () {\n\t    function MdCheckboxModule() {\n\t    }\n\t    MdCheckboxModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdCheckboxModule,\n\t            providers: []\n\t        };\n\t    };\n\t    MdCheckboxModule = __decorate$19([\n\t        _angular_core.NgModule({\n\t            imports: [_angular_common.CommonModule, MdRippleModule],\n\t            exports: [MdCheckbox],\n\t            declarations: [MdCheckbox],\n\t        }), \n\t        __metadata$19('design:paramtypes', [])\n\t    ], MdCheckboxModule);\n\t    return MdCheckboxModule;\n\t}());\n\t\n\tvar __decorate$20 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$20 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar __param$3 = (this && this.__param) || function (paramIndex, decorator) {\n\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t};\n\t/**\n\t * Provider Expression that allows md-radio-group to register as a ControlValueAccessor. This\n\t * allows it to support [(ngModel)] and ngControl.\n\t */\n\tvar MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n\t    provide: _angular_forms.NG_VALUE_ACCESSOR,\n\t    useExisting: _angular_core.forwardRef(function () { return MdRadioGroup; }),\n\t    multi: true\n\t};\n\t// TODO(mtlin):\n\t// Ink ripple is currently placeholder.\n\t// Determine motion spec for button transitions.\n\t// Design review.\n\t// RTL\n\t// Support forms API.\n\t// Use ChangeDetectionStrategy.OnPush\n\tvar _uniqueIdCounter$1 = 0;\n\t/** A simple change event emitted by either MdRadioButton or MdRadioGroup. */\n\tvar MdRadioChange = (function () {\n\t    function MdRadioChange() {\n\t    }\n\t    return MdRadioChange;\n\t}());\n\tvar MdRadioGroup = (function () {\n\t    function MdRadioGroup() {\n\t        /**\n\t         * Selected value for group. Should equal the value of the selected radio button if there *is*\n\t         * a corresponding radio button with a matching value. If there is *not* such a corresponding\n\t         * radio button, this value persists to be applied in case a new radio button is added with a\n\t         * matching value.\n\t         */\n\t        this._value = null;\n\t        /** The HTML name attribute applied to radio buttons in this group. */\n\t        this._name = \"md-radio-group-\" + _uniqueIdCounter$1++;\n\t        /** Disables all individual radio buttons assigned to this group. */\n\t        this._disabled = false;\n\t        /** The currently selected radio button. Should match value. */\n\t        this._selected = null;\n\t        /** Whether the `value` has been set to its initial value. */\n\t        this._isInitialized = false;\n\t        /** The method to be called in order to update ngModel */\n\t        this._controlValueAccessorChangeFn = function (value) { };\n\t        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n\t        this.onTouched = function () { };\n\t        /** Event emitted when the group value changes. */\n\t        this.change = new _angular_core.EventEmitter();\n\t        /** Child radio buttons. */\n\t        this._radios = null;\n\t    }\n\t    Object.defineProperty(MdRadioGroup.prototype, \"name\", {\n\t        get: function () {\n\t            return this._name;\n\t        },\n\t        set: function (value) {\n\t            this._name = value;\n\t            this._updateRadioButtonNames();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdRadioGroup.prototype, \"disabled\", {\n\t        get: function () {\n\t            return this._disabled;\n\t        },\n\t        set: function (value) {\n\t            // The presence of *any* disabled value makes the component disabled, *except* for false.\n\t            this._disabled = (value != null && value !== false) ? true : null;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdRadioGroup.prototype, \"value\", {\n\t        get: function () {\n\t            return this._value;\n\t        },\n\t        set: function (newValue) {\n\t            if (this._value != newValue) {\n\t                // Set this before proceeding to ensure no circular loop occurs with selection.\n\t                this._value = newValue;\n\t                this._updateSelectedRadioFromValue();\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdRadioGroup.prototype, \"selected\", {\n\t        get: function () {\n\t            return this._selected;\n\t        },\n\t        set: function (selected) {\n\t            this._selected = selected;\n\t            this.value = selected ? selected.value : null;\n\t            if (selected && !selected.checked) {\n\t                selected.checked = true;\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /**\n\t     * Initialize properties once content children are available.\n\t     * This allows us to propagate relevant attributes to associated buttons.\n\t     * TODO: internal\n\t     */\n\t    MdRadioGroup.prototype.ngAfterContentInit = function () {\n\t        // Mark this component as initialized in AfterContentInit because the initial value can\n\t        // possibly be set by NgModel on MdRadioGroup, and it is possible that the OnInit of the\n\t        // NgModel occurs *after* the OnInit of the MdRadioGroup.\n\t        this._isInitialized = true;\n\t    };\n\t    /**\n\t     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n\t     * radio buttons upon their blur.\n\t     */\n\t    MdRadioGroup.prototype._touch = function () {\n\t        if (this.onTouched) {\n\t            this.onTouched();\n\t        }\n\t    };\n\t    MdRadioGroup.prototype._updateRadioButtonNames = function () {\n\t        var _this = this;\n\t        if (this._radios) {\n\t            this._radios.forEach(function (radio) {\n\t                radio.name = _this.name;\n\t            });\n\t        }\n\t    };\n\t    /** Updates the `selected` radio button from the internal _value state. */\n\t    MdRadioGroup.prototype._updateSelectedRadioFromValue = function () {\n\t        var _this = this;\n\t        // If the value already matches the selected radio, do nothing.\n\t        var isAlreadySelected = this._selected != null && this._selected.value == this._value;\n\t        if (this._radios != null && !isAlreadySelected) {\n\t            var matchingRadio = this._radios.filter(function (radio) { return radio.value == _this._value; })[0];\n\t            if (matchingRadio) {\n\t                this.selected = matchingRadio;\n\t            }\n\t            else if (this.value == null) {\n\t                this.selected = null;\n\t                this._radios.forEach(function (radio) { radio.checked = false; });\n\t            }\n\t        }\n\t    };\n\t    /** Dispatch change event with current selection and group value. */\n\t    MdRadioGroup.prototype._emitChangeEvent = function () {\n\t        if (this._isInitialized) {\n\t            var event_1 = new MdRadioChange();\n\t            event_1.source = this._selected;\n\t            event_1.value = this._value;\n\t            this.change.emit(event_1);\n\t        }\n\t    };\n\t    /**\n\t      * Implemented as part of ControlValueAccessor.\n\t      * TODO: internal\n\t      */\n\t    MdRadioGroup.prototype.writeValue = function (value) {\n\t        this.value = value;\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     * TODO: internal\n\t     */\n\t    MdRadioGroup.prototype.registerOnChange = function (fn) {\n\t        this._controlValueAccessorChangeFn = fn;\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     * TODO: internal\n\t     */\n\t    MdRadioGroup.prototype.registerOnTouched = function (fn) {\n\t        this.onTouched = fn;\n\t    };\n\t    __decorate$20([\n\t        _angular_core.Output(), \n\t        __metadata$20('design:type', _angular_core.EventEmitter)\n\t    ], MdRadioGroup.prototype, \"change\", void 0);\n\t    __decorate$20([\n\t        _angular_core.ContentChildren(_angular_core.forwardRef(function () { return MdRadioButton; })), \n\t        __metadata$20('design:type', _angular_core.QueryList)\n\t    ], MdRadioGroup.prototype, \"_radios\", void 0);\n\t    __decorate$20([\n\t        _angular_core.Input(), \n\t        __metadata$20('design:type', String)\n\t    ], MdRadioGroup.prototype, \"name\", null);\n\t    __decorate$20([\n\t        _angular_core.Input(), \n\t        __metadata$20('design:type', Object)\n\t    ], MdRadioGroup.prototype, \"align\", void 0);\n\t    __decorate$20([\n\t        _angular_core.Input(), \n\t        __metadata$20('design:type', Boolean)\n\t    ], MdRadioGroup.prototype, \"disabled\", null);\n\t    __decorate$20([\n\t        _angular_core.Input(), \n\t        __metadata$20('design:type', Object)\n\t    ], MdRadioGroup.prototype, \"value\", null);\n\t    __decorate$20([\n\t        _angular_core.Input(), \n\t        __metadata$20('design:type', Object)\n\t    ], MdRadioGroup.prototype, \"selected\", null);\n\t    MdRadioGroup = __decorate$20([\n\t        _angular_core.Directive({\n\t            selector: 'md-radio-group',\n\t            providers: [MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n\t            host: {\n\t                'role': 'radiogroup',\n\t            },\n\t        }), \n\t        __metadata$20('design:paramtypes', [])\n\t    ], MdRadioGroup);\n\t    return MdRadioGroup;\n\t}());\n\tvar MdRadioButton = (function () {\n\t    function MdRadioButton(radioGroup, _elementRef, radioDispatcher) {\n\t        // Assertions. Ideally these should be stripped out by the compiler.\n\t        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n\t        var _this = this;\n\t        this._elementRef = _elementRef;\n\t        this.radioDispatcher = radioDispatcher;\n\t        /** Whether this radio is checked. */\n\t        this._checked = false;\n\t        /** The unique ID for the radio button. */\n\t        this.id = \"md-radio-\" + _uniqueIdCounter$1++;\n\t        /** Value assigned to this radio.*/\n\t        this._value = null;\n\t        /** Event emitted when the group value changes. */\n\t        this.change = new _angular_core.EventEmitter();\n\t        this.radioGroup = radioGroup;\n\t        radioDispatcher.listen(function (id, name) {\n\t            if (id != _this.id && name == _this.name) {\n\t                _this.checked = false;\n\t            }\n\t        });\n\t    }\n\t    Object.defineProperty(MdRadioButton.prototype, \"disableRipple\", {\n\t        get: function () { return this._disableRipple; },\n\t        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdRadioButton.prototype, \"inputId\", {\n\t        get: function () {\n\t            return this.id + \"-input\";\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdRadioButton.prototype, \"checked\", {\n\t        get: function () {\n\t            return this._checked;\n\t        },\n\t        set: function (newCheckedState) {\n\t            this._checked = newCheckedState;\n\t            if (newCheckedState && this.radioGroup && this.radioGroup.value != this.value) {\n\t                this.radioGroup.selected = this;\n\t            }\n\t            else if (!newCheckedState && this.radioGroup && this.radioGroup.value == this.value) {\n\t                // When unchecking the selected radio button, update the selected radio\n\t                // property on the group.\n\t                this.radioGroup.selected = null;\n\t            }\n\t            if (newCheckedState) {\n\t                // Notify all radio buttons with the same name to un-check.\n\t                this.radioDispatcher.notify(this.id, this.name);\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdRadioButton.prototype, \"value\", {\n\t        /** MdRadioGroup reads this to assign its own value. */\n\t        get: function () {\n\t            return this._value;\n\t        },\n\t        set: function (value) {\n\t            if (this._value != value) {\n\t                if (this.radioGroup != null && this.checked) {\n\t                    this.radioGroup.value = value;\n\t                }\n\t                this._value = value;\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdRadioButton.prototype, \"align\", {\n\t        get: function () {\n\t            return this._align || (this.radioGroup != null && this.radioGroup.align) || 'start';\n\t        },\n\t        set: function (value) {\n\t            this._align = value;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdRadioButton.prototype, \"disabled\", {\n\t        get: function () {\n\t            return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n\t        },\n\t        set: function (value) {\n\t            // The presence of *any* disabled value makes the component disabled, *except* for false.\n\t            this._disabled = (value != null && value !== false) ? true : null;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /** TODO: internal */\n\t    MdRadioButton.prototype.ngOnInit = function () {\n\t        if (this.radioGroup) {\n\t            // If the radio is inside a radio group, determine if it should be checked\n\t            this.checked = this.radioGroup.value === this._value;\n\t            // Copy name from parent radio group\n\t            this.name = this.radioGroup.name;\n\t        }\n\t    };\n\t    /** Dispatch change event with current value. */\n\t    MdRadioButton.prototype._emitChangeEvent = function () {\n\t        var event = new MdRadioChange();\n\t        event.source = this;\n\t        event.value = this._value;\n\t        this.change.emit(event);\n\t    };\n\t    MdRadioButton.prototype._isRippleDisabled = function () {\n\t        return this.disableRipple || this.disabled;\n\t    };\n\t    /**\n\t     * We use a hidden native input field to handle changes to focus state via keyboard navigation,\n\t     * with visual rendering done separately. The native element is kept in sync with the overall\n\t     * state of the component.\n\t     */\n\t    MdRadioButton.prototype._onInputFocus = function () {\n\t        this._isFocused = true;\n\t    };\n\t    /** TODO: internal */\n\t    MdRadioButton.prototype._onInputBlur = function () {\n\t        this._isFocused = false;\n\t        if (this.radioGroup) {\n\t            this.radioGroup._touch();\n\t        }\n\t    };\n\t    /** TODO: internal */\n\t    MdRadioButton.prototype._onInputClick = function (event) {\n\t        // We have to stop propagation for click events on the visual hidden input element.\n\t        // By default, when a user clicks on a label element, a generated click event will be\n\t        // dispatched on the associated input element. Since we are using a label element as our\n\t        // root container, the click event on the `radio-button` will be executed twice.\n\t        // The real click event will bubble up, and the generated click event also tries to bubble up.\n\t        // This will lead to multiple click events.\n\t        // Preventing bubbling for the second event will solve that issue.\n\t        event.stopPropagation();\n\t    };\n\t    /**\n\t     * Triggered when the radio button received a click or the input recognized any change.\n\t     * Clicking on a label element, will trigger a change event on the associated input.\n\t     * TODO: internal\n\t     */\n\t    MdRadioButton.prototype._onInputChange = function (event) {\n\t        // We always have to stop propagation on the change event.\n\t        // Otherwise the change event, from the input element, will bubble up and\n\t        // emit its event object to the `change` output.\n\t        event.stopPropagation();\n\t        var groupValueChanged = this.radioGroup && this.value != this.radioGroup.value;\n\t        this.checked = true;\n\t        this._emitChangeEvent();\n\t        if (this.radioGroup) {\n\t            this.radioGroup._controlValueAccessorChangeFn(this.value);\n\t            this.radioGroup._touch();\n\t            if (groupValueChanged) {\n\t                this.radioGroup._emitChangeEvent();\n\t            }\n\t        }\n\t    };\n\t    MdRadioButton.prototype.getHostElement = function () {\n\t        return this._elementRef.nativeElement;\n\t    };\n\t    __decorate$20([\n\t        _angular_core.HostBinding('class.md-radio-focused'), \n\t        __metadata$20('design:type', Boolean)\n\t    ], MdRadioButton.prototype, \"_isFocused\", void 0);\n\t    __decorate$20([\n\t        _angular_core.HostBinding('id'),\n\t        _angular_core.Input(), \n\t        __metadata$20('design:type', String)\n\t    ], MdRadioButton.prototype, \"id\", void 0);\n\t    __decorate$20([\n\t        _angular_core.Input(), \n\t        __metadata$20('design:type', String)\n\t    ], MdRadioButton.prototype, \"name\", void 0);\n\t    __decorate$20([\n\t        _angular_core.Input('aria-label'), \n\t        __metadata$20('design:type', String)\n\t    ], MdRadioButton.prototype, \"ariaLabel\", void 0);\n\t    __decorate$20([\n\t        _angular_core.Input('aria-labelledby'), \n\t        __metadata$20('design:type', String)\n\t    ], MdRadioButton.prototype, \"ariaLabelledby\", void 0);\n\t    __decorate$20([\n\t        _angular_core.Input(), \n\t        __metadata$20('design:type', Boolean)\n\t    ], MdRadioButton.prototype, \"disableRipple\", null);\n\t    __decorate$20([\n\t        _angular_core.Output(), \n\t        __metadata$20('design:type', _angular_core.EventEmitter)\n\t    ], MdRadioButton.prototype, \"change\", void 0);\n\t    __decorate$20([\n\t        _angular_core.HostBinding('class.md-radio-checked'),\n\t        _angular_core.Input(), \n\t        __metadata$20('design:type', Boolean)\n\t    ], MdRadioButton.prototype, \"checked\", null);\n\t    __decorate$20([\n\t        _angular_core.Input(), \n\t        __metadata$20('design:type', Object)\n\t    ], MdRadioButton.prototype, \"value\", null);\n\t    __decorate$20([\n\t        _angular_core.Input(), \n\t        __metadata$20('design:type', Object)\n\t    ], MdRadioButton.prototype, \"align\", null);\n\t    __decorate$20([\n\t        _angular_core.HostBinding('class.md-radio-disabled'),\n\t        _angular_core.Input(), \n\t        __metadata$20('design:type', Boolean)\n\t    ], MdRadioButton.prototype, \"disabled\", null);\n\t    MdRadioButton = __decorate$20([\n\t        _angular_core.Component({selector: 'md-radio-button',\n\t            template: \"<!-- TODO(jelbourn): render the radio on either side of the content --> <!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. --> <label [attr.for]=\\\"inputId\\\" class=\\\"md-radio-label\\\"> <!-- The actual 'radio' part of the control. --> <div class=\\\"md-radio-container\\\"> <div class=\\\"md-radio-outer-circle\\\"></div> <div class=\\\"md-radio-inner-circle\\\"></div> <div md-ripple *ngIf=\\\"!_isRippleDisabled()\\\" class=\\\"md-radio-ripple\\\" [md-ripple-trigger]=\\\"getHostElement()\\\" [md-ripple-centered]=\\\"true\\\" [md-ripple-speed-factor]=\\\"0.3\\\" md-ripple-background-color=\\\"rgba(0, 0, 0, 0)\\\"></div> </div> <input #input class=\\\"md-radio-input md-visually-hidden\\\" type=\\\"radio\\\" [id]=\\\"inputId\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [name]=\\\"name\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledby\\\" (change)=\\\"_onInputChange($event)\\\" (focus)=\\\"_onInputFocus()\\\" (blur)=\\\"_onInputBlur()\\\" (click)=\\\"_onInputClick($event)\\\"> <!-- The label content for radio control. --> <div class=\\\"md-radio-label-content\\\" [class.md-radio-align-end]=\\\"align == 'end'\\\"> <ng-content></ng-content> </div> </label> \",\n\t            styles: [\"md-radio-button { display: inline-block; } .md-radio-label { cursor: pointer; display: inline-flex; align-items: baseline; white-space: nowrap; } .md-radio-container { box-sizing: border-box; display: inline-block; height: 20px; position: relative; width: 20px; top: 2px; } .md-radio-outer-circle { border: solid 2px; border-radius: 50%; box-sizing: border-box; height: 20px; left: 0; position: absolute; top: 0; transition: border-color ease 280ms; width: 20px; } .md-radio-inner-circle { border-radius: 50%; box-sizing: border-box; height: 20px; left: 0; position: absolute; top: 0; transition: transform ease 280ms, background-color ease 280ms; transform: scale(0); width: 20px; } .md-radio-checked .md-radio-inner-circle { transform: scale(0.5); } .md-radio-label-content { display: inline-block; order: 0; line-height: inherit; padding-left: 8px; padding-right: 0; } [dir='rtl'] .md-radio-label-content { padding-right: 8px; padding-left: 0; } .md-radio-label-content.md-radio-align-end { order: -1; padding-left: 0; padding-right: 8px; } [dir='rtl'] .md-radio-label-content.md-radio-align-end { padding-right: 0; padding-left: 8px; } .md-radio-disabled, .md-radio-disabled .md-radio-label { cursor: default; } .md-radio-ripple { position: absolute; left: -15px; top: -15px; right: -15px; bottom: -15px; border-radius: 50%; z-index: 1; pointer-events: none; } /*# sourceMappingURL=radio.css.map */ \"],\n\t            encapsulation: _angular_core.ViewEncapsulation.None\n\t        }),\n\t        __param$3(0, _angular_core.Optional()), \n\t        __metadata$20('design:paramtypes', [MdRadioGroup, _angular_core.ElementRef, MdUniqueSelectionDispatcher])\n\t    ], MdRadioButton);\n\t    return MdRadioButton;\n\t}());\n\tvar MdRadioModule = (function () {\n\t    function MdRadioModule() {\n\t    }\n\t    MdRadioModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdRadioModule,\n\t            providers: [MdUniqueSelectionDispatcher],\n\t        };\n\t    };\n\t    MdRadioModule = __decorate$20([\n\t        _angular_core.NgModule({\n\t            imports: [_angular_common.CommonModule, MdRippleModule],\n\t            exports: [MdRadioGroup, MdRadioButton],\n\t            declarations: [MdRadioGroup, MdRadioButton],\n\t        }), \n\t        __metadata$20('design:paramtypes', [])\n\t    ], MdRadioModule);\n\t    return MdRadioModule;\n\t}());\n\t\n\tvar __decorate$21 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$21 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar MD_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n\t    provide: _angular_forms.NG_VALUE_ACCESSOR,\n\t    useExisting: _angular_core.forwardRef(function () { return MdSlideToggle; }),\n\t    multi: true\n\t};\n\t// A simple change event emitted by the MdSlideToggle component.\n\tvar MdSlideToggleChange = (function () {\n\t    function MdSlideToggleChange() {\n\t    }\n\t    return MdSlideToggleChange;\n\t}());\n\t// Increasing integer for generating unique ids for slide-toggle components.\n\tvar nextId$1 = 0;\n\tvar MdSlideToggle = (function () {\n\t    function MdSlideToggle(_elementRef, _renderer) {\n\t        var _this = this;\n\t        this._elementRef = _elementRef;\n\t        this._renderer = _renderer;\n\t        this.onChange = function (_) { };\n\t        this.onTouched = function () { };\n\t        // A unique id for the slide-toggle. By default the id is auto-generated.\n\t        this._uniqueId = \"md-slide-toggle-\" + ++nextId$1;\n\t        this._checked = false;\n\t        this._isMousedown = false;\n\t        this._slideRenderer = null;\n\t        this._disabled = false;\n\t        this._required = false;\n\t        // Needs to be public to support AOT compilation (as host binding).\n\t        this._hasFocus = false;\n\t        this.name = null;\n\t        this.id = this._uniqueId;\n\t        this.tabIndex = 0;\n\t        this.ariaLabel = null;\n\t        this.ariaLabelledby = null;\n\t        this._change = new _angular_core.EventEmitter();\n\t        this.change = this._change.asObservable();\n\t        // Returns the unique id for the visual hidden input.\n\t        this.getInputId = function () { return ((_this.id || _this._uniqueId) + \"-input\"); };\n\t    }\n\t    Object.defineProperty(MdSlideToggle.prototype, \"disabled\", {\n\t        get: function () { return this._disabled; },\n\t        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSlideToggle.prototype, \"required\", {\n\t        get: function () { return this._required; },\n\t        set: function (value) { this._required = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /** TODO: internal */\n\t    MdSlideToggle.prototype.ngAfterContentInit = function () {\n\t        this._slideRenderer = new SlideToggleRenderer(this._elementRef);\n\t    };\n\t    /**\n\t     * The onChangeEvent method will be also called on click.\n\t     * This is because everything for the slide-toggle is wrapped inside of a label,\n\t     * which triggers a onChange event on click.\n\t     */\n\t    MdSlideToggle.prototype._onChangeEvent = function (event) {\n\t        // We always have to stop propagation on the change event.\n\t        // Otherwise the change event, from the input element, will bubble up and\n\t        // emit its event object to the component's `change` output.\n\t        event.stopPropagation();\n\t        // Once a drag is currently in progress, we do not want to toggle the slide-toggle on a click.\n\t        if (!this.disabled && !this._slideRenderer.isDragging()) {\n\t            this.toggle();\n\t            // Emit our custom change event if the native input emitted one.\n\t            // It is important to only emit it, if the native input triggered one, because\n\t            // we don't want to trigger a change event, when the `checked` variable changes for example.\n\t            this._emitChangeEvent();\n\t        }\n\t    };\n\t    MdSlideToggle.prototype._onInputClick = function (event) {\n\t        this.onTouched();\n\t        // We have to stop propagation for click events on the visual hidden input element.\n\t        // By default, when a user clicks on a label element, a generated click event will be\n\t        // dispatched on the associated input element. Since we are using a label element as our\n\t        // root container, the click event on the `slide-toggle` will be executed twice.\n\t        // The real click event will bubble up, and the generated click event also tries to bubble up.\n\t        // This will lead to multiple click events.\n\t        // Preventing bubbling for the second event will solve that issue.\n\t        event.stopPropagation();\n\t    };\n\t    MdSlideToggle.prototype._setMousedown = function () {\n\t        var _this = this;\n\t        // We only *show* the focus style when focus has come to the button via the keyboard.\n\t        // The Material Design spec is silent on this topic, and without doing this, the\n\t        // button continues to look :active after clicking.\n\t        // @see http://marcysutton.com/button-focus-hell/\n\t        this._isMousedown = true;\n\t        setTimeout(function () { return _this._isMousedown = false; }, 100);\n\t    };\n\t    MdSlideToggle.prototype._onInputFocus = function () {\n\t        // Only show the focus / ripple indicator when the focus was not triggered by a mouse\n\t        // interaction on the component.\n\t        if (!this._isMousedown) {\n\t            this._hasFocus = true;\n\t        }\n\t    };\n\t    MdSlideToggle.prototype._onInputBlur = function () {\n\t        this._hasFocus = false;\n\t        this.onTouched();\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     * TODO: internal\n\t     */\n\t    MdSlideToggle.prototype.writeValue = function (value) {\n\t        this.checked = value;\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     * TODO: internal\n\t     */\n\t    MdSlideToggle.prototype.registerOnChange = function (fn) {\n\t        this.onChange = fn;\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     * TODO: internal\n\t     */\n\t    MdSlideToggle.prototype.registerOnTouched = function (fn) {\n\t        this.onTouched = fn;\n\t    };\n\t    Object.defineProperty(MdSlideToggle.prototype, \"checked\", {\n\t        get: function () {\n\t            return !!this._checked;\n\t        },\n\t        set: function (value) {\n\t            if (this.checked !== !!value) {\n\t                this._checked = value;\n\t                this.onChange(this._checked);\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSlideToggle.prototype, \"color\", {\n\t        get: function () {\n\t            return this._color;\n\t        },\n\t        set: function (value) {\n\t            this._updateColor(value);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    MdSlideToggle.prototype.toggle = function () {\n\t        this.checked = !this.checked;\n\t    };\n\t    MdSlideToggle.prototype._updateColor = function (newColor) {\n\t        this._setElementColor(this._color, false);\n\t        this._setElementColor(newColor, true);\n\t        this._color = newColor;\n\t    };\n\t    MdSlideToggle.prototype._setElementColor = function (color, isAdd) {\n\t        if (color != null && color != '') {\n\t            this._renderer.setElementClass(this._elementRef.nativeElement, \"md-\" + color, isAdd);\n\t        }\n\t    };\n\t    /** Emits the change event to the `change` output EventEmitter */\n\t    MdSlideToggle.prototype._emitChangeEvent = function () {\n\t        var event = new MdSlideToggleChange();\n\t        event.source = this;\n\t        event.checked = this.checked;\n\t        this._change.emit(event);\n\t    };\n\t    /** TODO: internal */\n\t    MdSlideToggle.prototype._onDragStart = function () {\n\t        if (!this.disabled) {\n\t            this._slideRenderer.startThumbDrag(this.checked);\n\t        }\n\t    };\n\t    /** TODO: internal */\n\t    MdSlideToggle.prototype._onDrag = function (event) {\n\t        if (this._slideRenderer.isDragging()) {\n\t            this._slideRenderer.updateThumbPosition(event.deltaX);\n\t        }\n\t    };\n\t    /** TODO: internal */\n\t    MdSlideToggle.prototype._onDragEnd = function () {\n\t        var _this = this;\n\t        if (!this._slideRenderer.isDragging()) {\n\t            return;\n\t        }\n\t        // Notice that we have to stop outside of the current event handler,\n\t        // because otherwise the click event will be fired and will reset the new checked variable.\n\t        setTimeout(function () {\n\t            _this.checked = _this._slideRenderer.stopThumbDrag();\n\t            _this._emitChangeEvent();\n\t        }, 0);\n\t    };\n\t    __decorate$21([\n\t        _angular_core.Input(), \n\t        __metadata$21('design:type', String)\n\t    ], MdSlideToggle.prototype, \"name\", void 0);\n\t    __decorate$21([\n\t        _angular_core.Input(), \n\t        __metadata$21('design:type', String)\n\t    ], MdSlideToggle.prototype, \"id\", void 0);\n\t    __decorate$21([\n\t        _angular_core.Input(), \n\t        __metadata$21('design:type', Number)\n\t    ], MdSlideToggle.prototype, \"tabIndex\", void 0);\n\t    __decorate$21([\n\t        _angular_core.Input(), \n\t        __metadata$21('design:type', String)\n\t    ], MdSlideToggle.prototype, \"ariaLabel\", void 0);\n\t    __decorate$21([\n\t        _angular_core.Input(), \n\t        __metadata$21('design:type', String)\n\t    ], MdSlideToggle.prototype, \"ariaLabelledby\", void 0);\n\t    __decorate$21([\n\t        _angular_core.Input(), \n\t        __metadata$21('design:type', Boolean)\n\t    ], MdSlideToggle.prototype, \"disabled\", null);\n\t    __decorate$21([\n\t        _angular_core.Input(), \n\t        __metadata$21('design:type', Boolean)\n\t    ], MdSlideToggle.prototype, \"required\", null);\n\t    __decorate$21([\n\t        _angular_core.Output(), \n\t        __metadata$21('design:type', rxjs_Observable.Observable)\n\t    ], MdSlideToggle.prototype, \"change\", void 0);\n\t    __decorate$21([\n\t        _angular_core.Input(), \n\t        __metadata$21('design:type', Object)\n\t    ], MdSlideToggle.prototype, \"checked\", null);\n\t    __decorate$21([\n\t        _angular_core.Input(), \n\t        __metadata$21('design:type', String)\n\t    ], MdSlideToggle.prototype, \"color\", null);\n\t    MdSlideToggle = __decorate$21([\n\t        _angular_core.Component({selector: 'md-slide-toggle',\n\t            host: {\n\t                '[class.md-checked]': 'checked',\n\t                '[class.md-disabled]': 'disabled',\n\t                // This md-slide-toggle prefix will change, once the temporary ripple is removed.\n\t                '[class.md-slide-toggle-focused]': '_hasFocus',\n\t                '(mousedown)': '_setMousedown()'\n\t            },\n\t            template: \"<label class=\\\"md-slide-toggle-label\\\"> <div class=\\\"md-slide-toggle-container\\\"> <div class=\\\"md-slide-toggle-bar\\\"></div> <div class=\\\"md-slide-toggle-thumb-container\\\" (slidestart)=\\\"_onDragStart()\\\" (slide)=\\\"_onDrag($event)\\\" (slideend)=\\\"_onDragEnd()\\\"> <div class=\\\"md-slide-toggle-thumb\\\"> <div class=\\\"md-ink-ripple\\\"></div> </div> </div> <input #input class=\\\"md-slide-toggle-input md-visually-hidden\\\" type=\\\"checkbox\\\" [id]=\\\"getInputId()\\\" [required]=\\\"required\\\" [tabIndex]=\\\"tabIndex\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [attr.name]=\\\"name\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledby\\\" (blur)=\\\"_onInputBlur()\\\" (focus)=\\\"_onInputFocus()\\\" (change)=\\\"_onChangeEvent($event)\\\" (click)=\\\"_onInputClick($event)\\\"> </div> <span class=\\\"md-slide-toggle-content\\\"> <ng-content></ng-content> </span> </label> \",\n\t            styles: [\"md-slide-toggle { display: flex; height: 24px; margin: 16px 0; line-height: 24px; white-space: nowrap; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; outline: none; } md-slide-toggle.md-checked .md-slide-toggle-thumb-container { transform: translate3d(100%, 0, 0); } md-slide-toggle .md-ink-ripple { border-radius: 50%; opacity: 0; height: 48px; left: 50%; overflow: hidden; pointer-events: none; position: absolute; top: 50%; transform: translate(-50%, -50%); transition: opacity ease 280ms, background-color ease 280ms; width: 48px; } md-slide-toggle.md-slide-toggle-focused .md-ink-ripple { opacity: 1; } md-slide-toggle.md-slide-toggle-disabled .md-ink-ripple { background-color: #000; } md-slide-toggle.md-disabled .md-slide-toggle-label, md-slide-toggle.md-disabled .md-slide-toggle-container { cursor: default; } .md-slide-toggle-content { font-size: 14px; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; font-weight: 500; } .md-slide-toggle-label { display: flex; flex: 1; cursor: pointer; } .md-slide-toggle-container { cursor: -webkit-grab; cursor: grab; width: 36px; height: 24px; position: relative; margin-right: 8px; } [dir='rtl'] .md-slide-toggle-container { margin-left: 8px; margin-right: 0; } .md-slide-toggle-thumb-container { position: absolute; top: 2px; left: 0; z-index: 1; width: 16px; transform: translate3d(0, 0, 0); transition: all 80ms linear; transition-property: transform; } .md-slide-toggle-thumb-container.md-dragging { transition-duration: 0ms; } .md-slide-toggle-thumb { position: absolute; margin: 0; left: 0; top: 0; height: 20px; width: 20px; border-radius: 50%; box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); } .md-slide-toggle-bar { position: absolute; left: 1px; top: 5px; width: 34px; height: 14px; border-radius: 8px; } .md-slide-toggle-input { bottom: 0; left: 10px; } .md-slide-toggle-bar, .md-slide-toggle-thumb { transition: all 80ms linear; transition-property: background-color; transition-delay: 50ms; } /*# sourceMappingURL=slide-toggle.css.map */ \"],\n\t            providers: [MD_SLIDE_TOGGLE_VALUE_ACCESSOR],\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush\n\t        }), \n\t        __metadata$21('design:paramtypes', [_angular_core.ElementRef, _angular_core.Renderer])\n\t    ], MdSlideToggle);\n\t    return MdSlideToggle;\n\t}());\n\t/**\n\t * Renderer for the Slide Toggle component, which separates DOM modification in its own class\n\t */\n\tvar SlideToggleRenderer = (function () {\n\t    function SlideToggleRenderer(_elementRef) {\n\t        this._elementRef = _elementRef;\n\t        this._thumbEl = _elementRef.nativeElement.querySelector('.md-slide-toggle-thumb-container');\n\t        this._thumbBarEl = _elementRef.nativeElement.querySelector('.md-slide-toggle-bar');\n\t    }\n\t    /** Whether the slide-toggle is currently dragging. */\n\t    SlideToggleRenderer.prototype.isDragging = function () {\n\t        return !!this._thumbBarWidth;\n\t    };\n\t    /** Initializes the drag of the slide-toggle. */\n\t    SlideToggleRenderer.prototype.startThumbDrag = function (checked) {\n\t        if (!this.isDragging()) {\n\t            this._thumbBarWidth = this._thumbBarEl.clientWidth - this._thumbEl.clientWidth;\n\t            this._checked = checked;\n\t            this._thumbEl.classList.add('md-dragging');\n\t        }\n\t    };\n\t    /** Stops the current drag and returns the new checked value. */\n\t    SlideToggleRenderer.prototype.stopThumbDrag = function () {\n\t        if (this.isDragging()) {\n\t            this._thumbBarWidth = null;\n\t            this._thumbEl.classList.remove('md-dragging');\n\t            applyCssTransform(this._thumbEl, '');\n\t            return this._percentage > 50;\n\t        }\n\t    };\n\t    /** Updates the thumb containers position from the specified distance. */\n\t    SlideToggleRenderer.prototype.updateThumbPosition = function (distance) {\n\t        this._percentage = this._getThumbPercentage(distance);\n\t        applyCssTransform(this._thumbEl, \"translate3d(\" + this._percentage + \"%, 0, 0)\");\n\t    };\n\t    /** Retrieves the percentage of thumb from the moved distance. */\n\t    SlideToggleRenderer.prototype._getThumbPercentage = function (distance) {\n\t        var percentage = (distance / this._thumbBarWidth) * 100;\n\t        // When the toggle was initially checked, then we have to start the drag at the end.\n\t        if (this._checked) {\n\t            percentage += 100;\n\t        }\n\t        return Math.max(0, Math.min(percentage, 100));\n\t    };\n\t    return SlideToggleRenderer;\n\t}());\n\tvar MdSlideToggleModule = (function () {\n\t    function MdSlideToggleModule() {\n\t    }\n\t    MdSlideToggleModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdSlideToggleModule,\n\t            providers: [{ provide: _angular_platformBrowser.HAMMER_GESTURE_CONFIG, useClass: MdGestureConfig }]\n\t        };\n\t    };\n\t    MdSlideToggleModule = __decorate$21([\n\t        _angular_core.NgModule({\n\t            imports: [_angular_forms.FormsModule],\n\t            exports: [MdSlideToggle],\n\t            declarations: [MdSlideToggle],\n\t        }), \n\t        __metadata$21('design:paramtypes', [])\n\t    ], MdSlideToggleModule);\n\t    return MdSlideToggleModule;\n\t}());\n\t\n\tvar __decorate$22 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$22 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/**\n\t * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n\t * the default separation we chose.\n\t */\n\tvar MIN_AUTO_TICK_SEPARATION = 30;\n\t/**\n\t * Provider Expression that allows md-slider to register as a ControlValueAccessor.\n\t * This allows it to support [(ngModel)] and [formControl].\n\t */\n\tvar MD_SLIDER_VALUE_ACCESSOR = {\n\t    provide: _angular_forms.NG_VALUE_ACCESSOR,\n\t    useExisting: _angular_core.forwardRef(function () { return MdSlider; }),\n\t    multi: true\n\t};\n\t/** A simple change event emitted by the MdSlider component. */\n\tvar MdSliderChange = (function () {\n\t    function MdSliderChange() {\n\t    }\n\t    return MdSliderChange;\n\t}());\n\tvar MdSlider = (function () {\n\t    function MdSlider(elementRef) {\n\t        /** A renderer to handle updating the slider's thumb and fill track. */\n\t        this._renderer = null;\n\t        /** The dimensions of the slider. */\n\t        this._sliderDimensions = null;\n\t        /** Whether or not the slider is disabled. */\n\t        this._disabled = false;\n\t        /** Whether or not to show the thumb label. */\n\t        this._thumbLabel = false;\n\t        this._controlValueAccessorChangeFn = function () { };\n\t        /** The last value for which a change event was emitted. */\n\t        this._lastEmittedValue = null;\n\t        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n\t        this.onTouched = function () { };\n\t        /**\n\t         * Whether or not the thumb is sliding.\n\t         * Used to determine if there should be a transition for the thumb and fill track.\n\t         */\n\t        this._isSliding = false;\n\t        /**\n\t         * Whether or not the slider is active (clicked or sliding).\n\t         * Used to shrink and grow the thumb as according to the Material Design spec.\n\t         */\n\t        this._isActive = false;\n\t        /** The values at which the thumb will snap. */\n\t        this._step = 1;\n\t        /**\n\t         * How often to show ticks. Relative to the step so that a tick always appears on a step.\n\t         * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n\t         */\n\t        this._tickInterval = 0;\n\t        /** The size of a tick interval as a percentage of the size of the track. */\n\t        this._tickIntervalPercent = 0;\n\t        /** The percentage of the slider that coincides with the value. */\n\t        this._percent = 0;\n\t        /** Value of the slider. */\n\t        this._value = null;\n\t        /** The miniumum value that the slider can have. */\n\t        this._min = 0;\n\t        /** The maximum value that the slider can have. */\n\t        this._max = 100;\n\t        this.change = new _angular_core.EventEmitter();\n\t        this._renderer = new SliderRenderer(elementRef);\n\t    }\n\t    Object.defineProperty(MdSlider.prototype, \"disabled\", {\n\t        get: function () { return this._disabled; },\n\t        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSlider.prototype, \"thumbLabel\", {\n\t        get: function () { return this._thumbLabel; },\n\t        set: function (value) { this._thumbLabel = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSlider.prototype, \"step\", {\n\t        get: function () { return this._step; },\n\t        set: function (v) { this._step = coerceNumberProperty(v, this._step); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSlider.prototype, \"tickInterval\", {\n\t        get: function () { return this._tickInterval; },\n\t        set: function (v) {\n\t            this._tickInterval = (v == 'auto') ? v : coerceNumberProperty(v, this._tickInterval);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSlider.prototype, \"tickIntervalPercent\", {\n\t        get: function () { return this._tickIntervalPercent; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSlider.prototype, \"percent\", {\n\t        get: function () { return this._clamp(this._percent); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSlider.prototype, \"value\", {\n\t        get: function () {\n\t            // If the value needs to be read and it is still uninitialized, initialize it to the min.\n\t            if (this._value === null) {\n\t                this.value = this._min;\n\t            }\n\t            return this._value;\n\t        },\n\t        set: function (v) {\n\t            this._value = coerceNumberProperty(v, this._value);\n\t            this._percent = this._calculatePercentage(this._value);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSlider.prototype, \"min\", {\n\t        get: function () {\n\t            return this._min;\n\t        },\n\t        set: function (v) {\n\t            this._min = coerceNumberProperty(v, this._min);\n\t            // If the value wasn't explicitly set by the user, set it to the min.\n\t            if (this._value === null) {\n\t                this.value = this._min;\n\t            }\n\t            this._percent = this._calculatePercentage(this.value);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSlider.prototype, \"max\", {\n\t        get: function () {\n\t            return this._max;\n\t        },\n\t        set: function (v) {\n\t            this._max = coerceNumberProperty(v, this._max);\n\t            this._percent = this._calculatePercentage(this.value);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSlider.prototype, \"trackFillFlexBasis\", {\n\t        get: function () {\n\t            return this.percent * 100 + '%';\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSlider.prototype, \"ticksMarginLeft\", {\n\t        get: function () {\n\t            return this.tickIntervalPercent / 2 * 100 + '%';\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSlider.prototype, \"ticksContainerMarginLeft\", {\n\t        get: function () {\n\t            return '-' + this.ticksMarginLeft;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSlider.prototype, \"ticksBackgroundSize\", {\n\t        get: function () {\n\t            return this.tickIntervalPercent * 100 + '% 2px';\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    MdSlider.prototype._onMouseenter = function () {\n\t        if (this.disabled) {\n\t            return;\n\t        }\n\t        // We save the dimensions of the slider here so we can use them to update the spacing of the\n\t        // ticks and determine where on the slider click and slide events happen.\n\t        this._sliderDimensions = this._renderer.getSliderDimensions();\n\t        this._updateTickIntervalPercent();\n\t    };\n\t    MdSlider.prototype._onClick = function (event) {\n\t        if (this.disabled) {\n\t            return;\n\t        }\n\t        this._isActive = true;\n\t        this._isSliding = false;\n\t        this._renderer.addFocus();\n\t        this._updateValueFromPosition(event.clientX);\n\t        this._emitValueIfChanged();\n\t    };\n\t    MdSlider.prototype._onSlide = function (event) {\n\t        if (this.disabled) {\n\t            return;\n\t        }\n\t        // Prevent the slide from selecting anything else.\n\t        event.preventDefault();\n\t        this._updateValueFromPosition(event.center.x);\n\t    };\n\t    MdSlider.prototype._onSlideStart = function (event) {\n\t        if (this.disabled) {\n\t            return;\n\t        }\n\t        event.preventDefault();\n\t        this._isSliding = true;\n\t        this._isActive = true;\n\t        this._renderer.addFocus();\n\t        this._updateValueFromPosition(event.center.x);\n\t    };\n\t    MdSlider.prototype._onSlideEnd = function () {\n\t        this._isSliding = false;\n\t        this._emitValueIfChanged();\n\t    };\n\t    MdSlider.prototype._onBlur = function () {\n\t        this._isActive = false;\n\t        this.onTouched();\n\t    };\n\t    /**\n\t     * Calculate the new value from the new physical location. The value will always be snapped.\n\t     */\n\t    MdSlider.prototype._updateValueFromPosition = function (pos) {\n\t        if (!this._sliderDimensions) {\n\t            return;\n\t        }\n\t        var offset = this._sliderDimensions.left;\n\t        var size = this._sliderDimensions.width;\n\t        // The exact value is calculated from the event and used to find the closest snap value.\n\t        var percent = this._clamp((pos - offset) / size);\n\t        var exactValue = this._calculateValue(percent);\n\t        // This calculation finds the closest step by finding the closest whole number divisible by the\n\t        // step relative to the min.\n\t        var closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n\t        // The value needs to snap to the min and max.\n\t        this.value = this._clamp(closestValue, this.min, this.max);\n\t    };\n\t    /** Emits a change event if the current value is different from the last emitted value. */\n\t    MdSlider.prototype._emitValueIfChanged = function () {\n\t        if (this.value != this._lastEmittedValue) {\n\t            var event_1 = new MdSliderChange();\n\t            event_1.source = this;\n\t            event_1.value = this.value;\n\t            this.change.emit(event_1);\n\t            this._controlValueAccessorChangeFn(this.value);\n\t            this._lastEmittedValue = this.value;\n\t        }\n\t    };\n\t    /**\n\t     * Updates the amount of space between ticks as a percentage of the width of the slider.\n\t     */\n\t    MdSlider.prototype._updateTickIntervalPercent = function () {\n\t        if (!this.tickInterval) {\n\t            return;\n\t        }\n\t        if (this.tickInterval == 'auto') {\n\t            var pixelsPerStep = this._sliderDimensions.width * this.step / (this.max - this.min);\n\t            var stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n\t            var pixelsPerTick = stepsPerTick * this.step;\n\t            this._tickIntervalPercent = pixelsPerTick / (this._sliderDimensions.width);\n\t        }\n\t        else {\n\t            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n\t        }\n\t    };\n\t    /**\n\t     * Calculates the percentage of the slider that a value is.\n\t     */\n\t    MdSlider.prototype._calculatePercentage = function (value) {\n\t        return (value - this.min) / (this.max - this.min);\n\t    };\n\t    /**\n\t     * Calculates the value a percentage of the slider corresponds to.\n\t     */\n\t    MdSlider.prototype._calculateValue = function (percentage) {\n\t        return this.min + percentage * (this.max - this.min);\n\t    };\n\t    /**\n\t     * Return a number between two numbers.\n\t     */\n\t    MdSlider.prototype._clamp = function (value, min, max) {\n\t        if (min === void 0) { min = 0; }\n\t        if (max === void 0) { max = 1; }\n\t        return Math.max(min, Math.min(value, max));\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     */\n\t    MdSlider.prototype.writeValue = function (value) {\n\t        this.value = value;\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     */\n\t    MdSlider.prototype.registerOnChange = function (fn) {\n\t        this._controlValueAccessorChangeFn = fn;\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     */\n\t    MdSlider.prototype.registerOnTouched = function (fn) {\n\t        this.onTouched = fn;\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     */\n\t    MdSlider.prototype.setDisabledState = function (isDisabled) {\n\t        this.disabled = isDisabled;\n\t    };\n\t    __decorate$22([\n\t        _angular_core.Input(), \n\t        __metadata$22('design:type', Boolean)\n\t    ], MdSlider.prototype, \"disabled\", null);\n\t    __decorate$22([\n\t        _angular_core.Input('thumb-label'), \n\t        __metadata$22('design:type', Boolean)\n\t    ], MdSlider.prototype, \"thumbLabel\", null);\n\t    __decorate$22([\n\t        _angular_core.Input(), \n\t        __metadata$22('design:type', Object)\n\t    ], MdSlider.prototype, \"step\", null);\n\t    __decorate$22([\n\t        _angular_core.Input('tick-interval'), \n\t        __metadata$22('design:type', Object)\n\t    ], MdSlider.prototype, \"tickInterval\", null);\n\t    __decorate$22([\n\t        _angular_core.Input(), \n\t        __metadata$22('design:type', Object)\n\t    ], MdSlider.prototype, \"value\", null);\n\t    __decorate$22([\n\t        _angular_core.Input(), \n\t        __metadata$22('design:type', Object)\n\t    ], MdSlider.prototype, \"min\", null);\n\t    __decorate$22([\n\t        _angular_core.Input(), \n\t        __metadata$22('design:type', Object)\n\t    ], MdSlider.prototype, \"max\", null);\n\t    __decorate$22([\n\t        _angular_core.Output(), \n\t        __metadata$22('design:type', Object)\n\t    ], MdSlider.prototype, \"change\", void 0);\n\t    MdSlider = __decorate$22([\n\t        _angular_core.Component({selector: 'md-slider',\n\t            providers: [MD_SLIDER_VALUE_ACCESSOR],\n\t            host: {\n\t                '(blur)': '_onBlur()',\n\t                '(click)': '_onClick($event)',\n\t                '(mouseenter)': '_onMouseenter()',\n\t                '(slide)': '_onSlide($event)',\n\t                '(slideend)': '_onSlideEnd()',\n\t                '(slidestart)': '_onSlideStart($event)',\n\t                'tabindex': '0',\n\t                '[attr.aria-disabled]': 'disabled',\n\t                '[attr.aria-valuemax]': 'max',\n\t                '[attr.aria-valuemin]': 'min',\n\t                '[attr.aria-valuenow]': 'value',\n\t                '[class.md-slider-active]': '_isActive',\n\t                '[class.md-slider-disabled]': 'disabled',\n\t                '[class.md-slider-has-ticks]': 'tickInterval',\n\t                '[class.md-slider-sliding]': '_isSliding',\n\t                '[class.md-slider-thumb-label-showing]': 'thumbLabel',\n\t            },\n\t            template: \"<div class=\\\"md-slider-track\\\"> <div class=\\\"md-slider-track-fill\\\" [style.flexBasis]=\\\"trackFillFlexBasis\\\"></div> <div class=\\\"md-slider-ticks-container\\\" [style.marginLeft]=\\\"ticksContainerMarginLeft\\\"> <div class=\\\"md-slider-ticks\\\" [style.marginLeft]=\\\"ticksMarginLeft\\\" [style.backgroundSize]=\\\"ticksBackgroundSize\\\"></div> </div> <div class=\\\"md-slider-thumb-container\\\"> <div class=\\\"md-slider-thumb\\\"></div> <div class=\\\"md-slider-thumb-label\\\"> <span class=\\\"md-slider-thumb-label-text\\\">{{value}}</span> </div> </div> </div>\",\n\t            styles: [\"md-slider { display: inline-block; box-sizing: border-box; position: relative; height: 48px; min-width: 128px; padding: 8px; outline: none; vertical-align: middle; } .md-slider-track { display: flex; flex-grow: 1; align-items: center; position: relative; top: 15px; height: 2px; transition: box-shadow 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } .md-slider-has-ticks.md-slider-active .md-slider-track, .md-slider-has-ticks:hover .md-slider-track { box-shadow: inset -4px 0 0 -2px rgba(0, 0, 0, 0.6); } .md-slider-track-fill { flex: 0 0 50%; height: 2px; transition: flex-basis 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } .md-slider-sliding .md-slider-track-fill { transition: none; } .md-slider-ticks-container { position: absolute; left: 0; top: 0; height: 2px; width: 100%; overflow: hidden; } .md-slider-ticks { background: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6) 2px, transparent 0, transparent) repeat; background: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6) 2px, transparent 0, transparent) repeat; height: 2px; width: 100%; opacity: 0; transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } .md-slider-has-ticks.md-slider-active .md-slider-ticks, .md-slider-has-ticks:hover .md-slider-ticks { opacity: 1; } .md-slider-thumb-container { flex: 0 0 auto; position: relative; width: 0; height: 0; } .md-slider-thumb { position: absolute; left: -10px; top: -10px; width: 20px; height: 20px; border-radius: 50%; transform-origin: 50% 50%; transform: scale(0.7); transition: transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } .md-slider-active .md-slider-thumb { transform: scale(1); } .md-slider-active.md-slider-thumb-label-showing .md-slider-thumb { transform: scale(0); } .md-slider-thumb-label { display: flex; align-items: center; justify-content: center; position: absolute; left: -14px; top: -40px; width: 28px; height: 28px; border-radius: 50%; transform: translateY(26px) scale(0.4) rotate(45deg); transition: 300ms cubic-bezier(0.35, 0, 0.25, 1); transition-property: transform, border-radius; } .md-slider-active .md-slider-thumb-label { border-radius: 50% 50% 0; transform: rotate(45deg); } md-slider:not(.md-slider-thumb-label-showing) .md-slider-thumb-label { display: none; } .md-slider-thumb-label-text { z-index: 1; font-size: 12px; font-weight: bold; opacity: 0; transform: rotate(-45deg); transition: opacity 300ms cubic-bezier(0.35, 0, 0.25, 1); } .md-slider-active .md-slider-thumb-label-text { opacity: 1; } /*# sourceMappingURL=slider.css.map */ \"],\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t        }), \n\t        __metadata$22('design:paramtypes', [_angular_core.ElementRef])\n\t    ], MdSlider);\n\t    return MdSlider;\n\t}());\n\t/**\n\t * Renderer class in order to keep all dom manipulation in one place and outside of the main class.\n\t */\n\tvar SliderRenderer = (function () {\n\t    function SliderRenderer(elementRef) {\n\t        this._sliderElement = elementRef.nativeElement;\n\t    }\n\t    /**\n\t     * Get the bounding client rect of the slider track element.\n\t     * The track is used rather than the native element to ignore the extra space that the thumb can\n\t     * take up.\n\t     */\n\t    SliderRenderer.prototype.getSliderDimensions = function () {\n\t        var trackElement = this._sliderElement.querySelector('.md-slider-track');\n\t        return trackElement.getBoundingClientRect();\n\t    };\n\t    /**\n\t     * Focuses the native element.\n\t     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n\t     */\n\t    SliderRenderer.prototype.addFocus = function () {\n\t        this._sliderElement.focus();\n\t    };\n\t    return SliderRenderer;\n\t}());\n\tvar MdSliderModule = (function () {\n\t    function MdSliderModule() {\n\t    }\n\t    MdSliderModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdSliderModule,\n\t            providers: [{ provide: _angular_platformBrowser.HAMMER_GESTURE_CONFIG, useClass: MdGestureConfig }]\n\t        };\n\t    };\n\t    MdSliderModule = __decorate$22([\n\t        _angular_core.NgModule({\n\t            imports: [_angular_forms.FormsModule],\n\t            exports: [MdSlider],\n\t            declarations: [MdSlider],\n\t            providers: [\n\t                { provide: _angular_platformBrowser.HAMMER_GESTURE_CONFIG, useClass: MdGestureConfig },\n\t            ],\n\t        }), \n\t        __metadata$22('design:paramtypes', [])\n\t    ], MdSliderModule);\n\t    return MdSliderModule;\n\t}());\n\t\n\tvar __extends$7 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate$23 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$23 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar __param$4 = (this && this.__param) || function (paramIndex, decorator) {\n\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t};\n\t/** Exception thrown when two MdSidenav are matching the same side. */\n\tvar MdDuplicatedSidenavError = (function (_super) {\n\t    __extends$7(MdDuplicatedSidenavError, _super);\n\t    function MdDuplicatedSidenavError(align) {\n\t        _super.call(this, \"A sidenav was already declared for 'align=\\\"\" + align + \"\\\"'\");\n\t    }\n\t    return MdDuplicatedSidenavError;\n\t}(MdError));\n\t/**\n\t * <md-sidenav> component.\n\t *\n\t * This component corresponds to the drawer of the sidenav.\n\t *\n\t * Please refer to README.md for examples on how to use it.\n\t */\n\tvar MdSidenav = (function () {\n\t    /**\n\t     * @param _elementRef The DOM element reference. Used for transition and width calculation.\n\t     *     If not available we do not hook on transitions.\n\t     */\n\t    function MdSidenav(_elementRef) {\n\t        this._elementRef = _elementRef;\n\t        /** Alignment of the sidenav (direction neutral); whether 'start' or 'end'. */\n\t        this._align = 'start';\n\t        this._valid = true;\n\t        /** Mode of the sidenav; whether 'over' or 'side'. */\n\t        this.mode = 'over';\n\t        /** Whether the sidenav is opened. */\n\t        this._opened = false;\n\t        /** Event emitted when the sidenav is being opened. Use this to synchronize animations. */\n\t        this.onOpenStart = new _angular_core.EventEmitter();\n\t        /** Event emitted when the sidenav is fully opened. */\n\t        this.onOpen = new _angular_core.EventEmitter();\n\t        /** Event emitted when the sidenav is being closed. Use this to synchronize animations. */\n\t        this.onCloseStart = new _angular_core.EventEmitter();\n\t        /** Event emitted when the sidenav is fully closed. */\n\t        this.onClose = new _angular_core.EventEmitter();\n\t        /** Event emitted when the sidenav alignment changes. */\n\t        this.onAlignChanged = new _angular_core.EventEmitter();\n\t        this._transition = false;\n\t    }\n\t    Object.defineProperty(MdSidenav.prototype, \"valid\", {\n\t        /** Whether this md-sidenav is part of a valid md-sidenav-layout configuration. */\n\t        get: function () {\n\t            return this._valid;\n\t        },\n\t        set: function (value) {\n\t            value = coerceBooleanProperty(value);\n\t            // When the drawers are not in a valid configuration we close them all until they are in a valid\n\t            // configuration again.\n\t            if (!value) {\n\t                this.close();\n\t            }\n\t            this._valid = value;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSidenav.prototype, \"align\", {\n\t        get: function () {\n\t            return this._align;\n\t        },\n\t        set: function (value) {\n\t            // Make sure we have a valid value.\n\t            value = (value == 'end') ? 'end' : 'start';\n\t            if (value != this._align) {\n\t                this._align = value;\n\t                this.onAlignChanged.emit();\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    MdSidenav.prototype.ngAfterContentInit = function () {\n\t        // This can happen when the sidenav is set to opened in the template and the transition\n\t        // isn't ended.\n\t        if (this._openPromise) {\n\t            this._openPromiseResolve();\n\t            this._openPromise = null;\n\t        }\n\t    };\n\t    Object.defineProperty(MdSidenav.prototype, \"opened\", {\n\t        /**\n\t         * Whether the sidenav is opened. We overload this because we trigger an event when it\n\t         * starts or end.\n\t         */\n\t        get: function () { return this._opened; },\n\t        set: function (v) {\n\t            this.toggle(coerceBooleanProperty(v));\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /** Open this sidenav, and return a Promise that will resolve when it's fully opened (or get\n\t     * rejected if it didn't). */\n\t    MdSidenav.prototype.open = function () {\n\t        return this.toggle(true);\n\t    };\n\t    /**\n\t     * Close this sidenav, and return a Promise that will resolve when it's fully closed (or get\n\t     * rejected if it didn't).\n\t     */\n\t    MdSidenav.prototype.close = function () {\n\t        return this.toggle(false);\n\t    };\n\t    /**\n\t     * Toggle this sidenav. This is equivalent to calling open() when it's already opened, or\n\t     * close() when it's closed.\n\t     * @param isOpen\n\t     */\n\t    MdSidenav.prototype.toggle = function (isOpen) {\n\t        var _this = this;\n\t        if (isOpen === void 0) { isOpen = !this.opened; }\n\t        if (!this.valid) {\n\t            return Promise.resolve(null);\n\t        }\n\t        // Shortcut it if we're already opened.\n\t        if (isOpen === this.opened) {\n\t            if (!this._transition) {\n\t                return Promise.resolve(null);\n\t            }\n\t            else {\n\t                return isOpen ? this._openPromise : this._closePromise;\n\t            }\n\t        }\n\t        this._opened = isOpen;\n\t        this._transition = true;\n\t        if (isOpen) {\n\t            this.onOpenStart.emit();\n\t        }\n\t        else {\n\t            this.onCloseStart.emit();\n\t        }\n\t        if (isOpen) {\n\t            if (this._openPromise == null) {\n\t                this._openPromise = new Promise(function (resolve, reject) {\n\t                    _this._openPromiseResolve = resolve;\n\t                    _this._openPromiseReject = reject;\n\t                });\n\t            }\n\t            return this._openPromise;\n\t        }\n\t        else {\n\t            if (this._closePromise == null) {\n\t                this._closePromise = new Promise(function (resolve, reject) {\n\t                    _this._closePromiseResolve = resolve;\n\t                    _this._closePromiseReject = reject;\n\t                });\n\t            }\n\t            return this._closePromise;\n\t        }\n\t    };\n\t    /**\n\t     * When transition has finished, set the internal state for classes and emit the proper event.\n\t     * The event passed is actually of type TransitionEvent, but that type is not available in\n\t     * Android so we use any.\n\t     */\n\t    MdSidenav.prototype._onTransitionEnd = function (transitionEvent) {\n\t        if (transitionEvent.target == this._elementRef.nativeElement\n\t            && transitionEvent.propertyName.endsWith('transform')) {\n\t            this._transition = false;\n\t            if (this._opened) {\n\t                if (this._openPromise != null) {\n\t                    this._openPromiseResolve();\n\t                }\n\t                if (this._closePromise != null) {\n\t                    this._closePromiseReject();\n\t                }\n\t                this.onOpen.emit();\n\t            }\n\t            else {\n\t                if (this._closePromise != null) {\n\t                    this._closePromiseResolve();\n\t                }\n\t                if (this._openPromise != null) {\n\t                    this._openPromiseReject();\n\t                }\n\t                this.onClose.emit();\n\t            }\n\t            this._openPromise = null;\n\t            this._closePromise = null;\n\t        }\n\t    };\n\t    Object.defineProperty(MdSidenav.prototype, \"_isClosing\", {\n\t        get: function () {\n\t            return !this._opened && this._transition;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSidenav.prototype, \"_isOpening\", {\n\t        get: function () {\n\t            return this._opened && this._transition;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSidenav.prototype, \"_isClosed\", {\n\t        get: function () {\n\t            return !this._opened && !this._transition;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSidenav.prototype, \"_isOpened\", {\n\t        get: function () {\n\t            return this._opened && !this._transition;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSidenav.prototype, \"_isEnd\", {\n\t        get: function () {\n\t            return this.align == 'end';\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSidenav.prototype, \"_modeSide\", {\n\t        get: function () {\n\t            return this.mode == 'side';\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSidenav.prototype, \"_modeOver\", {\n\t        get: function () {\n\t            return this.mode == 'over';\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSidenav.prototype, \"_modePush\", {\n\t        get: function () {\n\t            return this.mode == 'push';\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSidenav.prototype, \"_width\", {\n\t        get: function () {\n\t            if (this._elementRef.nativeElement) {\n\t                return this._elementRef.nativeElement.offsetWidth;\n\t            }\n\t            return 0;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    __decorate$23([\n\t        _angular_core.Input(), \n\t        __metadata$23('design:type', Object)\n\t    ], MdSidenav.prototype, \"align\", null);\n\t    __decorate$23([\n\t        _angular_core.Input(), \n\t        __metadata$23('design:type', Object)\n\t    ], MdSidenav.prototype, \"mode\", void 0);\n\t    __decorate$23([\n\t        _angular_core.Output('open-start'), \n\t        __metadata$23('design:type', Object)\n\t    ], MdSidenav.prototype, \"onOpenStart\", void 0);\n\t    __decorate$23([\n\t        _angular_core.Output('open'), \n\t        __metadata$23('design:type', Object)\n\t    ], MdSidenav.prototype, \"onOpen\", void 0);\n\t    __decorate$23([\n\t        _angular_core.Output('close-start'), \n\t        __metadata$23('design:type', Object)\n\t    ], MdSidenav.prototype, \"onCloseStart\", void 0);\n\t    __decorate$23([\n\t        _angular_core.Output('close'), \n\t        __metadata$23('design:type', Object)\n\t    ], MdSidenav.prototype, \"onClose\", void 0);\n\t    __decorate$23([\n\t        _angular_core.Output('align-changed'), \n\t        __metadata$23('design:type', Object)\n\t    ], MdSidenav.prototype, \"onAlignChanged\", void 0);\n\t    __decorate$23([\n\t        _angular_core.Input(), \n\t        __metadata$23('design:type', Boolean)\n\t    ], MdSidenav.prototype, \"opened\", null);\n\t    MdSidenav = __decorate$23([\n\t        _angular_core.Component({selector: 'md-sidenav',\n\t            template: '<ng-content></ng-content>',\n\t            host: {\n\t                '(transitionend)': '_onTransitionEnd($event)',\n\t                // must prevent the browser from aligning text based on value\n\t                '[attr.align]': 'null',\n\t                '[class.md-sidenav-closed]': '_isClosed',\n\t                '[class.md-sidenav-closing]': '_isClosing',\n\t                '[class.md-sidenav-end]': '_isEnd',\n\t                '[class.md-sidenav-opened]': '_isOpened',\n\t                '[class.md-sidenav-opening]': '_isOpening',\n\t                '[class.md-sidenav-over]': '_modeOver',\n\t                '[class.md-sidenav-push]': '_modePush',\n\t                '[class.md-sidenav-side]': '_modeSide',\n\t                '[class.md-sidenav-invalid]': '!valid',\n\t            },\n\t            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t        }), \n\t        __metadata$23('design:paramtypes', [_angular_core.ElementRef])\n\t    ], MdSidenav);\n\t    return MdSidenav;\n\t}());\n\t/**\n\t * <md-sidenav-layout> component.\n\t *\n\t * This is the parent component to one or two <md-sidenav>s that validates the state internally\n\t * and coordinates the backdrop and content styling.\n\t */\n\tvar MdSidenavLayout = (function () {\n\t    function MdSidenavLayout(_dir, _element, _renderer) {\n\t        var _this = this;\n\t        this._dir = _dir;\n\t        this._element = _element;\n\t        this._renderer = _renderer;\n\t        // If a `Dir` directive exists up the tree, listen direction changes and update the left/right\n\t        // properties to point to the proper start/end.\n\t        if (_dir != null) {\n\t            _dir.dirChange.subscribe(function () { return _this._validateDrawers(); });\n\t        }\n\t    }\n\t    Object.defineProperty(MdSidenavLayout.prototype, \"start\", {\n\t        get: function () { return this._start; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdSidenavLayout.prototype, \"end\", {\n\t        get: function () { return this._end; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    MdSidenavLayout.prototype.ngAfterContentInit = function () {\n\t        var _this = this;\n\t        // On changes, assert on consistency.\n\t        this._sidenavs.changes.subscribe(function () { return _this._validateDrawers(); });\n\t        this._sidenavs.forEach(function (sidenav) {\n\t            _this._watchSidenavToggle(sidenav);\n\t            _this._watchSidenavAlign(sidenav);\n\t        });\n\t        this._validateDrawers();\n\t    };\n\t    /**\n\t     * Subscribes to sidenav events in order to set a class on the main layout element when the\n\t     * sidenav is open and the backdrop is visible. This ensures any overflow on the layout element is\n\t     * properly hidden.\n\t     */\n\t    MdSidenavLayout.prototype._watchSidenavToggle = function (sidenav) {\n\t        var _this = this;\n\t        if (!sidenav || sidenav.mode === 'side') {\n\t            return;\n\t        }\n\t        sidenav.onOpen.subscribe(function () { return _this._setLayoutClass(sidenav, true); });\n\t        sidenav.onClose.subscribe(function () { return _this._setLayoutClass(sidenav, false); });\n\t    };\n\t    /**\n\t     * Subscribes to sidenav onAlignChanged event in order to re-validate drawers when the align\n\t     * changes.\n\t     */\n\t    MdSidenavLayout.prototype._watchSidenavAlign = function (sidenav) {\n\t        var _this = this;\n\t        if (!sidenav) {\n\t            return;\n\t        }\n\t        sidenav.onAlignChanged.subscribe(function () { return _this._validateDrawers(); });\n\t    };\n\t    /** Toggles the 'md-sidenav-opened' class on the main 'md-sidenav-layout' element. */\n\t    MdSidenavLayout.prototype._setLayoutClass = function (sidenav, bool) {\n\t        this._renderer.setElementClass(this._element.nativeElement, 'md-sidenav-opened', bool);\n\t    };\n\t    /** Sets the valid state of the drawers. */\n\t    MdSidenavLayout.prototype._setDrawersValid = function (valid) {\n\t        this._sidenavs.forEach(function (sidenav) {\n\t            sidenav.valid = valid;\n\t        });\n\t        if (!valid) {\n\t            this._start = this._end = this._left = this._right = null;\n\t        }\n\t    };\n\t    /** Validate the state of the sidenav children components. */\n\t    MdSidenavLayout.prototype._validateDrawers = function () {\n\t        this._start = this._end = null;\n\t        // Ensure that we have at most one start and one end sidenav.\n\t        // NOTE: We must call toArray on _sidenavs even though it's iterable\n\t        // (see https://github.com/Microsoft/TypeScript/issues/3164).\n\t        for (var _i = 0, _a = this._sidenavs.toArray(); _i < _a.length; _i++) {\n\t            var sidenav = _a[_i];\n\t            if (sidenav.align == 'end') {\n\t                if (this._end != null) {\n\t                    this._setDrawersValid(false);\n\t                    return;\n\t                }\n\t                this._end = sidenav;\n\t            }\n\t            else {\n\t                if (this._start != null) {\n\t                    this._setDrawersValid(false);\n\t                    return;\n\t                }\n\t                this._start = sidenav;\n\t            }\n\t        }\n\t        this._right = this._left = null;\n\t        // Detect if we're LTR or RTL.\n\t        if (this._dir == null || this._dir.value == 'ltr') {\n\t            this._left = this._start;\n\t            this._right = this._end;\n\t        }\n\t        else {\n\t            this._left = this._end;\n\t            this._right = this._start;\n\t        }\n\t        this._setDrawersValid(true);\n\t    };\n\t    MdSidenavLayout.prototype._closeModalSidenav = function () {\n\t        if (this._start != null && this._start.mode != 'side') {\n\t            this._start.close();\n\t        }\n\t        if (this._end != null && this._end.mode != 'side') {\n\t            this._end.close();\n\t        }\n\t    };\n\t    MdSidenavLayout.prototype._isShowingBackdrop = function () {\n\t        return (this._isSidenavOpen(this._start) && this._start.mode != 'side')\n\t            || (this._isSidenavOpen(this._end) && this._end.mode != 'side');\n\t    };\n\t    MdSidenavLayout.prototype._isSidenavOpen = function (side) {\n\t        return side != null && side.opened;\n\t    };\n\t    /**\n\t     * Return the width of the sidenav, if it's in the proper mode and opened.\n\t     * This may relayout the view, so do not call this often.\n\t     * @param sidenav\n\t     * @param mode\n\t     */\n\t    MdSidenavLayout.prototype._getSidenavEffectiveWidth = function (sidenav, mode) {\n\t        return (this._isSidenavOpen(sidenav) && sidenav.mode == mode) ? sidenav._width : 0;\n\t    };\n\t    MdSidenavLayout.prototype._getMarginLeft = function () {\n\t        return this._getSidenavEffectiveWidth(this._left, 'side');\n\t    };\n\t    MdSidenavLayout.prototype._getMarginRight = function () {\n\t        return this._getSidenavEffectiveWidth(this._right, 'side');\n\t    };\n\t    MdSidenavLayout.prototype._getPositionLeft = function () {\n\t        return this._getSidenavEffectiveWidth(this._left, 'push');\n\t    };\n\t    MdSidenavLayout.prototype._getPositionRight = function () {\n\t        return this._getSidenavEffectiveWidth(this._right, 'push');\n\t    };\n\t    /**\n\t     * Returns the horizontal offset for the content area.  There should never be a value for both\n\t     * left and right, so by subtracting the right value from the left value, we should always get\n\t     * the appropriate offset.\n\t     */\n\t    MdSidenavLayout.prototype._getPositionOffset = function () {\n\t        return this._getPositionLeft() - this._getPositionRight();\n\t    };\n\t    /**\n\t     * This is using [ngStyle] rather than separate [style...] properties because [style.transform]\n\t     * doesn't seem to work right now.\n\t     */\n\t    MdSidenavLayout.prototype._getStyles = function () {\n\t        return {\n\t            marginLeft: this._getMarginLeft() + \"px\",\n\t            marginRight: this._getMarginRight() + \"px\",\n\t            transform: \"translate3d(\" + this._getPositionOffset() + \"px, 0, 0)\"\n\t        };\n\t    };\n\t    __decorate$23([\n\t        _angular_core.ContentChildren(MdSidenav), \n\t        __metadata$23('design:type', _angular_core.QueryList)\n\t    ], MdSidenavLayout.prototype, \"_sidenavs\", void 0);\n\t    MdSidenavLayout = __decorate$23([\n\t        _angular_core.Component({selector: 'md-sidenav-layout',\n\t            // Do not use ChangeDetectionStrategy.OnPush. It does not work for this component because\n\t            // technically it is a sibling of MdSidenav (on the content tree) and isn't updated when MdSidenav\n\t            // changes its state.\n\t            template: \"<div class=\\\"md-sidenav-backdrop\\\" (click)=\\\"_closeModalSidenav()\\\" [class.md-sidenav-shown]=\\\"_isShowingBackdrop()\\\"></div> <ng-content select=\\\"md-sidenav\\\"></ng-content> <div class=\\\"md-sidenav-content\\\" [ngStyle]=\\\"_getStyles()\\\"> <ng-content></ng-content> </div> \",\n\t            styles: [\"md-sidenav-layout { position: relative; transform: translate3d(0, 0, 0); box-sizing: border-box; -webkit-overflow-scrolling: touch; display: block; overflow: hidden; } md-sidenav-layout[fullscreen] { position: fixed; top: 0; left: 0; right: 0; bottom: 0; } md-sidenav-layout[fullscreen].md-sidenav-opened { overflow: hidden; } .md-sidenav-backdrop { position: fixed; top: 0; left: 0; right: 0; bottom: 0; display: block; z-index: 2; visibility: hidden; } .md-sidenav-backdrop.md-sidenav-shown { visibility: visible; } .md-sidenav-content { position: relative; transform: translate3d(0, 0, 0); display: block; height: 100%; overflow: auto; } md-sidenav { position: relative; transform: translate3d(0, 0, 0); display: block; position: absolute; top: 0; bottom: 0; z-index: 3; min-width: 5%; overflow-y: auto; transform: translate3d(-100%, 0, 0); } md-sidenav.md-sidenav-closed { visibility: hidden; } md-sidenav.md-sidenav-closing { transform: translate3d(-100%, 0, 0); } md-sidenav.md-sidenav-opening { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); visibility: visible; transform: translate3d(0, 0, 0); } md-sidenav.md-sidenav-opened { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); transform: translate3d(0, 0, 0); } md-sidenav.md-sidenav-side { z-index: 1; } md-sidenav.md-sidenav-end { right: 0; transform: translate3d(100%, 0, 0); } md-sidenav.md-sidenav-end.md-sidenav-closed { visibility: hidden; } md-sidenav.md-sidenav-end.md-sidenav-closing { transform: translate3d(100%, 0, 0); } md-sidenav.md-sidenav-end.md-sidenav-opening { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); visibility: visible; transform: translate3d(0, 0, 0); } md-sidenav.md-sidenav-end.md-sidenav-opened { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); transform: translate3d(0, 0, 0); } [dir='rtl'] md-sidenav { transform: translate3d(100%, 0, 0); } [dir='rtl'] md-sidenav.md-sidenav-closed { visibility: hidden; } [dir='rtl'] md-sidenav.md-sidenav-closing { transform: translate3d(100%, 0, 0); } [dir='rtl'] md-sidenav.md-sidenav-opening { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); visibility: visible; transform: translate3d(0, 0, 0); } [dir='rtl'] md-sidenav.md-sidenav-opened { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); transform: translate3d(0, 0, 0); } [dir='rtl'] md-sidenav.md-sidenav-end { left: 0; right: auto; transform: translate3d(-100%, 0, 0); } [dir='rtl'] md-sidenav.md-sidenav-end.md-sidenav-closed { visibility: hidden; } [dir='rtl'] md-sidenav.md-sidenav-end.md-sidenav-closing { transform: translate3d(-100%, 0, 0); } [dir='rtl'] md-sidenav.md-sidenav-end.md-sidenav-opening { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); visibility: visible; transform: translate3d(0, 0, 0); } [dir='rtl'] md-sidenav.md-sidenav-end.md-sidenav-opened { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); transform: translate3d(0, 0, 0); } .md-sidenav-invalid { display: none; } /*# sourceMappingURL=sidenav.css.map */ \",\n\t\"md-sidenav { transition: transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } .md-sidenav-content { transition: transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } .md-sidenav-backdrop.md-sidenav-shown { transition: background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } /*# sourceMappingURL=sidenav-transitions.css.map */ \"],\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t        }),\n\t        __param$4(0, _angular_core.Optional()), \n\t        __metadata$23('design:paramtypes', [Dir, _angular_core.ElementRef, _angular_core.Renderer])\n\t    ], MdSidenavLayout);\n\t    return MdSidenavLayout;\n\t}());\n\tvar MdSidenavModule = (function () {\n\t    function MdSidenavModule() {\n\t    }\n\t    MdSidenavModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdSidenavModule,\n\t            providers: []\n\t        };\n\t    };\n\t    MdSidenavModule = __decorate$23([\n\t        _angular_core.NgModule({\n\t            imports: [_angular_common.CommonModule],\n\t            exports: [MdSidenavLayout, MdSidenav],\n\t            declarations: [MdSidenavLayout, MdSidenav],\n\t        }), \n\t        __metadata$23('design:paramtypes', [])\n\t    ], MdSidenavModule);\n\t    return MdSidenavModule;\n\t}());\n\t\n\tvar __decorate$24 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$24 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar MdListDivider = (function () {\n\t    function MdListDivider() {\n\t    }\n\t    MdListDivider = __decorate$24([\n\t        _angular_core.Directive({\n\t            selector: 'md-divider'\n\t        }), \n\t        __metadata$24('design:paramtypes', [])\n\t    ], MdListDivider);\n\t    return MdListDivider;\n\t}());\n\tvar MdList = (function () {\n\t    function MdList() {\n\t    }\n\t    MdList = __decorate$24([\n\t        _angular_core.Component({selector: 'md-list, md-nav-list',\n\t            host: { 'role': 'list' },\n\t            template: '<ng-content></ng-content>',\n\t            styles: [\"md-list, md-nav-list { padding-top: 8px; display: block; } md-list [md-subheader], md-nav-list [md-subheader] { display: block; box-sizing: border-box; height: 48px; padding: 16px; margin: 0; font-size: 14px; font-weight: 500; } md-list [md-subheader]:first-child, md-nav-list [md-subheader]:first-child { margin-top: -8px; } md-list md-list-item .md-list-item, md-list a[md-list-item] .md-list-item, md-nav-list md-list-item .md-list-item, md-nav-list a[md-list-item] .md-list-item { display: flex; flex-direction: row; align-items: center; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; box-sizing: border-box; font-size: 16px; height: 48px; padding: 0 16px; } md-list md-list-item.md-list-avatar .md-list-item, md-list a[md-list-item].md-list-avatar .md-list-item, md-nav-list md-list-item.md-list-avatar .md-list-item, md-nav-list a[md-list-item].md-list-avatar .md-list-item { height: 56px; } md-list md-list-item.md-2-line .md-list-item, md-list a[md-list-item].md-2-line .md-list-item, md-nav-list md-list-item.md-2-line .md-list-item, md-nav-list a[md-list-item].md-2-line .md-list-item { height: 72px; } md-list md-list-item.md-3-line .md-list-item, md-list a[md-list-item].md-3-line .md-list-item, md-nav-list md-list-item.md-3-line .md-list-item, md-nav-list a[md-list-item].md-3-line .md-list-item { height: 88px; } md-list md-list-item.md-multi-line .md-list-item, md-list a[md-list-item].md-multi-line .md-list-item, md-nav-list md-list-item.md-multi-line .md-list-item, md-nav-list a[md-list-item].md-multi-line .md-list-item { height: 100%; padding: 8px 16px; } md-list md-list-item .md-list-text, md-list a[md-list-item] .md-list-text, md-nav-list md-list-item .md-list-text, md-nav-list a[md-list-item] .md-list-text { display: flex; flex-direction: column; width: 100%; box-sizing: border-box; overflow: hidden; padding: 0 16px; } md-list md-list-item .md-list-text > *, md-list a[md-list-item] .md-list-text > *, md-nav-list md-list-item .md-list-text > *, md-nav-list a[md-list-item] .md-list-text > * { margin: 0; padding: 0; font-weight: normal; font-size: inherit; } md-list md-list-item .md-list-text:empty, md-list a[md-list-item] .md-list-text:empty, md-nav-list md-list-item .md-list-text:empty, md-nav-list a[md-list-item] .md-list-text:empty { display: none; } md-list md-list-item .md-list-text:first-child, md-list a[md-list-item] .md-list-text:first-child, md-nav-list md-list-item .md-list-text:first-child, md-nav-list a[md-list-item] .md-list-text:first-child { padding: 0; } md-list md-list-item [md-list-avatar], md-list a[md-list-item] [md-list-avatar], md-nav-list md-list-item [md-list-avatar], md-nav-list a[md-list-item] [md-list-avatar] { flex-shrink: 0; width: 40px; height: 40px; border-radius: 50%; } md-list md-list-item [md-list-icon], md-list a[md-list-item] [md-list-icon], md-nav-list md-list-item [md-list-icon], md-nav-list a[md-list-item] [md-list-icon] { width: 24px; height: 24px; border-radius: 50%; padding: 4px; } md-list md-list-item [md-line], md-list a[md-list-item] [md-line], md-nav-list md-list-item [md-line], md-nav-list a[md-list-item] [md-line] { white-space: nowrap; overflow-x: hidden; text-overflow: ellipsis; display: block; box-sizing: border-box; } md-list md-list-item [md-line]:nth-child(n+2), md-list a[md-list-item] [md-line]:nth-child(n+2), md-nav-list md-list-item [md-line]:nth-child(n+2), md-nav-list a[md-list-item] [md-line]:nth-child(n+2) { font-size: 14px; } md-list[dense], md-nav-list[dense] { padding-top: 4px; display: block; } md-list[dense] [md-subheader], md-nav-list[dense] [md-subheader] { display: block; box-sizing: border-box; height: 40px; padding: 16px; margin: 0; font-size: 13px; font-weight: 500; } md-list[dense] [md-subheader]:first-child, md-nav-list[dense] [md-subheader]:first-child { margin-top: -4px; } md-list[dense] md-list-item .md-list-item, md-list[dense] a[md-list-item] .md-list-item, md-nav-list[dense] md-list-item .md-list-item, md-nav-list[dense] a[md-list-item] .md-list-item { display: flex; flex-direction: row; align-items: center; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; box-sizing: border-box; font-size: 13px; height: 40px; padding: 0 16px; } md-list[dense] md-list-item.md-list-avatar .md-list-item, md-list[dense] a[md-list-item].md-list-avatar .md-list-item, md-nav-list[dense] md-list-item.md-list-avatar .md-list-item, md-nav-list[dense] a[md-list-item].md-list-avatar .md-list-item { height: 48px; } md-list[dense] md-list-item.md-2-line .md-list-item, md-list[dense] a[md-list-item].md-2-line .md-list-item, md-nav-list[dense] md-list-item.md-2-line .md-list-item, md-nav-list[dense] a[md-list-item].md-2-line .md-list-item { height: 60px; } md-list[dense] md-list-item.md-3-line .md-list-item, md-list[dense] a[md-list-item].md-3-line .md-list-item, md-nav-list[dense] md-list-item.md-3-line .md-list-item, md-nav-list[dense] a[md-list-item].md-3-line .md-list-item { height: 76px; } md-list[dense] md-list-item.md-multi-line .md-list-item, md-list[dense] a[md-list-item].md-multi-line .md-list-item, md-nav-list[dense] md-list-item.md-multi-line .md-list-item, md-nav-list[dense] a[md-list-item].md-multi-line .md-list-item { height: 100%; padding: 8px 16px; } md-list[dense] md-list-item .md-list-text, md-list[dense] a[md-list-item] .md-list-text, md-nav-list[dense] md-list-item .md-list-text, md-nav-list[dense] a[md-list-item] .md-list-text { display: flex; flex-direction: column; width: 100%; box-sizing: border-box; overflow: hidden; padding: 0 16px; } md-list[dense] md-list-item .md-list-text > *, md-list[dense] a[md-list-item] .md-list-text > *, md-nav-list[dense] md-list-item .md-list-text > *, md-nav-list[dense] a[md-list-item] .md-list-text > * { margin: 0; padding: 0; font-weight: normal; font-size: inherit; } md-list[dense] md-list-item .md-list-text:empty, md-list[dense] a[md-list-item] .md-list-text:empty, md-nav-list[dense] md-list-item .md-list-text:empty, md-nav-list[dense] a[md-list-item] .md-list-text:empty { display: none; } md-list[dense] md-list-item .md-list-text:first-child, md-list[dense] a[md-list-item] .md-list-text:first-child, md-nav-list[dense] md-list-item .md-list-text:first-child, md-nav-list[dense] a[md-list-item] .md-list-text:first-child { padding: 0; } md-list[dense] md-list-item [md-list-avatar], md-list[dense] a[md-list-item] [md-list-avatar], md-nav-list[dense] md-list-item [md-list-avatar], md-nav-list[dense] a[md-list-item] [md-list-avatar] { flex-shrink: 0; width: 40px; height: 40px; border-radius: 50%; } md-list[dense] md-list-item [md-list-icon], md-list[dense] a[md-list-item] [md-list-icon], md-nav-list[dense] md-list-item [md-list-icon], md-nav-list[dense] a[md-list-item] [md-list-icon] { width: 24px; height: 24px; border-radius: 50%; padding: 4px; } md-list[dense] md-list-item [md-line], md-list[dense] a[md-list-item] [md-line], md-nav-list[dense] md-list-item [md-line], md-nav-list[dense] a[md-list-item] [md-line] { white-space: nowrap; overflow-x: hidden; text-overflow: ellipsis; display: block; box-sizing: border-box; } md-list[dense] md-list-item [md-line]:nth-child(n+2), md-list[dense] a[md-list-item] [md-line]:nth-child(n+2), md-nav-list[dense] md-list-item [md-line]:nth-child(n+2), md-nav-list[dense] a[md-list-item] [md-line]:nth-child(n+2) { font-size: 13px; } md-divider { display: block; border-top-style: solid; border-top-width: 1px; margin: 0; } md-nav-list a { text-decoration: none; color: inherit; } md-nav-list .md-list-item { cursor: pointer; } md-nav-list .md-list-item:hover, md-nav-list .md-list-item.md-list-item-focus { outline: none; } /*# sourceMappingURL=list.css.map */ \"],\n\t            encapsulation: _angular_core.ViewEncapsulation.None\n\t        }), \n\t        __metadata$24('design:paramtypes', [])\n\t    ], MdList);\n\t    return MdList;\n\t}());\n\t/* Need directive for a ContentChild query in list-item */\n\tvar MdListAvatar = (function () {\n\t    function MdListAvatar() {\n\t    }\n\t    MdListAvatar = __decorate$24([\n\t        _angular_core.Directive({ selector: '[md-list-avatar]' }), \n\t        __metadata$24('design:paramtypes', [])\n\t    ], MdListAvatar);\n\t    return MdListAvatar;\n\t}());\n\tvar MdListItem = (function () {\n\t    function MdListItem(_renderer, _element) {\n\t        this._renderer = _renderer;\n\t        this._element = _element;\n\t        this._hasFocus = false;\n\t    }\n\t    Object.defineProperty(MdListItem.prototype, \"_hasAvatar\", {\n\t        set: function (avatar) {\n\t            this._renderer.setElementClass(this._element.nativeElement, 'md-list-avatar', avatar != null);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /** TODO: internal */\n\t    MdListItem.prototype.ngAfterContentInit = function () {\n\t        this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\n\t    };\n\t    MdListItem.prototype._handleFocus = function () {\n\t        this._hasFocus = true;\n\t    };\n\t    MdListItem.prototype._handleBlur = function () {\n\t        this._hasFocus = false;\n\t    };\n\t    __decorate$24([\n\t        _angular_core.ContentChildren(MdLine), \n\t        __metadata$24('design:type', _angular_core.QueryList)\n\t    ], MdListItem.prototype, \"_lines\", void 0);\n\t    __decorate$24([\n\t        _angular_core.ContentChild(MdListAvatar), \n\t        __metadata$24('design:type', MdListAvatar), \n\t        __metadata$24('design:paramtypes', [MdListAvatar])\n\t    ], MdListItem.prototype, \"_hasAvatar\", null);\n\t    MdListItem = __decorate$24([\n\t        _angular_core.Component({selector: 'md-list-item, a[md-list-item]',\n\t            host: {\n\t                'role': 'listitem',\n\t                '(focus)': '_handleFocus()',\n\t                '(blur)': '_handleBlur()',\n\t            },\n\t            template: \"<div class=\\\"md-list-item\\\" [class.md-list-item-focus]=\\\"_hasFocus\\\"> <ng-content select=\\\"[md-list-avatar],[md-list-icon]\\\"></ng-content> <div class=\\\"md-list-text\\\"><ng-content select=\\\"[md-line]\\\"></ng-content></div> <ng-content></ng-content> </div> \",\n\t            encapsulation: _angular_core.ViewEncapsulation.None\n\t        }), \n\t        __metadata$24('design:paramtypes', [_angular_core.Renderer, _angular_core.ElementRef])\n\t    ], MdListItem);\n\t    return MdListItem;\n\t}());\n\tvar MdListModule = (function () {\n\t    function MdListModule() {\n\t    }\n\t    MdListModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdListModule,\n\t            providers: []\n\t        };\n\t    };\n\t    MdListModule = __decorate$24([\n\t        _angular_core.NgModule({\n\t            imports: [MdLineModule],\n\t            exports: [MdList, MdListItem, MdListDivider, MdListAvatar, MdLineModule],\n\t            declarations: [MdList, MdListItem, MdListDivider, MdListAvatar],\n\t        }), \n\t        __metadata$24('design:paramtypes', [])\n\t    ], MdListModule);\n\t    return MdListModule;\n\t}());\n\t\n\t/**\n\t * Converts values into strings. Falsy values become empty strings.\n\t * TODO: internal\n\t */\n\tfunction coerceToString(value) {\n\t    return \"\" + (value || '');\n\t}\n\t/**\n\t * Converts a value that might be a string into a number.\n\t * TODO: internal\n\t */\n\tfunction coerceToNumber(value) {\n\t    return typeof value === 'string' ? parseInt(value, 10) : value;\n\t}\n\t\n\tvar __decorate$26 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$26 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar MdGridTile = (function () {\n\t    function MdGridTile(_renderer, _element) {\n\t        this._renderer = _renderer;\n\t        this._element = _element;\n\t        this._rowspan = 1;\n\t        this._colspan = 1;\n\t    }\n\t    Object.defineProperty(MdGridTile.prototype, \"rowspan\", {\n\t        get: function () {\n\t            return this._rowspan;\n\t        },\n\t        set: function (value) {\n\t            this._rowspan = coerceToNumber(value);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdGridTile.prototype, \"colspan\", {\n\t        get: function () {\n\t            return this._colspan;\n\t        },\n\t        set: function (value) {\n\t            this._colspan = coerceToNumber(value);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /**\n\t     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n\t     * \"Changed after checked\" errors that would occur with HostBinding.\n\t     */\n\t    MdGridTile.prototype._setStyle = function (property, value) {\n\t        this._renderer.setElementStyle(this._element.nativeElement, property, value);\n\t    };\n\t    __decorate$26([\n\t        _angular_core.Input(), \n\t        __metadata$26('design:type', Object)\n\t    ], MdGridTile.prototype, \"rowspan\", null);\n\t    __decorate$26([\n\t        _angular_core.Input(), \n\t        __metadata$26('design:type', Object)\n\t    ], MdGridTile.prototype, \"colspan\", null);\n\t    MdGridTile = __decorate$26([\n\t        _angular_core.Component({selector: 'md-grid-tile',\n\t            host: { 'role': 'listitem' },\n\t            template: \"<!-- TODO(kara): Revisit why this is a figure.--> <figure> <ng-content></ng-content> </figure>\",\n\t            styles: [\"md-grid-list { display: block; position: relative; } md-grid-tile { display: block; position: absolute; overflow: hidden; } md-grid-tile figure { display: flex; position: absolute; align-items: center; justify-content: center; height: 100%; top: 0; right: 0; bottom: 0; left: 0; padding: 0; margin: 0; } md-grid-tile md-grid-tile-header, md-grid-tile md-grid-tile-footer { display: flex; align-items: center; height: 48px; color: #fff; background: rgba(0, 0, 0, 0.38); overflow: hidden; padding: 0 16px; font-size: 16px; position: absolute; left: 0; right: 0; } md-grid-tile md-grid-tile-header [md-line], md-grid-tile md-grid-tile-footer [md-line] { white-space: nowrap; overflow-x: hidden; text-overflow: ellipsis; display: block; box-sizing: border-box; } md-grid-tile md-grid-tile-header [md-line]:nth-child(n+2), md-grid-tile md-grid-tile-footer [md-line]:nth-child(n+2) { font-size: 12px; } md-grid-tile md-grid-tile-header > *, md-grid-tile md-grid-tile-footer > * { margin: 0; padding: 0; font-weight: normal; font-size: inherit; } md-grid-tile md-grid-tile-header.md-2-line, md-grid-tile md-grid-tile-footer.md-2-line { height: 68px; } md-grid-tile .md-grid-list-text { display: flex; flex-direction: column; width: 100%; box-sizing: border-box; overflow: hidden; } md-grid-tile .md-grid-list-text > * { margin: 0; padding: 0; font-weight: normal; font-size: inherit; } md-grid-tile .md-grid-list-text:empty { display: none; } md-grid-tile md-grid-tile-header { top: 0; } md-grid-tile md-grid-tile-footer { bottom: 0; } md-grid-tile [md-grid-avatar] { padding-right: 16px; } [dir='rtl'] md-grid-tile [md-grid-avatar] { padding-right: 0; padding-left: 16px; } md-grid-tile [md-grid-avatar]:empty { display: none; } /*# sourceMappingURL=grid-list.css.map */ \"],\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t        }), \n\t        __metadata$26('design:paramtypes', [_angular_core.Renderer, _angular_core.ElementRef])\n\t    ], MdGridTile);\n\t    return MdGridTile;\n\t}());\n\tvar MdGridTileText = (function () {\n\t    function MdGridTileText(_renderer, _element) {\n\t        this._renderer = _renderer;\n\t        this._element = _element;\n\t    }\n\t    MdGridTileText.prototype.ngAfterContentInit = function () {\n\t        this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\n\t    };\n\t    __decorate$26([\n\t        _angular_core.ContentChildren(MdLine), \n\t        __metadata$26('design:type', _angular_core.QueryList)\n\t    ], MdGridTileText.prototype, \"_lines\", void 0);\n\t    MdGridTileText = __decorate$26([\n\t        _angular_core.Component({selector: 'md-grid-tile-header, md-grid-tile-footer',\n\t            template: \"<ng-content select=\\\"[md-grid-avatar]\\\"></ng-content> <div class=\\\"md-grid-list-text\\\"><ng-content select=\\\"[md-line]\\\"></ng-content></div> <ng-content></ng-content>\"\n\t        }), \n\t        __metadata$26('design:paramtypes', [_angular_core.Renderer, _angular_core.ElementRef])\n\t    ], MdGridTileText);\n\t    return MdGridTileText;\n\t}());\n\t\n\tvar __extends$8 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * Exception thrown when cols property is missing from grid-list\n\t */\n\tvar MdGridListColsError = (function (_super) {\n\t    __extends$8(MdGridListColsError, _super);\n\t    function MdGridListColsError() {\n\t        _super.call(this, \"md-grid-list: must pass in number of columns. Example: <md-grid-list cols=\\\"3\\\">\");\n\t    }\n\t    return MdGridListColsError;\n\t}(MdError));\n\t/**\n\t * Exception thrown when a tile's colspan is longer than the number of cols in list\n\t */\n\tvar MdGridTileTooWideError = (function (_super) {\n\t    __extends$8(MdGridTileTooWideError, _super);\n\t    function MdGridTileTooWideError(cols, listLength) {\n\t        _super.call(this, \"md-grid-list: tile with colspan \" + cols + \" is wider than grid with cols=\\\"\" + listLength + \"\\\".\");\n\t    }\n\t    return MdGridTileTooWideError;\n\t}(MdError));\n\t/**\n\t * Exception thrown when an invalid ratio is passed in as a rowHeight\n\t */\n\tvar MdGridListBadRatioError = (function (_super) {\n\t    __extends$8(MdGridListBadRatioError, _super);\n\t    function MdGridListBadRatioError(value) {\n\t        _super.call(this, \"md-grid-list: invalid ratio given for row-height: \\\"\" + value + \"\\\"\");\n\t    }\n\t    return MdGridListBadRatioError;\n\t}(MdError));\n\t\n\t/**\n\t * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n\t * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n\t * because the tiles can have a rowspan.\n\t *\n\t * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n\t * large enough to accommodate it so that the tiles still render in the same order in which they\n\t * are given.\n\t *\n\t * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n\t * element of the array corresponds to a column, and the value indicates how many cells in that\n\t * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n\t * decrements each value in the tracking array (indicating that the column is one cell closer to\n\t * being free).\n\t */\n\tvar TileCoordinator = (function () {\n\t    function TileCoordinator(numColumns, tiles) {\n\t        var _this = this;\n\t        /** Index at which the search for the next gap will start. */\n\t        this.columnIndex = 0;\n\t        /** The current row index. */\n\t        this.rowIndex = 0;\n\t        this.tracker = new Array(numColumns);\n\t        this.tracker.fill(0, 0, this.tracker.length);\n\t        this.positions = tiles.map(function (tile) { return _this._trackTile(tile); });\n\t    }\n\t    Object.defineProperty(TileCoordinator.prototype, \"rowCount\", {\n\t        /** Gets the total number of rows occupied by tiles */\n\t        get: function () { return this.rowIndex + 1; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(TileCoordinator.prototype, \"rowspan\", {\n\t        /** Gets the total span of rows occupied by tiles.\n\t         * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2. */\n\t        get: function () {\n\t            var lastRowMax = Math.max.apply(Math, this.tracker);\n\t            // if any of the tiles has a rowspan that pushes it beyond the total row count,\n\t            // add the difference to the rowcount\n\t            return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /** Calculates the row and col position of a tile. */\n\t    TileCoordinator.prototype._trackTile = function (tile) {\n\t        // Find a gap large enough for this tile.\n\t        var gapStartIndex = this._findMatchingGap(tile.colspan);\n\t        // Place tile in the resulting gap.\n\t        this._markTilePosition(gapStartIndex, tile);\n\t        // The next time we look for a gap, the search will start at columnIndex, which should be\n\t        // immediately after the tile that has just been placed.\n\t        this.columnIndex = gapStartIndex + tile.colspan;\n\t        return new TilePosition(this.rowIndex, gapStartIndex);\n\t    };\n\t    /** Finds the next available space large enough to fit the tile. */\n\t    TileCoordinator.prototype._findMatchingGap = function (tileCols) {\n\t        if (tileCols > this.tracker.length) {\n\t            throw new MdGridTileTooWideError(tileCols, this.tracker.length);\n\t        }\n\t        // Start index is inclusive, end index is exclusive.\n\t        var gapStartIndex = -1;\n\t        var gapEndIndex = -1;\n\t        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n\t        do {\n\t            // If we've reached the end of the row, go to the next row.\n\t            if (this.columnIndex + tileCols > this.tracker.length) {\n\t                this._nextRow();\n\t                continue;\n\t            }\n\t            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n\t            // If there are no more empty spaces in this row at all, move on to the next row.\n\t            if (gapStartIndex == -1) {\n\t                this._nextRow();\n\t                continue;\n\t            }\n\t            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n\t            // If a gap large enough isn't found, we want to start looking immediately after the current\n\t            // gap on the next iteration.\n\t            this.columnIndex = gapStartIndex + 1;\n\t        } while (gapEndIndex - gapStartIndex < tileCols);\n\t        return gapStartIndex;\n\t    };\n\t    /** Move \"down\" to the next row. */\n\t    TileCoordinator.prototype._nextRow = function () {\n\t        this.columnIndex = 0;\n\t        this.rowIndex++;\n\t        // Decrement all spaces by one to reflect moving down one row.\n\t        for (var i = 0; i < this.tracker.length; i++) {\n\t            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n\t        }\n\t    };\n\t    /**\n\t     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n\t     * The gap ends when a non-zero value is found.\n\t     */\n\t    TileCoordinator.prototype._findGapEndIndex = function (gapStartIndex) {\n\t        for (var i = gapStartIndex + 1; i < this.tracker.length; i++) {\n\t            if (this.tracker[i] != 0) {\n\t                return i;\n\t            }\n\t        }\n\t        // The gap ends with the end of the row.\n\t        return this.tracker.length;\n\t    };\n\t    /** Update the tile tracker to account for the given tile in the given space. */\n\t    TileCoordinator.prototype._markTilePosition = function (start, tile) {\n\t        for (var i = 0; i < tile.colspan; i++) {\n\t            this.tracker[start + i] = tile.rowspan;\n\t        }\n\t    };\n\t    return TileCoordinator;\n\t}());\n\t/** Simple data structure for tile position (row, col). */\n\tvar TilePosition = (function () {\n\t    function TilePosition(row, col) {\n\t        this.row = row;\n\t        this.col = col;\n\t    }\n\t    return TilePosition;\n\t}());\n\t\n\tvar __extends$9 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * Sets the style properties for an individual tile, given the position calculated by the\n\t * Tile Coordinator.\n\t * TODO: internal\n\t */\n\tvar TileStyler = (function () {\n\t    function TileStyler() {\n\t        this._rows = 0;\n\t        this._rowspan = 0;\n\t    }\n\t    /**\n\t     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n\t     * because these properties haven't been calculated by that point.\n\t     */\n\t    TileStyler.prototype.init = function (_gutterSize, tracker, cols, direction) {\n\t        this._gutterSize = normalizeUnits(_gutterSize);\n\t        this._rows = tracker.rowCount;\n\t        this._rowspan = tracker.rowspan;\n\t        this._cols = cols;\n\t        this._direction = direction;\n\t    };\n\t    /**\n\t     * Computes the amount of space a single 1x1 tile would take up (width or height).\n\t     * Used as a basis for other calculations.\n\t     * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n\t     * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n\t     * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n\t     */\n\t    TileStyler.prototype.getBaseTileSize = function (sizePercent, gutterFraction) {\n\t        // Take the base size percent (as would be if evenly dividing the size between cells),\n\t        // and then subtracting the size of one gutter. However, since there are no gutters on the\n\t        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n\t        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n\t        // edge evenly among the cells).\n\t        return \"(\" + sizePercent + \"% - ( \" + this._gutterSize + \" * \" + gutterFraction + \" ))\";\n\t    };\n\t    /**\n\t     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n\t     * @param offset Number of tiles that have already been rendered in the row/column.\n\t     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n\t     * @return Position of the tile as a CSS calc() expression.\n\t     */\n\t    TileStyler.prototype.getTilePosition = function (baseSize, offset) {\n\t        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n\t        // row/column (offset).\n\t        return calc(\"(\" + baseSize + \" + \" + this._gutterSize + \") * \" + offset);\n\t    };\n\t    /**\n\t     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n\t     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n\t     * @param span The tile's rowspan or colspan.\n\t     * @return Size of the tile as a CSS calc() expression.\n\t     */\n\t    TileStyler.prototype.getTileSize = function (baseSize, span) {\n\t        return \"(\" + baseSize + \" * \" + span + \") + (\" + (span - 1) + \" * \" + this._gutterSize + \")\";\n\t    };\n\t    /** Gets the style properties to be applied to a tile for the given row and column index. */\n\t    TileStyler.prototype.setStyle = function (tile, rowIndex, colIndex) {\n\t        // Percent of the available horizontal space that one column takes up.\n\t        var percentWidthPerTile = 100 / this._cols;\n\t        // Fraction of the vertical gutter size that each column takes up.\n\t        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n\t        var gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n\t        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n\t        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n\t    };\n\t    /** Sets the horizontal placement of the tile in the list. */\n\t    TileStyler.prototype.setColStyles = function (tile, colIndex, percentWidth, gutterWidth) {\n\t        // Base horizontal size of a column.\n\t        var baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n\t        // The width and horizontal position of each tile is always calculated the same way, but the\n\t        // height and vertical position depends on the rowMode.\n\t        var side = this._direction === 'ltr' ? 'left' : 'right';\n\t        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n\t        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n\t    };\n\t    /** Calculates the total size taken up by gutters across one axis of a list. */\n\t    TileStyler.prototype.getGutterSpan = function () {\n\t        return this._gutterSize + \" * (\" + this._rowspan + \" - 1)\";\n\t    };\n\t    /** Calculates the total size taken up by tiles across one axis of a list. */\n\t    TileStyler.prototype.getTileSpan = function (tileHeight) {\n\t        return this._rowspan + \" * \" + this.getTileSize(tileHeight, 1);\n\t    };\n\t    /**\n\t     * Sets the vertical placement of the tile in the list.\n\t     * This method will be implemented by each type of TileStyler.\n\t     */\n\t    TileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) { };\n\t    /**\n\t     * Calculates the computed height and returns the correct style property to set.\n\t     * This method will be implemented by each type of TileStyler.\n\t     */\n\t    TileStyler.prototype.getComputedHeight = function () { return null; };\n\t    return TileStyler;\n\t}());\n\t/**\n\t * This type of styler is instantiated when the user passes in a fixed row height.\n\t * Example <md-grid-list cols=\"3\" rowHeight=\"100px\">\n\t * TODO: internal\n\t */\n\tvar FixedTileStyler = (function (_super) {\n\t    __extends$9(FixedTileStyler, _super);\n\t    function FixedTileStyler(fixedRowHeight) {\n\t        _super.call(this);\n\t        this.fixedRowHeight = fixedRowHeight;\n\t    }\n\t    FixedTileStyler.prototype.init = function (gutterSize, tracker, cols, direction) {\n\t        _super.prototype.init.call(this, gutterSize, tracker, cols, direction);\n\t        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n\t    };\n\t    FixedTileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) {\n\t        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n\t        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n\t    };\n\t    FixedTileStyler.prototype.getComputedHeight = function () {\n\t        return [\n\t            'height', calc(this.getTileSpan(this.fixedRowHeight) + \" + \" + this.getGutterSpan())\n\t        ];\n\t    };\n\t    return FixedTileStyler;\n\t}(TileStyler));\n\t/**\n\t * This type of styler is instantiated when the user passes in a width:height ratio\n\t * for the row height.  Example <md-grid-list cols=\"3\" rowHeight=\"3:1\">\n\t * TODO: internal\n\t */\n\tvar RatioTileStyler = (function (_super) {\n\t    __extends$9(RatioTileStyler, _super);\n\t    function RatioTileStyler(value) {\n\t        _super.call(this);\n\t        this._parseRatio(value);\n\t    }\n\t    RatioTileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) {\n\t        var percentHeightPerTile = percentWidth / this.rowHeightRatio;\n\t        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n\t        // Use paddingTop and marginTop to maintain the given aspect ratio, as\n\t        // a percentage-based value for these properties is applied versus the *width* of the\n\t        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n\t        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n\t        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n\t    };\n\t    RatioTileStyler.prototype.getComputedHeight = function () {\n\t        return [\n\t            'paddingBottom', calc(this.getTileSpan(this.baseTileHeight) + \" + \" + this.getGutterSpan())\n\t        ];\n\t    };\n\t    RatioTileStyler.prototype._parseRatio = function (value) {\n\t        var ratioParts = value.split(':');\n\t        if (ratioParts.length !== 2) {\n\t            throw new MdGridListBadRatioError(value);\n\t        }\n\t        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n\t    };\n\t    return RatioTileStyler;\n\t}(TileStyler));\n\t/*  This type of styler is instantiated when the user selects a \"fit\" row height mode.\n\t *  In other words, the row height will reflect the total height of the container divided\n\t *  by the number of rows.  Example <md-grid-list cols=\"3\" rowHeight=\"fit\"> */\n\tvar FitTileStyler = (function (_super) {\n\t    __extends$9(FitTileStyler, _super);\n\t    function FitTileStyler() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    FitTileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) {\n\t        // Percent of the available vertical space that one row takes up.\n\t        var percentHeightPerTile = 100 / this._rowspan;\n\t        // Fraction of the horizontal gutter size that each column takes up.\n\t        var gutterHeightPerTile = (this._rows - 1) / this._rows;\n\t        // Base vertical size of a column.\n\t        var baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n\t        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n\t        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n\t    };\n\t    return FitTileStyler;\n\t}(TileStyler));\n\t/** Wraps a CSS string in a calc function */\n\tfunction calc(exp) { return \"calc(\" + exp + \")\"; }\n\t/** Appends pixels to a CSS string if no units are given. */\n\tfunction normalizeUnits(value) {\n\t    return (value.match(/px|em|rem/)) ? value : value + 'px';\n\t}\n\t\n\tvar __decorate$25 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$25 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar __param$5 = (this && this.__param) || function (paramIndex, decorator) {\n\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t};\n\t// TODO(kara): Conditional (responsive) column count / row size.\n\t// TODO(kara): Re-layout on window resize / media change (debounced).\n\t// TODO(kara): gridTileHeader and gridTileFooter.\n\tvar MD_FIT_MODE = 'fit';\n\tvar MdGridList = (function () {\n\t    function MdGridList(_renderer, _element, _dir) {\n\t        this._renderer = _renderer;\n\t        this._element = _element;\n\t        this._dir = _dir;\n\t        /** The amount of space between tiles. This will be something like '5px' or '2em'. */\n\t        this._gutter = '1px';\n\t    }\n\t    Object.defineProperty(MdGridList.prototype, \"cols\", {\n\t        get: function () {\n\t            return this._cols;\n\t        },\n\t        set: function (value) {\n\t            this._cols = coerceToNumber(value);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdGridList.prototype, \"gutterSize\", {\n\t        get: function () {\n\t            return this._gutter;\n\t        },\n\t        set: function (value) {\n\t            this._gutter = coerceToString(value);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdGridList.prototype, \"rowHeight\", {\n\t        /** Set internal representation of row height from the user-provided value. */\n\t        set: function (value) {\n\t            this._rowHeight = coerceToString(value);\n\t            this._setTileStyler();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /** TODO: internal */\n\t    MdGridList.prototype.ngOnInit = function () {\n\t        this._checkCols();\n\t        this._checkRowHeight();\n\t    };\n\t    /**\n\t     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n\t     * to run it frequently.\n\t     * TODO: internal\n\t     */\n\t    MdGridList.prototype.ngAfterContentChecked = function () {\n\t        this._layoutTiles();\n\t    };\n\t    /** Throw a friendly error if cols property is missing */\n\t    MdGridList.prototype._checkCols = function () {\n\t        if (!this.cols) {\n\t            throw new MdGridListColsError();\n\t        }\n\t    };\n\t    /** Default to equal width:height if rowHeight property is missing */\n\t    MdGridList.prototype._checkRowHeight = function () {\n\t        if (!this._rowHeight) {\n\t            this._tileStyler = new RatioTileStyler('1:1');\n\t        }\n\t    };\n\t    /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\n\t    MdGridList.prototype._setTileStyler = function () {\n\t        if (this._rowHeight === MD_FIT_MODE) {\n\t            this._tileStyler = new FitTileStyler();\n\t        }\n\t        else if (this._rowHeight && this._rowHeight.match(/:/g)) {\n\t            this._tileStyler = new RatioTileStyler(this._rowHeight);\n\t        }\n\t        else {\n\t            this._tileStyler = new FixedTileStyler(this._rowHeight);\n\t        }\n\t    };\n\t    /** Computes and applies the size and position for all children grid tiles. */\n\t    MdGridList.prototype._layoutTiles = function () {\n\t        var tiles = this._tiles.toArray();\n\t        var tracker = new TileCoordinator(this.cols, tiles);\n\t        var direction = this._dir ? this._dir.value : 'ltr';\n\t        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n\t        for (var i = 0; i < tiles.length; i++) {\n\t            var pos = tracker.positions[i];\n\t            var tile = tiles[i];\n\t            this._tileStyler.setStyle(tile, pos.row, pos.col);\n\t        }\n\t        this._setListStyle(this._tileStyler.getComputedHeight());\n\t    };\n\t    /** Sets style on the main grid-list element, given the style name and value. */\n\t    MdGridList.prototype._setListStyle = function (style) {\n\t        if (style) {\n\t            this._renderer.setElementStyle(this._element.nativeElement, style[0], style[1]);\n\t        }\n\t    };\n\t    __decorate$25([\n\t        _angular_core.ContentChildren(MdGridTile), \n\t        __metadata$25('design:type', _angular_core.QueryList)\n\t    ], MdGridList.prototype, \"_tiles\", void 0);\n\t    __decorate$25([\n\t        _angular_core.Input(), \n\t        __metadata$25('design:type', Object)\n\t    ], MdGridList.prototype, \"cols\", null);\n\t    __decorate$25([\n\t        _angular_core.Input('gutterSize'), \n\t        __metadata$25('design:type', Object)\n\t    ], MdGridList.prototype, \"gutterSize\", null);\n\t    __decorate$25([\n\t        _angular_core.Input(), \n\t        __metadata$25('design:type', Object), \n\t        __metadata$25('design:paramtypes', [Object])\n\t    ], MdGridList.prototype, \"rowHeight\", null);\n\t    MdGridList = __decorate$25([\n\t        _angular_core.Component({selector: 'md-grid-list',\n\t            template: \"<div class=\\\"md-grid-list\\\"> <ng-content></ng-content> </div>\",\n\t            styles: [\"md-grid-list { display: block; position: relative; } md-grid-tile { display: block; position: absolute; overflow: hidden; } md-grid-tile figure { display: flex; position: absolute; align-items: center; justify-content: center; height: 100%; top: 0; right: 0; bottom: 0; left: 0; padding: 0; margin: 0; } md-grid-tile md-grid-tile-header, md-grid-tile md-grid-tile-footer { display: flex; align-items: center; height: 48px; color: #fff; background: rgba(0, 0, 0, 0.38); overflow: hidden; padding: 0 16px; font-size: 16px; position: absolute; left: 0; right: 0; } md-grid-tile md-grid-tile-header [md-line], md-grid-tile md-grid-tile-footer [md-line] { white-space: nowrap; overflow-x: hidden; text-overflow: ellipsis; display: block; box-sizing: border-box; } md-grid-tile md-grid-tile-header [md-line]:nth-child(n+2), md-grid-tile md-grid-tile-footer [md-line]:nth-child(n+2) { font-size: 12px; } md-grid-tile md-grid-tile-header > *, md-grid-tile md-grid-tile-footer > * { margin: 0; padding: 0; font-weight: normal; font-size: inherit; } md-grid-tile md-grid-tile-header.md-2-line, md-grid-tile md-grid-tile-footer.md-2-line { height: 68px; } md-grid-tile .md-grid-list-text { display: flex; flex-direction: column; width: 100%; box-sizing: border-box; overflow: hidden; } md-grid-tile .md-grid-list-text > * { margin: 0; padding: 0; font-weight: normal; font-size: inherit; } md-grid-tile .md-grid-list-text:empty { display: none; } md-grid-tile md-grid-tile-header { top: 0; } md-grid-tile md-grid-tile-footer { bottom: 0; } md-grid-tile [md-grid-avatar] { padding-right: 16px; } [dir='rtl'] md-grid-tile [md-grid-avatar] { padding-right: 0; padding-left: 16px; } md-grid-tile [md-grid-avatar]:empty { display: none; } /*# sourceMappingURL=grid-list.css.map */ \"],\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t        }),\n\t        __param$5(2, _angular_core.Optional()), \n\t        __metadata$25('design:paramtypes', [_angular_core.Renderer, _angular_core.ElementRef, Dir])\n\t    ], MdGridList);\n\t    return MdGridList;\n\t}());\n\tvar MdGridListModule = (function () {\n\t    function MdGridListModule() {\n\t    }\n\t    MdGridListModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdGridListModule,\n\t            providers: []\n\t        };\n\t    };\n\t    MdGridListModule = __decorate$25([\n\t        _angular_core.NgModule({\n\t            imports: [MdLineModule],\n\t            exports: [MdGridList, MdGridTile, MdGridTileText, MdLineModule],\n\t            declarations: [MdGridList, MdGridTile, MdGridTileText],\n\t        }), \n\t        __metadata$25('design:paramtypes', [])\n\t    ], MdGridListModule);\n\t    return MdGridListModule;\n\t}());\n\t\n\tvar __decorate$27 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$27 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/**\n\t * Content of a card, needed as it's used as a selector in the API.\n\t */\n\tvar MdCardContent = (function () {\n\t    function MdCardContent() {\n\t    }\n\t    MdCardContent = __decorate$27([\n\t        _angular_core.Directive({\n\t            selector: 'md-card-content'\n\t        }), \n\t        __metadata$27('design:paramtypes', [])\n\t    ], MdCardContent);\n\t    return MdCardContent;\n\t}());\n\t/**\n\t * Title of a card, needed as it's used as a selector in the API.\n\t */\n\tvar MdCardTitle = (function () {\n\t    function MdCardTitle() {\n\t    }\n\t    MdCardTitle = __decorate$27([\n\t        _angular_core.Directive({\n\t            selector: 'md-card-title'\n\t        }), \n\t        __metadata$27('design:paramtypes', [])\n\t    ], MdCardTitle);\n\t    return MdCardTitle;\n\t}());\n\t/**\n\t * Sub-title of a card, needed as it's used as a selector in the API.\n\t */\n\tvar MdCardSubtitle = (function () {\n\t    function MdCardSubtitle() {\n\t    }\n\t    MdCardSubtitle = __decorate$27([\n\t        _angular_core.Directive({\n\t            selector: 'md-card-subtitle'\n\t        }), \n\t        __metadata$27('design:paramtypes', [])\n\t    ], MdCardSubtitle);\n\t    return MdCardSubtitle;\n\t}());\n\t/**\n\t * Action section of a card, needed as it's used as a selector in the API.\n\t */\n\tvar MdCardActions = (function () {\n\t    function MdCardActions() {\n\t    }\n\t    MdCardActions = __decorate$27([\n\t        _angular_core.Directive({\n\t            selector: 'md-card-actions'\n\t        }), \n\t        __metadata$27('design:paramtypes', [])\n\t    ], MdCardActions);\n\t    return MdCardActions;\n\t}());\n\t/**\n\t * Footer of a card, needed as it's used as a selector in the API.\n\t */\n\tvar MdCardFooter = (function () {\n\t    function MdCardFooter() {\n\t    }\n\t    MdCardFooter = __decorate$27([\n\t        _angular_core.Directive({\n\t            selector: 'md-card-footer'\n\t        }), \n\t        __metadata$27('design:paramtypes', [])\n\t    ], MdCardFooter);\n\t    return MdCardFooter;\n\t}());\n\t/*\n\t\n\t<md-card> is a basic content container component that adds the styles of a material design card.\n\t\n\tWhile you can use this component alone,\n\tit also provides a number of preset styles for common card sections, including:\n\t - md-card-title\n\t - md-card-subtitle\n\t - md-card-content\n\t - md-card-actions\n\t - md-card-footer\n\t\n\t You can see some examples of cards here:\n\t http://embed.plnkr.co/s5O4YcyvbLhIApSrIhtj/\n\t\n\t TODO(kara): update link to demo site when it exists\n\t\n\t*/\n\tvar MdCard = (function () {\n\t    function MdCard() {\n\t    }\n\t    MdCard = __decorate$27([\n\t        _angular_core.Component({selector: 'md-card',\n\t            template: \"<ng-content></ng-content> \",\n\t            styles: [\"md-card { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); will-change: box-shadow; display: block; position: relative; padding: 24px; border-radius: 2px; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; } md-card:hover { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); } .md-card-flat { box-shadow: none; } md-card-title, md-card-subtitle, md-card-content, md-card-actions { display: block; margin-bottom: 16px; } md-card-title { font-size: 24px; font-weight: 400; } md-card-subtitle { font-size: 14px; } md-card-content { font-size: 14px; } md-card-actions { margin-left: -16px; margin-right: -16px; padding: 8px 0; } md-card-actions[align='end'] { display: flex; justify-content: flex-end; } [md-card-image] { width: calc(100% + 48px); margin: 0 -24px 16px -24px; } [md-card-xl-image] { width: 240px; height: 240px; margin: -8px; } md-card-footer { position: absolute; width: 100%; min-height: 5px; bottom: 0; left: 0; } md-card-actions [md-button], md-card-actions [md-raised-button] { margin: 0 4px; } md-card-header { display: flex; flex-direction: row; height: 40px; margin: -8px 0 16px 0; } .md-card-header-text { height: 40px; margin: 0 8px; } [md-card-avatar] { height: 40px; width: 40px; border-radius: 50%; } md-card-header md-card-title { font-size: 14px; } [md-card-sm-image], [md-card-md-image], [md-card-lg-image] { margin: -8px 0; } md-card-title-group { display: flex; justify-content: space-between; margin: 0 -8px; } [md-card-sm-image] { width: 80px; height: 80px; } [md-card-md-image] { width: 112px; height: 112px; } [md-card-lg-image] { width: 152px; height: 152px; } @media (max-width: 600px) { md-card { padding: 24px 16px; } [md-card-image] { width: calc(100% + 32px); margin: 16px -16px; } md-card-title-group { margin: 0; } [md-card-xl-image] { margin-left: 0; margin-right: 0; } md-card-header { margin: -8px 0 0 0; } } md-card > :first-child, md-card-content > :first-child { margin-top: 0; } md-card > :last-child, md-card-content > :last-child { margin-bottom: 0; } [md-card-image]:first-child { margin-top: -24px; } md-card > md-card-actions:last-child { margin-bottom: -16px; padding-bottom: 0; } md-card-actions [md-button]:first-child, md-card-actions [md-raised-button]:first-child { margin-left: 0; margin-right: 0; } md-card-title:not(:first-child), md-card-subtitle:not(:first-child) { margin-top: -4px; } md-card-header md-card-subtitle:not(:first-child) { margin-top: -8px; } md-card > [md-card-xl-image]:first-child { margin-top: -8px; } md-card > [md-card-xl-image]:last-child { margin-bottom: -8px; } /*# sourceMappingURL=card.css.map */ \"],\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n\t        }), \n\t        __metadata$27('design:paramtypes', [])\n\t    ], MdCard);\n\t    return MdCard;\n\t}());\n\t/*  The following components don't have any behavior.\n\t They simply use content projection to wrap user content\n\t for flex layout purposes in <md-card> (and thus allow a cleaner, boilerplate-free API).\n\t\n\t\n\t<md-card-header> is a component intended to be used within the <md-card> component.\n\tIt adds styles for a preset header section (i.e. a title, subtitle, and avatar layout).\n\t\n\tYou can see an example of a card with a header here:\n\thttp://embed.plnkr.co/tvJl19z3gZTQd6WmwkIa/\n\t\n\tTODO(kara): update link to demo site when it exists\n\t*/\n\tvar MdCardHeader = (function () {\n\t    function MdCardHeader() {\n\t    }\n\t    MdCardHeader = __decorate$27([\n\t        _angular_core.Component({selector: 'md-card-header',\n\t            template: \"<ng-content select=\\\"[md-card-avatar]\\\"></ng-content> <div class=\\\"md-card-header-text\\\"> <ng-content select=\\\"md-card-title, md-card-subtitle\\\"></ng-content> </div> <ng-content></ng-content> \",\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n\t        }), \n\t        __metadata$27('design:paramtypes', [])\n\t    ], MdCardHeader);\n\t    return MdCardHeader;\n\t}());\n\t/*\n\t\n\t<md-card-title-group> is a component intended to be used within the <md-card> component.\n\tIt adds styles for a preset layout that groups an image with a title section.\n\t\n\tYou can see an example of a card with a title-group section here:\n\thttp://embed.plnkr.co/EDfgCF9eKcXjini1WODm/\n\t\n\tTODO(kara): update link to demo site when it exists\n\t*/\n\tvar MdCardTitleGroup = (function () {\n\t    function MdCardTitleGroup() {\n\t    }\n\t    MdCardTitleGroup = __decorate$27([\n\t        _angular_core.Component({selector: 'md-card-title-group',\n\t            template: \"<div> <ng-content select=\\\"md-card-title, md-card-subtitle\\\"></ng-content> </div> <ng-content select=\\\"img\\\"></ng-content> <ng-content></ng-content> \",\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n\t        }), \n\t        __metadata$27('design:paramtypes', [])\n\t    ], MdCardTitleGroup);\n\t    return MdCardTitleGroup;\n\t}());\n\tvar MdCardModule = (function () {\n\t    function MdCardModule() {\n\t    }\n\t    MdCardModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdCardModule,\n\t            providers: []\n\t        };\n\t    };\n\t    MdCardModule = __decorate$27([\n\t        _angular_core.NgModule({\n\t            exports: [\n\t                MdCard, MdCardHeader, MdCardTitleGroup, MdCardContent, MdCardTitle, MdCardSubtitle,\n\t                MdCardActions, MdCardFooter\n\t            ],\n\t            declarations: [\n\t                MdCard, MdCardHeader, MdCardTitleGroup, MdCardContent, MdCardTitle, MdCardSubtitle,\n\t                MdCardActions, MdCardFooter\n\t            ],\n\t        }), \n\t        __metadata$27('design:paramtypes', [])\n\t    ], MdCardModule);\n\t    return MdCardModule;\n\t}());\n\t\n\tvar __extends$11 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate$29 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$29 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/** Exception thrown when attempting to load an icon with a name that cannot be found. */\n\tvar MdIconNameNotFoundError = (function (_super) {\n\t    __extends$11(MdIconNameNotFoundError, _super);\n\t    function MdIconNameNotFoundError(iconName) {\n\t        _super.call(this, \"Unable to find icon with the name \\\"\" + iconName + \"\\\"\");\n\t    }\n\t    return MdIconNameNotFoundError;\n\t}(MdError));\n\t/**\n\t * Exception thrown when attempting to load SVG content that does not contain the expected\n\t * <svg> tag.\n\t */\n\tvar MdIconSvgTagNotFoundError = (function (_super) {\n\t    __extends$11(MdIconSvgTagNotFoundError, _super);\n\t    function MdIconSvgTagNotFoundError() {\n\t        _super.call(this, '<svg> tag not found');\n\t    }\n\t    return MdIconSvgTagNotFoundError;\n\t}(MdError));\n\t/** Configuration for an icon, including the URL and possibly the cached SVG element. */\n\tvar SvgIconConfig = (function () {\n\t    function SvgIconConfig(url) {\n\t        this.url = url;\n\t        this.svgElement = null;\n\t    }\n\t    return SvgIconConfig;\n\t}());\n\t/** Returns the cache key to use for an icon namespace and name. */\n\tvar iconKey = function (namespace, name) { return namespace + ':' + name; };\n\t/**\n\t * Service to register and display icons used by the <md-icon> component.\n\t * - Registers icon URLs by namespace and name.\n\t * - Registers icon set URLs by namespace.\n\t * - Registers aliases for CSS classes, for use with icon fonts.\n\t * - Loads icons from URLs and extracts individual icons from icon sets.\n\t */\n\tvar MdIconRegistry = (function () {\n\t    function MdIconRegistry(_http) {\n\t        this._http = _http;\n\t        /**\n\t         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n\t         */\n\t        this._svgIconConfigs = new Map();\n\t        /**\n\t         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n\t         * Multiple icon sets can be registered under the same namespace.\n\t         */\n\t        this._iconSetConfigs = new Map();\n\t        /** Cache for icons loaded by direct URLs. */\n\t        this._cachedIconsByUrl = new Map();\n\t        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n\t        this._inProgressUrlFetches = new Map();\n\t        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n\t        this._fontCssClassesByAlias = new Map();\n\t        /**\n\t         * The CSS class to apply when an <md-icon> component has no icon name, url, or font specified.\n\t         * The default 'material-icons' value assumes that the material icon font has been loaded as\n\t         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n\t         */\n\t        this._defaultFontSetClass = 'material-icons';\n\t    }\n\t    /** Registers an icon by URL in the default namespace. */\n\t    MdIconRegistry.prototype.addSvgIcon = function (iconName, url) {\n\t        return this.addSvgIconInNamespace('', iconName, url);\n\t    };\n\t    /** Registers an icon by URL in the specified namespace. */\n\t    MdIconRegistry.prototype.addSvgIconInNamespace = function (namespace, iconName, url) {\n\t        var key = iconKey(namespace, iconName);\n\t        this._svgIconConfigs.set(key, new SvgIconConfig(url));\n\t        return this;\n\t    };\n\t    /** Registers an icon set by URL in the default namespace. */\n\t    MdIconRegistry.prototype.addSvgIconSet = function (url) {\n\t        return this.addSvgIconSetInNamespace('', url);\n\t    };\n\t    /** Registers an icon set by URL in the specified namespace. */\n\t    MdIconRegistry.prototype.addSvgIconSetInNamespace = function (namespace, url) {\n\t        var config = new SvgIconConfig(url);\n\t        if (this._iconSetConfigs.has(namespace)) {\n\t            this._iconSetConfigs.get(namespace).push(config);\n\t        }\n\t        else {\n\t            this._iconSetConfigs.set(namespace, [config]);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t     * Defines an alias for a CSS class name to be used for icon fonts. Creating an mdIcon\n\t     * component with the alias as the fontSet input will cause the class name to be applied\n\t     * to the <md-icon> element.\n\t     */\n\t    MdIconRegistry.prototype.registerFontClassAlias = function (alias, className) {\n\t        if (className === void 0) { className = alias; }\n\t        this._fontCssClassesByAlias.set(alias, className);\n\t        return this;\n\t    };\n\t    /**\n\t     * Returns the CSS class name associated with the alias by a previous call to\n\t     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n\t     */\n\t    MdIconRegistry.prototype.classNameForFontAlias = function (alias) {\n\t        return this._fontCssClassesByAlias.get(alias) || alias;\n\t    };\n\t    /**\n\t     * Sets the CSS class name to be used for icon fonts when an <md-icon> component does not\n\t     * have a fontSet input value, and is not loading an icon by name or URL.\n\t     */\n\t    MdIconRegistry.prototype.setDefaultFontSetClass = function (className) {\n\t        this._defaultFontSetClass = className;\n\t        return this;\n\t    };\n\t    /**\n\t     * Returns the CSS class name to be used for icon fonts when an <md-icon> component does not\n\t     * have a fontSet input value, and is not loading an icon by name or URL.\n\t     */\n\t    MdIconRegistry.prototype.getDefaultFontSetClass = function () {\n\t        return this._defaultFontSetClass;\n\t    };\n\t    /**\n\t     * Returns an Observable that produces the icon (as an <svg> DOM element) from the given URL.\n\t     * The response from the URL may be cached so this will not always cause an HTTP request, but\n\t     * the produced element will always be a new copy of the originally fetched icon. (That is,\n\t     * it will not contain any modifications made to elements previously returned).\n\t     */\n\t    MdIconRegistry.prototype.getSvgIconFromUrl = function (url) {\n\t        var _this = this;\n\t        if (this._cachedIconsByUrl.has(url)) {\n\t            return rxjs_Observable.Observable.of(cloneSvg(this._cachedIconsByUrl.get(url)));\n\t        }\n\t        return this._loadSvgIconFromConfig(new SvgIconConfig(url))\n\t            .do(function (svg) { return _this._cachedIconsByUrl.set(url, svg); })\n\t            .map(function (svg) { return cloneSvg(svg); });\n\t    };\n\t    /**\n\t     * Returns an Observable that produces the icon (as an <svg> DOM element) with the given name\n\t     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n\t     * if not, the Observable will throw an MdIconNameNotFoundError.\n\t     */\n\t    MdIconRegistry.prototype.getNamedSvgIcon = function (name, namespace) {\n\t        if (namespace === void 0) { namespace = ''; }\n\t        // Return (copy of) cached icon if possible.\n\t        var key = iconKey(namespace, name);\n\t        if (this._svgIconConfigs.has(key)) {\n\t            return this._getSvgFromConfig(this._svgIconConfigs.get(key));\n\t        }\n\t        // See if we have any icon sets registered for the namespace.\n\t        var iconSetConfigs = this._iconSetConfigs.get(namespace);\n\t        if (iconSetConfigs) {\n\t            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n\t        }\n\t        return rxjs_Observable.Observable.throw(new MdIconNameNotFoundError(key));\n\t    };\n\t    /**\n\t     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n\t     */\n\t    MdIconRegistry.prototype._getSvgFromConfig = function (config) {\n\t        if (config.svgElement) {\n\t            // We already have the SVG element for this icon, return a copy.\n\t            return rxjs_Observable.Observable.of(cloneSvg(config.svgElement));\n\t        }\n\t        else {\n\t            // Fetch the icon from the config's URL, cache it, and return a copy.\n\t            return this._loadSvgIconFromConfig(config)\n\t                .do(function (svg) { return config.svgElement = svg; })\n\t                .map(function (svg) { return cloneSvg(svg); });\n\t        }\n\t    };\n\t    /**\n\t     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n\t     * First searches the available cached icons for a nested element with a matching name, and\n\t     * if found copies the element to a new <svg> element. If not found, fetches all icon sets\n\t     * that have not been cached, and searches again after all fetches are completed.\n\t     * The returned Observable produces the SVG element if possible, and throws\n\t     * MdIconNameNotFoundError if no icon with the specified name can be found.\n\t     */\n\t    MdIconRegistry.prototype._getSvgFromIconSetConfigs = function (name, iconSetConfigs) {\n\t        var _this = this;\n\t        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n\t        // requested name.\n\t        var namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n\t        if (namedIcon) {\n\t            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n\t            // time anyway, there's probably not much advantage compared to just always extracting\n\t            // it from the icon set.\n\t            return rxjs_Observable.Observable.of(namedIcon);\n\t        }\n\t        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n\t        // fetched, fetch them now and look for iconName in the results.\n\t        var iconSetFetchRequests = iconSetConfigs\n\t            .filter(function (iconSetConfig) { return !iconSetConfig.svgElement; })\n\t            .map(function (iconSetConfig) {\n\t            return _this._loadSvgIconSetFromConfig(iconSetConfig)\n\t                .catch(function (err, caught) {\n\t                // Swallow errors fetching individual URLs so the combined Observable won't\n\t                // necessarily fail.\n\t                console.log(\"Loading icon set URL: \" + iconSetConfig.url + \" failed: \" + err);\n\t                return rxjs_Observable.Observable.of(null);\n\t            })\n\t                .do(function (svg) {\n\t                // Cache SVG element.\n\t                if (svg) {\n\t                    iconSetConfig.svgElement = svg;\n\t                }\n\t            });\n\t        });\n\t        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n\t        // cached SVG element (unless the request failed), and we can check again for the icon.\n\t        return rxjs_Observable.Observable.forkJoin(iconSetFetchRequests)\n\t            .map(function (ignoredResults) {\n\t            var foundIcon = _this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n\t            if (!foundIcon) {\n\t                throw new MdIconNameNotFoundError(name);\n\t            }\n\t            return foundIcon;\n\t        });\n\t    };\n\t    /**\n\t     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n\t     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n\t     * returns it. Returns null if no matching element is found.\n\t     */\n\t    MdIconRegistry.prototype._extractIconWithNameFromAnySet = function (iconName, iconSetConfigs) {\n\t        // Iterate backwards, so icon sets added later have precedence.\n\t        for (var i = iconSetConfigs.length - 1; i >= 0; i--) {\n\t            var config = iconSetConfigs[i];\n\t            if (config.svgElement) {\n\t                var foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName, config);\n\t                if (foundIcon) {\n\t                    return foundIcon;\n\t                }\n\t            }\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n\t     * from it.\n\t     */\n\t    MdIconRegistry.prototype._loadSvgIconFromConfig = function (config) {\n\t        var _this = this;\n\t        return this._fetchUrl(config.url)\n\t            .map(function (svgText) { return _this._createSvgElementForSingleIcon(svgText, config); });\n\t    };\n\t    /**\n\t     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n\t     * from it.\n\t     */\n\t    MdIconRegistry.prototype._loadSvgIconSetFromConfig = function (config) {\n\t        var _this = this;\n\t        // TODO: Document that icons should only be loaded from trusted sources.\n\t        return this._fetchUrl(config.url)\n\t            .map(function (svgText) { return _this._svgElementFromString(svgText); });\n\t    };\n\t    /**\n\t     * Creates a DOM element from the given SVG string, and adds default attributes.\n\t     */\n\t    MdIconRegistry.prototype._createSvgElementForSingleIcon = function (responseText, config) {\n\t        var svg = this._svgElementFromString(responseText);\n\t        this._setSvgAttributes(svg, config);\n\t        return svg;\n\t    };\n\t    /**\n\t     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n\t     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n\t     * returns it. Returns null if no matching element is found.\n\t     */\n\t    MdIconRegistry.prototype._extractSvgIconFromSet = function (iconSet, iconName, config) {\n\t        var iconNode = iconSet.querySelector('#' + iconName);\n\t        if (!iconNode) {\n\t            return null;\n\t        }\n\t        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n\t        // the content of a new <svg> node.\n\t        if (iconNode.tagName.toLowerCase() == 'svg') {\n\t            return this._setSvgAttributes(iconNode.cloneNode(true), config);\n\t        }\n\t        // createElement('SVG') doesn't work as expected; the DOM ends up with\n\t        // the correct nodes, but the SVG content doesn't render. Instead we\n\t        // have to create an empty SVG node using innerHTML and append its content.\n\t        // Elements created using DOMParser.parseFromString have the same problem.\n\t        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n\t        var svg = this._svgElementFromString('<svg></svg>');\n\t        // Clone the node so we don't remove it from the parent icon set element.\n\t        svg.appendChild(iconNode.cloneNode(true));\n\t        return this._setSvgAttributes(svg, config);\n\t    };\n\t    /**\n\t     * Creates a DOM element from the given SVG string.\n\t     */\n\t    MdIconRegistry.prototype._svgElementFromString = function (str) {\n\t        // TODO: Is there a better way than innerHTML? Renderer doesn't appear to have a method for\n\t        // creating an element from an HTML string.\n\t        var div = document.createElement('DIV');\n\t        div.innerHTML = str;\n\t        var svg = div.querySelector('svg');\n\t        if (!svg) {\n\t            throw new MdIconSvgTagNotFoundError();\n\t        }\n\t        return svg;\n\t    };\n\t    /**\n\t     * Sets the default attributes for an SVG element to be used as an icon.\n\t     */\n\t    MdIconRegistry.prototype._setSvgAttributes = function (svg, config) {\n\t        if (!svg.getAttribute('xmlns')) {\n\t            svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\t        }\n\t        svg.setAttribute('fit', '');\n\t        svg.setAttribute('height', '100%');\n\t        svg.setAttribute('width', '100%');\n\t        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n\t        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n\t        return svg;\n\t    };\n\t    /**\n\t     * Returns an Observable which produces the string contents of the given URL. Results may be\n\t     * cached, so future calls with the same URL may not cause another HTTP request.\n\t     */\n\t    MdIconRegistry.prototype._fetchUrl = function (url) {\n\t        var _this = this;\n\t        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n\t        // already a request in progress for that URL. It's necessary to call share() on the\n\t        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n\t        if (this._inProgressUrlFetches.has(url)) {\n\t            return this._inProgressUrlFetches.get(url);\n\t        }\n\t        // TODO(jelbourn): for some reason, the `finally` operator \"loses\" the generic type on the\n\t        // Observable. Figure out why and fix it.\n\t        var req = this._http.get(url)\n\t            .map(function (response) { return response.text(); })\n\t            .finally(function () {\n\t            _this._inProgressUrlFetches.delete(url);\n\t        })\n\t            .share();\n\t        this._inProgressUrlFetches.set(url, req);\n\t        return req;\n\t    };\n\t    MdIconRegistry = __decorate$29([\n\t        _angular_core.Injectable(), \n\t        __metadata$29('design:paramtypes', [_angular_http.Http])\n\t    ], MdIconRegistry);\n\t    return MdIconRegistry;\n\t}());\n\t/** Clones an SVGElement while preserving type information. */\n\tfunction cloneSvg(svg) {\n\t    return svg.cloneNode(true);\n\t}\n\t\n\tvar __extends$10 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate$28 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$28 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/** Exception thrown when an invalid icon name is passed to an md-icon component. */\n\tvar MdIconInvalidNameError = (function (_super) {\n\t    __extends$10(MdIconInvalidNameError, _super);\n\t    function MdIconInvalidNameError(iconName) {\n\t        _super.call(this, \"Invalid icon name: \\\"\" + iconName + \"\\\"\");\n\t    }\n\t    return MdIconInvalidNameError;\n\t}(MdError));\n\t/**\n\t * Component to display an icon. It can be used in the following ways:\n\t * - Specify the svgSrc input to load an SVG icon from a URL. The SVG content is directly inlined\n\t *   as a child of the <md-icon> component, so that CSS styles can easily be applied to it.\n\t *   The URL is loaded via an XMLHttpRequest, so it must be on the same domain as the page or its\n\t *   server must be configured to allow cross-domain requests.\n\t *   Example:\n\t *     <md-icon svgSrc=\"assets/arrow.svg\"></md-icon>\n\t *\n\t * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n\t *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n\t *   MdIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n\t *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n\t *   Examples:\n\t *     <md-icon svgIcon=\"left-arrow\"></md-icon>\n\t *     <md-icon svgIcon=\"animals:cat\"></md-icon>\n\t *\n\t * - Use a font ligature as an icon by putting the ligature text in the content of the <md-icon>\n\t *   component. By default the Material icons font is used as described at\n\t *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n\t *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n\t *   desired font, or to an alias previously registered with MdIconRegistry.registerFontClassAlias.\n\t *   Examples:\n\t *     <md-icon>home</md-icon>\n\t *     <md-icon fontSet=\"myfont\">sun</md-icon>\n\t *\n\t * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n\t *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n\t *   CSS class which causes the glyph to be displayed via a :before selector, as in\n\t *   https://fortawesome.github.io/Font-Awesome/examples/\n\t *   Example:\n\t *     <md-icon fontSet=\"fa\" fontIcon=\"alarm\"></md-icon>\n\t */\n\tvar MdIcon = (function () {\n\t    function MdIcon(_element, _renderer, _mdIconRegistry) {\n\t        this._element = _element;\n\t        this._renderer = _renderer;\n\t        this._mdIconRegistry = _mdIconRegistry;\n\t        this.hostAriaLabel = '';\n\t    }\n\t    /**\n\t     * Splits an svgIcon binding value into its icon set and icon name components.\n\t     * Returns a 2-element array of [(icon set), (icon name)].\n\t     * The separator for the two fields is ':'. If there is no separator, an empty\n\t     * string is returned for the icon set and the entire value is returned for\n\t     * the icon name. If the argument is falsy, returns an array of two empty strings.\n\t     * Throws a MdIconInvalidNameError if the name contains two or more ':' separators.\n\t     * Examples:\n\t     *   'social:cake' -> ['social', 'cake']\n\t     *   'penguin' -> ['', 'penguin']\n\t     *   null -> ['', '']\n\t     *   'a:b:c' -> (throws MdIconInvalidNameError)\n\t     */\n\t    MdIcon.prototype._splitIconName = function (iconName) {\n\t        if (!iconName) {\n\t            return ['', ''];\n\t        }\n\t        var parts = iconName.split(':');\n\t        switch (parts.length) {\n\t            case 1:\n\t                // Use default namespace.\n\t                return ['', parts[0]];\n\t            case 2:\n\t                return parts;\n\t            default:\n\t                throw new MdIconInvalidNameError(iconName);\n\t        }\n\t    };\n\t    /** TODO: internal */\n\t    MdIcon.prototype.ngOnChanges = function (changes) {\n\t        var _this = this;\n\t        var changedInputs = Object.keys(changes);\n\t        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n\t        if (changedInputs.indexOf('svgIcon') != -1 || changedInputs.indexOf('svgSrc') != -1) {\n\t            if (this.svgIcon) {\n\t                var _a = this._splitIconName(this.svgIcon), namespace = _a[0], iconName = _a[1];\n\t                this._mdIconRegistry.getNamedSvgIcon(iconName, namespace).first().subscribe(function (svg) { return _this._setSvgElement(svg); }, function (err) { return console.log(\"Error retrieving icon: \" + err); });\n\t            }\n\t            else if (this.svgSrc) {\n\t                this._mdIconRegistry.getSvgIconFromUrl(this.svgSrc).first().subscribe(function (svg) { return _this._setSvgElement(svg); }, function (err) { return console.log(\"Error retrieving icon: \" + err); });\n\t            }\n\t        }\n\t        if (this._usingFontIcon()) {\n\t            this._updateFontIconClasses();\n\t        }\n\t        this._updateAriaLabel();\n\t    };\n\t    /** TODO: internal */\n\t    MdIcon.prototype.ngOnInit = function () {\n\t        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n\t        // e.g. <md-icon>arrow</md-icon>. In this case we need to add a CSS class for the default font.\n\t        if (this._usingFontIcon()) {\n\t            this._updateFontIconClasses();\n\t        }\n\t    };\n\t    /** TODO: internal */\n\t    MdIcon.prototype.ngAfterViewChecked = function () {\n\t        // Update aria label here because it may depend on the projected text content.\n\t        // (e.g. <md-icon>home</md-icon> should use 'home').\n\t        this._updateAriaLabel();\n\t    };\n\t    MdIcon.prototype._updateAriaLabel = function () {\n\t        var ariaLabel = this._getAriaLabel();\n\t        if (ariaLabel) {\n\t            this._renderer.setElementAttribute(this._element.nativeElement, 'aria-label', ariaLabel);\n\t        }\n\t    };\n\t    MdIcon.prototype._getAriaLabel = function () {\n\t        // If the parent provided an aria-label attribute value, use it as-is. Otherwise look for a\n\t        // reasonable value from the alt attribute, font icon name, SVG icon name, or (for ligatures)\n\t        // the text content of the directive.\n\t        var label = this.hostAriaLabel ||\n\t            this.alt ||\n\t            this.fontIcon ||\n\t            this._splitIconName(this.svgIcon)[1];\n\t        if (label) {\n\t            return label;\n\t        }\n\t        // The \"content\" of an SVG icon is not a useful label.\n\t        if (this._usingFontIcon()) {\n\t            var text = this._element.nativeElement.textContent;\n\t            if (text) {\n\t                return text;\n\t            }\n\t        }\n\t        // TODO: Warn here in dev mode.\n\t        return null;\n\t    };\n\t    MdIcon.prototype._usingFontIcon = function () {\n\t        return !(this.svgIcon || this.svgSrc);\n\t    };\n\t    MdIcon.prototype._setSvgElement = function (svg) {\n\t        var layoutElement = this._element.nativeElement;\n\t        // Remove existing child nodes and add the new SVG element.\n\t        // We would use renderer.detachView(Array.from(layoutElement.childNodes)) here,\n\t        // but it fails in IE11: https://github.com/angular/angular/issues/6327\n\t        layoutElement.innerHTML = '';\n\t        this._renderer.projectNodes(layoutElement, [svg]);\n\t    };\n\t    MdIcon.prototype._updateFontIconClasses = function () {\n\t        if (!this._usingFontIcon()) {\n\t            return;\n\t        }\n\t        var elem = this._element.nativeElement;\n\t        var fontSetClass = this.fontSet ?\n\t            this._mdIconRegistry.classNameForFontAlias(this.fontSet) :\n\t            this._mdIconRegistry.getDefaultFontSetClass();\n\t        if (fontSetClass != this._previousFontSetClass) {\n\t            if (this._previousFontSetClass) {\n\t                this._renderer.setElementClass(elem, this._previousFontSetClass, false);\n\t            }\n\t            if (fontSetClass) {\n\t                this._renderer.setElementClass(elem, fontSetClass, true);\n\t            }\n\t            this._previousFontSetClass = fontSetClass;\n\t        }\n\t        if (this.fontIcon != this._previousFontIconClass) {\n\t            if (this._previousFontIconClass) {\n\t                this._renderer.setElementClass(elem, this._previousFontIconClass, false);\n\t            }\n\t            if (this.fontIcon) {\n\t                this._renderer.setElementClass(elem, this.fontIcon, true);\n\t            }\n\t            this._previousFontIconClass = this.fontIcon;\n\t        }\n\t    };\n\t    __decorate$28([\n\t        _angular_core.Input(), \n\t        __metadata$28('design:type', String)\n\t    ], MdIcon.prototype, \"svgSrc\", void 0);\n\t    __decorate$28([\n\t        _angular_core.Input(), \n\t        __metadata$28('design:type', String)\n\t    ], MdIcon.prototype, \"svgIcon\", void 0);\n\t    __decorate$28([\n\t        _angular_core.Input(), \n\t        __metadata$28('design:type', String)\n\t    ], MdIcon.prototype, \"fontSet\", void 0);\n\t    __decorate$28([\n\t        _angular_core.Input(), \n\t        __metadata$28('design:type', String)\n\t    ], MdIcon.prototype, \"fontIcon\", void 0);\n\t    __decorate$28([\n\t        _angular_core.Input(), \n\t        __metadata$28('design:type', String)\n\t    ], MdIcon.prototype, \"alt\", void 0);\n\t    __decorate$28([\n\t        _angular_core.Input('aria-label'), \n\t        __metadata$28('design:type', String)\n\t    ], MdIcon.prototype, \"hostAriaLabel\", void 0);\n\t    MdIcon = __decorate$28([\n\t        _angular_core.Component({template: '<ng-content></ng-content>',\n\t            selector: 'md-icon',\n\t            styles: [\"md-icon { background-repeat: no-repeat; display: inline-block; fill: currentColor; height: 24px; width: 24px; } /*# sourceMappingURL=icon.css.map */ \"],\n\t            host: {\n\t                'role': 'img',\n\t            },\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n\t        }), \n\t        __metadata$28('design:paramtypes', [_angular_core.ElementRef, _angular_core.Renderer, MdIconRegistry])\n\t    ], MdIcon);\n\t    return MdIcon;\n\t}());\n\tvar MdIconModule = (function () {\n\t    function MdIconModule() {\n\t    }\n\t    MdIconModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdIconModule,\n\t            providers: [MdIconRegistry],\n\t        };\n\t    };\n\t    MdIconModule = __decorate$28([\n\t        _angular_core.NgModule({\n\t            imports: [_angular_http.HttpModule],\n\t            exports: [MdIcon],\n\t            declarations: [MdIcon],\n\t        }), \n\t        __metadata$28('design:paramtypes', [])\n\t    ], MdIconModule);\n\t    return MdIconModule;\n\t}());\n\t\n\tvar __extends$12 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate$30 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$30 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t// TODO(josephperrott): Benchpress tests.\n\t/** A single degree in radians. */\n\tvar DEGREE_IN_RADIANS = Math.PI / 180;\n\t/** Duration of the indeterminate animation. */\n\tvar DURATION_INDETERMINATE = 667;\n\t/** Duration of the indeterminate animation. */\n\tvar DURATION_DETERMINATE = 225;\n\t/** Start animation value of the indeterminate animation */\n\tvar startIndeterminate = 3;\n\t/** End animation value of the indeterminate animation */\n\tvar endIndeterminate = 80;\n\t/* Maximum angle for the arc. The angle can't be exactly 360, because the arc becomes hidden. */\n\tvar MAX_ANGLE = 359.99 / 100;\n\t/**\n\t * <md-progress-circle> component.\n\t */\n\tvar MdProgressCircle = (function () {\n\t    function MdProgressCircle(_changeDetectorRef, _ngZone, _elementRef) {\n\t        this._changeDetectorRef = _changeDetectorRef;\n\t        this._ngZone = _ngZone;\n\t        this._elementRef = _elementRef;\n\t        /** The id of the last requested animation. */\n\t        this._lastAnimationId = 0;\n\t        this._mode = 'determinate';\n\t    }\n\t    Object.defineProperty(MdProgressCircle.prototype, \"_ariaValueMin\", {\n\t        /**\n\t         * Values for aria max and min are only defined as numbers when in a determinate mode.  We do this\n\t         * because voiceover does not report the progress indicator as indeterminate if the aria min\n\t         * and/or max value are number values.\n\t         */\n\t        get: function () {\n\t            return this.mode == 'determinate' ? 0 : null;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdProgressCircle.prototype, \"_ariaValueMax\", {\n\t        get: function () {\n\t            return this.mode == 'determinate' ? 100 : null;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdProgressCircle.prototype, \"interdeterminateInterval\", {\n\t        /** TODO: internal */\n\t        get: function () {\n\t            return this._interdeterminateInterval;\n\t        },\n\t        /** TODO: internal */\n\t        set: function (interval) {\n\t            clearInterval(this._interdeterminateInterval);\n\t            this._interdeterminateInterval = interval;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /** Clean up any animations that were running. */\n\t    MdProgressCircle.prototype.ngOnDestroy = function () {\n\t        this._cleanupIndeterminateAnimation();\n\t    };\n\t    Object.defineProperty(MdProgressCircle.prototype, \"value\", {\n\t        get: function () {\n\t            if (this.mode == 'determinate') {\n\t                return this._value;\n\t            }\n\t        },\n\t        set: function (v) {\n\t            if (v != null && this.mode == 'determinate') {\n\t                var newValue = clamp(v);\n\t                this._animateCircle((this.value || 0), newValue, linearEase, DURATION_DETERMINATE, 0);\n\t                this._value = newValue;\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdProgressCircle.prototype, \"mode\", {\n\t        /**\n\t         * Mode of the progress circle\n\t         *\n\t         * Input must be one of the values from ProgressMode, defaults to 'determinate'.\n\t         * mode is bound to the host as the attribute host.\n\t         */\n\t        get: function () {\n\t            return this._mode;\n\t        },\n\t        set: function (m) {\n\t            if (m == 'indeterminate') {\n\t                this._startIndeterminateAnimation();\n\t            }\n\t            else {\n\t                this._cleanupIndeterminateAnimation();\n\t            }\n\t            this._mode = m;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /**\n\t     * Animates the circle from one percentage value to another.\n\t     *\n\t     * @param animateFrom The percentage of the circle filled starting the animation.\n\t     * @param animateTo The percentage of the circle filled ending the animation.\n\t     * @param ease The easing function to manage the pace of change in the animation.\n\t     * @param duration The length of time to show the animation, in milliseconds.\n\t     * @param rotation The starting angle of the circle fill, with 0° represented at the top center\n\t     *    of the circle.\n\t     */\n\t    MdProgressCircle.prototype._animateCircle = function (animateFrom, animateTo, ease, duration, rotation) {\n\t        var _this = this;\n\t        var id = ++this._lastAnimationId;\n\t        var startTime = Date.now();\n\t        var changeInValue = animateTo - animateFrom;\n\t        // No need to animate it if the values are the same\n\t        if (animateTo === animateFrom) {\n\t            this._renderArc(animateTo, rotation);\n\t        }\n\t        else {\n\t            var animation_1 = function () {\n\t                var elapsedTime = Math.max(0, Math.min(Date.now() - startTime, duration));\n\t                _this._renderArc(ease(elapsedTime, animateFrom, changeInValue, duration), rotation);\n\t                // Prevent overlapping animations by checking if a new animation has been called for and\n\t                // if the animation has lasted longer than the animation duration.\n\t                if (id === _this._lastAnimationId && elapsedTime < duration) {\n\t                    requestAnimationFrame(animation_1);\n\t                }\n\t            };\n\t            // Run the animation outside of Angular's zone, in order to avoid\n\t            // hitting ZoneJS and change detection on each frame.\n\t            this._ngZone.runOutsideAngular(animation_1);\n\t        }\n\t    };\n\t    /**\n\t     * Starts the indeterminate animation interval, if it is not already running.\n\t     */\n\t    MdProgressCircle.prototype._startIndeterminateAnimation = function () {\n\t        var _this = this;\n\t        var rotationStartPoint = 0;\n\t        var start = startIndeterminate;\n\t        var end = endIndeterminate;\n\t        var duration = DURATION_INDETERMINATE;\n\t        var animate = function () {\n\t            _this._animateCircle(start, end, materialEase, duration, rotationStartPoint);\n\t            // Prevent rotation from reaching Number.MAX_SAFE_INTEGER.\n\t            rotationStartPoint = (rotationStartPoint + end) % 100;\n\t            var temp = start;\n\t            start = -end;\n\t            end = -temp;\n\t        };\n\t        if (!this.interdeterminateInterval) {\n\t            this._ngZone.runOutsideAngular(function () {\n\t                _this.interdeterminateInterval = setInterval(animate, duration + 50, 0, false);\n\t                animate();\n\t            });\n\t        }\n\t    };\n\t    /**\n\t     * Removes interval, ending the animation.\n\t     */\n\t    MdProgressCircle.prototype._cleanupIndeterminateAnimation = function () {\n\t        this.interdeterminateInterval = null;\n\t    };\n\t    /**\n\t     * Renders the arc onto the SVG element. Proxies `getArc` while setting the proper\n\t     * DOM attribute on the `<path>`.\n\t     */\n\t    MdProgressCircle.prototype._renderArc = function (currentValue, rotation) {\n\t        // Caches the path reference so it doesn't have to be looked up every time.\n\t        var path = this._path = this._path || this._elementRef.nativeElement.querySelector('path');\n\t        // Ensure that the path was found. This may not be the case if the\n\t        // animation function fires too early.\n\t        if (path) {\n\t            path.setAttribute('d', getSvgArc(currentValue, rotation));\n\t        }\n\t    };\n\t    __decorate$30([\n\t        _angular_core.Input(),\n\t        _angular_core.HostBinding('attr.aria-valuenow'), \n\t        __metadata$30('design:type', Object)\n\t    ], MdProgressCircle.prototype, \"value\", null);\n\t    __decorate$30([\n\t        _angular_core.HostBinding('attr.mode'),\n\t        _angular_core.Input(), \n\t        __metadata$30('design:type', Object)\n\t    ], MdProgressCircle.prototype, \"mode\", null);\n\t    MdProgressCircle = __decorate$30([\n\t        _angular_core.Component({selector: 'md-progress-circle',\n\t            host: {\n\t                'role': 'progressbar',\n\t                '[attr.aria-valuemin]': '_ariaValueMin',\n\t                '[attr.aria-valuemax]': '_ariaValueMax',\n\t            },\n\t            template: \"<!-- preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's center.  The center of the circle with remain at the center of the md-progress-circle element containing the SVG. --> <svg viewBox=\\\"0 0 100 100\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"> <path></path> </svg> \",\n\t            styles: [\":host { display: block; height: 100px; width: 100px; overflow: hidden; } :host svg { height: 100%; width: 100%; transform-origin: center; } :host path { fill: transparent; stroke-width: 10px; } :host[mode='indeterminate'] svg { animation-duration: 5250ms, 2887.5ms; animation-name: md-progress-circle-sporadic-rotate, md-progress-circle-linear-rotate; animation-timing-function: cubic-bezier(0.35, 0, 0.25, 1), linear; animation-iteration-count: infinite; transition: none; } @keyframes md-progress-circle-linear-rotate { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } } @keyframes md-progress-circle-sporadic-rotate { 12.5% { transform: rotate(135deg); } 25% { transform: rotate(270deg); } 37.5% { transform: rotate(405deg); } 50% { transform: rotate(540deg); } 62.5% { transform: rotate(675deg); } 75% { transform: rotate(810deg); } 87.5% { transform: rotate(945deg); } 100% { transform: rotate(1080deg); } } /*# sourceMappingURL=progress-circle.css.map */ \"],\n\t            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n\t        }), \n\t        __metadata$30('design:paramtypes', [_angular_core.ChangeDetectorRef, _angular_core.NgZone, _angular_core.ElementRef])\n\t    ], MdProgressCircle);\n\t    return MdProgressCircle;\n\t}());\n\t/**\n\t * <md-spinner> component.\n\t *\n\t * This is a component definition to be used as a convenience reference to create an\n\t * indeterminate <md-progress-circle> instance.\n\t */\n\tvar MdSpinner = (function (_super) {\n\t    __extends$12(MdSpinner, _super);\n\t    function MdSpinner(changeDetectorRef, elementRef, ngZone) {\n\t        _super.call(this, changeDetectorRef, ngZone, elementRef);\n\t        this.mode = 'indeterminate';\n\t    }\n\t    MdSpinner = __decorate$30([\n\t        _angular_core.Component({selector: 'md-spinner',\n\t            host: {\n\t                'role': 'progressbar',\n\t                'mode': 'indeterminate',\n\t            },\n\t            template: \"<!-- preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's center.  The center of the circle with remain at the center of the md-progress-circle element containing the SVG. --> <svg viewBox=\\\"0 0 100 100\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"> <path></path> </svg> \",\n\t            styles: [\":host { display: block; height: 100px; width: 100px; overflow: hidden; } :host svg { height: 100%; width: 100%; transform-origin: center; } :host path { fill: transparent; stroke-width: 10px; } :host[mode='indeterminate'] svg { animation-duration: 5250ms, 2887.5ms; animation-name: md-progress-circle-sporadic-rotate, md-progress-circle-linear-rotate; animation-timing-function: cubic-bezier(0.35, 0, 0.25, 1), linear; animation-iteration-count: infinite; transition: none; } @keyframes md-progress-circle-linear-rotate { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } } @keyframes md-progress-circle-sporadic-rotate { 12.5% { transform: rotate(135deg); } 25% { transform: rotate(270deg); } 37.5% { transform: rotate(405deg); } 50% { transform: rotate(540deg); } 62.5% { transform: rotate(675deg); } 75% { transform: rotate(810deg); } 87.5% { transform: rotate(945deg); } 100% { transform: rotate(1080deg); } } /*# sourceMappingURL=progress-circle.css.map */ \"],\n\t        }), \n\t        __metadata$30('design:paramtypes', [_angular_core.ChangeDetectorRef, _angular_core.ElementRef, _angular_core.NgZone])\n\t    ], MdSpinner);\n\t    return MdSpinner;\n\t}(MdProgressCircle));\n\t/**\n\t * Module functions.\n\t */\n\t/** Clamps a value to be between 0 and 100. */\n\tfunction clamp(v) {\n\t    return Math.max(0, Math.min(100, v));\n\t}\n\t/**\n\t * Converts Polar coordinates to Cartesian.\n\t */\n\tfunction polarToCartesian(radius, pathRadius, angleInDegrees) {\n\t    var angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;\n\t    return (radius + (pathRadius * Math.cos(angleInRadians))) +\n\t        ',' + (radius + (pathRadius * Math.sin(angleInRadians)));\n\t}\n\t/**\n\t * Easing function for linear animation.\n\t */\n\tfunction linearEase(currentTime, startValue, changeInValue, duration) {\n\t    return changeInValue * currentTime / duration + startValue;\n\t}\n\t/**\n\t * Easing function to match material design indeterminate animation.\n\t */\n\tfunction materialEase(currentTime, startValue, changeInValue, duration) {\n\t    var time = currentTime / duration;\n\t    var timeCubed = Math.pow(time, 3);\n\t    var timeQuad = Math.pow(time, 4);\n\t    var timeQuint = Math.pow(time, 5);\n\t    return startValue + changeInValue * ((6 * timeQuint) + (-15 * timeQuad) + (10 * timeCubed));\n\t}\n\t/**\n\t * Determines the path value to define the arc.  Converting percentage values to to polar\n\t * coordinates on the circle, and then to cartesian coordinates in the viewport.\n\t *\n\t * @param currentValue The current percentage value of the progress circle, the percentage of the\n\t *    circle to fill.\n\t * @param rotation The starting point of the circle with 0 being the 0 degree point.\n\t * @return A string for an SVG path representing a circle filled from the starting point to the\n\t *    percentage value provided.\n\t */\n\tfunction getSvgArc(currentValue, rotation) {\n\t    var startPoint = rotation || 0;\n\t    var radius = 50;\n\t    var pathRadius = 40;\n\t    var startAngle = startPoint * MAX_ANGLE;\n\t    var endAngle = currentValue * MAX_ANGLE;\n\t    var start = polarToCartesian(radius, pathRadius, startAngle);\n\t    var end = polarToCartesian(radius, pathRadius, endAngle + startAngle);\n\t    var arcSweep = endAngle < 0 ? 0 : 1;\n\t    var largeArcFlag;\n\t    if (endAngle < 0) {\n\t        largeArcFlag = endAngle >= -180 ? 0 : 1;\n\t    }\n\t    else {\n\t        largeArcFlag = endAngle <= 180 ? 0 : 1;\n\t    }\n\t    return \"M\" + start + \"A\" + pathRadius + \",\" + pathRadius + \" 0 \" + largeArcFlag + \",\" + arcSweep + \" \" + end;\n\t}\n\tvar MdProgressCircleModule = (function () {\n\t    function MdProgressCircleModule() {\n\t    }\n\t    MdProgressCircleModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdProgressCircleModule,\n\t            providers: []\n\t        };\n\t    };\n\t    MdProgressCircleModule = __decorate$30([\n\t        _angular_core.NgModule({\n\t            exports: [MdProgressCircle, MdSpinner],\n\t            declarations: [MdProgressCircle, MdSpinner],\n\t        }), \n\t        __metadata$30('design:paramtypes', [])\n\t    ], MdProgressCircleModule);\n\t    return MdProgressCircleModule;\n\t}());\n\t\n\tvar __decorate$31 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$31 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t// TODO(josephperrott): Benchpress tests.\n\t// TODO(josephperrott): Add ARIA attributes for progressbar \"for\".\n\t/**\n\t * <md-progress-bar> component.\n\t */\n\tvar MdProgressBar = (function () {\n\t    function MdProgressBar() {\n\t        /** Value of the progressbar. Defaults to zero. Mirrored to aria-valuenow. */\n\t        this._value = 0;\n\t        /** Buffer value of the progress bar. Defaults to zero. */\n\t        this._bufferValue = 0;\n\t        /**\n\t         * Mode of the progress bar.\n\t         *\n\t         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n\t         * 'determinate'.\n\t         * Mirrored to mode attribute.\n\t         */\n\t        this.mode = 'determinate';\n\t    }\n\t    Object.defineProperty(MdProgressBar.prototype, \"value\", {\n\t        get: function () {\n\t            return this._value;\n\t        },\n\t        set: function (v) {\n\t            this._value = clamp$1(v || 0);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdProgressBar.prototype, \"bufferValue\", {\n\t        get: function () {\n\t            return this._bufferValue;\n\t        },\n\t        set: function (v) {\n\t            this._bufferValue = clamp$1(v || 0);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /** Gets the current transform value for the progress bar's primary indicator. */\n\t    MdProgressBar.prototype._primaryTransform = function () {\n\t        var scale = this.value / 100;\n\t        return { transform: \"scaleX(\" + scale + \")\" };\n\t    };\n\t    /**\n\t     * Gets the current transform value for the progress bar's buffer indicator.  Only used if the\n\t     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n\t     */\n\t    MdProgressBar.prototype._bufferTransform = function () {\n\t        if (this.mode == 'buffer') {\n\t            var scale = this.bufferValue / 100;\n\t            return { transform: \"scaleX(\" + scale + \")\" };\n\t        }\n\t    };\n\t    __decorate$31([\n\t        _angular_core.Input(),\n\t        _angular_core.HostBinding('attr.aria-valuenow'), \n\t        __metadata$31('design:type', Object)\n\t    ], MdProgressBar.prototype, \"value\", null);\n\t    __decorate$31([\n\t        _angular_core.Input(), \n\t        __metadata$31('design:type', Object)\n\t    ], MdProgressBar.prototype, \"bufferValue\", null);\n\t    __decorate$31([\n\t        _angular_core.Input(),\n\t        _angular_core.HostBinding('attr.mode'), \n\t        __metadata$31('design:type', Object)\n\t    ], MdProgressBar.prototype, \"mode\", void 0);\n\t    MdProgressBar = __decorate$31([\n\t        _angular_core.Component({selector: 'md-progress-bar',\n\t            host: {\n\t                'role': 'progressbar',\n\t                'aria-valuemin': '0',\n\t                'aria-valuemax': '100',\n\t            },\n\t            template: \"<!-- The background div is named as such because it appears below the other divs and is not sized based on values. --> <div class=\\\"md-progress-bar-background\\\"></div> <div class=\\\"md-progress-bar-buffer\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div> <div class=\\\"md-progress-bar-primary md-progress-bar-fill\\\" [ngStyle]=\\\"_primaryTransform()\\\"></div> <div class=\\\"md-progress-bar-secondary md-progress-bar-fill\\\"></div> \",\n\t            styles: [\":host { display: block; height: 5px; overflow: hidden; position: relative; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; } :host .md-progress-bar-background { background-repeat: repeat-x; background-size: 10px 4px; height: 100%; position: absolute; visibility: hidden; width: 100%; } :host .md-progress-bar-buffer { height: 100%; position: absolute; transform-origin: top left; transition: transform 250ms ease; width: 100%; } :host .md-progress-bar-secondary { visibility: hidden; } :host .md-progress-bar-fill { animation: none; height: 100%; position: absolute; transform-origin: top left; transition: transform 250ms ease; width: 100%; } :host .md-progress-bar-fill::after { animation: none; content: ''; display: inline-block; height: 100%; position: absolute; width: 100%; left: 0; } :host[mode='query'] { transform: rotateZ(180deg); } :host[mode='indeterminate'] .md-progress-bar-fill, :host[mode='query'] .md-progress-bar-fill { transition: none; } :host[mode='indeterminate'] .md-progress-bar-primary, :host[mode='query'] .md-progress-bar-primary { animation: md-progress-bar-primary-indeterminate-translate 2000ms infinite linear; left: -145.166611%; } :host[mode='indeterminate'] .md-progress-bar-primary.md-progress-bar-fill::after, :host[mode='query'] .md-progress-bar-primary.md-progress-bar-fill::after { animation: md-progress-bar-primary-indeterminate-scale 2000ms infinite linear; } :host[mode='indeterminate'] .md-progress-bar-secondary, :host[mode='query'] .md-progress-bar-secondary { animation: md-progress-bar-secondary-indeterminate-translate 2000ms infinite linear; left: -54.888891%; visibility: visible; } :host[mode='indeterminate'] .md-progress-bar-secondary.md-progress-bar-fill::after, :host[mode='query'] .md-progress-bar-secondary.md-progress-bar-fill::after { animation: md-progress-bar-secondary-indeterminate-scale 2000ms infinite linear; } :host[mode='buffer'] .md-progress-bar-background { animation: md-progress-bar-background-scroll 250ms infinite linear; visibility: visible; } :host-context([dir='rtl']) { transform: rotateY(180deg); } @keyframes md-progress-bar-primary-indeterminate-translate { 0% { transform: translateX(0); } 20% { animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582); transform: translateX(0); } 59.15% { animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635); transform: translateX(83.67142%); } 100% { transform: translateX(200.61106%); } } @keyframes md-progress-bar-primary-indeterminate-scale { 0% { transform: scaleX(0.08); } 36.65% { animation-timing-function: cubic-bezier(0.33473, 0.12482, 0.78584, 1); transform: scaleX(0.08); } 69.15% { animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1); transform: scaleX(0.66148); } 100% { transform: scaleX(0.08); } } @keyframes md-progress-bar-secondary-indeterminate-translate { 0% { animation-timing-function: cubic-bezier(0.15, 0, 0.51506, 0.40969); transform: translateX(0); } 25% { animation-timing-function: cubic-bezier(0.31033, 0.28406, 0.8, 0.73371); transform: translateX(37.65191%); } 48.35% { animation-timing-function: cubic-bezier(0.4, 0.62704, 0.6, 0.90203); transform: translateX(84.38617%); } 100% { transform: translateX(160.27778%); } } @keyframes md-progress-bar-secondary-indeterminate-scale { 0% { animation-timing-function: cubic-bezier(0.15, 0, 0.51506, 0.40969); transform: scaleX(0.08); } 19.15% { animation-timing-function: cubic-bezier(0.31033, 0.28406, 0.8, 0.73371); transform: scaleX(0.4571); } 44.15% { animation-timing-function: cubic-bezier(0.4, 0.62704, 0.6, 0.90203); transform: scaleX(0.72796); } 100% { transform: scaleX(0.08); } } @keyframes md-progress-bar-background-scroll { to { transform: translateX(-10px); } } /*# sourceMappingURL=progress-bar.css.map */ \"],\n\t            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n\t        }), \n\t        __metadata$31('design:paramtypes', [])\n\t    ], MdProgressBar);\n\t    return MdProgressBar;\n\t}());\n\t/** Clamps a value to be between two numbers, by default 0 and 100. */\n\tfunction clamp$1(v, min, max) {\n\t    if (min === void 0) { min = 0; }\n\t    if (max === void 0) { max = 100; }\n\t    return Math.max(min, Math.min(max, v));\n\t}\n\tvar MdProgressBarModule = (function () {\n\t    function MdProgressBarModule() {\n\t    }\n\t    MdProgressBarModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdProgressBarModule,\n\t            providers: []\n\t        };\n\t    };\n\t    MdProgressBarModule = __decorate$31([\n\t        _angular_core.NgModule({\n\t            imports: [_angular_common.CommonModule],\n\t            exports: [MdProgressBar],\n\t            declarations: [MdProgressBar],\n\t        }), \n\t        __metadata$31('design:paramtypes', [])\n\t    ], MdProgressBarModule);\n\t    return MdProgressBarModule;\n\t}());\n\t\n\tvar __extends$13 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate$32 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$32 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar noop = function () { };\n\tvar MD_INPUT_CONTROL_VALUE_ACCESSOR = {\n\t    provide: _angular_forms.NG_VALUE_ACCESSOR,\n\t    useExisting: _angular_core.forwardRef(function () { return MdInput; }),\n\t    multi: true\n\t};\n\t// Invalid input type. Using one of these will throw an MdInputUnsupportedTypeError.\n\tvar MD_INPUT_INVALID_INPUT_TYPE = [\n\t    'file',\n\t    'radio',\n\t    'checkbox',\n\t];\n\tvar nextUniqueId$1 = 0;\n\tvar MdInputPlaceholderConflictError = (function (_super) {\n\t    __extends$13(MdInputPlaceholderConflictError, _super);\n\t    function MdInputPlaceholderConflictError() {\n\t        _super.call(this, 'Placeholder attribute and child element were both specified.');\n\t    }\n\t    return MdInputPlaceholderConflictError;\n\t}(MdError));\n\tvar MdInputUnsupportedTypeError = (function (_super) {\n\t    __extends$13(MdInputUnsupportedTypeError, _super);\n\t    function MdInputUnsupportedTypeError(type) {\n\t        _super.call(this, \"Input type \\\"\" + type + \"\\\" isn't supported by md-input.\");\n\t    }\n\t    return MdInputUnsupportedTypeError;\n\t}(MdError));\n\tvar MdInputDuplicatedHintError = (function (_super) {\n\t    __extends$13(MdInputDuplicatedHintError, _super);\n\t    function MdInputDuplicatedHintError(align) {\n\t        _super.call(this, \"A hint was already declared for 'align=\\\"\" + align + \"\\\"'.\");\n\t    }\n\t    return MdInputDuplicatedHintError;\n\t}(MdError));\n\t/**\n\t * The placeholder directive. The content can declare this to implement more\n\t * complex placeholders.\n\t */\n\tvar MdPlaceholder = (function () {\n\t    function MdPlaceholder() {\n\t    }\n\t    MdPlaceholder = __decorate$32([\n\t        _angular_core.Directive({\n\t            selector: 'md-placeholder'\n\t        }), \n\t        __metadata$32('design:paramtypes', [])\n\t    ], MdPlaceholder);\n\t    return MdPlaceholder;\n\t}());\n\t/** The hint directive, used to tag content as hint labels (going under the input). */\n\tvar MdHint = (function () {\n\t    function MdHint() {\n\t        // Whether to align the hint label at the start or end of the line.\n\t        this.align = 'start';\n\t    }\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Object)\n\t    ], MdHint.prototype, \"align\", void 0);\n\t    MdHint = __decorate$32([\n\t        _angular_core.Directive({\n\t            selector: 'md-hint',\n\t            host: {\n\t                '[class.md-right]': 'align == \"end\"',\n\t                '[class.md-hint]': 'true'\n\t            }\n\t        }), \n\t        __metadata$32('design:paramtypes', [])\n\t    ], MdHint);\n\t    return MdHint;\n\t}());\n\t/**\n\t * Component that represents a text input. It encapsulates the <input> HTMLElement and\n\t * improve on its behaviour, along with styling it according to the Material Design.\n\t */\n\tvar MdInput = (function () {\n\t    function MdInput(elementRef) {\n\t        this._focused = false;\n\t        this._value = '';\n\t        /** Callback registered via registerOnTouched (ControlValueAccessor) */\n\t        this._onTouchedCallback = noop;\n\t        /** Callback registered via registerOnChange (ControlValueAccessor) */\n\t        this._onChangeCallback = noop;\n\t        /**\n\t         * Bindings.\n\t         */\n\t        this.align = 'start';\n\t        this.dividerColor = 'primary';\n\t        this.hintLabel = '';\n\t        this.id = \"md-input-\" + nextUniqueId$1++;\n\t        this.list = null;\n\t        this.max = null;\n\t        this.maxlength = null;\n\t        this.min = null;\n\t        this.minlength = null;\n\t        this.placeholder = null;\n\t        this.step = null;\n\t        this.tabindex = null;\n\t        this.type = 'text';\n\t        this.name = null;\n\t        // textarea-specific\n\t        this.rows = null;\n\t        this.cols = null;\n\t        this.wrap = null;\n\t        this._floatingPlaceholder = true;\n\t        this._autofocus = false;\n\t        this._disabled = false;\n\t        this._readonly = false;\n\t        this._required = false;\n\t        this._spellcheck = false;\n\t        this._blurEmitter = new _angular_core.EventEmitter();\n\t        this._focusEmitter = new _angular_core.EventEmitter();\n\t        // Set the element type depending on normalized selector used(md-input / md-textarea)\n\t        this._elementType = elementRef.nativeElement.nodeName.toLowerCase() === 'md-input' ?\n\t            'input' :\n\t            'textarea';\n\t    }\n\t    Object.defineProperty(MdInput.prototype, \"ariaDisabled\", {\n\t        get: function () { return this._ariaDisabled; },\n\t        set: function (value) { this._ariaDisabled = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdInput.prototype, \"ariaRequired\", {\n\t        get: function () { return this._ariaRequired; },\n\t        set: function (value) { this._ariaRequired = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdInput.prototype, \"ariaInvalid\", {\n\t        get: function () { return this._ariaInvalid; },\n\t        set: function (value) { this._ariaInvalid = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdInput.prototype, \"focused\", {\n\t        /** Readonly properties. */\n\t        get: function () { return this._focused; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdInput.prototype, \"empty\", {\n\t        get: function () { return (this._value == null || this._value === '') && this.type !== 'date'; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdInput.prototype, \"characterCount\", {\n\t        get: function () {\n\t            return this.empty ? 0 : ('' + this._value).length;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdInput.prototype, \"inputId\", {\n\t        get: function () { return this.id + \"-input\"; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdInput.prototype, \"floatingPlaceholder\", {\n\t        get: function () { return this._floatingPlaceholder; },\n\t        set: function (value) { this._floatingPlaceholder = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdInput.prototype, \"autofocus\", {\n\t        get: function () { return this._autofocus; },\n\t        set: function (value) { this._autofocus = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdInput.prototype, \"disabled\", {\n\t        get: function () { return this._disabled; },\n\t        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdInput.prototype, \"readonly\", {\n\t        get: function () { return this._readonly; },\n\t        set: function (value) { this._readonly = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdInput.prototype, \"required\", {\n\t        get: function () { return this._required; },\n\t        set: function (value) { this._required = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdInput.prototype, \"spellcheck\", {\n\t        get: function () { return this._spellcheck; },\n\t        set: function (value) { this._spellcheck = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdInput.prototype, \"onBlur\", {\n\t        get: function () {\n\t            return this._blurEmitter.asObservable();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdInput.prototype, \"onFocus\", {\n\t        get: function () {\n\t            return this._focusEmitter.asObservable();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdInput.prototype, \"value\", {\n\t        get: function () { return this._value; },\n\t        set: function (v) {\n\t            v = this._convertValueForInputType(v);\n\t            if (v !== this._value) {\n\t                this._value = v;\n\t                this._onChangeCallback(v);\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    ;\n\t    Object.defineProperty(MdInput.prototype, \"_align\", {\n\t        // This is to remove the `align` property of the `md-input` itself. Otherwise HTML5\n\t        // might place it as RTL when we don't want to. We still want to use `align` as an\n\t        // Input though, so we use HostBinding.\n\t        get: function () { return null; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /** Set focus on input */\n\t    MdInput.prototype.focus = function () {\n\t        this._inputElement.nativeElement.focus();\n\t    };\n\t    MdInput.prototype._handleFocus = function (event) {\n\t        this._focused = true;\n\t        this._focusEmitter.emit(event);\n\t    };\n\t    MdInput.prototype._handleBlur = function (event) {\n\t        this._focused = false;\n\t        this._onTouchedCallback();\n\t        this._blurEmitter.emit(event);\n\t    };\n\t    MdInput.prototype._handleChange = function (event) {\n\t        this.value = event.target.value;\n\t        this._onTouchedCallback();\n\t    };\n\t    MdInput.prototype._hasPlaceholder = function () {\n\t        return !!this.placeholder || this._placeholderChild != null;\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     * TODO: internal\n\t     */\n\t    MdInput.prototype.writeValue = function (value) {\n\t        this._value = value;\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     * TODO: internal\n\t     */\n\t    MdInput.prototype.registerOnChange = function (fn) {\n\t        this._onChangeCallback = fn;\n\t    };\n\t    /**\n\t     * Implemented as part of ControlValueAccessor.\n\t     * TODO: internal\n\t     */\n\t    MdInput.prototype.registerOnTouched = function (fn) {\n\t        this._onTouchedCallback = fn;\n\t    };\n\t    /** TODO: internal */\n\t    MdInput.prototype.ngAfterContentInit = function () {\n\t        var _this = this;\n\t        this._validateConstraints();\n\t        // Trigger validation when the hint children change.\n\t        this._hintChildren.changes.subscribe(function () {\n\t            _this._validateConstraints();\n\t        });\n\t    };\n\t    /** TODO: internal */\n\t    MdInput.prototype.ngOnChanges = function (changes) {\n\t        this._validateConstraints();\n\t    };\n\t    /**\n\t     * Convert the value passed in to a value that is expected from the type of the md-input.\n\t     * This is normally performed by the *_VALUE_ACCESSOR in forms, but since the type is bound\n\t     * on our internal input it won't work locally.\n\t     * @private\n\t     */\n\t    MdInput.prototype._convertValueForInputType = function (v) {\n\t        switch (this.type) {\n\t            case 'number': return parseFloat(v);\n\t            default: return v;\n\t        }\n\t    };\n\t    /**\n\t     * Ensure that all constraints defined by the API are validated, or throw errors otherwise.\n\t     * Constraints for now:\n\t     *   - placeholder attribute and <md-placeholder> are mutually exclusive.\n\t     *   - type attribute is not one of the forbidden types (see constant at the top).\n\t     *   - Maximum one of each `<md-hint>` alignment specified, with the attribute being\n\t     *     considered as align=\"start\".\n\t     * @private\n\t     */\n\t    MdInput.prototype._validateConstraints = function () {\n\t        var _this = this;\n\t        if (this.placeholder != '' && this.placeholder != null && this._placeholderChild != null) {\n\t            throw new MdInputPlaceholderConflictError();\n\t        }\n\t        if (MD_INPUT_INVALID_INPUT_TYPE.indexOf(this.type) != -1) {\n\t            throw new MdInputUnsupportedTypeError(this.type);\n\t        }\n\t        if (this._hintChildren) {\n\t            // Validate the hint labels.\n\t            var startHint_1 = null;\n\t            var endHint_1 = null;\n\t            this._hintChildren.forEach(function (hint) {\n\t                if (hint.align == 'start') {\n\t                    if (startHint_1 || _this.hintLabel) {\n\t                        throw new MdInputDuplicatedHintError('start');\n\t                    }\n\t                    startHint_1 = hint;\n\t                }\n\t                else if (hint.align == 'end') {\n\t                    if (endHint_1) {\n\t                        throw new MdInputDuplicatedHintError('end');\n\t                    }\n\t                    endHint_1 = hint;\n\t                }\n\t            });\n\t        }\n\t    };\n\t    __decorate$32([\n\t        _angular_core.Input('aria-label'), \n\t        __metadata$32('design:type', String)\n\t    ], MdInput.prototype, \"ariaLabel\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input('aria-labelledby'), \n\t        __metadata$32('design:type', String)\n\t    ], MdInput.prototype, \"ariaLabelledBy\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input('aria-disabled'), \n\t        __metadata$32('design:type', Boolean)\n\t    ], MdInput.prototype, \"ariaDisabled\", null);\n\t    __decorate$32([\n\t        _angular_core.Input('aria-required'), \n\t        __metadata$32('design:type', Boolean)\n\t    ], MdInput.prototype, \"ariaRequired\", null);\n\t    __decorate$32([\n\t        _angular_core.Input('aria-invalid'), \n\t        __metadata$32('design:type', Boolean)\n\t    ], MdInput.prototype, \"ariaInvalid\", null);\n\t    __decorate$32([\n\t        _angular_core.ContentChild(MdPlaceholder), \n\t        __metadata$32('design:type', MdPlaceholder)\n\t    ], MdInput.prototype, \"_placeholderChild\", void 0);\n\t    __decorate$32([\n\t        _angular_core.ContentChildren(MdHint), \n\t        __metadata$32('design:type', _angular_core.QueryList)\n\t    ], MdInput.prototype, \"_hintChildren\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Object)\n\t    ], MdInput.prototype, \"align\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Object)\n\t    ], MdInput.prototype, \"dividerColor\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', String)\n\t    ], MdInput.prototype, \"hintLabel\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', String)\n\t    ], MdInput.prototype, \"autocomplete\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', String)\n\t    ], MdInput.prototype, \"autocorrect\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', String)\n\t    ], MdInput.prototype, \"autocapitalize\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', String)\n\t    ], MdInput.prototype, \"id\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', String)\n\t    ], MdInput.prototype, \"list\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Object)\n\t    ], MdInput.prototype, \"max\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Number)\n\t    ], MdInput.prototype, \"maxlength\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Object)\n\t    ], MdInput.prototype, \"min\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Number)\n\t    ], MdInput.prototype, \"minlength\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', String)\n\t    ], MdInput.prototype, \"placeholder\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Number)\n\t    ], MdInput.prototype, \"step\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Number)\n\t    ], MdInput.prototype, \"tabindex\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', String)\n\t    ], MdInput.prototype, \"type\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', String)\n\t    ], MdInput.prototype, \"name\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Number)\n\t    ], MdInput.prototype, \"rows\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Number)\n\t    ], MdInput.prototype, \"cols\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Object)\n\t    ], MdInput.prototype, \"wrap\", void 0);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Boolean)\n\t    ], MdInput.prototype, \"floatingPlaceholder\", null);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Boolean)\n\t    ], MdInput.prototype, \"autofocus\", null);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Boolean)\n\t    ], MdInput.prototype, \"disabled\", null);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Boolean)\n\t    ], MdInput.prototype, \"readonly\", null);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Boolean)\n\t    ], MdInput.prototype, \"required\", null);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Boolean)\n\t    ], MdInput.prototype, \"spellcheck\", null);\n\t    __decorate$32([\n\t        _angular_core.Output('blur'), \n\t        __metadata$32('design:type', rxjs_Observable.Observable)\n\t    ], MdInput.prototype, \"onBlur\", null);\n\t    __decorate$32([\n\t        _angular_core.Output('focus'), \n\t        __metadata$32('design:type', rxjs_Observable.Observable)\n\t    ], MdInput.prototype, \"onFocus\", null);\n\t    __decorate$32([\n\t        _angular_core.Input(), \n\t        __metadata$32('design:type', Object)\n\t    ], MdInput.prototype, \"value\", null);\n\t    __decorate$32([\n\t        _angular_core.HostBinding('attr.align'), \n\t        __metadata$32('design:type', Object)\n\t    ], MdInput.prototype, \"_align\", null);\n\t    __decorate$32([\n\t        _angular_core.ViewChild('input'), \n\t        __metadata$32('design:type', _angular_core.ElementRef)\n\t    ], MdInput.prototype, \"_inputElement\", void 0);\n\t    MdInput = __decorate$32([\n\t        _angular_core.Component({selector: 'md-input, md-textarea',\n\t            template: \"<div class=\\\"md-input-wrapper\\\"> <div class=\\\"md-input-table\\\"> <div class=\\\"md-input-prefix\\\"><ng-content select=\\\"[md-prefix]\\\"></ng-content></div> <div class=\\\"md-input-infix\\\"> <input #input *ngIf=\\\"_elementType === 'input'\\\" class=\\\"md-input-element\\\" [class.md-end]=\\\"align == 'end'\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledBy\\\" [attr.aria-disabled]=\\\"ariaDisabled\\\" [attr.aria-required]=\\\"ariaRequired\\\" [attr.aria-invalid]=\\\"ariaInvalid\\\" [attr.autocomplete]=\\\"autocomplete\\\" [attr.autocorrect]=\\\"autocorrect\\\" [attr.autocapitalize]=\\\"autocapitalize\\\" [autofocus]=\\\"autofocus\\\" [disabled]=\\\"disabled\\\" [id]=\\\"inputId\\\" [attr.list]=\\\"list\\\" [attr.max]=\\\"max\\\" [attr.maxlength]=\\\"maxlength\\\" [attr.min]=\\\"min\\\" [attr.minlength]=\\\"minlength\\\" [readonly]=\\\"readonly\\\" [required]=\\\"required\\\" [spellcheck]=\\\"spellcheck\\\" [attr.step]=\\\"step\\\" [attr.tabindex]=\\\"tabindex\\\" [type]=\\\"type\\\" [attr.name]=\\\"name\\\" (focus)=\\\"_handleFocus($event)\\\" (blur)=\\\"_handleBlur($event)\\\" [(ngModel)]=\\\"value\\\" (change)=\\\"_handleChange($event)\\\"> <textarea #input *ngIf=\\\"_elementType === 'textarea'\\\" class=\\\"md-input-element  md-input-element-textarea\\\" [class.md-end]=\\\"align == 'end'\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledBy\\\" [attr.aria-disabled]=\\\"ariaDisabled\\\" [attr.aria-required]=\\\"ariaRequired\\\" [attr.aria-invalid]=\\\"ariaInvalid\\\" [attr.autocomplete]=\\\"autocomplete\\\" [attr.autocapitalize]=\\\"autocapitalize\\\" [attr.cols]=\\\"cols\\\" [attr.rows]=\\\"rows\\\" [attr.wrap]=\\\"wrap\\\" [autofocus]=\\\"autofocus\\\" [disabled]=\\\"disabled\\\" [id]=\\\"inputId\\\" [attr.maxlength]=\\\"maxlength\\\" [attr.minlength]=\\\"minlength\\\" [readonly]=\\\"readonly\\\" [required]=\\\"required\\\" [spellcheck]=\\\"spellcheck\\\" [attr.tabindex]=\\\"tabindex\\\" [attr.name]=\\\"name\\\" (focus)=\\\"_handleFocus($event)\\\" (blur)=\\\"_handleBlur($event)\\\" [(ngModel)]=\\\"value\\\" (change)=\\\"_handleChange($event)\\\"></textarea> <label class=\\\"md-input-placeholder\\\" [attr.for]=\\\"inputId\\\" [class.md-empty]=\\\"empty\\\" [class.md-focused]=\\\"focused\\\" [class.md-float]=\\\"floatingPlaceholder\\\" [class.md-accent]=\\\"dividerColor == 'accent'\\\" [class.md-warn]=\\\"dividerColor == 'warn'\\\" *ngIf=\\\"_hasPlaceholder()\\\"> <ng-content select=\\\"md-placeholder\\\"></ng-content> {{placeholder}} <span class=\\\"md-placeholder-required\\\" *ngIf=\\\"required\\\">*</span> </label> </div> <div class=\\\"md-input-suffix\\\"><ng-content select=\\\"[md-suffix]\\\"></ng-content></div> </div> <div class=\\\"md-input-underline\\\" [class.md-disabled]=\\\"disabled\\\"> <span class=\\\"md-input-ripple\\\" [class.md-focused]=\\\"focused\\\" [class.md-accent]=\\\"dividerColor == 'accent'\\\" [class.md-warn]=\\\"dividerColor == 'warn'\\\"></span> </div> <div *ngIf=\\\"hintLabel != ''\\\" class=\\\"md-hint\\\">{{hintLabel}}</div> <ng-content select=\\\"md-hint\\\"></ng-content> </div> \",\n\t            styles: [\"md-input, md-textarea { display: inline-block; position: relative; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; line-height: normal; text-align: left; } [dir='rtl'] md-input, [dir='rtl'] md-textarea { text-align: right; } .md-input-wrapper { margin: 16px 0; } .md-input-table { display: inline-table; flex-flow: column; vertical-align: bottom; width: 100%; } .md-input-table > * { display: table-cell; } .md-input-infix { position: relative; } .md-input-element { font: inherit; background: transparent; color: currentColor; border: none; outline: none; padding: 0; width: 100%; } .md-input-element.md-end { text-align: right; } [dir='rtl'] .md-input-element.md-end { text-align: left; } .md-input-element:-moz-ui-invalid { box-shadow: none; } .md-input-element:-webkit-autofill + .md-input-placeholder.md-float { display: block; padding-bottom: 5px; transform: translateY(-100%) scale(0.75); width: 133.33333%; } .md-input-placeholder { position: absolute; left: 0; top: 0; font-size: 100%; pointer-events: none; z-index: 1; width: 100%; display: none; white-space: nowrap; text-overflow: ellipsis; overflow-x: hidden; transform: translateY(0); transform-origin: bottom left; transition: transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1), scale 400ms cubic-bezier(0.25, 0.8, 0.25, 1), color 400ms cubic-bezier(0.25, 0.8, 0.25, 1), width 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } .md-input-placeholder.md-empty { display: block; cursor: text; } .md-input-placeholder.md-float:not(.md-empty), .md-input-placeholder.md-float.md-focused { display: block; padding-bottom: 5px; transform: translateY(-100%) scale(0.75); width: 133.33333%; } [dir='rtl'] .md-input-placeholder { transform-origin: bottom right; } .md-input-underline { position: absolute; height: 1px; width: 100%; margin-top: 4px; border-top-width: 1px; border-top-style: solid; } .md-input-underline.md-disabled { border-top: 0; background-image: linear-gradient(to right, rgba(0, 0, 0, 0.26) 0%, rgba(0, 0, 0, 0.26) 33%, transparent 0%); background-position: 0; background-size: 4px 1px; background-repeat: repeat-x; } .md-input-underline .md-input-ripple { position: absolute; height: 2px; z-index: 1; top: -1px; width: 100%; transform-origin: top; opacity: 0; transform: scaleY(0); transition: transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1), opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } .md-input-underline .md-input-ripple.md-focused { opacity: 1; transform: scaleY(1); } .md-hint { display: block; position: absolute; font-size: 75%; bottom: -0.5em; } .md-hint.md-right { right: 0; } [dir='rtl'] .md-hint { right: 0; left: auto; } [dir='rtl'] .md-hint.md-right { right: auto; left: 0; } /*# sourceMappingURL=input.css.map */ \"],\n\t            providers: [MD_INPUT_CONTROL_VALUE_ACCESSOR],\n\t            host: { '(click)': 'focus()' },\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t        }), \n\t        __metadata$32('design:paramtypes', [_angular_core.ElementRef])\n\t    ], MdInput);\n\t    return MdInput;\n\t}());\n\tvar MdInputModule = (function () {\n\t    function MdInputModule() {\n\t    }\n\t    MdInputModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdInputModule,\n\t            providers: []\n\t        };\n\t    };\n\t    MdInputModule = __decorate$32([\n\t        _angular_core.NgModule({\n\t            declarations: [MdPlaceholder, MdInput, MdHint],\n\t            imports: [_angular_common.CommonModule, _angular_forms.FormsModule],\n\t            exports: [MdPlaceholder, MdInput, MdHint],\n\t        }), \n\t        __metadata$32('design:paramtypes', [])\n\t    ], MdInputModule);\n\t    return MdInputModule;\n\t}());\n\t\n\t/**\n\t * Configuration used when opening a snack-bar.\n\t */\n\tvar MdSnackBarConfig = (function () {\n\t    function MdSnackBarConfig() {\n\t        /** The politeness level for the MdAriaLiveAnnouncer announcement. */\n\t        this.politeness = 'assertive';\n\t        /** Message to be announced by the MdAriaLiveAnnouncer */\n\t        this.announcementMessage = '';\n\t        /** The view container to place the overlay for the snack bar into. */\n\t        this.viewContainerRef = null;\n\t    }\n\t    return MdSnackBarConfig;\n\t}());\n\t\n\t// TODO(josephperrott): Implement onAction observable.\n\t/**\n\t * Reference to a snack bar dispatched from the snack bar service.\n\t */\n\tvar MdSnackBarRef = (function () {\n\t    function MdSnackBarRef(instance, containerInstance, _overlayRef) {\n\t        this._overlayRef = _overlayRef;\n\t        /** Subject for notifying the user that the snack bar has closed. */\n\t        this._afterClosed = new rxjs_Subject.Subject();\n\t        // Sets the readonly instance of the snack bar content component.\n\t        this.instance = instance;\n\t        this.containerInstance = containerInstance;\n\t    }\n\t    /** Dismisses the snack bar. */\n\t    MdSnackBarRef.prototype.dismiss = function () {\n\t        var _this = this;\n\t        if (!this._afterClosed.closed) {\n\t            this.containerInstance.exit().subscribe(function () {\n\t                _this._overlayRef.dispose();\n\t                _this._afterClosed.next();\n\t                _this._afterClosed.complete();\n\t            });\n\t        }\n\t    };\n\t    /** Gets an observable that is notified when the snack bar is finished closing. */\n\t    MdSnackBarRef.prototype.afterDismissed = function () {\n\t        return this._afterClosed.asObservable();\n\t    };\n\t    return MdSnackBarRef;\n\t}());\n\t\n\tvar __extends$15 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar MdSnackBarContentAlreadyAttached = (function (_super) {\n\t    __extends$15(MdSnackBarContentAlreadyAttached, _super);\n\t    function MdSnackBarContentAlreadyAttached() {\n\t        _super.call(this, 'Attempting to attach snack bar content after content is already attached');\n\t    }\n\t    return MdSnackBarContentAlreadyAttached;\n\t}(MdError));\n\t\n\tvar __extends$14 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate$34 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$34 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t// TODO(jelbourn): we can't use constants from animation.ts here because you can't use\n\t// a text interpolation in anything that is analyzed statically with ngc (for AoT compile).\n\tvar SHOW_ANIMATION = '225ms cubic-bezier(0.4,0.0,1,1)';\n\tvar HIDE_ANIMATION = '195ms cubic-bezier(0.0,0.0,0.2,1)';\n\t/**\n\t * Internal component that wraps user-provided snack bar content.\n\t */\n\tvar MdSnackBarContainer = (function (_super) {\n\t    __extends$14(MdSnackBarContainer, _super);\n\t    function MdSnackBarContainer(_ngZone) {\n\t        _super.call(this);\n\t        this._ngZone = _ngZone;\n\t        /** Subject for notifying that the snack bar has exited from view. */\n\t        this._onExit = new rxjs_Subject.Subject();\n\t        /** The state of the snack bar animations. */\n\t        this.animationState = 'initial';\n\t    }\n\t    /** Attach a component portal as content to this snack bar container. */\n\t    MdSnackBarContainer.prototype.attachComponentPortal = function (portal) {\n\t        if (this._portalHost.hasAttached()) {\n\t            throw new MdSnackBarContentAlreadyAttached();\n\t        }\n\t        return this._portalHost.attachComponentPortal(portal);\n\t    };\n\t    /** Attach a template portal as content to this snack bar container. */\n\t    MdSnackBarContainer.prototype.attachTemplatePortal = function (portal) {\n\t        throw Error('Not yet implemented');\n\t    };\n\t    /** Begin animation of the snack bar exiting from view. */\n\t    MdSnackBarContainer.prototype.exit = function () {\n\t        this.animationState = 'complete';\n\t        return this._onExit.asObservable();\n\t    };\n\t    /** Mark snack bar as exited from the view. */\n\t    MdSnackBarContainer.prototype.markAsExited = function (event) {\n\t        var _this = this;\n\t        if (event.toState === 'void' || event.toState === 'complete') {\n\t            this._ngZone.run(function () {\n\t                _this._onExit.next();\n\t                _this._onExit.complete();\n\t            });\n\t        }\n\t    };\n\t    /** Begin animation of snack bar entrance into view. */\n\t    MdSnackBarContainer.prototype.enter = function () {\n\t        this.animationState = 'visible';\n\t    };\n\t    __decorate$34([\n\t        _angular_core.ViewChild(PortalHostDirective), \n\t        __metadata$34('design:type', PortalHostDirective)\n\t    ], MdSnackBarContainer.prototype, \"_portalHost\", void 0);\n\t    MdSnackBarContainer = __decorate$34([\n\t        _angular_core.Component({selector: 'snack-bar-container',\n\t            template: \"<template portalHost></template>\",\n\t            styles: [\":host { box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); background: #323232; border-radius: 2px; box-sizing: content-box; display: block; height: 20px; max-width: 568px; min-width: 288px; overflow: hidden; padding: 14px 24px; transform: translateY(100%); } /*# sourceMappingURL=snack-bar-container.css.map */ \"],\n\t            host: {\n\t                'role': 'alert',\n\t                '[@state]': 'animationState',\n\t                '(@state.done)': 'markAsExited($event)'\n\t            },\n\t            animations: [\n\t                _angular_core.trigger('state', [\n\t                    _angular_core.state('initial', _angular_core.style({ transform: 'translateY(100%)' })),\n\t                    _angular_core.state('visible', _angular_core.style({ transform: 'translateY(0%)' })),\n\t                    _angular_core.state('complete', _angular_core.style({ transform: 'translateY(100%)' })),\n\t                    _angular_core.transition('visible => complete', _angular_core.animate(HIDE_ANIMATION)),\n\t                    _angular_core.transition('initial => visible, void => visible', _angular_core.animate(SHOW_ANIMATION)),\n\t                ])\n\t            ],\n\t        }), \n\t        __metadata$34('design:paramtypes', [_angular_core.NgZone])\n\t    ], MdSnackBarContainer);\n\t    return MdSnackBarContainer;\n\t}(BasePortalHost));\n\t\n\tvar __decorate$35 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$35 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/**\n\t * A component used to open as the default snack bar, matching material spec.\n\t * This should only be used internally by the snack bar service.\n\t */\n\tvar SimpleSnackBar = (function () {\n\t    function SimpleSnackBar() {\n\t    }\n\t    /** Dismisses the snack bar. */\n\t    SimpleSnackBar.prototype.dismiss = function () {\n\t        this.snackBarRef.dismiss();\n\t    };\n\t    Object.defineProperty(SimpleSnackBar.prototype, \"hasAction\", {\n\t        /** If the action button should be shown. */\n\t        get: function () { return !!this.action; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    SimpleSnackBar = __decorate$35([\n\t        _angular_core.Component({selector: 'simple-snack-bar',\n\t            template: \"<span class=\\\"md-simple-snackbar-message\\\">{{message}}</span> <button md-button class=\\\"md-simple-snackbar-action\\\" *ngIf=\\\"hasAction\\\" (click)=\\\"dismiss()\\\">{{action}}</button>\",\n\t            styles: [\"md-simple-snackbar { display: flex; justify-content: space-between; } .md-simple-snackbar-message { box-sizing: border-box; border: none; color: white; font-family: Roboto, 'Helvetica Neue', sans-serif; font-size: 14px; line-height: 20px; outline: none; text-decoration: none; word-break: break-all; } .md-simple-snackbar-action { box-sizing: border-box; color: white; float: right; font-weight: 600; line-height: 20px; margin: -5px 0 0 48px; min-width: initial; padding: 5px; text-transform: uppercase; } /*# sourceMappingURL=simple-snack-bar.css.map */ \"],\n\t        }), \n\t        __metadata$35('design:paramtypes', [])\n\t    ], SimpleSnackBar);\n\t    return SimpleSnackBar;\n\t}());\n\t\n\t/**\n\t * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n\t * similar to Object.assign.\n\t *\n\t * @param dest The object which will have properties copied to it.\n\t * @param sources The source objects from which properties will be copied.\n\t */\n\tfunction extendObject(dest) {\n\t    var sources = [];\n\t    for (var _i = 1; _i < arguments.length; _i++) {\n\t        sources[_i - 1] = arguments[_i];\n\t    }\n\t    if (dest == null) {\n\t        throw TypeError('Cannot convert undefined or null to object');\n\t    }\n\t    for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {\n\t        var source = sources_1[_a];\n\t        if (source != null) {\n\t            for (var key in source) {\n\t                if (source.hasOwnProperty(key)) {\n\t                    dest[key] = source[key];\n\t                }\n\t            }\n\t        }\n\t    }\n\t    return dest;\n\t}\n\t\n\tvar __decorate$33 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$33 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t// TODO(josephperrott): Automate dismiss after timeout.\n\t/**\n\t * Service to dispatch Material Design snack bar messages.\n\t */\n\tvar MdSnackBar = (function () {\n\t    function MdSnackBar(_overlay, _live) {\n\t        this._overlay = _overlay;\n\t        this._live = _live;\n\t    }\n\t    /**\n\t     * Creates and dispatches a snack bar with a custom component for the content, removing any\n\t     * currently opened snack bars.\n\t     */\n\t    MdSnackBar.prototype.openFromComponent = function (component, config) {\n\t        var _this = this;\n\t        config = _applyConfigDefaults(config);\n\t        var overlayRef = this._createOverlay();\n\t        var snackBarContainer = this._attachSnackBarContainer(overlayRef, config);\n\t        var snackBarRef = this._attachSnackbarContent(component, snackBarContainer, overlayRef);\n\t        // When the snackbar is dismissed, clear the reference to it.\n\t        snackBarRef.afterDismissed().subscribe(function () {\n\t            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n\t            if (_this._snackBarRef == snackBarRef) {\n\t                _this._snackBarRef = null;\n\t            }\n\t        });\n\t        // If a snack bar is already in view, dismiss it and enter the new snack bar after exit\n\t        // animation is complete.\n\t        if (this._snackBarRef) {\n\t            this._snackBarRef.afterDismissed().subscribe(function () {\n\t                snackBarRef.containerInstance.enter();\n\t            });\n\t            this._snackBarRef.dismiss();\n\t        }\n\t        else {\n\t            snackBarRef.containerInstance.enter();\n\t        }\n\t        this._live.announce(config.announcementMessage, config.politeness);\n\t        this._snackBarRef = snackBarRef;\n\t        return this._snackBarRef;\n\t    };\n\t    /**\n\t     * Opens a snackbar with a message and an optional action.\n\t     * @param message The message to show in the snackbar.\n\t     * @param action The label for the snackbar action.\n\t     * @param config Additional configuration options for the snackbar.\n\t     * @returns {MdSnackBarRef<SimpleSnackBar>}\n\t     */\n\t    MdSnackBar.prototype.open = function (message, action, config) {\n\t        if (action === void 0) { action = ''; }\n\t        if (config === void 0) { config = {}; }\n\t        config.announcementMessage = message;\n\t        var simpleSnackBarRef = this.openFromComponent(SimpleSnackBar, config);\n\t        simpleSnackBarRef.instance.snackBarRef = simpleSnackBarRef;\n\t        simpleSnackBarRef.instance.message = message;\n\t        simpleSnackBarRef.instance.action = action;\n\t        return simpleSnackBarRef;\n\t    };\n\t    /**\n\t     * Attaches the snack bar container component to the overlay.\n\t     */\n\t    MdSnackBar.prototype._attachSnackBarContainer = function (overlayRef, config) {\n\t        var containerPortal = new ComponentPortal(MdSnackBarContainer, config.viewContainerRef);\n\t        var containerRef = overlayRef.attach(containerPortal);\n\t        containerRef.instance.snackBarConfig = config;\n\t        return containerRef.instance;\n\t    };\n\t    /**\n\t     * Places a new component as the content of the snack bar container.\n\t     */\n\t    MdSnackBar.prototype._attachSnackbarContent = function (component, container, overlayRef) {\n\t        var portal = new ComponentPortal(component);\n\t        var contentRef = container.attachComponentPortal(portal);\n\t        return new MdSnackBarRef(contentRef.instance, container, overlayRef);\n\t    };\n\t    /**\n\t     * Creates a new overlay and places it in the correct location.\n\t     */\n\t    MdSnackBar.prototype._createOverlay = function () {\n\t        var state = new OverlayState();\n\t        state.positionStrategy = this._overlay.position().global()\n\t            .fixed()\n\t            .centerHorizontally()\n\t            .bottom('0');\n\t        return this._overlay.create(state);\n\t    };\n\t    MdSnackBar = __decorate$33([\n\t        _angular_core.Injectable(), \n\t        __metadata$33('design:paramtypes', [Overlay, MdLiveAnnouncer])\n\t    ], MdSnackBar);\n\t    return MdSnackBar;\n\t}());\n\t/**\n\t * Applies default options to the snackbar config.\n\t * @param config The configuration to which the defaults will be applied.\n\t * @returns The new configuration object with defaults applied.\n\t */\n\tfunction _applyConfigDefaults(config) {\n\t    return extendObject(new MdSnackBarConfig(), config);\n\t}\n\tvar MdSnackBarModule = (function () {\n\t    function MdSnackBarModule() {\n\t    }\n\t    MdSnackBarModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdSnackBarModule,\n\t            providers: [MdSnackBar, OVERLAY_PROVIDERS, MdLiveAnnouncer]\n\t        };\n\t    };\n\t    MdSnackBarModule = __decorate$33([\n\t        _angular_core.NgModule({\n\t            imports: [OverlayModule, PortalModule, _angular_common.CommonModule],\n\t            exports: [MdSnackBarContainer],\n\t            declarations: [MdSnackBarContainer, SimpleSnackBar],\n\t            entryComponents: [MdSnackBarContainer, SimpleSnackBar],\n\t        }), \n\t        __metadata$33('design:paramtypes', [])\n\t    ], MdSnackBarModule);\n\t    return MdSnackBarModule;\n\t}());\n\t\n\tvar __extends$16 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate$37 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$37 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/** Used to flag tab labels for use with the portal directive */\n\tvar MdTabLabel = (function (_super) {\n\t    __extends$16(MdTabLabel, _super);\n\t    function MdTabLabel(templateRef, viewContainerRef) {\n\t        _super.call(this, templateRef, viewContainerRef);\n\t    }\n\t    MdTabLabel = __decorate$37([\n\t        _angular_core.Directive({\n\t            selector: '[md-tab-label]',\n\t        }), \n\t        __metadata$37('design:paramtypes', [_angular_core.TemplateRef, _angular_core.ViewContainerRef])\n\t    ], MdTabLabel);\n\t    return MdTabLabel;\n\t}(TemplatePortalDirective));\n\t\n\tvar __decorate$38 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$38 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/** Used in the `md-tab-group` view to display tab labels */\n\tvar MdTabLabelWrapper = (function () {\n\t    function MdTabLabelWrapper(elementRef) {\n\t        this.elementRef = elementRef;\n\t    }\n\t    /**\n\t     * Sets focus on the wrapper element\n\t     */\n\t    MdTabLabelWrapper.prototype.focus = function () {\n\t        this.elementRef.nativeElement.focus();\n\t    };\n\t    MdTabLabelWrapper = __decorate$38([\n\t        _angular_core.Directive({\n\t            selector: '[md-tab-label-wrapper]'\n\t        }), \n\t        __metadata$38('design:paramtypes', [_angular_core.ElementRef])\n\t    ], MdTabLabelWrapper);\n\t    return MdTabLabelWrapper;\n\t}());\n\t\n\tvar __decorate$40 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$40 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/** The ink-bar is used to display and animate the line underneath the current active tab label. */\n\tvar MdInkBar = (function () {\n\t    function MdInkBar(_renderer, _elementRef) {\n\t        this._renderer = _renderer;\n\t        this._elementRef = _elementRef;\n\t    }\n\t    /**\n\t     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n\t     * @param element\n\t     */\n\t    MdInkBar.prototype.alignToElement = function (element) {\n\t        this._renderer.setElementStyle(this._elementRef.nativeElement, 'left', this._getLeftPosition(element));\n\t        this._renderer.setElementStyle(this._elementRef.nativeElement, 'width', this._getElementWidth(element));\n\t    };\n\t    /**\n\t     * Generates the pixel distance from the left based on the provided element in string format.\n\t     * @param element\n\t     * @returns {string}\n\t     */\n\t    MdInkBar.prototype._getLeftPosition = function (element) {\n\t        return element ? element.offsetLeft + 'px' : '0';\n\t    };\n\t    /**\n\t     * Generates the pixel width from the provided element in string format.\n\t     * @param element\n\t     * @returns {string}\n\t     */\n\t    MdInkBar.prototype._getElementWidth = function (element) {\n\t        return element ? element.offsetWidth + 'px' : '0';\n\t    };\n\t    MdInkBar = __decorate$40([\n\t        _angular_core.Directive({\n\t            selector: 'md-ink-bar',\n\t        }), \n\t        __metadata$40('design:paramtypes', [_angular_core.Renderer, _angular_core.ElementRef])\n\t    ], MdInkBar);\n\t    return MdInkBar;\n\t}());\n\t\n\tvar __decorate$39 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$39 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/**\n\t * Navigation component matching the styles of the tab group header.\n\t * Provides anchored navigation with animated ink bar.\n\t */\n\tvar MdTabNavBar = (function () {\n\t    function MdTabNavBar() {\n\t    }\n\t    /** Animates the ink bar to the position of the active link element. */\n\t    MdTabNavBar.prototype.updateActiveLink = function (element) {\n\t        this._inkBar.alignToElement(element);\n\t    };\n\t    __decorate$39([\n\t        _angular_core.ViewChild(MdInkBar), \n\t        __metadata$39('design:type', MdInkBar)\n\t    ], MdTabNavBar.prototype, \"_inkBar\", void 0);\n\t    MdTabNavBar = __decorate$39([\n\t        _angular_core.Component({selector: '[md-tab-nav-bar]',\n\t            template: \"<ng-content></ng-content> <md-ink-bar></md-ink-bar> \",\n\t            styles: [\"[md-tab-nav-bar] { overflow: hidden; position: relative; display: flex; flex-direction: row; flex-shrink: 0; } [md-tab-link] { line-height: 48px; height: 48px; padding: 0 12px; font-size: 14px; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; font-weight: 500; cursor: pointer; box-sizing: border-box; color: currentColor; opacity: 0.6; min-width: 160px; text-align: center; text-decoration: none; } [md-tab-link]:focus { outline: none; opacity: 1; } @media (max-width: 600px) { [md-tab-link] { min-width: 72px; } } md-ink-bar { position: absolute; bottom: 0; height: 2px; transition: 350ms ease-out; } /*# sourceMappingURL=tab-nav-bar.css.map */ \"],\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t        }), \n\t        __metadata$39('design:paramtypes', [])\n\t    ], MdTabNavBar);\n\t    return MdTabNavBar;\n\t}());\n\tvar MdTabLink = (function () {\n\t    function MdTabLink(_mdTabNavBar, _element) {\n\t        this._mdTabNavBar = _mdTabNavBar;\n\t        this._element = _element;\n\t        this._isActive = false;\n\t    }\n\t    Object.defineProperty(MdTabLink.prototype, \"active\", {\n\t        get: function () {\n\t            return this._isActive;\n\t        },\n\t        set: function (value) {\n\t            this._isActive = value;\n\t            if (value) {\n\t                this._mdTabNavBar.updateActiveLink(this._element.nativeElement);\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    __decorate$39([\n\t        _angular_core.Input(), \n\t        __metadata$39('design:type', Boolean)\n\t    ], MdTabLink.prototype, \"active\", null);\n\t    MdTabLink = __decorate$39([\n\t        _angular_core.Directive({\n\t            selector: '[md-tab-link]',\n\t        }), \n\t        __metadata$39('design:paramtypes', [MdTabNavBar, _angular_core.ElementRef])\n\t    ], MdTabLink);\n\t    return MdTabLink;\n\t}());\n\t\n\tvar __decorate$36 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$36 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/** Used to generate unique ID's for each tab component */\n\tvar nextId$2 = 0;\n\t/** A simple change event emitted on focus or selection changes. */\n\tvar MdTabChangeEvent = (function () {\n\t    function MdTabChangeEvent() {\n\t    }\n\t    return MdTabChangeEvent;\n\t}());\n\tvar MdTab = (function () {\n\t    function MdTab(_viewContainerRef) {\n\t        this._viewContainerRef = _viewContainerRef;\n\t        /** The plain text label for the tab, used when there is no template label. */\n\t        this.textLabel = '';\n\t        this._contentPortal = null;\n\t        this._disabled = false;\n\t    }\n\t    MdTab.prototype.ngOnInit = function () {\n\t        this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n\t    };\n\t    Object.defineProperty(MdTab.prototype, \"disabled\", {\n\t        get: function () { return this._disabled; },\n\t        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdTab.prototype, \"content\", {\n\t        get: function () {\n\t            return this._contentPortal;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    __decorate$36([\n\t        _angular_core.ContentChild(MdTabLabel), \n\t        __metadata$36('design:type', MdTabLabel)\n\t    ], MdTab.prototype, \"templateLabel\", void 0);\n\t    __decorate$36([\n\t        _angular_core.ViewChild(_angular_core.TemplateRef), \n\t        __metadata$36('design:type', _angular_core.TemplateRef)\n\t    ], MdTab.prototype, \"_content\", void 0);\n\t    __decorate$36([\n\t        _angular_core.Input('label'), \n\t        __metadata$36('design:type', String)\n\t    ], MdTab.prototype, \"textLabel\", void 0);\n\t    __decorate$36([\n\t        _angular_core.Input(), \n\t        __metadata$36('design:type', Boolean), \n\t        __metadata$36('design:paramtypes', [Boolean])\n\t    ], MdTab.prototype, \"disabled\", null);\n\t    MdTab = __decorate$36([\n\t        _angular_core.Component({selector: 'md-tab',\n\t            template: \"<!-- Create a template for the content of the <md-tab> so that we can grab a reference to this TemplateRef and use it in a Portal to render the tab content in the appropriate place in the tab-group. --> <template><ng-content></ng-content></template> \",\n\t        }), \n\t        __metadata$36('design:paramtypes', [_angular_core.ViewContainerRef])\n\t    ], MdTab);\n\t    return MdTab;\n\t}());\n\t/**\n\t * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n\t * animated ink-bar, keyboard navigation, and screen reader.\n\t * See: https://www.google.com/design/spec/components/tabs.html\n\t */\n\tvar MdTabGroup = (function () {\n\t    function MdTabGroup(_zone) {\n\t        this._zone = _zone;\n\t        this._isInitialized = false;\n\t        this._selectedIndex = 0;\n\t        this._onFocusChange = new _angular_core.EventEmitter();\n\t        this._onSelectChange = new _angular_core.EventEmitter();\n\t        this._focusIndex = 0;\n\t        this._groupId = nextId$2++;\n\t    }\n\t    Object.defineProperty(MdTabGroup.prototype, \"selectedIndex\", {\n\t        get: function () {\n\t            return this._selectedIndex;\n\t        },\n\t        set: function (value) {\n\t            if (value != this._selectedIndex && this.isValidIndex(value)) {\n\t                this._selectedIndex = value;\n\t                if (this._isInitialized) {\n\t                    this._onSelectChange.emit(this._createChangeEvent(value));\n\t                }\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /**\n\t     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n\t     * providing a valid index and return true.\n\t     */\n\t    MdTabGroup.prototype.isValidIndex = function (index) {\n\t        if (this._tabs) {\n\t            var tab = this._tabs.toArray()[index];\n\t            return tab && !tab.disabled;\n\t        }\n\t        else {\n\t            return true;\n\t        }\n\t    };\n\t    Object.defineProperty(MdTabGroup.prototype, \"selectedIndexChange\", {\n\t        /** Output to enable support for two-way binding on `selectedIndex`. */\n\t        get: function () {\n\t            return this.selectChange.map(function (event) { return event.index; });\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdTabGroup.prototype, \"focusChange\", {\n\t        get: function () {\n\t            return this._onFocusChange.asObservable();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdTabGroup.prototype, \"selectChange\", {\n\t        get: function () {\n\t            return this._onSelectChange.asObservable();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /**\n\t     * Waits one frame for the view to update, then updates the ink bar\n\t     * Note: This must be run outside of the zone or it will create an infinite change detection loop\n\t     * TODO: internal\n\t     */\n\t    MdTabGroup.prototype.ngAfterViewChecked = function () {\n\t        var _this = this;\n\t        this._zone.runOutsideAngular(function () {\n\t            window.requestAnimationFrame(function () {\n\t                _this._updateInkBar();\n\t            });\n\t        });\n\t        this._isInitialized = true;\n\t    };\n\t    /** Tells the ink-bar to align itself to the current label wrapper */\n\t    MdTabGroup.prototype._updateInkBar = function () {\n\t        this._inkBar.toArray()[0].alignToElement(this._currentLabelWrapper);\n\t    };\n\t    Object.defineProperty(MdTabGroup.prototype, \"_currentLabelWrapper\", {\n\t        /**\n\t         * Reference to the current label wrapper; defaults to null for initial render before the\n\t         * ViewChildren references are ready.\n\t         */\n\t        get: function () {\n\t            return this._labelWrappers && this._labelWrappers.length\n\t                ? this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement\n\t                : null;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdTabGroup.prototype, \"focusIndex\", {\n\t        /** Tracks which element has focus; used for keyboard navigation */\n\t        get: function () {\n\t            return this._focusIndex;\n\t        },\n\t        /** When the focus index is set, we must manually send focus to the correct label */\n\t        set: function (value) {\n\t            if (this.isValidIndex(value)) {\n\t                this._focusIndex = value;\n\t                if (this._isInitialized) {\n\t                    this._onFocusChange.emit(this._createChangeEvent(value));\n\t                }\n\t                if (this._labelWrappers && this._labelWrappers.length) {\n\t                    this._labelWrappers.toArray()[value].focus();\n\t                }\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    MdTabGroup.prototype._createChangeEvent = function (index) {\n\t        var event = new MdTabChangeEvent;\n\t        event.index = index;\n\t        if (this._tabs && this._tabs.length) {\n\t            event.tab = this._tabs.toArray()[index];\n\t        }\n\t        return event;\n\t    };\n\t    /** Returns a unique id for each tab label element */\n\t    MdTabGroup.prototype._getTabLabelId = function (i) {\n\t        return \"md-tab-label-\" + this._groupId + \"-\" + i;\n\t    };\n\t    /** Returns a unique id for each tab content element */\n\t    MdTabGroup.prototype._getTabContentId = function (i) {\n\t        return \"md-tab-content-\" + this._groupId + \"-\" + i;\n\t    };\n\t    MdTabGroup.prototype.handleKeydown = function (event) {\n\t        switch (event.keyCode) {\n\t            case RIGHT_ARROW:\n\t                this.focusNextTab();\n\t                break;\n\t            case LEFT_ARROW:\n\t                this.focusPreviousTab();\n\t                break;\n\t            case ENTER:\n\t                this.selectedIndex = this.focusIndex;\n\t                break;\n\t        }\n\t    };\n\t    /**\n\t     * Moves the focus left or right depending on the offset provided.  Valid offsets are 1 and -1.\n\t     */\n\t    MdTabGroup.prototype.moveFocus = function (offset) {\n\t        if (this._labelWrappers) {\n\t            var tabs = this._tabs.toArray();\n\t            for (var i = this.focusIndex + offset; i < tabs.length && i >= 0; i += offset) {\n\t                if (this.isValidIndex(i)) {\n\t                    this.focusIndex = i;\n\t                    return;\n\t                }\n\t            }\n\t        }\n\t    };\n\t    /** Increment the focus index by 1 until a valid tab is found. */\n\t    MdTabGroup.prototype.focusNextTab = function () {\n\t        this.moveFocus(1);\n\t    };\n\t    /** Decrement the focus index by 1 until a valid tab is found. */\n\t    MdTabGroup.prototype.focusPreviousTab = function () {\n\t        this.moveFocus(-1);\n\t    };\n\t    __decorate$36([\n\t        _angular_core.ContentChildren(MdTab), \n\t        __metadata$36('design:type', _angular_core.QueryList)\n\t    ], MdTabGroup.prototype, \"_tabs\", void 0);\n\t    __decorate$36([\n\t        _angular_core.ViewChildren(MdTabLabelWrapper), \n\t        __metadata$36('design:type', _angular_core.QueryList)\n\t    ], MdTabGroup.prototype, \"_labelWrappers\", void 0);\n\t    __decorate$36([\n\t        _angular_core.ViewChildren(MdInkBar), \n\t        __metadata$36('design:type', _angular_core.QueryList)\n\t    ], MdTabGroup.prototype, \"_inkBar\", void 0);\n\t    __decorate$36([\n\t        _angular_core.Input(), \n\t        __metadata$36('design:type', Number), \n\t        __metadata$36('design:paramtypes', [Number])\n\t    ], MdTabGroup.prototype, \"selectedIndex\", null);\n\t    __decorate$36([\n\t        _angular_core.Output(), \n\t        __metadata$36('design:type', rxjs_Observable.Observable)\n\t    ], MdTabGroup.prototype, \"selectedIndexChange\", null);\n\t    __decorate$36([\n\t        _angular_core.Output(), \n\t        __metadata$36('design:type', rxjs_Observable.Observable)\n\t    ], MdTabGroup.prototype, \"focusChange\", null);\n\t    __decorate$36([\n\t        _angular_core.Output(), \n\t        __metadata$36('design:type', rxjs_Observable.Observable)\n\t    ], MdTabGroup.prototype, \"selectChange\", null);\n\t    MdTabGroup = __decorate$36([\n\t        _angular_core.Component({selector: 'md-tab-group',\n\t            template: \"<div class=\\\"md-tab-header\\\" role=\\\"tablist\\\" (keydown)=\\\"handleKeydown($event)\\\"> <div class=\\\"md-tab-label\\\" role=\\\"tab\\\" md-tab-label-wrapper *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [tabIndex]=\\\"selectedIndex == i ? 0 : -1\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [class.md-tab-active]=\\\"selectedIndex == i\\\" [class.md-tab-disabled]=\\\"tab.disabled\\\" (click)=\\\"focusIndex = selectedIndex = i\\\"> <!-- If there is a label template, use it. --> <template [ngIf]=\\\"tab.templateLabel\\\"> <template [portalHost]=\\\"tab.templateLabel\\\"></template> </template> <!-- If there is not a label template, fall back to the text label. --> <template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</template> </div> <md-ink-bar></md-ink-bar> </div> <div class=\\\"md-tab-body-wrapper\\\"> <div class=\\\"md-tab-body\\\" role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [class.md-tab-active]=\\\"selectedIndex == i\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"> <template [ngIf]=\\\"selectedIndex == i\\\"> <template [portalHost]=\\\"tab.content\\\"></template> </template> </div> </div> \",\n\t            styles: [\":host { display: flex; flex-direction: column; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; } .md-tab-header { overflow: hidden; position: relative; display: flex; flex-direction: row; flex-shrink: 0; } .md-tab-label { line-height: 48px; height: 48px; padding: 0 12px; font-size: 14px; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; font-weight: 500; cursor: pointer; box-sizing: border-box; color: currentColor; opacity: 0.6; min-width: 160px; text-align: center; } .md-tab-label:focus { outline: none; opacity: 1; } @media (max-width: 600px) { .md-tab-label { min-width: 72px; } } md-ink-bar { position: absolute; bottom: 0; height: 2px; transition: 350ms ease-out; } .md-tab-body-wrapper { position: relative; overflow: hidden; flex-grow: 1; display: flex; } .md-tab-body { display: none; overflow: auto; box-sizing: border-box; flex-grow: 1; flex-shrink: 1; } .md-tab-body.md-tab-active { display: block; } .md-tab-disabled { cursor: default; pointer-events: none; } /*# sourceMappingURL=tab-group.css.map */ \"],\n\t        }), \n\t        __metadata$36('design:paramtypes', [_angular_core.NgZone])\n\t    ], MdTabGroup);\n\t    return MdTabGroup;\n\t}());\n\tvar MdTabsModule = (function () {\n\t    function MdTabsModule() {\n\t    }\n\t    MdTabsModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdTabsModule,\n\t            providers: []\n\t        };\n\t    };\n\t    MdTabsModule = __decorate$36([\n\t        _angular_core.NgModule({\n\t            imports: [_angular_common.CommonModule, PortalModule],\n\t            // Don't export MdInkBar or MdTabLabelWrapper, as they are internal implementation details.\n\t            exports: [MdTabGroup, MdTabLabel, MdTab, MdTabNavBar, MdTabLink],\n\t            declarations: [MdTabGroup, MdTabLabel, MdTab, MdInkBar, MdTabLabelWrapper,\n\t                MdTabNavBar, MdTabLink],\n\t        }), \n\t        __metadata$36('design:paramtypes', [])\n\t    ], MdTabsModule);\n\t    return MdTabsModule;\n\t}());\n\t\n\tvar __decorate$41 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$41 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar MdToolbarRow = (function () {\n\t    function MdToolbarRow() {\n\t    }\n\t    MdToolbarRow = __decorate$41([\n\t        _angular_core.Directive({\n\t            selector: 'md-toolbar-row'\n\t        }), \n\t        __metadata$41('design:paramtypes', [])\n\t    ], MdToolbarRow);\n\t    return MdToolbarRow;\n\t}());\n\tvar MdToolbar = (function () {\n\t    function MdToolbar(elementRef, renderer) {\n\t        this.elementRef = elementRef;\n\t        this.renderer = renderer;\n\t    }\n\t    Object.defineProperty(MdToolbar.prototype, \"color\", {\n\t        get: function () {\n\t            return this._color;\n\t        },\n\t        set: function (value) {\n\t            this._updateColor(value);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    MdToolbar.prototype._updateColor = function (newColor) {\n\t        this._setElementColor(this._color, false);\n\t        this._setElementColor(newColor, true);\n\t        this._color = newColor;\n\t    };\n\t    MdToolbar.prototype._setElementColor = function (color, isAdd) {\n\t        if (color != null && color != '') {\n\t            this.renderer.setElementClass(this.elementRef.nativeElement, \"md-\" + color, isAdd);\n\t        }\n\t    };\n\t    __decorate$41([\n\t        _angular_core.Input(), \n\t        __metadata$41('design:type', String)\n\t    ], MdToolbar.prototype, \"color\", null);\n\t    MdToolbar = __decorate$41([\n\t        _angular_core.Component({selector: 'md-toolbar',\n\t            template: \"<div class=\\\"md-toolbar-layout\\\"> <md-toolbar-row> <ng-content></ng-content> </md-toolbar-row> <ng-content select=\\\"md-toolbar-row\\\"></ng-content> </div>\",\n\t            styles: [\"md-toolbar { display: flex; box-sizing: border-box; width: 100%; min-height: 64px; font-size: 20px; font-weight: 400; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; padding: 0 16px; flex-direction: column; } md-toolbar md-toolbar-row { display: flex; box-sizing: border-box; width: 100%; height: 64px; flex-direction: row; align-items: center; } /*# sourceMappingURL=toolbar.css.map */ \"],\n\t            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n\t            encapsulation: _angular_core.ViewEncapsulation.None\n\t        }), \n\t        __metadata$41('design:paramtypes', [_angular_core.ElementRef, _angular_core.Renderer])\n\t    ], MdToolbar);\n\t    return MdToolbar;\n\t}());\n\tvar MdToolbarModule = (function () {\n\t    function MdToolbarModule() {\n\t    }\n\t    MdToolbarModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdToolbarModule,\n\t            providers: []\n\t        };\n\t    };\n\t    MdToolbarModule = __decorate$41([\n\t        _angular_core.NgModule({\n\t            exports: [MdToolbar, MdToolbarRow],\n\t            declarations: [MdToolbar, MdToolbarRow],\n\t        }), \n\t        __metadata$41('design:paramtypes', [])\n\t    ], MdToolbarModule);\n\t    return MdToolbarModule;\n\t}());\n\t\n\tvar __decorate$42 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$42 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/** Time in ms to delay before changing the tooltip visibility to hidden */\n\tvar TOOLTIP_HIDE_DELAY = 1500;\n\t/**\n\t * Directive that attaches a material design tooltip to the host element. Animates the showing and\n\t * hiding of a tooltip provided position (defaults to below the element).\n\t *\n\t * https://material.google.com/components/tooltips.html\n\t */\n\tvar MdTooltip = (function () {\n\t    function MdTooltip(_overlay, _elementRef, _viewContainerRef, _ngZone) {\n\t        this._overlay = _overlay;\n\t        this._elementRef = _elementRef;\n\t        this._viewContainerRef = _viewContainerRef;\n\t        this._ngZone = _ngZone;\n\t        /** Allows the user to define the position of the tooltip relative to the parent element */\n\t        this._position = 'below';\n\t    }\n\t    Object.defineProperty(MdTooltip.prototype, \"position\", {\n\t        get: function () {\n\t            return this._position;\n\t        },\n\t        set: function (value) {\n\t            if (value !== this._position) {\n\t                this._position = value;\n\t                // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\n\t                // the tooltip.\n\t                if (this._tooltipInstance) {\n\t                    this._disposeTooltip();\n\t                }\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdTooltip.prototype, \"message\", {\n\t        get: function () {\n\t            return this._message;\n\t        },\n\t        set: function (value) {\n\t            this._message = value;\n\t            if (this._tooltipInstance) {\n\t                this._setTooltipMessage(this._message);\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /** Dispose the tooltip when destroyed */\n\t    MdTooltip.prototype.ngOnDestroy = function () {\n\t        if (this._tooltipInstance) {\n\t            this._disposeTooltip();\n\t        }\n\t    };\n\t    /** Shows the tooltip */\n\t    MdTooltip.prototype.show = function () {\n\t        if (!this._tooltipInstance) {\n\t            this._createTooltip();\n\t        }\n\t        this._setTooltipMessage(this._message);\n\t        this._tooltipInstance.show(this._position);\n\t    };\n\t    /**\n\t     * Create the overlay config and position strategy\n\t     * Hides the tooltip after the provided delay in ms. Defaults the delay to the material design\n\t     * prescribed delay time\n\t     */\n\t    MdTooltip.prototype.hide = function (delay) {\n\t        if (delay === void 0) { delay = TOOLTIP_HIDE_DELAY; }\n\t        if (this._tooltipInstance) {\n\t            this._tooltipInstance.hide(delay);\n\t        }\n\t    };\n\t    /** Shows/hides the tooltip */\n\t    MdTooltip.prototype.toggle = function () {\n\t        this._isTooltipVisible() ? this.hide() : this.show();\n\t    };\n\t    /** Returns true if the tooltip is currently visible to the user */\n\t    MdTooltip.prototype._isTooltipVisible = function () {\n\t        return this._tooltipInstance && this._tooltipInstance.isVisible();\n\t    };\n\t    /** Create the tooltip to display */\n\t    MdTooltip.prototype._createTooltip = function () {\n\t        var _this = this;\n\t        this._createOverlay();\n\t        var portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);\n\t        this._tooltipInstance = this._overlayRef.attach(portal).instance;\n\t        // Dispose the overlay when finished the shown tooltip.\n\t        this._tooltipInstance.afterHidden().subscribe(function () {\n\t            _this._disposeTooltip();\n\t        });\n\t    };\n\t    /** Create the overlay config and position strategy */\n\t    MdTooltip.prototype._createOverlay = function () {\n\t        var origin = this._getOrigin();\n\t        var position = this._getOverlayPosition();\n\t        var strategy = this._overlay.position().connectedTo(this._elementRef, origin, position);\n\t        var config = new OverlayState();\n\t        config.positionStrategy = strategy;\n\t        this._overlayRef = this._overlay.create(config);\n\t    };\n\t    /** Disposes the current tooltip and the overlay it is attached to */\n\t    MdTooltip.prototype._disposeTooltip = function () {\n\t        this._overlayRef.dispose();\n\t        this._overlayRef = null;\n\t        this._tooltipInstance = null;\n\t    };\n\t    /** Returns the origin position based on the user's position preference */\n\t    MdTooltip.prototype._getOrigin = function () {\n\t        switch (this.position) {\n\t            case 'before': return { originX: 'start', originY: 'center' };\n\t            case 'after': return { originX: 'end', originY: 'center' };\n\t            case 'above': return { originX: 'center', originY: 'top' };\n\t            case 'below': return { originX: 'center', originY: 'bottom' };\n\t        }\n\t    };\n\t    /** Returns the overlay position based on the user's preference */\n\t    MdTooltip.prototype._getOverlayPosition = function () {\n\t        switch (this.position) {\n\t            case 'before': return { overlayX: 'end', overlayY: 'center' };\n\t            case 'after': return { overlayX: 'start', overlayY: 'center' };\n\t            case 'above': return { overlayX: 'center', overlayY: 'bottom' };\n\t            case 'below': return { overlayX: 'center', overlayY: 'top' };\n\t        }\n\t    };\n\t    /** Updates the tooltip message and repositions the overlay according to the new message length */\n\t    MdTooltip.prototype._setTooltipMessage = function (message) {\n\t        var _this = this;\n\t        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n\t        // calculate the correct positioning based on the size of the text.\n\t        this._tooltipInstance.message = message;\n\t        this._ngZone.onMicrotaskEmpty.first().subscribe(function () {\n\t            if (_this._tooltipInstance) {\n\t                _this._overlayRef.updatePosition();\n\t            }\n\t        });\n\t    };\n\t    __decorate$42([\n\t        _angular_core.Input('tooltip-position'), \n\t        __metadata$42('design:type', String)\n\t    ], MdTooltip.prototype, \"position\", null);\n\t    __decorate$42([\n\t        _angular_core.Input('md-tooltip'), \n\t        __metadata$42('design:type', Object)\n\t    ], MdTooltip.prototype, \"message\", null);\n\t    MdTooltip = __decorate$42([\n\t        _angular_core.Directive({\n\t            selector: '[md-tooltip]',\n\t            host: {\n\t                '(mouseenter)': 'show()',\n\t                '(mouseleave)': 'hide()',\n\t            },\n\t            exportAs: 'mdTooltip',\n\t        }), \n\t        __metadata$42('design:paramtypes', [Overlay, _angular_core.ElementRef, _angular_core.ViewContainerRef, _angular_core.NgZone])\n\t    ], MdTooltip);\n\t    return MdTooltip;\n\t}());\n\tvar TooltipComponent = (function () {\n\t    function TooltipComponent() {\n\t        /** Whether interactions on the page should close the tooltip */\n\t        this._closeOnInteraction = false;\n\t        /** The transform origin used in the animation for showing and hiding the tooltip */\n\t        this._transformOrigin = 'bottom';\n\t        /** Subject for notifying that the tooltip has been hidden from the view */\n\t        this._onHide = new rxjs_Subject.Subject();\n\t    }\n\t    /** Shows the tooltip with an animation originating from the provided origin */\n\t    TooltipComponent.prototype.show = function (position) {\n\t        var _this = this;\n\t        this._closeOnInteraction = false;\n\t        this._visibility = 'visible';\n\t        this._setTransformOrigin(position);\n\t        // Cancel the delayed hide if it is scheduled\n\t        if (this._hideTimeoutId) {\n\t            clearTimeout(this._hideTimeoutId);\n\t        }\n\t        // If this was set to true immediately, then the body click would trigger interaction and\n\t        // close the tooltip right after it was displayed.\n\t        setTimeout(function () { _this._closeOnInteraction = true; }, 0);\n\t    };\n\t    /** Begins the animation to hide the tooltip after the provided delay in ms */\n\t    TooltipComponent.prototype.hide = function (delay) {\n\t        var _this = this;\n\t        this._hideTimeoutId = setTimeout(function () {\n\t            _this._visibility = 'hidden';\n\t            _this._closeOnInteraction = false;\n\t        }, delay);\n\t    };\n\t    /** Returns an observable that notifies when the tooltip has been hidden from view */\n\t    TooltipComponent.prototype.afterHidden = function () {\n\t        return this._onHide.asObservable();\n\t    };\n\t    /** Whether the tooltip is being displayed */\n\t    TooltipComponent.prototype.isVisible = function () {\n\t        return this._visibility === 'visible';\n\t    };\n\t    /** Sets the tooltip transform origin according to the tooltip position */\n\t    TooltipComponent.prototype._setTransformOrigin = function (value) {\n\t        switch (value) {\n\t            case 'before':\n\t                this._transformOrigin = 'right';\n\t                break;\n\t            case 'after':\n\t                this._transformOrigin = 'left';\n\t                break;\n\t            case 'above':\n\t                this._transformOrigin = 'bottom';\n\t                break;\n\t            case 'below':\n\t                this._transformOrigin = 'top';\n\t                break;\n\t        }\n\t    };\n\t    TooltipComponent.prototype._afterVisibilityAnimation = function (e) {\n\t        if (e.toState === 'hidden' && !this.isVisible()) {\n\t            this._onHide.next();\n\t        }\n\t    };\n\t    /**\n\t     * Interactions on the HTML body should close the tooltip immediately as defined in the\n\t     * material design spec.\n\t     * https://material.google.com/components/tooltips.html#tooltips-interaction\n\t     */\n\t    TooltipComponent.prototype._handleBodyInteraction = function () {\n\t        if (this._closeOnInteraction) {\n\t            this.hide(0);\n\t        }\n\t    };\n\t    TooltipComponent = __decorate$42([\n\t        _angular_core.Component({selector: 'md-tooltip-component',\n\t            template: \"<div class=\\\"md-tooltip\\\" [style.transform-origin]=\\\"_transformOrigin\\\" [@state]=\\\"_visibility\\\" (@state.done)=\\\"this._afterVisibilityAnimation($event)\\\"> {{message}} </div>\",\n\t            styles: [\":host { pointer-events: none; } .md-tooltip { color: white; padding: 0 8px; border-radius: 2px; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; font-size: 10px; margin: 14px; height: 22px; line-height: 22px; } /*# sourceMappingURL=tooltip.css.map */ \"],\n\t            animations: [\n\t                _angular_core.trigger('state', [\n\t                    _angular_core.state('void', _angular_core.style({ transform: 'scale(0)' })),\n\t                    _angular_core.state('visible', _angular_core.style({ transform: 'scale(1)' })),\n\t                    _angular_core.state('hidden', _angular_core.style({ transform: 'scale(0)' })),\n\t                    _angular_core.transition('* => visible', _angular_core.animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n\t                    _angular_core.transition('* => hidden', _angular_core.animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n\t                ])\n\t            ],\n\t            host: {\n\t                '(body:click)': 'this._handleBodyInteraction()'\n\t            }\n\t        }), \n\t        __metadata$42('design:paramtypes', [])\n\t    ], TooltipComponent);\n\t    return TooltipComponent;\n\t}());\n\tvar MdTooltipModule = (function () {\n\t    function MdTooltipModule() {\n\t    }\n\t    MdTooltipModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdTooltipModule,\n\t            providers: OVERLAY_PROVIDERS,\n\t        };\n\t    };\n\t    MdTooltipModule = __decorate$42([\n\t        _angular_core.NgModule({\n\t            imports: [OverlayModule],\n\t            exports: [MdTooltip, TooltipComponent],\n\t            declarations: [MdTooltip, TooltipComponent],\n\t            entryComponents: [TooltipComponent],\n\t        }), \n\t        __metadata$42('design:paramtypes', [])\n\t    ], MdTooltipModule);\n\t    return MdTooltipModule;\n\t}());\n\t\n\tvar __extends$17 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * Exception thrown when menu trigger doesn't have a valid md-menu instance\n\t */\n\tvar MdMenuMissingError = (function (_super) {\n\t    __extends$17(MdMenuMissingError, _super);\n\t    function MdMenuMissingError() {\n\t        _super.call(this, \"md-menu-trigger: must pass in an md-menu instance.\\n\\n    Example:\\n      <md-menu #menu=\\\"mdMenu\\\"></md-menu>\\n      <button [md-menu-trigger-for]=\\\"menu\\\"></button>\\n    \");\n\t    }\n\t    return MdMenuMissingError;\n\t}(MdError));\n\t/**\n\t * Exception thrown when menu's x-position value isn't valid.\n\t * In other words, it doesn't match 'before' or 'after'.\n\t */\n\tvar MdMenuInvalidPositionX = (function (_super) {\n\t    __extends$17(MdMenuInvalidPositionX, _super);\n\t    function MdMenuInvalidPositionX() {\n\t        _super.call(this, \"x-position value must be either 'before' or after'.\\n      Example: <md-menu x-position=\\\"before\\\" #menu=\\\"mdMenu\\\"></md-menu>\\n    \");\n\t    }\n\t    return MdMenuInvalidPositionX;\n\t}(MdError));\n\t/**\n\t * Exception thrown when menu's y-position value isn't valid.\n\t * In other words, it doesn't match 'above' or 'below'.\n\t */\n\tvar MdMenuInvalidPositionY = (function (_super) {\n\t    __extends$17(MdMenuInvalidPositionY, _super);\n\t    function MdMenuInvalidPositionY() {\n\t        _super.call(this, \"y-position value must be either 'above' or below'.\\n      Example: <md-menu y-position=\\\"above\\\" #menu=\\\"mdMenu\\\"></md-menu>\\n    \");\n\t    }\n\t    return MdMenuInvalidPositionY;\n\t}(MdError));\n\t\n\tvar __decorate$45 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$45 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/**\n\t * This directive is intended to be used inside an md-menu tag.\n\t * It exists mostly to set the role attribute.\n\t */\n\tvar MdMenuItem = (function () {\n\t    function MdMenuItem(_renderer, _elementRef) {\n\t        this._renderer = _renderer;\n\t        this._elementRef = _elementRef;\n\t    }\n\t    MdMenuItem.prototype.focus = function () {\n\t        this._renderer.invokeElementMethod(this._elementRef.nativeElement, 'focus');\n\t    };\n\t    Object.defineProperty(MdMenuItem.prototype, \"disabled\", {\n\t        // this is necessary to support anchors\n\t        get: function () {\n\t            return this._disabled;\n\t        },\n\t        set: function (value) {\n\t            this._disabled = (value === false || value === undefined) ? null : true;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdMenuItem.prototype, \"isAriaDisabled\", {\n\t        get: function () {\n\t            return String(!!this.disabled);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(MdMenuItem.prototype, \"_tabindex\", {\n\t        get: function () {\n\t            return this.disabled ? '-1' : '0';\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    MdMenuItem.prototype._getHostElement = function () {\n\t        return this._elementRef.nativeElement;\n\t    };\n\t    MdMenuItem.prototype._checkDisabled = function (event) {\n\t        if (this.disabled) {\n\t            event.preventDefault();\n\t            event.stopPropagation();\n\t        }\n\t    };\n\t    __decorate$45([\n\t        _angular_core.HostBinding('attr.disabled'),\n\t        _angular_core.Input(), \n\t        __metadata$45('design:type', Boolean)\n\t    ], MdMenuItem.prototype, \"disabled\", null);\n\t    __decorate$45([\n\t        _angular_core.HostBinding('attr.aria-disabled'), \n\t        __metadata$45('design:type', String)\n\t    ], MdMenuItem.prototype, \"isAriaDisabled\", null);\n\t    MdMenuItem = __decorate$45([\n\t        _angular_core.Component({selector: '[md-menu-item]',\n\t            host: {\n\t                'role': 'menuitem',\n\t                '(click)': '_checkDisabled($event)',\n\t                '[attr.tabindex]': '_tabindex'\n\t            },\n\t            template: \"<ng-content></ng-content> <div class=\\\"md-menu-ripple\\\" *ngIf=\\\"!disabled\\\" md-ripple md-ripple-background-color=\\\"rgba(0,0,0,0)\\\" [md-ripple-trigger]=\\\"_getHostElement()\\\"> </div> \",\n\t            exportAs: 'mdMenuItem'\n\t        }), \n\t        __metadata$45('design:paramtypes', [_angular_core.Renderer, _angular_core.ElementRef])\n\t    ], MdMenuItem);\n\t    return MdMenuItem;\n\t}());\n\t\n\t/**\n\t * This class manages keyboard events for selectable lists. If you pass it a query list\n\t * of focusable items, it will focus the correct item when arrow events occur.\n\t */\n\tvar ListKeyManager = (function () {\n\t    function ListKeyManager(_items) {\n\t        this._items = _items;\n\t        this._tabOut = new rxjs_Subject.Subject();\n\t    }\n\t    Object.defineProperty(ListKeyManager.prototype, \"tabOut\", {\n\t        /**\n\t         * Observable that emits any time the TAB key is pressed, so components can react\n\t         * when focus is shifted off of the list.\n\t         */\n\t        get: function () {\n\t            return this._tabOut.asObservable();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(ListKeyManager.prototype, \"focusedItemIndex\", {\n\t        get: function () {\n\t            return this._focusedItemIndex;\n\t        },\n\t        set: function (value) {\n\t            this._focusedItemIndex = value;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    ListKeyManager.prototype.onKeydown = function (event) {\n\t        if (event.keyCode === DOWN_ARROW) {\n\t            this._focusNextItem();\n\t        }\n\t        else if (event.keyCode === UP_ARROW) {\n\t            this._focusPreviousItem();\n\t        }\n\t        else if (event.keyCode === TAB) {\n\t            this._tabOut.next(null);\n\t        }\n\t    };\n\t    ListKeyManager.prototype._focusNextItem = function () {\n\t        var items = this._items.toArray();\n\t        this._updateFocusedItemIndex(1, items);\n\t        items[this._focusedItemIndex].focus();\n\t    };\n\t    ListKeyManager.prototype._focusPreviousItem = function () {\n\t        var items = this._items.toArray();\n\t        this._updateFocusedItemIndex(-1, items);\n\t        items[this._focusedItemIndex].focus();\n\t    };\n\t    /**\n\t     * This method sets focus to the correct item, given a list of items and the delta\n\t     * between the currently focused item and the new item to be focused. It will\n\t     * continue to move down the list until it finds an item that is not disabled, and it will wrap\n\t     * if it encounters either end of the list.\n\t     *\n\t     * @param delta the desired change in focus index\n\t     */\n\t    ListKeyManager.prototype._updateFocusedItemIndex = function (delta, items) {\n\t        // when focus would leave menu, wrap to beginning or end\n\t        this._focusedItemIndex =\n\t            (this._focusedItemIndex + delta + items.length) % items.length;\n\t        // skip all disabled menu items recursively until an active one\n\t        // is reached or the menu closes for overreaching bounds\n\t        while (items[this._focusedItemIndex].disabled) {\n\t            this._updateFocusedItemIndex(delta, items);\n\t        }\n\t    };\n\t    return ListKeyManager;\n\t}());\n\t\n\t/**\n\t * Below are all the animations for the md-menu component.\n\t * Animation duration and timing values are based on Material 1.\n\t */\n\t/**\n\t * This animation controls the menu panel's entry and exit from the page.\n\t *\n\t * When the menu panel is added to the DOM, it scales in and fades in its border.\n\t *\n\t * When the menu panel is removed from the DOM, it simply fades out after a brief\n\t * delay to display the ripple.\n\t *\n\t * TODO(kara): switch to :enter and :leave once Mobile Safari is sorted out.\n\t */\n\tvar transformMenu = _angular_core.trigger('transformMenu', [\n\t    _angular_core.state('showing', _angular_core.style({\n\t        opacity: 1,\n\t        transform: \"scale(1)\"\n\t    })),\n\t    _angular_core.transition('void => *', [\n\t        _angular_core.style({\n\t            opacity: 0,\n\t            transform: \"scale(0)\"\n\t        }),\n\t        _angular_core.animate(\"200ms cubic-bezier(0.25, 0.8, 0.25, 1)\")\n\t    ]),\n\t    _angular_core.transition('* => void', [\n\t        _angular_core.animate('50ms 100ms linear', _angular_core.style({ opacity: 0 }))\n\t    ])\n\t]);\n\t/**\n\t * This animation fades in the background color and content of the menu panel\n\t * after its containing element is scaled in.\n\t */\n\tvar fadeInItems = _angular_core.trigger('fadeInItems', [\n\t    _angular_core.state('showing', _angular_core.style({ opacity: 1 })),\n\t    _angular_core.transition('void => *', [\n\t        _angular_core.style({ opacity: 0 }),\n\t        _angular_core.animate(\"200ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)\")\n\t    ])\n\t]);\n\t\n\t// TODO(kara): prevent-close functionality\n\tvar __decorate$44 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$44 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar __param$6 = (this && this.__param) || function (paramIndex, decorator) {\n\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t};\n\tvar MdMenu = (function () {\n\t    function MdMenu(posX, posY) {\n\t        /** Config object to be passed into the menu's ngClass */\n\t        this._classList = {};\n\t        this.positionX = 'after';\n\t        this.positionY = 'below';\n\t        this.close = new _angular_core.EventEmitter();\n\t        if (posX) {\n\t            this._setPositionX(posX);\n\t        }\n\t        if (posY) {\n\t            this._setPositionY(posY);\n\t        }\n\t        this._setPositionClasses();\n\t    }\n\t    // TODO: internal\n\t    MdMenu.prototype.ngAfterContentInit = function () {\n\t        var _this = this;\n\t        this._keyManager = new ListKeyManager(this.items);\n\t        this._tabSubscription = this._keyManager.tabOut.subscribe(function () {\n\t            _this._emitCloseEvent();\n\t        });\n\t    };\n\t    // TODO: internal\n\t    MdMenu.prototype.ngOnDestroy = function () {\n\t        this._tabSubscription.unsubscribe();\n\t    };\n\t    Object.defineProperty(MdMenu.prototype, \"classList\", {\n\t        /**\n\t         * This method takes classes set on the host md-menu element and applies them on the\n\t         * menu template that displays in the overlay container.  Otherwise, it's difficult\n\t         * to style the containing menu from outside the component.\n\t         * @param classes list of class names\n\t         */\n\t        set: function (classes) {\n\t            this._classList = classes.split(' ').reduce(function (obj, className) {\n\t                obj[className] = true;\n\t                return obj;\n\t            }, {});\n\t            this._setPositionClasses();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /**\n\t     * Focus the first item in the menu. This method is used by the menu trigger\n\t     * to focus the first item when the menu is opened by the ENTER key.\n\t     * TODO: internal\n\t     */\n\t    MdMenu.prototype.focusFirstItem = function () {\n\t        // The menu always opens with the first item focused.\n\t        this.items.first.focus();\n\t        this._keyManager.focusedItemIndex = 0;\n\t    };\n\t    /**\n\t     * This emits a close event to which the trigger is subscribed. When emitted, the\n\t     * trigger will close the menu.\n\t     */\n\t    MdMenu.prototype._emitCloseEvent = function () {\n\t        this.close.emit();\n\t    };\n\t    MdMenu.prototype._setPositionX = function (pos) {\n\t        if (pos !== 'before' && pos !== 'after') {\n\t            throw new MdMenuInvalidPositionX();\n\t        }\n\t        this.positionX = pos;\n\t    };\n\t    MdMenu.prototype._setPositionY = function (pos) {\n\t        if (pos !== 'above' && pos !== 'below') {\n\t            throw new MdMenuInvalidPositionY();\n\t        }\n\t        this.positionY = pos;\n\t    };\n\t    /**\n\t     * It's necessary to set position-based classes to ensure the menu panel animation\n\t     * folds out from the correct direction.\n\t     */\n\t    MdMenu.prototype._setPositionClasses = function () {\n\t        this._classList['md-menu-before'] = this.positionX == 'before';\n\t        this._classList['md-menu-after'] = this.positionX == 'after';\n\t        this._classList['md-menu-above'] = this.positionY == 'above';\n\t        this._classList['md-menu-below'] = this.positionY == 'below';\n\t    };\n\t    __decorate$44([\n\t        _angular_core.ViewChild(_angular_core.TemplateRef), \n\t        __metadata$44('design:type', _angular_core.TemplateRef)\n\t    ], MdMenu.prototype, \"templateRef\", void 0);\n\t    __decorate$44([\n\t        _angular_core.ContentChildren(MdMenuItem), \n\t        __metadata$44('design:type', _angular_core.QueryList)\n\t    ], MdMenu.prototype, \"items\", void 0);\n\t    __decorate$44([\n\t        _angular_core.Input('class'), \n\t        __metadata$44('design:type', String), \n\t        __metadata$44('design:paramtypes', [String])\n\t    ], MdMenu.prototype, \"classList\", null);\n\t    __decorate$44([\n\t        _angular_core.Output(), \n\t        __metadata$44('design:type', Object)\n\t    ], MdMenu.prototype, \"close\", void 0);\n\t    MdMenu = __decorate$44([\n\t        _angular_core.Component({selector: 'md-menu',\n\t            host: { 'role': 'menu' },\n\t            template: \"<template> <div class=\\\"md-menu-panel\\\" [ngClass]=\\\"_classList\\\" (keydown)=\\\"_keyManager.onKeydown($event)\\\" (click)=\\\"_emitCloseEvent()\\\" [@transformMenu]=\\\"'showing'\\\"> <div class=\\\"md-menu-content\\\" [@fadeInItems]=\\\"'showing'\\\"> <ng-content></ng-content> </div> </div> </template> \",\n\t            styles: [\"/** The mixins below are shared between md-menu and md-select */ /** * This mixin adds the correct panel transform styles based * on the direction that the menu panel opens. */ .md-menu-panel { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); min-width: 112px; max-width: 280px; overflow: auto; -webkit-overflow-scrolling: touch; max-height: calc(100vh + 48px); } .md-menu-panel.md-menu-after.md-menu-below { transform-origin: left top; } .md-menu-panel.md-menu-after.md-menu-above { transform-origin: left bottom; } .md-menu-panel.md-menu-before.md-menu-below { transform-origin: right top; } .md-menu-panel.md-menu-before.md-menu-above { transform-origin: right bottom; } [dir='rtl'] .md-menu-panel.md-menu-after.md-menu-below { transform-origin: right top; } [dir='rtl'] .md-menu-panel.md-menu-after.md-menu-above { transform-origin: right bottom; } [dir='rtl'] .md-menu-panel.md-menu-before.md-menu-below { transform-origin: left top; } [dir='rtl'] .md-menu-panel.md-menu-before.md-menu-above { transform-origin: left bottom; } .md-menu-content { padding-top: 8px; padding-bottom: 8px; } [md-menu-item] { cursor: pointer; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; outline: none; border: none; white-space: nowrap; overflow-x: hidden; text-overflow: ellipsis; display: flex; flex-direction: row; align-items: center; height: 48px; padding: 0 16px; font-size: 16px; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; text-align: start; text-decoration: none; position: relative; } [md-menu-item][disabled] { cursor: default; } [md-menu-item] md-icon { margin-right: 16px; } [dir='rtl'] [md-menu-item] md-icon { margin-left: 16px; } button[md-menu-item] { width: 100%; } .md-menu-ripple { position: absolute; top: 0; left: 0; bottom: 0; right: 0; } /*# sourceMappingURL=menu.css.map */ \"],\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t            animations: [\n\t                transformMenu,\n\t                fadeInItems\n\t            ],\n\t            exportAs: 'mdMenu'\n\t        }),\n\t        __param$6(0, _angular_core.Attribute('x-position')),\n\t        __param$6(1, _angular_core.Attribute('y-position')), \n\t        __metadata$44('design:paramtypes', [String, String])\n\t    ], MdMenu);\n\t    return MdMenu;\n\t}());\n\t\n\tvar __decorate$46 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$46 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar __param$7 = (this && this.__param) || function (paramIndex, decorator) {\n\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t};\n\t/**\n\t * This directive is intended to be used in conjunction with an md-menu tag.  It is\n\t * responsible for toggling the display of the provided menu instance.\n\t */\n\tvar MdMenuTrigger = (function () {\n\t    function MdMenuTrigger(_overlay, _element, _viewContainerRef, _renderer, _dir) {\n\t        this._overlay = _overlay;\n\t        this._element = _element;\n\t        this._viewContainerRef = _viewContainerRef;\n\t        this._renderer = _renderer;\n\t        this._dir = _dir;\n\t        this._menuOpen = false;\n\t        // tracking input type is necessary so it's possible to only auto-focus\n\t        // the first item of the list when the menu is opened via the keyboard\n\t        this._openedByMouse = false;\n\t        this.onMenuOpen = new _angular_core.EventEmitter();\n\t        this.onMenuClose = new _angular_core.EventEmitter();\n\t    }\n\t    MdMenuTrigger.prototype.ngAfterViewInit = function () {\n\t        var _this = this;\n\t        this._checkMenu();\n\t        this.menu.close.subscribe(function () { return _this.closeMenu(); });\n\t    };\n\t    MdMenuTrigger.prototype.ngOnDestroy = function () { this.destroyMenu(); };\n\t    Object.defineProperty(MdMenuTrigger.prototype, \"menuOpen\", {\n\t        get: function () { return this._menuOpen; },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    MdMenuTrigger.prototype.toggleMenu = function () {\n\t        return this._menuOpen ? this.closeMenu() : this.openMenu();\n\t    };\n\t    MdMenuTrigger.prototype.openMenu = function () {\n\t        if (!this._menuOpen) {\n\t            this._createOverlay();\n\t            this._overlayRef.attach(this._portal);\n\t            this._subscribeToBackdrop();\n\t            this._initMenu();\n\t        }\n\t    };\n\t    MdMenuTrigger.prototype.closeMenu = function () {\n\t        if (this._overlayRef) {\n\t            this._overlayRef.detach();\n\t            this._backdropSubscription.unsubscribe();\n\t            this._resetMenu();\n\t        }\n\t    };\n\t    MdMenuTrigger.prototype.destroyMenu = function () {\n\t        if (this._overlayRef) {\n\t            this._overlayRef.dispose();\n\t            this._overlayRef = null;\n\t            if (this._backdropSubscription) {\n\t                this._backdropSubscription.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    MdMenuTrigger.prototype.focus = function () {\n\t        this._renderer.invokeElementMethod(this._element.nativeElement, 'focus');\n\t    };\n\t    Object.defineProperty(MdMenuTrigger.prototype, \"dir\", {\n\t        /** The text direction of the containing app. */\n\t        get: function () {\n\t            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /**\n\t     * This method ensures that the menu closes when the overlay backdrop is clicked.\n\t     * We do not use first() here because doing so would not catch clicks from within\n\t     * the menu, and it would fail to unsubscribe properly. Instead, we unsubscribe\n\t     * explicitly when the menu is closed or destroyed.\n\t     */\n\t    MdMenuTrigger.prototype._subscribeToBackdrop = function () {\n\t        var _this = this;\n\t        this._backdropSubscription = this._overlayRef.backdropClick().subscribe(function () {\n\t            _this.closeMenu();\n\t        });\n\t    };\n\t    /**\n\t     * This method sets the menu state to open and focuses the first item if\n\t     * the menu was opened via the keyboard.\n\t     */\n\t    MdMenuTrigger.prototype._initMenu = function () {\n\t        this._setIsMenuOpen(true);\n\t        // Should only set focus if opened via the keyboard, so keyboard users can\n\t        // can easily navigate menu items. According to spec, mouse users should not\n\t        // see the focus style.\n\t        if (!this._openedByMouse) {\n\t            this.menu.focusFirstItem();\n\t        }\n\t    };\n\t    ;\n\t    /**\n\t     * This method resets the menu when it's closed, most importantly restoring\n\t     * focus to the menu trigger if the menu was opened via the keyboard.\n\t     */\n\t    MdMenuTrigger.prototype._resetMenu = function () {\n\t        this._setIsMenuOpen(false);\n\t        // Focus only needs to be reset to the host element if the menu was opened\n\t        // by the keyboard and manually shifted to the first menu item.\n\t        if (!this._openedByMouse) {\n\t            this.focus();\n\t        }\n\t        this._openedByMouse = false;\n\t    };\n\t    // set state rather than toggle to support triggers sharing a menu\n\t    MdMenuTrigger.prototype._setIsMenuOpen = function (isOpen) {\n\t        this._menuOpen = isOpen;\n\t        this._menuOpen ? this.onMenuOpen.emit() : this.onMenuClose.emit();\n\t    };\n\t    /**\n\t     *  This method checks that a valid instance of MdMenu has been passed into\n\t     *  md-menu-trigger-for.  If not, an exception is thrown.\n\t     */\n\t    MdMenuTrigger.prototype._checkMenu = function () {\n\t        if (!this.menu) {\n\t            throw new MdMenuMissingError();\n\t        }\n\t    };\n\t    /**\n\t     *  This method creates the overlay from the provided menu's template and saves its\n\t     *  OverlayRef so that it can be attached to the DOM when openMenu is called.\n\t     */\n\t    MdMenuTrigger.prototype._createOverlay = function () {\n\t        if (!this._overlayRef) {\n\t            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n\t            this._overlayRef = this._overlay.create(this._getOverlayConfig());\n\t        }\n\t    };\n\t    /**\n\t     * This method builds the configuration object needed to create the overlay, the OverlayState.\n\t     * @returns OverlayState\n\t     */\n\t    MdMenuTrigger.prototype._getOverlayConfig = function () {\n\t        var overlayState = new OverlayState();\n\t        overlayState.positionStrategy = this._getPosition()\n\t            .withDirection(this.dir);\n\t        overlayState.hasBackdrop = true;\n\t        overlayState.backdropClass = 'md-overlay-transparent-backdrop';\n\t        overlayState.direction = this.dir;\n\t        return overlayState;\n\t    };\n\t    /**\n\t     * This method builds the position strategy for the overlay, so the menu is properly connected\n\t     * to the trigger.\n\t     * @returns ConnectedPositionStrategy\n\t     */\n\t    MdMenuTrigger.prototype._getPosition = function () {\n\t        var positionX = this.menu.positionX === 'before' ? 'end' : 'start';\n\t        var positionY = this.menu.positionY === 'above' ? 'bottom' : 'top';\n\t        return this._overlay.position().connectedTo(this._element, { originX: positionX, originY: positionY }, { overlayX: positionX, overlayY: positionY });\n\t    };\n\t    MdMenuTrigger.prototype._handleMousedown = function (event) {\n\t        if (!isFakeMousedownFromScreenReader(event)) {\n\t            this._openedByMouse = true;\n\t        }\n\t    };\n\t    __decorate$46([\n\t        _angular_core.Input('md-menu-trigger-for'), \n\t        __metadata$46('design:type', Object)\n\t    ], MdMenuTrigger.prototype, \"menu\", void 0);\n\t    __decorate$46([\n\t        _angular_core.Output(), \n\t        __metadata$46('design:type', Object)\n\t    ], MdMenuTrigger.prototype, \"onMenuOpen\", void 0);\n\t    __decorate$46([\n\t        _angular_core.Output(), \n\t        __metadata$46('design:type', Object)\n\t    ], MdMenuTrigger.prototype, \"onMenuClose\", void 0);\n\t    MdMenuTrigger = __decorate$46([\n\t        _angular_core.Directive({\n\t            selector: '[md-menu-trigger-for]',\n\t            host: {\n\t                'aria-haspopup': 'true',\n\t                '(mousedown)': '_handleMousedown($event)',\n\t                '(click)': 'toggleMenu()',\n\t            },\n\t            exportAs: 'mdMenuTrigger'\n\t        }),\n\t        __param$7(4, _angular_core.Optional()), \n\t        __metadata$46('design:paramtypes', [Overlay, _angular_core.ElementRef, _angular_core.ViewContainerRef, _angular_core.Renderer, Dir])\n\t    ], MdMenuTrigger);\n\t    return MdMenuTrigger;\n\t}());\n\t\n\tvar __decorate$43 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$43 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar MdMenuModule = (function () {\n\t    function MdMenuModule() {\n\t    }\n\t    MdMenuModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdMenuModule,\n\t            providers: OVERLAY_PROVIDERS,\n\t        };\n\t    };\n\t    MdMenuModule = __decorate$43([\n\t        _angular_core.NgModule({\n\t            imports: [OverlayModule, _angular_common.CommonModule, MdRippleModule],\n\t            exports: [MdMenu, MdMenuItem, MdMenuTrigger],\n\t            declarations: [MdMenu, MdMenuItem, MdMenuTrigger],\n\t        }), \n\t        __metadata$43('design:paramtypes', [])\n\t    ], MdMenuModule);\n\t    return MdMenuModule;\n\t}());\n\t\n\t/**\n\t * Configuration for opening a modal dialog with the MdDialog service.\n\t */\n\tvar MdDialogConfig = (function () {\n\t    function MdDialogConfig() {\n\t        /** The ARIA role of the dialog element. */\n\t        this.role = 'dialog';\n\t        /** Whether the user can use escape or clicking outside to close a modal. */\n\t        this.disableClose = false;\n\t    }\n\t    return MdDialogConfig;\n\t}());\n\t\n\t// TODO(jelbourn): resizing\n\t// TODO(jelbourn): afterOpen and beforeClose\n\t/**\n\t * Reference to a dialog opened via the MdDialog service.\n\t */\n\tvar MdDialogRef = (function () {\n\t    function MdDialogRef(_overlayRef) {\n\t        this._overlayRef = _overlayRef;\n\t        /** Subject for notifying the user that the dialog has finished closing. */\n\t        this._afterClosed = new rxjs_Subject.Subject();\n\t    }\n\t    /**\n\t     * Close the dialog.\n\t     * @param dialogResult Optional result to return to the dialog opener.\n\t     */\n\t    MdDialogRef.prototype.close = function (dialogResult) {\n\t        this._overlayRef.dispose();\n\t        this._afterClosed.next(dialogResult);\n\t        this._afterClosed.complete();\n\t    };\n\t    /** Gets an observable that is notified when the dialog is finished closing. */\n\t    MdDialogRef.prototype.afterClosed = function () {\n\t        return this._afterClosed.asObservable();\n\t    };\n\t    return MdDialogRef;\n\t}());\n\t\n\t/** Custom injector type specifically for instantiating components with a dialog. */\n\tvar DialogInjector = (function () {\n\t    function DialogInjector(_dialogRef, _parentInjector) {\n\t        this._dialogRef = _dialogRef;\n\t        this._parentInjector = _parentInjector;\n\t    }\n\t    DialogInjector.prototype.get = function (token, notFoundValue) {\n\t        if (token === MdDialogRef) {\n\t            return this._dialogRef;\n\t        }\n\t        return this._parentInjector.get(token, notFoundValue);\n\t    };\n\t    return DialogInjector;\n\t}());\n\t\n\tvar __extends$19 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/** Exception thrown when a ComponentPortal is attached to a DomPortalHost without an origin. */\n\tvar MdDialogContentAlreadyAttachedError = (function (_super) {\n\t    __extends$19(MdDialogContentAlreadyAttachedError, _super);\n\t    function MdDialogContentAlreadyAttachedError() {\n\t        _super.call(this, 'Attempting to attach dialog content after content is already attached');\n\t    }\n\t    return MdDialogContentAlreadyAttachedError;\n\t}(MdError));\n\t\n\tvar __extends$18 = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate$48 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$48 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/**\n\t * Internal component that wraps user-provided dialog content.\n\t */\n\tvar MdDialogContainer = (function (_super) {\n\t    __extends$18(MdDialogContainer, _super);\n\t    function MdDialogContainer(_ngZone) {\n\t        _super.call(this);\n\t        this._ngZone = _ngZone;\n\t        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n\t        this._elementFocusedBeforeDialogWasOpened = null;\n\t    }\n\t    /** Attach a portal as content to this dialog container. */\n\t    MdDialogContainer.prototype.attachComponentPortal = function (portal) {\n\t        var _this = this;\n\t        if (this._portalHost.hasAttached()) {\n\t            throw new MdDialogContentAlreadyAttachedError();\n\t        }\n\t        var attachResult = this._portalHost.attachComponentPortal(portal);\n\t        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n\t        // ready in instances where change detection has to run first. To deal with this, we simply\n\t        // wait for the microtask queue to be empty.\n\t        this._ngZone.onMicrotaskEmpty.first().subscribe(function () {\n\t            _this._elementFocusedBeforeDialogWasOpened = document.activeElement;\n\t            _this._focusTrap.focusFirstTabbableElement();\n\t        });\n\t        return attachResult;\n\t    };\n\t    MdDialogContainer.prototype.attachTemplatePortal = function (portal) {\n\t        throw Error('Not yet implemented');\n\t    };\n\t    /** Handles the user pressing the Escape key. */\n\t    MdDialogContainer.prototype.handleEscapeKey = function () {\n\t        if (!this.dialogConfig.disableClose) {\n\t            this.dialogRef.close();\n\t        }\n\t    };\n\t    MdDialogContainer.prototype.ngOnDestroy = function () {\n\t        var _this = this;\n\t        // When the dialog is destroyed, return focus to the element that originally had it before\n\t        // the dialog was opened. Wait for the DOM to finish settling before changing the focus so\n\t        // that it doesn't end up back on the <body>.\n\t        this._ngZone.onMicrotaskEmpty.first().subscribe(function () {\n\t            _this._elementFocusedBeforeDialogWasOpened.focus();\n\t        });\n\t    };\n\t    __decorate$48([\n\t        _angular_core.ViewChild(PortalHostDirective), \n\t        __metadata$48('design:type', PortalHostDirective)\n\t    ], MdDialogContainer.prototype, \"_portalHost\", void 0);\n\t    __decorate$48([\n\t        _angular_core.ViewChild(FocusTrap), \n\t        __metadata$48('design:type', FocusTrap)\n\t    ], MdDialogContainer.prototype, \"_focusTrap\", void 0);\n\t    MdDialogContainer = __decorate$48([\n\t        _angular_core.Component({selector: 'md-dialog-container',\n\t            template: \"<focus-trap> <template portalHost></template> </focus-trap> \",\n\t            styles: [\"md-dialog-container { box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); display: block; overflow: hidden; padding: 24px; } /*# sourceMappingURL=dialog-container.css.map */ \"],\n\t            host: {\n\t                'class': 'md-dialog-container',\n\t                '[attr.role]': 'dialogConfig?.role',\n\t                '(keydown.escape)': 'handleEscapeKey()',\n\t            },\n\t            encapsulation: _angular_core.ViewEncapsulation.None,\n\t        }), \n\t        __metadata$48('design:paramtypes', [_angular_core.NgZone])\n\t    ], MdDialogContainer);\n\t    return MdDialogContainer;\n\t}(BasePortalHost));\n\t\n\tvar __decorate$47 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$47 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t// TODO(jelbourn): add support for opening with a TemplateRef\n\t// TODO(jelbourn): add `closeAll` method\n\t// TODO(jelbourn): default dialog config\n\t// TODO(jelbourn): escape key closes dialog\n\t// TODO(jelbourn): dialog content directives (e.g., md-dialog-header)\n\t// TODO(jelbourn): animations\n\t/**\n\t * Service to open Material Design modal dialogs.\n\t */\n\tvar MdDialog = (function () {\n\t    function MdDialog(_overlay, _injector) {\n\t        this._overlay = _overlay;\n\t        this._injector = _injector;\n\t    }\n\t    /**\n\t     * Opens a modal dialog containing the given component.\n\t     * @param component Type of the component to load into the load.\n\t     * @param config\n\t     */\n\t    MdDialog.prototype.open = function (component, config) {\n\t        config = _applyConfigDefaults$1(config);\n\t        var overlayRef = this._createOverlay(config);\n\t        var dialogContainer = this._attachDialogContainer(overlayRef, config);\n\t        return this._attachDialogContent(component, dialogContainer, overlayRef);\n\t    };\n\t    /**\n\t     * Creates the overlay into which the dialog will be loaded.\n\t     * @param dialogConfig The dialog configuration.\n\t     * @returns A promise resolving to the OverlayRef for the created overlay.\n\t     */\n\t    MdDialog.prototype._createOverlay = function (dialogConfig) {\n\t        var overlayState = this._getOverlayState(dialogConfig);\n\t        return this._overlay.create(overlayState);\n\t    };\n\t    /**\n\t     * Attaches an MdDialogContainer to a dialog's already-created overlay.\n\t     * @param overlay Reference to the dialog's underlying overlay.\n\t     * @param config The dialog configuration.\n\t     * @returns A promise resolving to a ComponentRef for the attached container.\n\t     */\n\t    MdDialog.prototype._attachDialogContainer = function (overlay, config) {\n\t        var viewContainer = config ? config.viewContainerRef : null;\n\t        var containerPortal = new ComponentPortal(MdDialogContainer, viewContainer);\n\t        var containerRef = overlay.attach(containerPortal);\n\t        containerRef.instance.dialogConfig = config;\n\t        return containerRef.instance;\n\t    };\n\t    /**\n\t     * Attaches the user-provided component to the already-created MdDialogContainer.\n\t     * @param component The type of component being loaded into the dialog.\n\t     * @param dialogContainer Reference to the wrapping MdDialogContainer.\n\t     * @param overlayRef Reference to the overlay in which the dialog resides.\n\t     * @returns A promise resolving to the MdDialogRef that should be returned to the user.\n\t     */\n\t    MdDialog.prototype._attachDialogContent = function (component, dialogContainer, overlayRef) {\n\t        // Create a reference to the dialog we're creating in order to give the user a handle\n\t        // to modify and close it.\n\t        var dialogRef = new MdDialogRef(overlayRef);\n\t        if (!dialogContainer.dialogConfig.disableClose) {\n\t            // When the dialog backdrop is clicked, we want to close it.\n\t            overlayRef.backdropClick().first().subscribe(function () { return dialogRef.close(); });\n\t        }\n\t        // Set the dialogRef to the container so that it can use the ref to close the dialog.\n\t        dialogContainer.dialogRef = dialogRef;\n\t        // We create an injector specifically for the component we're instantiating so that it can\n\t        // inject the MdDialogRef. This allows a component loaded inside of a dialog to close itself\n\t        // and, optionally, to return a value.\n\t        var dialogInjector = new DialogInjector(dialogRef, this._injector);\n\t        var contentPortal = new ComponentPortal(component, null, dialogInjector);\n\t        var contentRef = dialogContainer.attachComponentPortal(contentPortal);\n\t        dialogRef.componentInstance = contentRef.instance;\n\t        return dialogRef;\n\t    };\n\t    /**\n\t     * Creates an overlay state from a dialog config.\n\t     * @param dialogConfig The dialog configuration.\n\t     * @returns The overlay configuration.\n\t     */\n\t    MdDialog.prototype._getOverlayState = function (dialogConfig) {\n\t        var state = new OverlayState();\n\t        state.hasBackdrop = true;\n\t        state.positionStrategy = this._overlay.position()\n\t            .global()\n\t            .centerHorizontally()\n\t            .centerVertically();\n\t        return state;\n\t    };\n\t    MdDialog = __decorate$47([\n\t        _angular_core.Injectable(), \n\t        __metadata$47('design:paramtypes', [Overlay, _angular_core.Injector])\n\t    ], MdDialog);\n\t    return MdDialog;\n\t}());\n\t/**\n\t * Applies default options to the dialog config.\n\t * @param dialogConfig Config to be modified.\n\t * @returns The new configuration object.\n\t */\n\tfunction _applyConfigDefaults$1(dialogConfig) {\n\t    return extendObject(new MdDialogConfig(), dialogConfig);\n\t}\n\tvar MdDialogModule = (function () {\n\t    function MdDialogModule() {\n\t    }\n\t    MdDialogModule.forRoot = function () {\n\t        return {\n\t            ngModule: MdDialogModule,\n\t            providers: [MdDialog, OVERLAY_PROVIDERS, InteractivityChecker],\n\t        };\n\t    };\n\t    MdDialogModule = __decorate$47([\n\t        _angular_core.NgModule({\n\t            imports: [OverlayModule, PortalModule, A11yModule],\n\t            exports: [MdDialogContainer],\n\t            declarations: [MdDialogContainer],\n\t            entryComponents: [MdDialogContainer],\n\t        }), \n\t        __metadata$47('design:paramtypes', [])\n\t    ], MdDialogModule);\n\t    return MdDialogModule;\n\t}());\n\t\n\tvar __decorate$16 = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata$16 = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar MATERIAL_MODULES = [\n\t    MdButtonModule,\n\t    MdButtonToggleModule,\n\t    MdCardModule,\n\t    MdCheckboxModule,\n\t    MdDialogModule,\n\t    MdGridListModule,\n\t    MdIconModule,\n\t    MdInputModule,\n\t    MdListModule,\n\t    MdMenuModule,\n\t    MdProgressBarModule,\n\t    MdProgressCircleModule,\n\t    MdRadioModule,\n\t    MdRippleModule,\n\t    MdSidenavModule,\n\t    MdSliderModule,\n\t    MdSlideToggleModule,\n\t    MdSnackBarModule,\n\t    MdTabsModule,\n\t    MdToolbarModule,\n\t    MdTooltipModule,\n\t    OverlayModule,\n\t    PortalModule,\n\t    RtlModule,\n\t    A11yModule,\n\t    StyleCompatibilityModule,\n\t];\n\tvar MaterialRootModule = (function () {\n\t    function MaterialRootModule() {\n\t    }\n\t    MaterialRootModule = __decorate$16([\n\t        _angular_core.NgModule({\n\t            imports: [\n\t                MdButtonModule.forRoot(),\n\t                MdCardModule.forRoot(),\n\t                MdCheckboxModule.forRoot(),\n\t                MdGridListModule.forRoot(),\n\t                MdInputModule.forRoot(),\n\t                MdListModule.forRoot(),\n\t                MdProgressBarModule.forRoot(),\n\t                MdProgressCircleModule.forRoot(),\n\t                MdRippleModule.forRoot(),\n\t                MdSidenavModule.forRoot(),\n\t                MdTabsModule.forRoot(),\n\t                MdToolbarModule.forRoot(),\n\t                PortalModule.forRoot(),\n\t                RtlModule.forRoot(),\n\t                // These modules include providers.\n\t                A11yModule.forRoot(),\n\t                MdButtonToggleModule.forRoot(),\n\t                MdDialogModule.forRoot(),\n\t                MdIconModule.forRoot(),\n\t                MdMenuModule.forRoot(),\n\t                MdRadioModule.forRoot(),\n\t                MdSliderModule.forRoot(),\n\t                MdSlideToggleModule.forRoot(),\n\t                MdSnackBarModule.forRoot(),\n\t                MdTooltipModule.forRoot(),\n\t                OverlayModule.forRoot(),\n\t                StyleCompatibilityModule.forRoot(),\n\t            ],\n\t            exports: MATERIAL_MODULES,\n\t        }), \n\t        __metadata$16('design:paramtypes', [])\n\t    ], MaterialRootModule);\n\t    return MaterialRootModule;\n\t}());\n\tvar MaterialModule = (function () {\n\t    function MaterialModule() {\n\t    }\n\t    MaterialModule.forRoot = function () {\n\t        return { ngModule: MaterialRootModule };\n\t    };\n\t    MaterialModule = __decorate$16([\n\t        _angular_core.NgModule({\n\t            imports: MATERIAL_MODULES,\n\t            exports: MATERIAL_MODULES,\n\t        }), \n\t        __metadata$16('design:paramtypes', [])\n\t    ], MaterialModule);\n\t    return MaterialModule;\n\t}());\n\t\n\texports.MdCoreModule = MdCoreModule;\n\texports.Dir = Dir;\n\texports.RtlModule = RtlModule;\n\texports.Portal = Portal;\n\texports.BasePortalHost = BasePortalHost;\n\texports.ComponentPortal = ComponentPortal;\n\texports.TemplatePortal = TemplatePortal;\n\texports.PortalHostDirective = PortalHostDirective;\n\texports.TemplatePortalDirective = TemplatePortalDirective;\n\texports.PortalModule = PortalModule;\n\texports.DomPortalHost = DomPortalHost;\n\texports.Overlay = Overlay;\n\texports.OVERLAY_PROVIDERS = OVERLAY_PROVIDERS;\n\texports.OverlayContainer = OverlayContainer;\n\texports.OverlayRef = OverlayRef;\n\texports.OverlayState = OverlayState;\n\texports.ConnectedOverlayDirective = ConnectedOverlayDirective;\n\texports.OverlayOrigin = OverlayOrigin;\n\texports.OverlayModule = OverlayModule;\n\texports.MdGestureConfig = MdGestureConfig;\n\texports.MdRipple = MdRipple;\n\texports.MdRippleModule = MdRippleModule;\n\texports.MdLiveAnnouncer = MdLiveAnnouncer;\n\texports.LIVE_ANNOUNCER_ELEMENT_TOKEN = LIVE_ANNOUNCER_ELEMENT_TOKEN;\n\texports.FocusTrap = FocusTrap;\n\texports.InteractivityChecker = InteractivityChecker;\n\texports.isFakeMousedownFromScreenReader = isFakeMousedownFromScreenReader;\n\texports.A11yModule = A11yModule;\n\texports.MdUniqueSelectionDispatcher = MdUniqueSelectionDispatcher;\n\texports.MdLineModule = MdLineModule;\n\texports.MdLine = MdLine;\n\texports.MdLineSetter = MdLineSetter;\n\texports.applyCssTransform = applyCssTransform;\n\texports.MdError = MdError;\n\texports.coerceBooleanProperty = coerceBooleanProperty;\n\texports.coerceNumberProperty = coerceNumberProperty;\n\texports.ConnectedPositionStrategy = ConnectedPositionStrategy;\n\texports.ConnectionPositionPair = ConnectionPositionPair;\n\texports.UP_ARROW = UP_ARROW;\n\texports.DOWN_ARROW = DOWN_ARROW;\n\texports.RIGHT_ARROW = RIGHT_ARROW;\n\texports.LEFT_ARROW = LEFT_ARROW;\n\texports.ENTER = ENTER;\n\texports.SPACE = SPACE;\n\texports.TAB = TAB;\n\texports.ELEMENTS_SELECTOR = ELEMENTS_SELECTOR;\n\texports.StyleCompatibility = StyleCompatibility;\n\texports.StyleCompatibilityModule = StyleCompatibilityModule;\n\texports.AnimationCurves = AnimationCurves;\n\texports.AnimationDurations = AnimationDurations;\n\texports.MaterialRootModule = MaterialRootModule;\n\texports.MaterialModule = MaterialModule;\n\texports.MdButton = MdButton;\n\texports.MdAnchor = MdAnchor;\n\texports.MdButtonModule = MdButtonModule;\n\texports.MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR;\n\texports.MdButtonToggleChange = MdButtonToggleChange;\n\texports.MdButtonToggleGroup = MdButtonToggleGroup;\n\texports.MdButtonToggleGroupMultiple = MdButtonToggleGroupMultiple;\n\texports.MdButtonToggle = MdButtonToggle;\n\texports.MdButtonToggleModule = MdButtonToggleModule;\n\texports.MdCardContent = MdCardContent;\n\texports.MdCardTitle = MdCardTitle;\n\texports.MdCardSubtitle = MdCardSubtitle;\n\texports.MdCardActions = MdCardActions;\n\texports.MdCardFooter = MdCardFooter;\n\texports.MdCard = MdCard;\n\texports.MdCardHeader = MdCardHeader;\n\texports.MdCardTitleGroup = MdCardTitleGroup;\n\texports.MdCardModule = MdCardModule;\n\texports.MD_CHECKBOX_CONTROL_VALUE_ACCESSOR = MD_CHECKBOX_CONTROL_VALUE_ACCESSOR;\n\texports.MdCheckboxChange = MdCheckboxChange;\n\texports.MdCheckbox = MdCheckbox;\n\texports.MdCheckboxModule = MdCheckboxModule;\n\texports.MdDialog = MdDialog;\n\texports.MdDialogModule = MdDialogModule;\n\texports.MdDialogConfig = MdDialogConfig;\n\texports.MdDialogRef = MdDialogRef;\n\texports.MdDialogContainer = MdDialogContainer;\n\texports.MdGridList = MdGridList;\n\texports.MdGridListModule = MdGridListModule;\n\texports.MdIconInvalidNameError = MdIconInvalidNameError;\n\texports.MdIcon = MdIcon;\n\texports.MdIconModule = MdIconModule;\n\texports.MdIconRegistry = MdIconRegistry;\n\texports.MD_INPUT_CONTROL_VALUE_ACCESSOR = MD_INPUT_CONTROL_VALUE_ACCESSOR;\n\texports.MdInputPlaceholderConflictError = MdInputPlaceholderConflictError;\n\texports.MdInputUnsupportedTypeError = MdInputUnsupportedTypeError;\n\texports.MdInputDuplicatedHintError = MdInputDuplicatedHintError;\n\texports.MdPlaceholder = MdPlaceholder;\n\texports.MdHint = MdHint;\n\texports.MdInput = MdInput;\n\texports.MdInputModule = MdInputModule;\n\texports.MdListDivider = MdListDivider;\n\texports.MdList = MdList;\n\texports.MdListAvatar = MdListAvatar;\n\texports.MdListItem = MdListItem;\n\texports.MdListModule = MdListModule;\n\texports.MdMenuModule = MdMenuModule;\n\texports.MdMenu = MdMenu;\n\texports.MdMenuItem = MdMenuItem;\n\texports.MdMenuTrigger = MdMenuTrigger;\n\texports.MdProgressBar = MdProgressBar;\n\texports.MdProgressBarModule = MdProgressBarModule;\n\texports.MdProgressCircle = MdProgressCircle;\n\texports.MdSpinner = MdSpinner;\n\texports.MdProgressCircleModule = MdProgressCircleModule;\n\texports.MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR;\n\texports.MdRadioChange = MdRadioChange;\n\texports.MdRadioGroup = MdRadioGroup;\n\texports.MdRadioButton = MdRadioButton;\n\texports.MdRadioModule = MdRadioModule;\n\texports.MdDuplicatedSidenavError = MdDuplicatedSidenavError;\n\texports.MdSidenav = MdSidenav;\n\texports.MdSidenavLayout = MdSidenavLayout;\n\texports.MdSidenavModule = MdSidenavModule;\n\texports.MD_SLIDER_VALUE_ACCESSOR = MD_SLIDER_VALUE_ACCESSOR;\n\texports.MdSliderChange = MdSliderChange;\n\texports.MdSlider = MdSlider;\n\texports.SliderRenderer = SliderRenderer;\n\texports.MdSliderModule = MdSliderModule;\n\texports.MD_SLIDE_TOGGLE_VALUE_ACCESSOR = MD_SLIDE_TOGGLE_VALUE_ACCESSOR;\n\texports.MdSlideToggleChange = MdSlideToggleChange;\n\texports.MdSlideToggle = MdSlideToggle;\n\texports.MdSlideToggleModule = MdSlideToggleModule;\n\texports.MdSnackBar = MdSnackBar;\n\texports.MdSnackBarModule = MdSnackBarModule;\n\texports.SHOW_ANIMATION = SHOW_ANIMATION;\n\texports.HIDE_ANIMATION = HIDE_ANIMATION;\n\texports.MdSnackBarContainer = MdSnackBarContainer;\n\texports.MdSnackBarConfig = MdSnackBarConfig;\n\texports.MdSnackBarRef = MdSnackBarRef;\n\texports.MdTabChangeEvent = MdTabChangeEvent;\n\texports.MdTab = MdTab;\n\texports.MdTabGroup = MdTabGroup;\n\texports.MdTabsModule = MdTabsModule;\n\texports.MdTabNavBar = MdTabNavBar;\n\texports.MdTabLink = MdTabLink;\n\texports.MdToolbarRow = MdToolbarRow;\n\texports.MdToolbar = MdToolbar;\n\texports.MdToolbarModule = MdToolbarModule;\n\texports.TOOLTIP_HIDE_DELAY = TOOLTIP_HIDE_DELAY;\n\texports.MdTooltip = MdTooltip;\n\texports.TooltipComponent = TooltipComponent;\n\texports.MdTooltipModule = MdTooltipModule;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\t\n\t//# sourceMappingURL=./material.umd.js.map\n\n\n/***/ },\n\n/***/ 84:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\tvar core_1 = __webpack_require__(3);\n\tvar common_1 = __webpack_require__(22);\n\tvar forms_1 = __webpack_require__(56);\n\tvar table_component_1 = __webpack_require__(85);\n\texports.DataTable = table_component_1.DataTable;\n\tvar column_component_1 = __webpack_require__(86);\n\texports.DataTableColumn = column_component_1.DataTableColumn;\n\tvar row_component_1 = __webpack_require__(87);\n\texports.DataTableRow = row_component_1.DataTableRow;\n\tvar pagination_component_1 = __webpack_require__(94);\n\texports.DataTablePagination = pagination_component_1.DataTablePagination;\n\tvar header_component_1 = __webpack_require__(97);\n\texports.DataTableHeader = header_component_1.DataTableHeader;\n\tvar px_1 = __webpack_require__(100);\n\tvar hide_1 = __webpack_require__(101);\n\tvar min_1 = __webpack_require__(102);\n\t__export(__webpack_require__(90));\n\t__export(__webpack_require__(103));\n\texports.DATA_TABLE_DIRECTIVES = [table_component_1.DataTable, column_component_1.DataTableColumn];\n\tvar DataTableModule = (function () {\n\t    function DataTableModule() {\n\t    }\n\t    DataTableModule = __decorate([\n\t        core_1.NgModule({\n\t            imports: [common_1.CommonModule, forms_1.FormsModule],\n\t            declarations: [\n\t                table_component_1.DataTable, column_component_1.DataTableColumn,\n\t                row_component_1.DataTableRow, pagination_component_1.DataTablePagination, header_component_1.DataTableHeader,\n\t                px_1.PixelConverter, hide_1.Hide, min_1.MinPipe\n\t            ],\n\t            exports: [table_component_1.DataTable, column_component_1.DataTableColumn]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], DataTableModule);\n\t    return DataTableModule;\n\t}());\n\texports.DataTableModule = DataTableModule;\n\t//# sourceMappingURL=/index.js.map\n\n/***/ },\n\n/***/ 85:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar column_component_1 = __webpack_require__(86);\n\tvar row_component_1 = __webpack_require__(87);\n\tvar types_1 = __webpack_require__(90);\n\tvar drag_1 = __webpack_require__(91);\n\tvar table_template_1 = __webpack_require__(92);\n\tvar table_style_1 = __webpack_require__(93);\n\tvar DataTable = (function () {\n\t    function DataTable() {\n\t        this._items = [];\n\t        this.header = true;\n\t        this.pagination = true;\n\t        this.indexColumn = true;\n\t        this.indexColumnHeader = '';\n\t        this.selectColumn = false;\n\t        this.multiSelect = true;\n\t        this.substituteRows = true;\n\t        this.expandableRows = false;\n\t        this.translations = types_1.defaultTranslations;\n\t        this.selectOnRowClick = false;\n\t        this.autoReload = true;\n\t        this.showReloading = false;\n\t        this._sortAsc = true;\n\t        this._offset = 0;\n\t        this._limit = 10;\n\t        // Reloading:\n\t        this._reloading = false;\n\t        this.reload = new core_1.EventEmitter();\n\t        this._displayParams = {}; // params of the last finished reload\n\t        this._scheduledReload = null;\n\t        // event handlers:\n\t        this.rowClick = new core_1.EventEmitter();\n\t        this.rowDoubleClick = new core_1.EventEmitter();\n\t        this.headerClick = new core_1.EventEmitter();\n\t        this.cellClick = new core_1.EventEmitter();\n\t        this.selectedRows = [];\n\t        this._selectAllCheckbox = false;\n\t        // column resizing:\n\t        this._resizeInProgress = false;\n\t        this.resizeLimit = 30;\n\t    }\n\t    Object.defineProperty(DataTable.prototype, \"items\", {\n\t        get: function () {\n\t            return this._items;\n\t        },\n\t        set: function (items) {\n\t            this._items = items;\n\t            this._onReloadFinished();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DataTable.prototype, \"sortBy\", {\n\t        get: function () {\n\t            return this._sortBy;\n\t        },\n\t        set: function (value) {\n\t            this._sortBy = value;\n\t            this._triggerReload();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DataTable.prototype, \"sortAsc\", {\n\t        get: function () {\n\t            return this._sortAsc;\n\t        },\n\t        set: function (value) {\n\t            this._sortAsc = value;\n\t            this._triggerReload();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DataTable.prototype, \"offset\", {\n\t        get: function () {\n\t            return this._offset;\n\t        },\n\t        set: function (value) {\n\t            this._offset = value;\n\t            this._triggerReload();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DataTable.prototype, \"limit\", {\n\t        get: function () {\n\t            return this._limit;\n\t        },\n\t        set: function (value) {\n\t            this._limit = value;\n\t            this._triggerReload();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DataTable.prototype, \"page\", {\n\t        // calculated property:\n\t        get: function () {\n\t            return Math.floor(this.offset / this.limit) + 1;\n\t        },\n\t        set: function (value) {\n\t            this.offset = (value - 1) * this.limit;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DataTable.prototype, \"lastPage\", {\n\t        get: function () {\n\t            return Math.ceil(this.itemCount / this.limit);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    // setting multiple observable properties simultaneously\n\t    DataTable.prototype.sort = function (sortBy, asc) {\n\t        this.sortBy = sortBy;\n\t        this.sortAsc = asc;\n\t    };\n\t    // init\n\t    DataTable.prototype.ngOnInit = function () {\n\t        this._initDefaultValues();\n\t        this._initDefaultClickEvents();\n\t        this._updateDisplayParams();\n\t        if (this.autoReload && this._scheduledReload == null) {\n\t            this.reloadItems();\n\t        }\n\t    };\n\t    DataTable.prototype._initDefaultValues = function () {\n\t        this.indexColumnVisible = this.indexColumn;\n\t        this.selectColumnVisible = this.selectColumn;\n\t        this.expandColumnVisible = this.expandableRows;\n\t    };\n\t    DataTable.prototype._initDefaultClickEvents = function () {\n\t        var _this = this;\n\t        this.headerClick.subscribe(function (tableEvent) { return _this.sortColumn(tableEvent.column); });\n\t        if (this.selectOnRowClick) {\n\t            this.rowClick.subscribe(function (tableEvent) { return tableEvent.row.selected = !tableEvent.row.selected; });\n\t        }\n\t    };\n\t    Object.defineProperty(DataTable.prototype, \"reloading\", {\n\t        get: function () {\n\t            return this._reloading;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    DataTable.prototype.reloadItems = function () {\n\t        this._reloading = true;\n\t        this.reload.emit(this._getRemoteParameters());\n\t    };\n\t    DataTable.prototype._onReloadFinished = function () {\n\t        this._updateDisplayParams();\n\t        this._selectAllCheckbox = false;\n\t        this._reloading = false;\n\t    };\n\t    Object.defineProperty(DataTable.prototype, \"displayParams\", {\n\t        get: function () {\n\t            return this._displayParams;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    DataTable.prototype._updateDisplayParams = function () {\n\t        this._displayParams = {\n\t            sortBy: this.sortBy,\n\t            sortAsc: this.sortAsc,\n\t            offset: this.offset,\n\t            limit: this.limit\n\t        };\n\t    };\n\t    // for avoiding cascading reloads if multiple params are set at once:\n\t    DataTable.prototype._triggerReload = function () {\n\t        var _this = this;\n\t        if (this._scheduledReload) {\n\t            clearTimeout(this._scheduledReload);\n\t        }\n\t        this._scheduledReload = setTimeout(function () {\n\t            _this.reloadItems();\n\t        });\n\t    };\n\t    DataTable.prototype.rowClicked = function (row, event) {\n\t        this.rowClick.emit({ row: row, event: event });\n\t    };\n\t    DataTable.prototype.rowDoubleClicked = function (row, event) {\n\t        this.rowDoubleClick.emit({ row: row, event: event });\n\t    };\n\t    DataTable.prototype.headerClicked = function (column, event) {\n\t        if (!this._resizeInProgress) {\n\t            this.headerClick.emit({ column: column, event: event });\n\t        }\n\t        else {\n\t            this._resizeInProgress = false; // this is because I can't prevent click from mousup of the drag end\n\t        }\n\t    };\n\t    DataTable.prototype.cellClicked = function (column, row, event) {\n\t        this.cellClick.emit({ row: row, column: column, event: event });\n\t    };\n\t    // functions:\n\t    DataTable.prototype._getRemoteParameters = function () {\n\t        var params = {};\n\t        if (this.sortBy) {\n\t            params.sortBy = this.sortBy;\n\t            params.sortAsc = this.sortAsc;\n\t        }\n\t        if (this.pagination) {\n\t            params.offset = this.offset;\n\t            params.limit = this.limit;\n\t        }\n\t        return params;\n\t    };\n\t    DataTable.prototype.sortColumn = function (column) {\n\t        if (column.sortable) {\n\t            var ascending = this.sortBy === column.property ? !this.sortAsc : true;\n\t            this.sort(column.property, ascending);\n\t        }\n\t    };\n\t    Object.defineProperty(DataTable.prototype, \"columnCount\", {\n\t        get: function () {\n\t            var count = 0;\n\t            count += this.indexColumnVisible ? 1 : 0;\n\t            count += this.selectColumnVisible ? 1 : 0;\n\t            count += this.expandColumnVisible ? 1 : 0;\n\t            this.columns.toArray().forEach(function (column) {\n\t                count += column.visible ? 1 : 0;\n\t            });\n\t            return count;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    DataTable.prototype.getRowColor = function (item, index, row) {\n\t        if (this.rowColors !== undefined) {\n\t            return this.rowColors(item, row, index);\n\t        }\n\t    };\n\t    Object.defineProperty(DataTable.prototype, \"selectAllCheckbox\", {\n\t        get: function () {\n\t            return this._selectAllCheckbox;\n\t        },\n\t        set: function (value) {\n\t            this._selectAllCheckbox = value;\n\t            this._onSelectAllChanged(value);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    DataTable.prototype._onSelectAllChanged = function (value) {\n\t        this.rows.toArray().forEach(function (row) { return row.selected = value; });\n\t    };\n\t    DataTable.prototype.onRowSelectChanged = function (row) {\n\t        // maintain the selectedRow(s) view\n\t        if (this.multiSelect) {\n\t            var index = this.selectedRows.indexOf(row);\n\t            if (row.selected && index < 0) {\n\t                this.selectedRows.push(row);\n\t            }\n\t            else if (!row.selected && index >= 0) {\n\t                this.selectedRows.splice(index, 1);\n\t            }\n\t        }\n\t        else {\n\t            if (row.selected) {\n\t                this.selectedRow = row;\n\t            }\n\t            else if (this.selectedRow === row) {\n\t                this.selectedRow = undefined;\n\t            }\n\t        }\n\t        // unselect all other rows:\n\t        if (row.selected && !this.multiSelect) {\n\t            this.rows.toArray().filter(function (row_) { return row_.selected; }).forEach(function (row_) {\n\t                if (row_ !== row) {\n\t                    row_.selected = false;\n\t                }\n\t            });\n\t        }\n\t    };\n\t    Object.defineProperty(DataTable.prototype, \"substituteItems\", {\n\t        // other:\n\t        get: function () {\n\t            return Array.from({ length: this.displayParams.limit - this.items.length });\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    DataTable.prototype.resizeColumnStart = function (event, column, columnElement) {\n\t        var _this = this;\n\t        this._resizeInProgress = true;\n\t        drag_1.drag(event, {\n\t            move: function (moveEvent, dx) {\n\t                if (_this._isResizeInLimit(columnElement, dx)) {\n\t                    column.width = columnElement.offsetWidth + dx;\n\t                }\n\t            },\n\t        });\n\t    };\n\t    DataTable.prototype._isResizeInLimit = function (columnElement, dx) {\n\t        /* This is needed because CSS min-width didn't work on table-layout: fixed.\n\t         Without the limits, resizing can make the next column disappear completely,\n\t         and even increase the table width. The current implementation suffers from the fact,\n\t         that offsetWidth sometimes contains out-of-date values. */\n\t        if ((dx < 0 && (columnElement.offsetWidth + dx) <= this.resizeLimit) ||\n\t            !columnElement.nextElementSibling ||\n\t            (dx >= 0 && (columnElement.nextElementSibling.offsetWidth + dx) <= this.resizeLimit)) {\n\t            return false;\n\t        }\n\t        return true;\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"items\", null);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Number)\n\t    ], DataTable.prototype, \"itemCount\", void 0);\n\t    __decorate([\n\t        core_1.ContentChildren(column_component_1.DataTableColumn), \n\t        __metadata('design:type', core_1.QueryList)\n\t    ], DataTable.prototype, \"columns\", void 0);\n\t    __decorate([\n\t        core_1.ViewChildren(row_component_1.DataTableRow), \n\t        __metadata('design:type', core_1.QueryList)\n\t    ], DataTable.prototype, \"rows\", void 0);\n\t    __decorate([\n\t        core_1.ContentChild('dataTableExpand'), \n\t        __metadata('design:type', core_1.TemplateRef)\n\t    ], DataTable.prototype, \"expandTemplate\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', String)\n\t    ], DataTable.prototype, \"headerTitle\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"header\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"pagination\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"indexColumn\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"indexColumnHeader\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Function)\n\t    ], DataTable.prototype, \"rowColors\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Function)\n\t    ], DataTable.prototype, \"rowTooltip\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"selectColumn\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"multiSelect\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"substituteRows\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"expandableRows\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"translations\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"selectOnRowClick\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"autoReload\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"showReloading\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"sortBy\", null);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"sortAsc\", null);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"offset\", null);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"limit\", null);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"page\", null);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"reload\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"rowClick\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"rowDoubleClick\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"headerClick\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"cellClick\", void 0);\n\t    DataTable = __decorate([\n\t        core_1.Component({\n\t            selector: 'data-table',\n\t            template: table_template_1.TABLE_TEMPLATE,\n\t            styles: [table_style_1.TABLE_STYLE]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], DataTable);\n\t    return DataTable;\n\t}());\n\texports.DataTable = DataTable;\n\t//# sourceMappingURL=/components/table.component.js.map\n\n/***/ },\n\n/***/ 86:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar DataTableColumn = (function () {\n\t    function DataTableColumn() {\n\t        this.sortable = false;\n\t        this.resizable = false;\n\t        this.visible = true;\n\t        this.styleClassObject = {}; // for [ngClass]\n\t    }\n\t    DataTableColumn.prototype.getCellColor = function (row, index) {\n\t        if (this.cellColors !== undefined) {\n\t            return this.cellColors(row.item, row, this, index);\n\t        }\n\t    };\n\t    DataTableColumn.prototype.ngOnInit = function () {\n\t        this._initCellClass();\n\t    };\n\t    DataTableColumn.prototype._initCellClass = function () {\n\t        if (!this.styleClass && this.property) {\n\t            if (/^[a-zA-Z0-9_]+$/.test(this.property)) {\n\t                this.styleClass = 'column-' + this.property;\n\t            }\n\t            else {\n\t                this.styleClass = 'column-' + this.property.replace(/[^a-zA-Z0-9_]/g, '');\n\t            }\n\t        }\n\t        if (this.styleClass != null) {\n\t            this.styleClassObject = (_a = {},\n\t                _a[this.styleClass] = true,\n\t                _a\n\t            );\n\t        }\n\t        var _a;\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', String)\n\t    ], DataTableColumn.prototype, \"header\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTableColumn.prototype, \"sortable\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTableColumn.prototype, \"resizable\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', String)\n\t    ], DataTableColumn.prototype, \"property\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', String)\n\t    ], DataTableColumn.prototype, \"styleClass\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Function)\n\t    ], DataTableColumn.prototype, \"cellColors\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTableColumn.prototype, \"width\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTableColumn.prototype, \"visible\", void 0);\n\t    __decorate([\n\t        core_1.ContentChild('dataTableCell'), \n\t        __metadata('design:type', Object)\n\t    ], DataTableColumn.prototype, \"cellTemplate\", void 0);\n\t    __decorate([\n\t        core_1.ContentChild('dataTableHeader'), \n\t        __metadata('design:type', Object)\n\t    ], DataTableColumn.prototype, \"headerTemplate\", void 0);\n\t    DataTableColumn = __decorate([\n\t        core_1.Directive({\n\t            selector: 'data-table-column'\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], DataTableColumn);\n\t    return DataTableColumn;\n\t}());\n\texports.DataTableColumn = DataTableColumn;\n\t//# sourceMappingURL=/components/column.component.js.map\n\n/***/ },\n\n/***/ 87:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\n\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar table_component_1 = __webpack_require__(85);\n\tvar row_template_1 = __webpack_require__(88);\n\tvar row_style_1 = __webpack_require__(89);\n\tvar DataTableRow = (function () {\n\t    function DataTableRow(dataTable) {\n\t        this.dataTable = dataTable;\n\t        this.selectedChange = new core_1.EventEmitter();\n\t        this._this = this; // FIXME is there no template keyword for this in angular 2?\n\t    }\n\t    Object.defineProperty(DataTableRow.prototype, \"selected\", {\n\t        get: function () {\n\t            return this._selected;\n\t        },\n\t        set: function (selected) {\n\t            this._selected = selected;\n\t            this.selectedChange.emit(selected);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DataTableRow.prototype, \"displayIndex\", {\n\t        // other:\n\t        get: function () {\n\t            if (this.dataTable.pagination) {\n\t                return this.dataTable.displayParams.offset + this.index + 1;\n\t            }\n\t            else {\n\t                return this.index + 1;\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    DataTableRow.prototype.getTooltip = function () {\n\t        if (this.dataTable.rowTooltip) {\n\t            return this.dataTable.rowTooltip(this.item, this, this.index);\n\t        }\n\t        return '';\n\t    };\n\t    DataTableRow.prototype.ngOnDestroy = function () {\n\t        this.selected = false;\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], DataTableRow.prototype, \"item\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Number)\n\t    ], DataTableRow.prototype, \"index\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], DataTableRow.prototype, \"selectedChange\", void 0);\n\t    DataTableRow = __decorate([\n\t        core_1.Component({\n\t            selector: '[dataTableRow]',\n\t            template: row_template_1.ROW_TEMPLATE,\n\t            styles: [row_style_1.ROW_STYLE]\n\t        }),\n\t        __param(0, core_1.Inject(core_1.forwardRef(function () { return table_component_1.DataTable; }))), \n\t        __metadata('design:paramtypes', [table_component_1.DataTable])\n\t    ], DataTableRow);\n\t    return DataTableRow;\n\t}());\n\texports.DataTableRow = DataTableRow;\n\t//# sourceMappingURL=/components/row.component.js.map\n\n/***/ },\n\n/***/ 88:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.ROW_TEMPLATE = \"\\n<tr\\tclass=\\\"data-table-row\\\"\\n    [title]=\\\"getTooltip()\\\"\\n    [style.background-color]=\\\"dataTable.getRowColor(item, index, _this)\\\"\\n    [class.row-odd]=\\\"index % 2 === 0\\\"\\n    [class.row-even]=\\\"index % 2 === 1\\\"\\n    [class.selected]=\\\"selected\\\"\\n    [class.clickable]=\\\"dataTable.selectOnRowClick\\\"\\n    (dblclick)=\\\"dataTable.rowDoubleClicked(_this, $event)\\\"\\n    (click)=\\\"dataTable.rowClicked(_this, $event)\\\"\\n    >\\n    <td [hide]=\\\"!dataTable.expandColumnVisible\\\" (click)=\\\"expanded = !expanded; $event.stopPropagation()\\\" class=\\\"row-expand-button\\\">\\n        <span class=\\\"glyphicon glyphicon-triangle-right\\\" [hide]=\\\"expanded\\\"></span>\\n        <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" [hide]=\\\"!expanded\\\"></span>\\n    </td>\\n    <td [hide]=\\\"!dataTable.indexColumnVisible\\\" class=\\\"index-column\\\" [textContent]=\\\"displayIndex\\\"></td>\\n    <td [hide]=\\\"!dataTable.selectColumnVisible\\\" class=\\\"select-column\\\">\\n        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"selected\\\"/>\\n    </td>\\n    <td *ngFor=\\\"let column of dataTable.columns\\\" [hide]=\\\"!column.visible\\\" [ngClass]=\\\"column.styleClassObject\\\" class=\\\"data-column\\\"\\n        [style.background-color]=\\\"column.getCellColor(_this, index)\\\">\\n        <div *ngIf=\\\"!column.cellTemplate\\\" [textContent]=\\\"item[column.property]\\\"></div>\\n        <div *ngIf=\\\"column.cellTemplate\\\" [ngTemplateOutlet]=\\\"column.cellTemplate\\\" [ngOutletContext]=\\\"{column: column, row: _this, item: item}\\\"></div>\\n    </td>\\n</tr>\\n<tr *ngIf=\\\"dataTable.expandableRows\\\" [hide]=\\\"!expanded\\\" class=\\\"row-expansion\\\">\\n    <td [attr.colspan]=\\\"dataTable.columnCount\\\">\\n        <div [ngTemplateOutlet]=\\\"dataTable.expandTemplate\\\" [ngOutletContext]=\\\"{row: _this, item: item}\\\"></div>\\n    </td>\\n</tr>\\n\";\n\t//# sourceMappingURL=/components/row.template.js.map\n\n/***/ },\n\n/***/ 89:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.ROW_STYLE = \"\\n.select-column {\\n    text-align: center;\\n}\\n\\n.row-expand-button {\\n    cursor: pointer;\\n    text-align: center;\\n}\\n\\n.clickable {\\n    cursor: pointer;\\n}\\n\";\n\t//# sourceMappingURL=/components/row.style.js.map\n\n/***/ },\n\n/***/ 90:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.defaultTranslations = {\n\t    indexColumn: 'index',\n\t    selectColumn: 'select',\n\t    expandColumn: 'expand',\n\t    paginationLimit: 'Limit',\n\t    paginationRange: 'Results'\n\t};\n\t//# sourceMappingURL=/components/types.js.map\n\n/***/ },\n\n/***/ 91:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction drag(event, _a) {\n\t    var move = _a.move, up = _a.up;\n\t    var startX = event.pageX;\n\t    var startY = event.pageY;\n\t    var x = startX;\n\t    var y = startY;\n\t    var moved = false;\n\t    function mouseMoveHandler(event) {\n\t        var dx = event.pageX - x;\n\t        var dy = event.pageY - y;\n\t        x = event.pageX;\n\t        y = event.pageY;\n\t        if (dx || dy)\n\t            moved = true;\n\t        move(event, dx, dy, x, y);\n\t        event.preventDefault(); // to avoid text selection\n\t    }\n\t    function mouseUpHandler(event) {\n\t        x = event.pageX;\n\t        y = event.pageY;\n\t        document.removeEventListener('mousemove', mouseMoveHandler);\n\t        document.removeEventListener('mouseup', mouseUpHandler);\n\t        if (up)\n\t            up(event, x, y, moved);\n\t    }\n\t    document.addEventListener('mousemove', mouseMoveHandler);\n\t    document.addEventListener('mouseup', mouseUpHandler);\n\t}\n\texports.drag = drag;\n\t//# sourceMappingURL=/utils/drag.js.map\n\n/***/ },\n\n/***/ 92:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.TABLE_TEMPLATE = \"\\n<div class=\\\"data-table-wrapper\\\">\\n    <data-table-header *ngIf=\\\"header\\\"></data-table-header>\\n\\n    <div class=\\\"data-table-box\\\">\\n        <table class=\\\"table table-condensed table-bordered data-table\\\">\\n            <thead>\\n                <tr>\\n                    <th [hide]=\\\"!expandColumnVisible\\\" class=\\\"expand-column-header\\\">\\n                    <th [hide]=\\\"!indexColumnVisible\\\" class=\\\"index-column-header\\\">\\n                        <span [textContent]=\\\"indexColumnHeader\\\"></span>\\n                    </th>\\n                    <th [hide]=\\\"!selectColumnVisible\\\" class=\\\"select-column-header\\\">\\n                        <input [hide]=\\\"!multiSelect\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"selectAllCheckbox\\\"/>\\n                    </th>\\n                    <th *ngFor=\\\"let column of columns\\\" #th [hide]=\\\"!column.visible\\\" (click)=\\\"headerClicked(column, $event)\\\"\\n                        [class.sortable]=\\\"column.sortable\\\" [class.resizable]=\\\"column.resizable\\\"\\n                        [ngClass]=\\\"column.styleClassObject\\\" class=\\\"column-header\\\" [style.width]=\\\"column.width | px\\\">\\n                        <span *ngIf=\\\"!column.headerTemplate\\\" [textContent]=\\\"column.header\\\"></span>\\n                        <span *ngIf=\\\"column.headerTemplate\\\" [ngTemplateOutlet]=\\\"column.headerTemplate\\\" [ngOutletContext]=\\\"{column: column}\\\"></span>\\n                        <span class=\\\"column-sort-icon\\\" *ngIf=\\\"column.sortable\\\">\\n                            <span class=\\\"glyphicon glyphicon-sort column-sortable-icon\\\" [hide]=\\\"column.property === sortBy\\\"></span>\\n                            <span [hide]=\\\"column.property !== sortBy\\\">\\n                                <span class=\\\"glyphicon glyphicon-triangle-top\\\" [hide]=\\\"sortAsc\\\"></span>\\n                                <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" [hide]=\\\"!sortAsc\\\"></span>\\n                            </span>\\n                        </span>\\n                        <span *ngIf=\\\"column.resizable\\\" class=\\\"column-resize-handle\\\" (mousedown)=\\\"resizeColumnStart($event, column, th)\\\"></span>\\n                    </th>\\n                </tr>\\n            </thead>\\n            <tbody *ngFor=\\\"let item of items; let index=index\\\" class=\\\"data-table-row-wrapper\\\"\\n                   dataTableRow #row [item]=\\\"item\\\" [index]=\\\"index\\\" (selectedChange)=\\\"onRowSelectChanged(row)\\\">\\n            </tbody>\\n            <tbody class=\\\"substitute-rows\\\" *ngIf=\\\"pagination && substituteRows\\\">\\n                <tr *ngFor=\\\"let item of substituteItems, let index = index\\\"\\n                    [class.row-odd]=\\\"(index + items.length) % 2 === 0\\\"\\n                    [class.row-even]=\\\"(index + items.length) % 2 === 1\\\"\\n                    >\\n                    <td [hide]=\\\"!expandColumnVisible\\\"></td>\\n                    <td [hide]=\\\"!indexColumnVisible\\\">&nbsp;</td>\\n                    <td [hide]=\\\"!selectColumnVisible\\\"></td>\\n                    <td *ngFor=\\\"let column of columns\\\" [hide]=\\\"!column.visible\\\">\\n                </tr>\\n            </tbody>\\n        </table>\\n        <div class=\\\"loading-cover\\\" *ngIf=\\\"showReloading && reloading\\\"></div>\\n    </div>\\n\\n    <data-table-pagination *ngIf=\\\"pagination\\\"></data-table-pagination>\\n</div>\\n\";\n\t//# sourceMappingURL=/components/table.template.js.map\n\n/***/ },\n\n/***/ 93:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.TABLE_STYLE = \"\\n/* bootstrap override: */\\n\\n:host /deep/ .data-table.table > tbody+tbody {\\n    border-top: none;\\n}\\n:host /deep/ .data-table.table td {\\n    vertical-align: middle;\\n}\\n\\n:host /deep/ .data-table > thead > tr > th,\\n:host /deep/ .data-table > tbody > tr > td {\\n\\toverflow: hidden;\\n}\\n\\n/* I can't use the bootstrap striped table, because of the expandable rows */\\n:host /deep/ .row-odd {\\n    background-color: #F6F6F6;\\n}\\n:host /deep/ .row-even {\\n}\\n\\n.data-table .substitute-rows > tr:hover,\\n:host /deep/ .data-table .data-table-row:hover {\\n    background-color: #ECECEC;\\n}\\n/* table itself: */\\n\\n.data-table {\\n    box-shadow: 0 0 15px rgb(236, 236, 236);\\n    table-layout: fixed;\\n}\\n\\n/* header cells: */\\n\\n.column-header {\\n    position: relative;\\n}\\n.expand-column-header {\\n\\twidth: 50px;\\n}\\n.select-column-header {\\n\\twidth: 50px;\\n\\ttext-align: center;\\n}\\n.index-column-header {\\n\\twidth: 40px;\\n}\\n.column-header.sortable {\\n    cursor: pointer;\\n}\\n.column-header .column-sort-icon {\\n\\tfloat: right;\\n}\\n.column-header.resizable .column-sort-icon {\\n    margin-right: 8px;\\n}\\n.column-header .column-sort-icon .column-sortable-icon {\\n    color: lightgray;\\n}\\n.column-header .column-resize-handle {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    margin: 0;\\n    padding: 0;\\n    width: 8px;\\n    height: 100%;\\n    cursor: col-resize;\\n}\\n\\n/* cover: */\\n\\n.data-table-box {\\n    position: relative;\\n}\\n\\n.loading-cover {\\n   position: absolute;\\n   width: 100%;\\n   height: 100%;\\n   background-color: rgba(255, 255, 255, 0.3);\\n   top: 0;\\n}\\n\";\n\t//# sourceMappingURL=/components/table.style.js.map\n\n/***/ },\n\n/***/ 94:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\n\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar table_component_1 = __webpack_require__(85);\n\tvar pagination_template_1 = __webpack_require__(95);\n\tvar pagination_style_1 = __webpack_require__(96);\n\tvar DataTablePagination = (function () {\n\t    function DataTablePagination(dataTable) {\n\t        this.dataTable = dataTable;\n\t    }\n\t    DataTablePagination.prototype.pageBack = function () {\n\t        this.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);\n\t    };\n\t    DataTablePagination.prototype.pageForward = function () {\n\t        this.dataTable.offset += this.dataTable.limit;\n\t    };\n\t    DataTablePagination.prototype.pageFirst = function () {\n\t        this.dataTable.offset = 0;\n\t    };\n\t    DataTablePagination.prototype.pageLast = function () {\n\t        this.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;\n\t    };\n\t    Object.defineProperty(DataTablePagination.prototype, \"maxPage\", {\n\t        get: function () {\n\t            return Math.ceil(this.dataTable.itemCount / this.dataTable.limit);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DataTablePagination.prototype, \"limit\", {\n\t        get: function () {\n\t            return this.dataTable.limit;\n\t        },\n\t        set: function (value) {\n\t            this.dataTable.limit = Number(value); // TODO better way to handle that value of number <input> is string?\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DataTablePagination.prototype, \"page\", {\n\t        get: function () {\n\t            return this.dataTable.page;\n\t        },\n\t        set: function (value) {\n\t            this.dataTable.page = Number(value);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    DataTablePagination = __decorate([\n\t        core_1.Component({\n\t            selector: 'data-table-pagination',\n\t            template: pagination_template_1.PAGINATION_TEMPLATE,\n\t            styles: [pagination_style_1.PAGINATION_STYLE]\n\t        }),\n\t        __param(0, core_1.Inject(core_1.forwardRef(function () { return table_component_1.DataTable; }))), \n\t        __metadata('design:paramtypes', [table_component_1.DataTable])\n\t    ], DataTablePagination);\n\t    return DataTablePagination;\n\t}());\n\texports.DataTablePagination = DataTablePagination;\n\t//# sourceMappingURL=/components/pagination.component.js.map\n\n/***/ },\n\n/***/ 95:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.PAGINATION_TEMPLATE = \"\\n<div class=\\\"pagination-box\\\">\\n    <div class=\\\"pagination-range\\\">\\n        {{dataTable.translations.paginationRange}}:\\n        <span [textContent]=\\\"dataTable.offset + 1\\\"></span>\\n        -\\n        <span [textContent]=\\\"[dataTable.offset + dataTable.limit , dataTable.itemCount] | min\\\"></span>\\n        /\\n        <span [textContent]=\\\"dataTable.itemCount\\\"></span>\\n    </div>\\n    <div class=\\\"pagination-controllers\\\">\\n        <div class=\\\"pagination-limit\\\">\\n            <div class=\\\"input-group\\\">\\n                <span class=\\\"input-group-addon\\\">{{dataTable.translations.paginationLimit}}:</span>\\n                <input #limitInput type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"1\\\" step=\\\"1\\\"\\n                       [ngModel]=\\\"limit\\\" (blur)=\\\"limit = limitInput.value\\\"\\n                       (keyup.enter)=\\\"limit = limitInput.value\\\" (keyup.esc)=\\\"limitInput.value = limit\\\"/>\\n            </div>\\n        </div>\\n        <div class=\\\" pagination-pages\\\">\\n            <button [disabled]=\\\"dataTable.offset <= 0\\\" (click)=\\\"pageFirst()\\\" class=\\\"btn btn-default pagination-firstpage\\\">&laquo;</button>\\n            <button [disabled]=\\\"dataTable.offset <= 0\\\" (click)=\\\"pageBack()\\\" class=\\\"btn btn-default pagination-prevpage\\\">&lsaquo;</button>\\n            <div class=\\\"pagination-page\\\">\\n                <div class=\\\"input-group\\\">\\n                    <input #pageInput type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"1\\\" step=\\\"1\\\" max=\\\"{{maxPage}}\\\"\\n                           [ngModel]=\\\"page\\\" (blur)=\\\"page = pageInput.value\\\"\\n                           (keyup.enter)=\\\"page = pageInput.value\\\" (keyup.esc)=\\\"pageInput.value = page\\\"/>\\n                    <div class=\\\"input-group-addon\\\">\\n                        <span>/</span>\\n                        <span [textContent]=\\\"dataTable.lastPage\\\"></span>\\n                    </div>\\n                </div>\\n            </div>\\n            <button [disabled]=\\\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\\\" (click)=\\\"pageForward()\\\" class=\\\"btn btn-default pagination-nextpage\\\">&rsaquo;</button>\\n            <button [disabled]=\\\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\\\" (click)=\\\"pageLast()\\\" class=\\\"btn btn-default pagination-lastpage\\\">&raquo;</button>\\n        </div>\\n    </div>\\n</div>\\n\";\n\t//# sourceMappingURL=/components/pagination.template.js.map\n\n/***/ },\n\n/***/ 96:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.PAGINATION_STYLE = \"\\n.pagination-box {\\n    position: relative;\\n    margin-top: -10px;\\n}\\n.pagination-range {\\n    margin-top: 7px;\\n    margin-left: 3px;\\n    display: inline-block;\\n}\\n.pagination-controllers {\\n    float: right;\\n}\\n.pagination-controllers input {\\n    min-width: 60px;\\n    /*padding: 1px 0px 0px 5px;*/\\n    text-align: right;\\n}\\n\\n.pagination-limit {\\n    margin-right: 25px;\\n    display: inline-table;\\n    width: 150px;\\n}\\n.pagination-pages {\\n    display: inline-block;\\n}\\n.pagination-page {\\n    width: 110px;\\n    display: inline-table;\\n}\\n.pagination-box button {\\n    outline: none !important;\\n}\\n.pagination-prevpage,\\n.pagination-nextpage,\\n.pagination-firstpage,\\n.pagination-lastpage {\\n    vertical-align: top;\\n}\\n.pagination-reload {\\n    color: gray;\\n    font-size: 12px;\\n}\\n\";\n\t//# sourceMappingURL=/components/pagination.style.js.map\n\n/***/ },\n\n/***/ 97:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\n\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar table_component_1 = __webpack_require__(85);\n\tvar header_template_1 = __webpack_require__(98);\n\tvar header_style_1 = __webpack_require__(99);\n\tvar DataTableHeader = (function () {\n\t    function DataTableHeader(dataTable) {\n\t        this.dataTable = dataTable;\n\t        this.columnSelectorOpen = false;\n\t    }\n\t    DataTableHeader.prototype._closeSelector = function () {\n\t        this.columnSelectorOpen = false;\n\t    };\n\t    DataTableHeader = __decorate([\n\t        core_1.Component({\n\t            selector: 'data-table-header',\n\t            template: header_template_1.HEADER_TEMPLATE,\n\t            styles: [header_style_1.HEADER_STYLE],\n\t            host: {\n\t                '(document:click)': '_closeSelector()'\n\t            }\n\t        }),\n\t        __param(0, core_1.Inject(core_1.forwardRef(function () { return table_component_1.DataTable; }))), \n\t        __metadata('design:paramtypes', [table_component_1.DataTable])\n\t    ], DataTableHeader);\n\t    return DataTableHeader;\n\t}());\n\texports.DataTableHeader = DataTableHeader;\n\t//# sourceMappingURL=/components/header.component.js.map\n\n/***/ },\n\n/***/ 98:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.HEADER_TEMPLATE = \"\\n<div class=\\\"data-table-header\\\">\\n    <h4 class=\\\"title\\\" [textContent]=\\\"dataTable.headerTitle\\\"></h4>\\n    <div class=\\\"button-panel\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm refresh-button\\\"\\n            (click)=\\\"dataTable.reloadItems()\\\">\\n            <span class=\\\"glyphicon glyphicon-refresh\\\"></span>\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm column-selector-button\\\" [class.active]=\\\"columnSelectorOpen\\\"\\n            (click)=\\\"columnSelectorOpen = !columnSelectorOpen; $event.stopPropagation()\\\" >\\n            <span class=\\\"glyphicon glyphicon-list\\\"></span>\\n        </button>\\n        <div class=\\\"column-selector-wrapper\\\" (click)=\\\"$event.stopPropagation()\\\">\\n            <div *ngIf=\\\"columnSelectorOpen\\\" class=\\\"column-selector-box panel panel-default\\\">\\n                <div *ngIf=\\\"dataTable.expandableRows\\\" class=\\\"column-selector-fixed-column checkbox\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"dataTable.expandColumnVisible\\\"/>\\n                        <span>{{dataTable.translations.expandColumn}}</span>\\n                    </label>\\n                </div>\\n                <div *ngIf=\\\"dataTable.indexColumn\\\" class=\\\"column-selector-fixed-column checkbox\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"dataTable.indexColumnVisible\\\"/>\\n                        <span>{{dataTable.translations.indexColumn}}</span>\\n                    </label>\\n                </div>\\n                <div *ngIf=\\\"dataTable.selectColumn\\\" class=\\\"column-selector-fixed-column checkbox\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"dataTable.selectColumnVisible\\\"/>\\n                        <span>{{dataTable.translations.selectColumn}}</span>\\n                    </label>\\n                </div>\\n                <div *ngFor=\\\"let column of dataTable.columns\\\" class=\\\"column-selector-column checkbox\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"column.visible\\\"/>\\n                        <span [textContent]=\\\"column.header\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n\t//# sourceMappingURL=/components/header.template.js.map\n\n/***/ },\n\n/***/ 99:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.HEADER_STYLE = \"\\n.data-table-header {\\n    min-height: 25px;\\n    margin-bottom: 10px;\\n}\\n.title {\\n    display: inline-block;\\n    margin: 5px 0 0 5px;\\n}\\n.button-panel {\\n    float: right;\\n}\\n.button-panel button {\\n    outline: none !important;\\n}\\n\\n.column-selector-wrapper {\\n    position: relative;\\n}\\n.column-selector-box {\\n    box-shadow: 0 0 10px lightgray;\\n    width: 150px;\\n    padding: 10px;\\n    position: absolute;\\n    right: 0;\\n    top: 1px;\\n    z-index: 1060;\\n}\\n.column-selector-box .checkbox {\\n    margin-bottom: 4px;\\n}\\n.column-selector-fixed-column {\\n    font-style: italic;\\n}\\n\";\n\t//# sourceMappingURL=/components/header.style.js.map\n\n/***/ },\n\n/***/ 100:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar PixelConverter = (function () {\n\t    function PixelConverter() {\n\t    }\n\t    PixelConverter.prototype.transform = function (value, args) {\n\t        if (value === undefined) {\n\t            return;\n\t        }\n\t        if (typeof value === 'string') {\n\t            return value;\n\t        }\n\t        if (typeof value === 'number') {\n\t            return value + 'px';\n\t        }\n\t    };\n\t    PixelConverter = __decorate([\n\t        core_1.Pipe({\n\t            name: 'px'\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], PixelConverter);\n\t    return PixelConverter;\n\t}());\n\texports.PixelConverter = PixelConverter;\n\t//# sourceMappingURL=/utils/px.js.map\n\n/***/ },\n\n/***/ 101:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tfunction isBlank(obj) {\n\t    return obj === undefined || obj === null;\n\t}\n\tvar Hide = (function () {\n\t    function Hide(_elementRef, _renderer) {\n\t        this._elementRef = _elementRef;\n\t        this._renderer = _renderer;\n\t        this._prevCondition = null;\n\t    }\n\t    Object.defineProperty(Hide.prototype, \"hide\", {\n\t        set: function (newCondition) {\n\t            this.initDisplayStyle();\n\t            if (newCondition && (isBlank(this._prevCondition) || !this._prevCondition)) {\n\t                this._prevCondition = true;\n\t                this._renderer.setElementStyle(this._elementRef.nativeElement, 'display', 'none');\n\t            }\n\t            else if (!newCondition && (isBlank(this._prevCondition) || this._prevCondition)) {\n\t                this._prevCondition = false;\n\t                this._renderer.setElementStyle(this._elementRef.nativeElement, 'display', this._displayStyle);\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Hide.prototype.initDisplayStyle = function () {\n\t        if (this._displayStyle === undefined) {\n\t            var displayStyle = this._elementRef.nativeElement.style.display;\n\t            if (displayStyle && displayStyle !== 'none') {\n\t                this._displayStyle = displayStyle;\n\t            }\n\t        }\n\t    };\n\t    Hide = __decorate([\n\t        core_1.Directive({ selector: '[hide]', inputs: ['hide'] }), \n\t        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer])\n\t    ], Hide);\n\t    return Hide;\n\t}());\n\texports.Hide = Hide;\n\t//# sourceMappingURL=/utils/hide.js.map\n\n/***/ },\n\n/***/ 102:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar MinPipe = (function () {\n\t    function MinPipe() {\n\t    }\n\t    MinPipe.prototype.transform = function (value, args) {\n\t        return Math.min.apply(null, value);\n\t    };\n\t    MinPipe = __decorate([\n\t        core_1.Pipe({\n\t            name: 'min'\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], MinPipe);\n\t    return MinPipe;\n\t}());\n\texports.MinPipe = MinPipe;\n\t//# sourceMappingURL=/utils/min.js.map\n\n/***/ },\n\n/***/ 103:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar DataTableResource = (function () {\n\t    function DataTableResource(items) {\n\t        this.items = items;\n\t    }\n\t    DataTableResource.prototype.query = function (params, filter) {\n\t        var result = [];\n\t        if (filter) {\n\t            result = this.items.filter(filter);\n\t        }\n\t        else {\n\t            result = this.items.slice(); // shallow copy to use for sorting instead of changing the original\n\t        }\n\t        if (params.sortBy) {\n\t            result.sort(function (a, b) {\n\t                if (typeof a[params.sortBy] === 'string') {\n\t                    return a[params.sortBy].localeCompare(b[params.sortBy]);\n\t                }\n\t                else {\n\t                    return a[params.sortBy] - b[params.sortBy];\n\t                }\n\t            });\n\t            if (params.sortAsc === false) {\n\t                result.reverse();\n\t            }\n\t        }\n\t        if (params.offset !== undefined) {\n\t            if (params.limit === undefined) {\n\t                result = result.slice(params.offset, result.length);\n\t            }\n\t            else {\n\t                result = result.slice(params.offset, params.offset + params.limit);\n\t            }\n\t        }\n\t        return new Promise(function (resolve, reject) {\n\t            setTimeout(function () { return resolve(result); });\n\t        });\n\t    };\n\t    DataTableResource.prototype.count = function () {\n\t        var _this = this;\n\t        return new Promise(function (resolve, reject) {\n\t            setTimeout(function () { return resolve(_this.items.length); });\n\t        });\n\t    };\n\t    return DataTableResource;\n\t}());\n\texports.DataTableResource = DataTableResource;\n\t//# sourceMappingURL=/tools/data-table-resource.js.map\n\n/***/ },\n\n/***/ 104:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(24);\n\t__webpack_require__(105);\n\tvar AppComponent = (function () {\n\t    function AppComponent(router) {\n\t        this.router = router;\n\t    }\n\t    AppComponent.prototype.ngAfterViewInit = function () {\n\t        this.router.navigateByUrl(\"/home\");\n\t    };\n\t    AppComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'discovery-app',\n\t            template: __webpack_require__(110),\n\t            styles: [__webpack_require__(111)],\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _a) || Object])\n\t    ], AppComponent);\n\t    return AppComponent;\n\t    var _a;\n\t}());\n\texports.AppComponent = AppComponent;\n\n\n/***/ },\n\n/***/ 105:\n701,\n\n/***/ 110:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<main>\\n    <div #watsonOverlay id=\\\"watson-overlay\\\" class=\\\"overlay hide\\\">\\n        <div id=\\\"watson-thinking\\\" class=\\\"loading\\\"></div>\\n    </div>\\n    <nav class=\\\"navbar navbar-default\\\">\\n        <ul class=\\\"nav navbar-nav lower-navbar\\\">\\n            <li><a class=\\\"navbar-brand\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">Review Overview</a></li>\\n            <li><a class=\\\"navbar-brand\\\" routerLink=\\\"/enrichment-visualizer\\\" routerLinkActive=\\\"active\\\">Enrichment Visualizer</a></li>\\n            <li><a class=\\\"navbar-brand\\\" routerLink=\\\"/product-search\\\" routerLinkActive=\\\"active\\\">Product Search</a></li>\\n        </ul>\\n    </nav>\\n    <router-outlet></router-outlet>\\n</main>\";\n\n/***/ },\n\n/***/ 111:\n/***/ function(module, exports) {\n\n\tmodule.exports = \".header-tab {\\n    display: flex;\\n    justify-content: center;\\n    flex: 0 0 9rem;\\n    font-size: 1.5em;\\n    color: black;\\n}\\n\\n.header-tab:not(:last-child) {\\n    border-right: 2px solid black;\\n}\\n\\n.header-tab-option {\\n    cursor: pointer;\\n}\\n\\n.header-tab-selected {\\n    /*font-size: 1.75rem;*/\\n    color: purple;\\n}\\n.header-tab-selected .pdf-header-tab-option {\\n    color: purple;\\n}\\n\\na, a:visited {\\n    color: #333;\\n}\\n\\n/*Side bar*/\\nhtml, body, md-sidenav-layout, .side-nav {\\n    margin: 0;\\n    width: 100%;\\n    height: 100%;\\n}\\n.side-nav {\\n    width: 300px;\\n    background-color: gainsboro;\\n}\\n\\n.side-nav md-sidenav {\\n    max-width: 500px;\\n}\\n\\n.side-nav .md-sidenav-content,\\n.side-nav md-sidenav {\\n    display: flex;\\n}\\n\\n/*.side-nav {*/\\n    /*overflow: auto;*/\\n/*}*/\\n\\n.sub-container {\\n    width: 90%;\\n    background-color: gainsboro;\\n}\"\n\n/***/ },\n\n/***/ 112:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\t__webpack_require__(105);\n\tvar query_service_1 = __webpack_require__(114);\n\tvar constants = __webpack_require__(395);\n\tvar ReviewOverview = (function () {\n\t    function ReviewOverview(queryService) {\n\t        this.queryService = queryService;\n\t        this.showProductsOverview = false;\n\t        this.bubbleChartResults = null;\n\t        this.productResults = null;\n\t        this.reviewTimeline = null;\n\t        this.productOpened = true;\n\t        this.bubbleOpened = true;\n\t        this.reviewTimelineOpened = true;\n\t        this.positiveLoaded = false;\n\t        this.negativeLoaded = false;\n\t        this.neutralLoaded = false;\n\t        this.bubbleLoaded = false;\n\t        this.productResultsLoaded = false;\n\t        this.reviewTimelineLoaded = false;\n\t    }\n\t    ReviewOverview.prototype.ngOnInit = function () {\n\t        $(\"#watson-overlay\").removeClass(\"hide\");\n\t        this.getBubbleChartData();\n\t        this.getProducts();\n\t        this.getReviewTimeline();\n\t    };\n\t    ReviewOverview.prototype.ngDoCheck = function () {\n\t        if (this.bubbleLoaded && this.productResultsLoaded && this.reviewTimelineLoaded) {\n\t            $(\"#watson-overlay\").addClass(\"hide\");\n\t            this.showProductsOverview = true;\n\t        }\n\t    };\n\t    ReviewOverview.prototype.toggleProduct = function () {\n\t        this.productOpened = !this.productOpened;\n\t    };\n\t    ReviewOverview.prototype.toggleBubble = function () {\n\t        this.bubbleOpened = !this.bubbleOpened;\n\t    };\n\t    ReviewOverview.prototype.toggleReviewTimeline = function () {\n\t        this.reviewTimelineOpened = !this.reviewTimelineOpened;\n\t    };\n\t    ReviewOverview.prototype.getProducts = function () {\n\t        var _this = this;\n\t        this.queryService.query(constants.queries[\"product-review-counts\"]).subscribe(function (data) {\n\t            _this.productResults = _this.parseProducts(data.aggregations[0].results);\n\t            _this.productResultsLoaded = true;\n\t        }, function (err) {\n\t            $(\"#watson-overlay\").addClass(\"hide\");\n\t            console.log(err);\n\t        });\n\t    };\n\t    ReviewOverview.prototype.getBubbleChartData = function () {\n\t        var _this = this;\n\t        this.queryService.query(constants.queries[\"bubble-chart\"]).subscribe(function (data) {\n\t            _this.bubbleChartResults = _this.parseBubbleChart(data.aggregations[0].aggregations[0].results);\n\t            _this.bubbleLoaded = true;\n\t        }, function (err) {\n\t            $(\"#watson-overlay\").addClass(\"hide\");\n\t            console.log(err);\n\t        });\n\t    };\n\t    ReviewOverview.prototype.getReviewTimeline = function () {\n\t        var _this = this;\n\t        this.queryService.query(constants.queries[\"review-timeline\"]).subscribe(function (data) {\n\t            _this.reviewTimeline = _this.parseTimeline(data.aggregations[0].results);\n\t            _this.reviewTimelineLoaded = true;\n\t        }, function (err) {\n\t            $(\"#watson-overlay\").addClass(\"hide\");\n\t            console.log(err);\n\t        });\n\t    };\n\t    ReviewOverview.prototype.parseBubbleChart = function (data) {\n\t        var result = [];\n\t        var total = 0;\n\t        for (var i in data) {\n\t            var obj = data[i];\n\t            var json = { \"name\": \"\", \"count\": \"\", \"word\": \"\" };\n\t            json.name = obj[\"key\"];\n\t            json.count = obj[\"matching_results\"];\n\t            json.word = obj[\"key\"];\n\t            result.push(json);\n\t        }\n\t        return result;\n\t    };\n\t    ReviewOverview.prototype.parseProducts = function (data) {\n\t        var result = [];\n\t        var total = 0;\n\t        for (var i in data) {\n\t            var obj = data[i];\n\t            var json = { \"name\": \"\", \"count\": \"\" };\n\t            json.name = obj[\"key\"];\n\t            json.count = obj[\"matching_results\"];\n\t            result.push(json);\n\t        }\n\t        return result;\n\t    };\n\t    ReviewOverview.prototype.parseTimeline = function (data) {\n\t        var result = [];\n\t        for (var i = 0; i < data.length; i++) {\n\t            var obj = { \"date\": data[i][\"key\"], \"sentiment\": data[i][\"matching_results\"] };\n\t            result.push(obj);\n\t        }\n\t        return result;\n\t    };\n\t    ReviewOverview = __decorate([\n\t        core_1.Component({\n\t            selector: 'review-overview',\n\t            template: __webpack_require__(396),\n\t            styles: [__webpack_require__(111)],\n\t            providers: [query_service_1.QueryService]\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof query_service_1.QueryService !== 'undefined' && query_service_1.QueryService) === 'function' && _a) || Object])\n\t    ], ReviewOverview);\n\t    return ReviewOverview;\n\t    var _a;\n\t}());\n\texports.ReviewOverview = ReviewOverview;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(113)))\n\n/***/ },\n\n/***/ 114:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar http_1 = __webpack_require__(58);\n\tvar Rx_1 = __webpack_require__(115);\n\t// Import RxJs required methods\n\t__webpack_require__(71);\n\t__webpack_require__(82);\n\tvar constants = __webpack_require__(395);\n\tvar QueryService = (function () {\n\t    // Resolve HTTP using the constructor\n\t    function QueryService(http) {\n\t        this.http = http;\n\t        this.queryUrl = constants.query_url;\n\t    }\n\t    // Fetch all existing comments\n\t    QueryService.prototype.query = function (paramObj) {\n\t        var params = new http_1.URLSearchParams();\n\t        if (paramObj.query) {\n\t            params.set('query', paramObj.query);\n\t        }\n\t        if (paramObj.count)\n\t            params.set('count', paramObj.count);\n\t        if (paramObj.filter) {\n\t            params.set('filter', paramObj.filterUnits);\n\t        }\n\t        if (paramObj.aggregation) {\n\t            params.set('aggregation', paramObj.aggregation);\n\t        }\n\t        if (paramObj.return)\n\t            params.set('return', paramObj.return);\n\t        // ...using get request\n\t        return this.http.get(this.queryUrl, { search: params })\n\t            .map(function (res) { return res.json(); })\n\t            .catch(function (error) { return Rx_1.Observable.throw(error.json || 'Server error'); });\n\t    };\n\t    QueryService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof http_1.Http !== 'undefined' && http_1.Http) === 'function' && _a) || Object])\n\t    ], QueryService);\n\t    return QueryService;\n\t    var _a;\n\t}());\n\texports.QueryService = QueryService;\n\n\n/***/ },\n\n/***/ 395:\n/***/ function(module, exports) {\n\n\t'use strict';\n\texports.query_url = window.location.href.split('#')[0] + \"discovery/query\";\n\texports.escape_map = {\n\t    '&': '\\\\&',\n\t    '<': '\\\\<',\n\t    '>': '\\\\>',\n\t    '\"': '\\\\\"',\n\t    '?': '\\\\?',\n\t    '[': '\\\\[',\n\t    ']': '\\\\[',\n\t    '^': '\\\\^',\n\t    '$': '\\\\$',\n\t    '.': '\\\\.',\n\t    '|': '\\\\|',\n\t    '*': '\\\\*',\n\t    '+': '\\\\+',\n\t    '{': '\\\\{',\n\t    '}': '\\\\}',\n\t    '(': '\\\\(',\n\t    ')': '\\\\)',\n\t    '~': '\\\\~'\n\t};\n\texports.escape_characters = /[&<>\"?\\[\\]^$.|*+{}~()]/g;\n\texports.queries = {\n\t    \"review-timeline\": {\n\t        \"count\": 1000,\n\t        \"aggregation\": \"timeslice(field:review_date,interval:1year)\",\n\t        \"return\": \"aggregations\"\n\t    },\n\t    \"product-search\": {\n\t        \"count\": 1,\n\t        \"query\": \"product_name:%s\"\n\t    },\n\t    \"bubble-chart\": {\n\t        \"count\": 1000,\n\t        \"aggregation\": \"nested(review_text_enriched.keywords)\" +\n\t            \".term(review_text_enriched.keywords.text.raw,count:50)\" +\n\t            \".average(review_text_enriched.keywords.sentiment.score)\",\n\t        \"return\": \"aggregations\"\n\t    },\n\t    \"product-review-counts\": {\n\t        \"count\": 1000,\n\t        \"aggregation\": \"term(product_name.raw,count:50)\",\n\t        \"return\": \"aggregations\"\n\t    },\n\t    \"pie-chart-positive\": {\n\t        \"count\": 1000,\n\t        \"aggregation\": \"filter(review_text_enriched.docSentiment.type:positive)\" +\n\t            \".term(review_text_enriched.keywords.text.raw,count:15)\",\n\t        \"return\": \"aggregations\"\n\t    },\n\t    \"pie-chart-negative\": {\n\t        \"count\": 1000,\n\t        \"aggregation\": \"filter(review_text_enriched.docSentiment.type:negative)\" +\n\t            \".term(review_text_enriched.keywords.text.raw,count:15)\",\n\t        \"return\": \"aggregations\"\n\t    },\n\t    \"pie-chart-neutral\": {\n\t        \"count\": 1000,\n\t        \"aggregation\": \"filter(review_text_enriched.docSentiment.type:neutral)\" +\n\t            \".term(review_text_enriched.keywords.text.raw,count:15)\",\n\t        \"return\": \"aggregations\"\n\t    },\n\t    \"sentiment-by-keywords\": {\n\t        \"count\": 1000,\n\t        \"aggregation\": \"filter(product_name:%s)\" +\n\t            \".nested(review_text_enriched.keywords)\" +\n\t            \".[filter(review_text_enriched.keywords.sentiment.type:positive).term(review_text_enriched.keywords.text.raw)\" +\n\t            \",filter(review_text_enriched.keywords.sentiment.type:negative).term(review_text_enriched.keywords.text.raw)\" +\n\t            \",filter(review_text_enriched.keywords.sentiment.type:neutral).term(review_text_enriched.keywords.text.raw)]\",\n\t        \"return\": \"aggregations\"\n\t    },\n\t    \"product-sentiment\": {\n\t        \"count\": 1000,\n\t        \"aggregation\": \"filter(product_name:%s)\" +\n\t            \".[filter(review_text_enriched.docSentiment.type:positive)\" +\n\t            \",filter(review_text_enriched.docSentiment.type:negative)\" +\n\t            \",filter(review_text_enriched.docSentiment.type:neutral)]\",\n\t        \"return\": \"aggregations\"\n\t    },\n\t    \"average-product-sentiment\": {\n\t        \"count\": 1000,\n\t        \"aggregation\": \"filter(product_name:%s).average(review_text_enriched.docSentiment.score)\",\n\t        \"return\": \"aggregations\"\n\t    },\n\t    \"product-sentiment-timeline\": {\n\t        \"count\": 1000,\n\t        \"aggregation\": \"filter(product_name:%s).timeslice(field:review_date,interval:1year).average(review_text_enriched.docSentiment.score)\",\n\t        \"return\": \"aggregations\"\n\t    }\n\t};\n\n\n/***/ },\n\n/***/ 396:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"main-container\\\">\\n    <div class=\\\"text-center\\\">\\n        <div class=\\\"row\\\">\\n            <!--src=\\\"../public/images/inside-out-icons.png\\\"-->\\n            <div class=\\\"col-centered\\\"><h1>Home/Kitchen Amazon Product Reviews Overview</h1></div>\\n            <div class=\\\"col-sm-12\\\" *ngIf=\\\"showProductsOverview\\\">\\n                <div class=\\\"panel panel-default col-centered sub-container\\\">\\n                    <div class=\\\"panel-heading\\\" (click)=\\\"toggleProduct()\\\">\\n                        <h3 class=\\\"panel-title\\\">Product Review Counts</h3>\\n                    </div>\\n                    <div class=\\\"panel-body\\\" [ngClass]=\\\"{hide: !productOpened}\\\">\\n                        <product-data-table [products]=\\\"productResults\\\"></product-data-table>\\n                    </div>\\n                </div>\\n                <div class=\\\"panel panel-default col-centered sub-container\\\">\\n                    <div class=\\\"panel-heading\\\" (click)=\\\"toggleReviewTimeline()\\\">\\n                        <h3 class=\\\"panel-title\\\">Product Reviews Over Time</h3>\\n                    </div>\\n                    <div class=\\\"panel-body\\\" [ngClass]=\\\"{hide: !reviewTimelineOpened}\\\">\\n                        <product-sentiment-timeline [results]=\\\"reviewTimeline\\\" [width]=\\\"900\\\" [ylabel]=\\\"'Review Count'\\\"></product-sentiment-timeline>\\n                    </div>\\n                </div>\\n                <div class=\\\"panel panel-default col-centered sub-container\\\">\\n                    <div class=\\\"panel-heading\\\" (click)=\\\"toggleBubble()\\\">\\n                        <h3 class=\\\"panel-title\\\">Keyword Counts in Product Reviews</h3>\\n                    </div>\\n                    <div class=\\\"panel-body\\\" [ngClass]=\\\"{hide: !bubbleOpened}\\\">\\n                        <bubble-chart [data]=\\\"bubbleChartResults\\\"\\n                                      (resultChange)=\\\"onReceiveResult($event);\\\"></bubble-chart>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\";\n\n/***/ },\n\n/***/ 397:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\t__webpack_require__(105);\n\tvar query_service_1 = __webpack_require__(114);\n\tvar d3 = __webpack_require__(398);\n\tvar helpers = __webpack_require__(399);\n\tvar EnrichmentVisualizer = (function () {\n\t    function EnrichmentVisualizer() {\n\t        this.results = null;\n\t        this.selected = null;\n\t        this.relations = \"RELATIONS\";\n\t        this.concepts = \"CONCEPTS\";\n\t        this.entities = \"ENTITIES\";\n\t        this.keywords = \"KEYWORDS\";\n\t        this.csvResults = { \"concepts\": [], \"entities\": [], \"relations\": [], \"keywords\": [] };\n\t    }\n\t    EnrichmentVisualizer.prototype.onReceiveResult = function ($event) {\n\t        this.results = null;\n\t        if ($event[\"results\"] !== undefined && $event[\"results\"].length > 0) {\n\t            this.results = $event[\"results\"];\n\t            this.selected = this.relations;\n\t        }\n\t        else {\n\t            $(\"#watson-overlay\").addClass(\"hide\");\n\t            this.results = [];\n\t        }\n\t    };\n\t    EnrichmentVisualizer.prototype.ngOnInit = function () {\n\t        $('[data-toggle=\"popover\"]').popover({ container: 'body' });\n\t    };\n\t    EnrichmentVisualizer.prototype.showRelations = function () {\n\t        this.selected = this.relations;\n\t    };\n\t    ;\n\t    EnrichmentVisualizer.prototype.showConcepts = function () {\n\t        this.selected = this.concepts;\n\t    };\n\t    ;\n\t    EnrichmentVisualizer.prototype.showEntities = function () {\n\t        this.selected = this.entities;\n\t    };\n\t    ;\n\t    EnrichmentVisualizer.prototype.showKeywords = function () {\n\t        this.selected = this.keywords;\n\t    };\n\t    ;\n\t    EnrichmentVisualizer.prototype.convertToCSV = function (data) {\n\t        for (var i = 0; i < data.length; i++) {\n\t            //concepts\n\t            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"concepts\"].length > 0) {\n\t                var doc = data[i][\"review_text_enriched\"][\"concepts\"];\n\t                for (var j = 0; j < doc.length; j++) {\n\t                    var obj = doc[j];\n\t                    var jsonObj = {};\n\t                    jsonObj[\"product_name\"] = data[i][\"product_name\"];\n\t                    jsonObj[\"review_text\"] = data[i][\"review_text\"];\n\t                    jsonObj[\"summary\"] = data[i][\"summary\"];\n\t                    jsonObj[\"doc_sentiment_type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n\t                    jsonObj[\"doc_sentiment_score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n\t                    jsonObj[\"concept_text\"] = obj[\"text\"];\n\t                    jsonObj[\"concept_relevance\"] = obj[\"relevance\"];\n\t                    jsonObj[\"concept_references\"] = [];\n\t                    if (obj[\"dbpedia\"])\n\t                        jsonObj[\"concept_references\"].push(obj[\"dbpedia\"]);\n\t                    if (obj[\"freebase\"])\n\t                        jsonObj[\"concept_references\"].push(obj[\"freebase\"]);\n\t                    if (obj[\"opencyc\"])\n\t                        jsonObj[\"concept_references\"].push(obj[\"opencyc\"]);\n\t                    if (obj[\"yago\"])\n\t                        jsonObj[\"concept_references\"].push(obj[\"yago\"]);\n\t                    if (obj[\"website\"])\n\t                        jsonObj[\"concept_references\"].push(obj[\"website\"]);\n\t                    if (obj[\"crunchbase\"])\n\t                        jsonObj[\"concept_references\"].push(obj[\"crunchbase\"]);\n\t                    this.csvResults[\"concepts\"].push(jsonObj);\n\t                }\n\t            }\n\t            //entities\n\t            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"entities\"].length > 0) {\n\t                var doc = data[i][\"review_text_enriched\"][\"entities\"];\n\t                for (var j = 0; j < doc.length; j++) {\n\t                    var obj = doc[j];\n\t                    var jsonObj = {};\n\t                    jsonObj[\"product_name\"] = data[i][\"product_name\"];\n\t                    jsonObj[\"review_text\"] = data[i][\"review_text\"];\n\t                    jsonObj[\"summary\"] = data[i][\"summary\"];\n\t                    jsonObj[\"doc_sentiment_type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n\t                    jsonObj[\"doc_sentiment_score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n\t                    jsonObj[\"entity_text\"] = obj[\"text\"];\n\t                    jsonObj[\"entity_relevance\"] = obj[\"relevance\"];\n\t                    jsonObj[\"entity_type\"] = obj[\"type\"];\n\t                    jsonObj[\"sentiment_score\"] = obj[\"sentiment\"][\"score\"];\n\t                    jsonObj[\"sentiment_type\"] = obj[\"sentiment\"][\"type\"];\n\t                    this.csvResults[\"entities\"].push(jsonObj);\n\t                }\n\t            }\n\t            //keywords\n\t            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"keywords\"].length > 0) {\n\t                var doc_1 = data[i][\"review_text_enriched\"][\"keywords\"];\n\t                for (var j = 0; j < doc_1.length; j++) {\n\t                    var obj = doc_1[j];\n\t                    var jsonObj = {};\n\t                    jsonObj[\"product_name\"] = data[i][\"product_name\"];\n\t                    jsonObj[\"review_text\"] = data[i][\"review_text\"];\n\t                    jsonObj[\"summary\"] = data[i][\"summary\"];\n\t                    jsonObj[\"doc_sentiment_type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n\t                    jsonObj[\"doc_sentiment_score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n\t                    jsonObj[\"keyword_text\"] = obj[\"text\"];\n\t                    jsonObj[\"keyword_relevance\"] = obj[\"relevance\"];\n\t                    jsonObj[\"sentiment_score\"] = obj[\"sentiment\"][\"score\"];\n\t                    jsonObj[\"sentiment_type\"] = obj[\"sentiment\"][\"type\"];\n\t                    this.csvResults[\"keywords\"].push(jsonObj);\n\t                }\n\t            }\n\t            //relations\n\t            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"relations\"].length > 0) {\n\t                var doc = data[i][\"review_text_enriched\"][\"relations\"];\n\t                for (var j = 0; j < doc.length; j++) {\n\t                    var relation = doc[j];\n\t                    var jsonObj = {};\n\t                    jsonObj[\"product_name\"] = data[i][\"product_name\"];\n\t                    jsonObj[\"review_text\"] = data[i][\"review_text\"];\n\t                    jsonObj[\"summary\"] = data[i][\"summary\"];\n\t                    jsonObj[\"doc_sentiment_type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n\t                    jsonObj[\"doc_sentiment_score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n\t                    jsonObj[\"relation_sentence\"] = relation[\"sentence\"];\n\t                    jsonObj[\"relation_sentence_subject\"] = relation[\"subject\"] ? relation[\"subject\"][\"text\"] : \"N/A\";\n\t                    jsonObj[\"relation_sentence_action\"] = relation[\"action\"] ? relation[\"action\"][\"text\"] : \"N/A\";\n\t                    jsonObj[\"relation_sentence_object\"] = relation[\"object\"] ? relation[\"object\"][\"text\"] : \"N/A\";\n\t                    jsonObj[\"relation_sentence_location\"] = relation[\"location\"] ? relation[\"location\"][\"text\"] : \"N/A\";\n\t                    this.csvResults[\"relations\"].push(jsonObj);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    EnrichmentVisualizer.prototype.downloadAsCSV = function () {\n\t        if (this.results) {\n\t            this.convertToCSV(this.results);\n\t            var concepts = d3.csvFormat(this.csvResults[\"concepts\"]);\n\t            var entities = d3.csvFormat(this.csvResults[\"entities\"]);\n\t            var keywords = d3.csvFormat(this.csvResults[\"keywords\"]);\n\t            var relations = d3.csvFormat(this.csvResults[\"relations\"]);\n\t            helpers.exportToCSV(concepts, \"concepts-export.csv\");\n\t            helpers.exportToCSV(entities, \"entities-export.csv\");\n\t            helpers.exportToCSV(keywords, \"keywords-export.csv\");\n\t            helpers.exportToCSV(relations, \"relations-export.csv\");\n\t        }\n\t    };\n\t    __decorate([\n\t        core_1.ViewChild('start'), \n\t        __metadata('design:type', Object)\n\t    ], EnrichmentVisualizer.prototype, \"start\", void 0);\n\t    EnrichmentVisualizer = __decorate([\n\t        core_1.Component({\n\t            selector: 'enrichment-visualizer',\n\t            template: __webpack_require__(400),\n\t            styles: [__webpack_require__(111)],\n\t            providers: [query_service_1.QueryService]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], EnrichmentVisualizer);\n\t    return EnrichmentVisualizer;\n\t}());\n\texports.EnrichmentVisualizer = EnrichmentVisualizer;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(113)))\n\n/***/ },\n\n/***/ 399:\n/***/ function(module, exports) {\n\n\t'use strict';\n\texports.escapeHTML = function (s, escape_characters, escape_map) {\n\t    return s.replace(escape_characters, function (c) {\n\t        return escape_map[c];\n\t    });\n\t};\n\texports.exportToCSV = function (csvFile, fileName) {\n\t    if (csvFile !== null) {\n\t        var blob = new Blob([csvFile], { type: 'text/csv;charset=utf-8;' });\n\t        if (navigator.msSaveBlob) {\n\t            navigator.msSaveBlob(blob, fileName);\n\t        }\n\t        else {\n\t            var link = document.createElement(\"a\");\n\t            if (link.download !== undefined) {\n\t                // Browsers that support HTML5 download attribute\n\t                var url = URL.createObjectURL(blob);\n\t                link.setAttribute(\"href\", url);\n\t                link.setAttribute(\"download\", fileName);\n\t                link.style.visibility = 'hidden';\n\t                document.body.appendChild(link);\n\t                link.click();\n\t                document.body.removeChild(link);\n\t            }\n\t        }\n\t    }\n\t};\n\n\n/***/ },\n\n/***/ 400:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"main-container\\\">\\n    <query-form (resultChange)=\\\"onReceiveResult($event);\\\"></query-form>\\n    <div class=\\\"center-block sub-container\\\" *ngIf=\\\"results != null && results.length > 0\\\">\\n        <div class=\\\"row no-margin\\\">\\n            <div class=\\\"panel-heading whitesmoke-bg col-sm-3 header-tab text-center\\\" id=\\\"relations-tab\\\" (click)=\\\"showRelations()\\\"\\n                 [ngClass]=\\\"{'header-tab-selected': selected == relations}\\\">\\n                <div class=\\\"header-tab-option\\\">\\n                    Relations\\n                </div>\\n            </div>\\n            <div class=\\\"panel-heading whitesmoke-bg col-sm-3 header-tab\\\" id=\\\"concepts-tab\\\" (click)=\\\"showConcepts()\\\"\\n                 [ngClass]=\\\"{'header-tab-selected': selected == concepts}\\\">\\n                <div class=\\\"header-tab-option\\\">\\n                    Concepts\\n                </div>\\n            </div>\\n            <div class=\\\"panel-heading whitesmoke-bg col-sm-3 header-tab\\\" id=\\\"entities-tab\\\" (click)=\\\"showEntities()\\\"\\n                 [ngClass]=\\\"{'header-tab-selected': selected == entities}\\\">\\n                <div class=\\\"header-tab-option\\\">\\n                    Entities\\n                </div>\\n            </div>\\n            <div class=\\\"panel-heading whitesmoke-bg col-sm-3 header-tab\\\" id=\\\"keywords-tab\\\" (click)=\\\"showKeywords()\\\"\\n                 [ngClass]=\\\"{'header-tab-selected': selected == keywords}\\\">\\n                <div class=\\\"header-tab-option\\\">\\n                    Keywords\\n                </div>\\n            </div>\\n        </div>\\n        <i class=\\\"fa fa-download fa-3x fa-border\\\" (click)=\\\"downloadAsCSV()\\\"></i>\\n        <div class=\\\"\\\">\\n            <section class=\\\"\\\">\\n                <div [hidden]=\\\"selected != relations\\\" class=\\\"margin-tb-sm\\\">\\n                    <relations-list [data]=\\\"results\\\"></relations-list>\\n                </div>\\n                <div [hidden]=\\\"selected != concepts\\\" class=\\\"\\\">\\n                    <concepts-table [data]=\\\"results\\\"></concepts-table>\\n                </div>\\n                <div [hidden]=\\\"selected != entities\\\" class=\\\"\\\">\\n                    <entities-table [data]=\\\"results\\\"></entities-table>\\n                </div>\\n                <div [hidden]=\\\"selected != keywords\\\" class=\\\"\\\">\\n                    <keywords-table [data]=\\\"results\\\"></keywords-table>\\n                </div>\\n            </section>\\n        </div>\\n    </div>\\n    <div class=\\\"text-center row\\\" *ngIf=\\\"results !== null && results.length < 1\\\">\\n        <h1>There are no matching results.</h1>\\n    </div>\\n</div>\\n\\n\";\n\n/***/ },\n\n/***/ 401:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\t__webpack_require__(105);\n\tvar query_service_1 = __webpack_require__(114);\n\tvar constants = __webpack_require__(395);\n\tvar helpers = __webpack_require__(399);\n\tvar sprintf = __webpack_require__(402);\n\tvar ProductSearch = (function () {\n\t    function ProductSearch(queryService) {\n\t        this.queryService = queryService;\n\t        this.showProductsOverview = false;\n\t        this.positiveLoaded = false;\n\t        this.sentimentKeywordLoaded = false;\n\t        this.averageSentimentLoaded = false;\n\t        this.sentimentTimelineLoaded = false;\n\t        this.noResults = false;\n\t        this.form = {\n\t            product: \"\"\n\t        };\n\t    }\n\t    ProductSearch.prototype.onResize = function (event) {\n\t        console.log(event.target.innerWidth);\n\t        console.log(this);\n\t    };\n\t    ProductSearch.prototype.ngOnInit = function () {\n\t        var product = localStorage.getItem('product-search');\n\t        if (product) {\n\t            this.form.product = product;\n\t            this.product = product;\n\t            product = helpers.escapeHTML(product, /['\"(),*:~^<>]/g, constants.escape_map);\n\t            this.getPieChartData(product);\n\t            this.getSentimentByKeyword(product);\n\t            this.getAverageSentiment(product);\n\t            this.getSentimentTimeline(product);\n\t        }\n\t    };\n\t    ProductSearch.prototype.autoComplete = function (searchTerm) {\n\t        var datalist = $(\"#queryResults\");\n\t        this.queryService.query({ \"query\": searchTerm, \"aggregation\": \"term%28product_name%29\" }).subscribe(function (data) {\n\t            var suggestions = [];\n\t            var results = data.aggregations[0].results;\n\t            if (results.length > 0) {\n\t                datalist.empty();\n\t                results.forEach(function (aggregation) {\n\t                    suggestions.push(aggregation['key']);\n\t                    var opt = $(\"<option></option>\").attr(\"value\", aggregation['key']);\n\t                    datalist.append(opt);\n\t                });\n\t            }\n\t        }, function (err) {\n\t            console.log(err);\n\t        });\n\t    };\n\t    ProductSearch.prototype.searchProduct = function () {\n\t        var _this = this;\n\t        $(\"#watson-overlay\").removeClass(\"hide\");\n\t        this.product = \"\";\n\t        this.showProductsOverview = false;\n\t        this.positiveLoaded = false;\n\t        this.sentimentKeywordLoaded = false;\n\t        this.averageSentimentLoaded = false;\n\t        this.sentimentTimelineLoaded = false;\n\t        this.noResults = false;\n\t        $(\"svg\").parent().html(\"\");\n\t        var escape_characters = /['\"(),*:~^<>]/g;\n\t        var count = constants.queries[\"product-search\"][\"count\"];\n\t        var formQuery = this.form.product.indexOf(\":\") > -1 ? this.form.product.substr(this.form.product.indexOf(\":\") + 1) : this.form.product;\n\t        formQuery = helpers.escapeHTML(formQuery, escape_characters, constants.escape_map);\n\t        var query = sprintf.sprintf(constants.queries[\"product-search\"][\"query\"], formQuery);\n\t        var param = { \"count\": count, \"query\": query };\n\t        this.queryService.query(param).subscribe(function (data) {\n\t            if (data.results.length > 0) {\n\t                _this.product = data.results[0].product_name;\n\t                localStorage.setItem('product-search', _this.product);\n\t                var product = helpers.escapeHTML(_this.product, escape_characters, constants.escape_map);\n\t                _this.getPieChartData(product);\n\t                _this.getSentimentByKeyword(product);\n\t                _this.getAverageSentiment(product);\n\t                _this.getSentimentTimeline(product);\n\t            }\n\t            else {\n\t                $(\"#watson-overlay\").addClass(\"hide\");\n\t                _this.noResults = true;\n\t            }\n\t        }, function (err) {\n\t            $(\"#watson-overlay\").addClass(\"hide\");\n\t            console.log(err);\n\t        });\n\t    };\n\t    ProductSearch.prototype.getPieChartData = function (product) {\n\t        var _this = this;\n\t        var count = constants.queries[\"product-sentiment\"][\"count\"];\n\t        var aggregation = sprintf.sprintf(constants.queries[\"product-sentiment\"][\"aggregation\"], product);\n\t        var queryReturn = constants.queries[\"product-sentiment\"][\"return\"];\n\t        var query = { \"count\": count, \"aggregation\": aggregation, \"return\": queryReturn };\n\t        this.queryService.query(query).subscribe(function (data) {\n\t            var input;\n\t            if (data.aggregations.length > 1) {\n\t                input = data.aggregations;\n\t            }\n\t            else if (data.aggregations[0].aggregations.length > 1) {\n\t                input = data.aggregations[0].aggregations;\n\t            }\n\t            else if (data.aggregations[0].aggregations[0].aggregations.length > 1) {\n\t                input = data.aggregations[0].aggregations[0].aggregations;\n\t            }\n\t            else\n\t                input = null;\n\t            _this.pieChartResults = _this.parsePieChartResults(input);\n\t            _this.positiveLoaded = true;\n\t        }, function (err) {\n\t            $(\"#watson-overlay\").addClass(\"hide\");\n\t            console.log(err);\n\t        });\n\t    };\n\t    ProductSearch.prototype.getSentimentByKeyword = function (product) {\n\t        var _this = this;\n\t        var count = constants.queries[\"sentiment-by-keywords\"][\"count\"];\n\t        var aggregation = sprintf.sprintf(constants.queries[\"sentiment-by-keywords\"][\"aggregation\"], product);\n\t        var queryReturn = constants.queries[\"sentiment-by-keywords\"][\"return\"];\n\t        var query = { \"count\": count, \"aggregation\": aggregation, \"return\": queryReturn };\n\t        this.queryService.query(query).subscribe(function (data) {\n\t            var input;\n\t            if (data.aggregations[0].results) {\n\t                input = data.aggregations;\n\t            }\n\t            else if (data.aggregations[0].aggregations[0].results) {\n\t                input = data.aggregations[0].aggregations;\n\t            }\n\t            else if (!data.aggregations[0].aggregations[0].aggregations[0].results) {\n\t                input = data.aggregations[0].aggregations[0].aggregations;\n\t            }\n\t            else\n\t                input = null;\n\t            _this.sentimentByKeywordResults = _this.parseKeywords(input);\n\t            _this.sentimentKeywordLoaded = true;\n\t        }, function (err) {\n\t            $(\"#watson-overlay\").addClass(\"hide\");\n\t            console.log(err);\n\t        });\n\t    };\n\t    ProductSearch.prototype.getAverageSentiment = function (product) {\n\t        var _this = this;\n\t        var count = constants.queries[\"average-product-sentiment\"][\"count\"];\n\t        var aggregation = sprintf.sprintf(constants.queries[\"average-product-sentiment\"][\"aggregation\"], product);\n\t        var queryReturn = constants.queries[\"average-product-sentiment\"][\"return\"];\n\t        var query = { \"count\": count, \"aggregation\": aggregation, \"return\": queryReturn };\n\t        this.queryService.query(query).subscribe(function (data) {\n\t            var value = 0;\n\t            if (data.aggregations[0] && data.aggregations[0].aggregations[0]) {\n\t                value = data.aggregations[0].aggregations[0].value;\n\t            }\n\t            _this.averageSentiment = [value];\n\t            _this.averageSentimentLoaded = true;\n\t        }, function (err) {\n\t            $(\"#watson-overlay\").addClass(\"hide\");\n\t            console.log(err);\n\t        });\n\t    };\n\t    ProductSearch.prototype.getSentimentTimeline = function (product) {\n\t        var _this = this;\n\t        var count = constants.queries[\"product-sentiment-timeline\"][\"count\"];\n\t        var aggregation = sprintf.sprintf(constants.queries[\"product-sentiment-timeline\"][\"aggregation\"], product);\n\t        var queryReturn = constants.queries[\"product-sentiment-timeline\"][\"return\"];\n\t        var query = { \"count\": count, \"aggregation\": aggregation, \"return\": queryReturn };\n\t        this.queryService.query(query).subscribe(function (data) {\n\t            var input;\n\t            if (data.aggregations[0].results) {\n\t                input = data.aggregations;\n\t            }\n\t            else if (data.aggregations[0].aggregations[0].results) {\n\t                input = data.aggregations[0].aggregations;\n\t            }\n\t            else if (!data.aggregations[0].aggregations[0].aggregations[0].results) {\n\t                input = data.aggregations[0].aggregations[0].aggregations;\n\t            }\n\t            else\n\t                input = null;\n\t            _this.sentimentTimeline = _this.parseTimeline(input[0].results);\n\t            _this.sentimentTimelineLoaded = true;\n\t        }, function (err) {\n\t            $(\"#watson-overlay\").addClass(\"hide\");\n\t            console.log(err);\n\t        });\n\t    };\n\t    ProductSearch.prototype.ngDoCheck = function () {\n\t        if (this.positiveLoaded && this.sentimentKeywordLoaded && this.averageSentimentLoaded && this.sentimentTimelineLoaded) {\n\t            if (this.pieChartResults.labels.length > 0 && this.sentimentByKeywordResults.length > 0\n\t                && this.averageSentiment.length > 0 && this.sentimentTimeline.length > 0)\n\t                this.showProductsOverview = true;\n\t            else\n\t                this.noResults = true;\n\t            $(\"#watson-overlay\").addClass(\"hide\");\n\t        }\n\t    };\n\t    ProductSearch.prototype.parsePieChartResults = function (data) {\n\t        var result = {\n\t            \"labels\": [],\n\t            \"percentages\": []\n\t        };\n\t        var total = 0;\n\t        for (var i in data) {\n\t            var obj = data[i];\n\t            result.labels.push(obj[\"match\"].split(\":\")[1]);\n\t            result.percentages.push(obj[\"matching_results\"]);\n\t            total += obj[\"matching_results\"];\n\t        }\n\t        for (var i in result.percentages) {\n\t            result.percentages[i] /= total;\n\t        }\n\t        return result;\n\t    };\n\t    ProductSearch.prototype.parseKeywords = function (data) {\n\t        var result = [];\n\t        var keywordDict = {};\n\t        for (var i = 0; i < data.length; i++) {\n\t            var sentiment = data[i].match.substr(data[i].match.indexOf(\":\") + 1);\n\t            var keywords = data[i].aggregations[0].results;\n\t            for (var j = 0; j < keywords.length; j++) {\n\t                if (!keywordDict[keywords[j][\"key\"]]) {\n\t                    keywordDict[keywords[j][\"key\"]] = { \"positive\": 0, \"negative\": 0, \"neutral\": 0 };\n\t                    keywordDict[keywords[j][\"key\"]][sentiment] += keywords[j][\"matching_results\"];\n\t                }\n\t                else {\n\t                    keywordDict[keywords[j][\"key\"]][sentiment] += keywords[j][\"matching_results\"];\n\t                }\n\t            }\n\t        }\n\t        for (var k in keywordDict) {\n\t            if (keywordDict.hasOwnProperty(k)) {\n\t                result.push({\n\t                    \"keyword\": k,\n\t                    \"positive\": keywordDict[k][\"positive\"],\n\t                    \"negative\": keywordDict[k][\"negative\"],\n\t                    \"neutral\": keywordDict[k][\"neutral\"]\n\t                });\n\t            }\n\t        }\n\t        return result;\n\t    };\n\t    ProductSearch.prototype.parseTimeline = function (data) {\n\t        var result = [];\n\t        for (var i = 0; i < data.length; i++) {\n\t            var obj = { \"date\": data[i][\"key\"], \"sentiment\": data[i].aggregations[0][\"value\"] };\n\t            result.push(obj);\n\t        }\n\t        return result;\n\t    };\n\t    ProductSearch = __decorate([\n\t        core_1.Component({\n\t            selector: 'product-search',\n\t            template: __webpack_require__(403),\n\t            providers: [query_service_1.QueryService],\n\t            host: {\n\t                '(window:resize)': 'onResize($event)'\n\t            }\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof query_service_1.QueryService !== 'undefined' && query_service_1.QueryService) === 'function' && _a) || Object])\n\t    ], ProductSearch);\n\t    return ProductSearch;\n\t    var _a;\n\t}());\n\texports.ProductSearch = ProductSearch;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(113)))\n\n/***/ },\n\n/***/ 403:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"main-container\\\">\\n    <div class=\\\"text-center\\\">\\n        <div class=\\\"row col-centered\\\">\\n            <h1>Search for a Specific Product</h1>\\n            <div class=\\\"form-group row top-30\\\">\\n                <div class=\\\"col-sm-8 col-sm-offset-2\\\">\\n                    <input class=\\\"form-control\\\" id=\\\"product\\\" [(ngModel)]=\\\"form.product\\\" name=\\\"product\\\" (ngModelChange)=\\\"autoComplete($event)\\\" (click)=\\\"autoComplete($event.target.value)\\\" list=\\\"queryResults\\\">\\n                    <datalist id=\\\"queryResults\\\"></datalist>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row text-center\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-lg submit-btn text-center\\\" (click)=\\\"searchProduct();\\\">Find Product\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"row no-margin no-padding\\\" *ngIf=\\\"showProductsOverview\\\">\\n            <div class=\\\"row col-centered\\\"><h3>{{product}}</h3></div>\\n            <div class=\\\"row no-margin no-padding top-60\\\">\\n                <div class=\\\"col-sm-6 no-padding\\\">\\n                    <div class=\\\"panel panel-default col-centered sub-container\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            <h3 class=\\\"panel-title\\\">Sentiment Breakdown of Reviews</h3>\\n                        </div>\\n                        <div class=\\\"panel-body\\\">\\n                            <pie-chart [results]=\\\"pieChartResults\\\"></pie-chart>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 no-margin no-padding\\\">\\n                    <div class=\\\"row no-margin no-padding\\\">\\n                        <div class=\\\"col-sm-12 panel panel-default col-centered sub-container no-margin no-padding\\\">\\n                            <div class=\\\"panel-heading\\\">\\n                                <h3 class=\\\"panel-title\\\">Average Sentiment of Reviews</h3>\\n                            </div>\\n                            <div class=\\\"panel-body\\\">\\n                                <number-line [results]=\\\"averageSentiment\\\"></number-line>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 panel panel-default col-centered sub-container no-margin no-padding\\\">\\n                            <div class=\\\"panel-heading\\\">\\n                                <h3 class=\\\"panel-title\\\">Product Sentiment Over Time</h3>\\n                            </div>\\n                            <div class=\\\"panel-body\\\">\\n                                <product-sentiment-timeline [results]=\\\"sentimentTimeline\\\" [ylabel]=\\\"'Sentiment'\\\"></product-sentiment-timeline>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12 panel panel-default col-centered sub-container no-margin no-padding\\\">\\n                    <div class=\\\"panel-heading\\\">\\n                        <h3 class=\\\"panel-title\\\">Sentiment by Keywords</h3>\\n                    </div>\\n                    <div class=\\\"panel-body\\\">\\n                        <stacked-barchart [results]=\\\"sentimentByKeywordResults\\\"></stacked-barchart>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row col-centered\\\" *ngIf=\\\"noResults\\\">There is no product by that name. Please search again.</div>\\n    </div>\\n</div>\";\n\n/***/ },\n\n/***/ 404:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar query_service_1 = __webpack_require__(114);\n\t__webpack_require__(105);\n\tvar QueryForm = (function () {\n\t    // Constructor\n\t    function QueryForm(queryService, elRef) {\n\t        this.queryService = queryService;\n\t        this.elRef = elRef;\n\t        this.resultChange = new core_1.EventEmitter();\n\t        this.form = {\n\t            query: \"Cuisinart Ice Cream Maker\",\n\t            count: \"5\",\n\t            filter: \"positive\"\n\t        };\n\t    }\n\t    QueryForm.prototype.ngOnInit = function () {\n\t        var storedParams = JSON.parse(localStorage.getItem('query-params'));\n\t        if (storedParams && {} != storedParams) {\n\t            this.form = storedParams;\n\t        }\n\t        this.onSubmit();\n\t    };\n\t    QueryForm.prototype.onSubmit = function () {\n\t        var _this = this;\n\t        $(\"#watson-overlay\").removeClass(\"hide\");\n\t        var params = {\n\t            \"query\": this.form.query,\n\t            \"count\": this.form.count,\n\t            \"filter\": this.form.filter\n\t        };\n\t        localStorage.setItem('query-params', JSON.stringify(params));\n\t        this.queryService.query(params).subscribe(function (data) {\n\t            _this.resultChange.emit(data);\n\t        }, function (err) {\n\t            console.log(err);\n\t        });\n\t    };\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], QueryForm.prototype, \"resultChange\", void 0);\n\t    QueryForm = __decorate([\n\t        core_1.Component({\n\t            selector: 'query-form',\n\t            template: __webpack_require__(405),\n\t            providers: [query_service_1.QueryService]\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof query_service_1.QueryService !== 'undefined' && query_service_1.QueryService) === 'function' && _a) || Object, (typeof (_b = typeof core_1.ElementRef !== 'undefined' && core_1.ElementRef) === 'function' && _b) || Object])\n\t    ], QueryForm);\n\t    return QueryForm;\n\t    var _a, _b;\n\t}());\n\texports.QueryForm = QueryForm;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(113)))\n\n/***/ },\n\n/***/ 405:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"panel panel-default\\\">\\n                <div class=\\\"panel-body\\\"><h2 class=\\\"text-center\\\">Enrichment Visualization</h2>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"query\\\" class=\\\"col-sm-2 col-form-label\\\">Query:</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input class=\\\"form-control\\\" id=\\\"query\\\" [(ngModel)]=\\\"form.query\\\" name=\\\"query\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n                            <a tabindex=\\\"0\\\" role=\\\"button\\\" data-trigger=\\\"focus\\\"\\n                               data-toggle=\\\"popover\\\" title=\\\"Queries Help\\\" data-html=\\\"true\\\"\\n                               data-content=\\\"<span>Use the relations enrichement to search.<br/> Example: enriched_text.relations.sentence:Amazon%20Fire</span><br/><span>Please see the <a href='https://www.ibm.com/watson/developercloud/doc/discovery/using.shtml'>query documentation</a> for more information.</span>\\\">\\n                                <i class=\\\"fa fa-info-circle fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n                            </a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"count\\\" class=\\\"col-sm-2 col-form-label\\\">Count:</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"count\\\" [(ngModel)]=\\\"form.count\\\"\\n                                   name=\\\"count\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n                            <a tabindex=\\\"0\\\" role=\\\"button\\\" data-trigger=\\\"focus\\\"\\n                               data-toggle=\\\"popover\\\" title=\\\"Count Help\\\" data-html=\\\"true\\\"\\n                               data-content=\\\"<span>Specify the number of documents you want returned back.</span><br/><span>Please see the <a href='https://www.ibm.com/watson/developercloud/doc/discovery/using.shtml'>query documentation</a> for more information.</span>\\\">\\n                                <i class=\\\"fa fa-info-circle fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n                            </a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"filter\\\" class=\\\"col-sm-2 col-form-label\\\">Filter:</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input class=\\\"form-control\\\" id=\\\"filter\\\" [(ngModel)]=\\\"form.filter\\\" name=\\\"query\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n                            <a tabindex=\\\"0\\\" role=\\\"button\\\" data-trigger=\\\"focus\\\"\\n                               data-toggle=\\\"popover\\\" title=\\\"Filter Help\\\" data-html=\\\"true\\\"\\n                               data-content=\\\"<span>Use the filter to limit what your documents return.<br/> Example: review_text_enriched.docSentiment.type:positive</span><br/><span>Please see the <a href='https://www.ibm.com/watson/developercloud/doc/discovery/using.shtml'>query documentation</a> for more information.</span>\\\">\\n                                <i class=\\\"fa fa-info-circle fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n                            </a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row text-center\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-lg submit-btn text-center\\\" (click)=\\\"onSubmit();\\\">Submit\\n                            Query\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n\n/***/ },\n\n/***/ 406:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar platform_browser_1 = __webpack_require__(21);\n\tvar helpers = __webpack_require__(399);\n\tvar constants = __webpack_require__(395);\n\t__webpack_require__(105);\n\t__webpack_require__(407);\n\tvar RelationsList = (function () {\n\t    function RelationsList(elRef, sanitizer) {\n\t        this.elRef = elRef;\n\t        this.sanitizer = sanitizer;\n\t        //this array contains the image we will show for each page\n\t        this.relations = [];\n\t        this.noResults = false;\n\t        this.filter = '';\n\t        this.maxSize = 7;\n\t        this.directionLinks = true;\n\t        this.autoHide = false;\n\t        this.config = {\n\t            id: 'advanced',\n\t            itemsPerPage: 10,\n\t            currentPage: 1\n\t        };\n\t        this.opened = false;\n\t    }\n\t    RelationsList.prototype.toggle = function (i) {\n\t        var index = (this.config.currentPage * this.config.itemsPerPage) - (this.config.itemsPerPage - i);\n\t        this.relations[index][\"opened\"] = !this.relations[index][\"opened\"];\n\t    };\n\t    RelationsList.prototype.onPageChange = function (number) {\n\t        this.config.currentPage = number;\n\t    };\n\t    RelationsList.prototype.ngAfterViewChecked = function () {\n\t        $('[data-toggle=\"tooltip\"]').tooltip();\n\t    };\n\t    // ngAfterContentInit() {\n\t    //     this.data.changes.subscribe(() => {\n\t    //         // will be called every time an item is added/removed\n\t    //     });\n\t    // }\n\t    RelationsList.prototype.ngOnChanges = function (changes) {\n\t        if (this.data) {\n\t            this.relations = [];\n\t            this.parseData(this.data);\n\t            $('[data-toggle=\"tooltip\"]').tooltip();\n\t        }\n\t        this.config.currentPage = 1;\n\t        $(\"#watson-overlay\").addClass(\"hide\");\n\t    };\n\t    RelationsList.prototype.parseData = function (data) {\n\t        for (var i = 0; i < data.length; i++) {\n\t            var jsonObj = {};\n\t            jsonObj[\"product_name\"] = data[i][\"product_name\"];\n\t            jsonObj[\"review_text\"] = data[i][\"review_text\"];\n\t            jsonObj[\"summary\"] = data[i][\"summary\"];\n\t            jsonObj[\"doc_sentiment\"] = {};\n\t            jsonObj[\"doc_emotions\"] = {};\n\t            jsonObj[\"relations\"] = [];\n\t            jsonObj[\"opened\"] = true;\n\t            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"relations\"].length > 0) {\n\t                jsonObj[\"doc_sentiment\"][\"type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n\t                jsonObj[\"doc_sentiment\"][\"score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n\t                jsonObj[\"doc_emotions\"] = data[i][\"review_text_enriched\"][\"docEmotions\"];\n\t                var doc = data[i][\"review_text_enriched\"][\"relations\"];\n\t                for (var j = 0; j < doc.length; j++) {\n\t                    var relation = doc[j];\n\t                    var sentence = relation[\"sentence\"];\n\t                    var subject = relation[\"subject\"] !== null && typeof relation[\"subject\"] !== 'undefined' ? relation[\"subject\"][\"text\"] : null;\n\t                    var action = relation[\"action\"] !== null && typeof relation[\"action\"] !== 'undefined' ? relation[\"action\"][\"text\"] : null;\n\t                    var object = relation[\"object\"] !== null && typeof relation[\"object\"] !== 'undefined' ? relation[\"object\"][\"text\"] : null;\n\t                    var location = relation[\"location\"] !== null && typeof relation[\"location\"] !== 'undefined' ? relation[\"location\"][\"text\"] : null;\n\t                    if (subject) {\n\t                        subject = helpers.escapeHTML(subject, constants.escape_characters, constants.escape_map);\n\t                        var regSub = new RegExp('\\\\b(' + subject + ')\\\\b', 'g');\n\t                        var html = this.createToolTip(relation[\"subject\"], \"goldenrod\", subject);\n\t                        sentence = sentence.replace(regSub, html);\n\t                    }\n\t                    if (action) {\n\t                        action = helpers.escapeHTML(action, constants.escape_characters, constants.escape_map);\n\t                        var regAction = new RegExp('\\\\b(' + action + ')\\\\b', 'g');\n\t                        var html = this.createToolTip(relation[\"action\"], \"crimsom\", action);\n\t                        sentence = sentence.replace(regAction, html);\n\t                    }\n\t                    if (object) {\n\t                        object = helpers.escapeHTML(object, constants.escape_characters, constants.escape_map);\n\t                        var regObj = new RegExp('\\\\b(' + object + ')\\\\b', 'g');\n\t                        var html = this.createToolTip(relation[\"object\"], \"darkblue\", object);\n\t                        sentence = sentence.replace(regObj, html);\n\t                    }\n\t                    if (location) {\n\t                        location = helpers.escapeHTML(location, constants.escape_characters, constants.escape_map);\n\t                        var regLoc = new RegExp('\\\\b(' + location + ')\\\\b', 'g');\n\t                        var html = this.createToolTip(relation[\"location\"], \"darkviolet\", location);\n\t                        sentence = sentence.replace(regLoc, html);\n\t                    }\n\t                    jsonObj[\"relations\"].push(this.sanitizer.bypassSecurityTrustHtml('<p class=\"sentence\">' + sentence + '</p>'));\n\t                }\n\t                this.relations.push(jsonObj);\n\t            }\n\t        }\n\t    };\n\t    RelationsList.prototype.createToolTip = function (data, color, text) {\n\t        if (data.sentiment) {\n\t            var title = \"<span>Sentiment Type: \" + data.sentiment.type + \"</span>\";\n\t            var template = \"\";\n\t            if (data.sentimentFromSubject) {\n\t                title += \"<br/><span>Sentiment Subject Type: \" + data.sentimentFromSubject.type + \"</span>\";\n\t            }\n\t            if (data.sentiment.type === 'positive')\n\t                template += \"<div class='tooltip' role='tooltip'><div class='tooltip-arrow green'></div><div class='tooltip-inner green'></div></div>\";\n\t            else\n\t                template += \"<div class='tooltip' role='tooltip'><div class='tooltip-arrow red'></div><div class='tooltip-inner red'></div></div>\";\n\t            return '<a class=\"' + color + '\" data-toggle=\"tooltip\" data-placement=\"top\" data-html=\"true\" title=\"' + title + '\" data-template=\"' + template + '\"><b><u>' + text + '</u></b></a>';\n\t        }\n\t        else\n\t            return '<span class=\"' + color + '\"><b>' + text + '</b></span>';\n\t    };\n\t    ;\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], RelationsList.prototype, \"data\", void 0);\n\t    RelationsList = __decorate([\n\t        core_1.Component({\n\t            selector: 'relations-list',\n\t            template: __webpack_require__(409),\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof core_1.ElementRef !== 'undefined' && core_1.ElementRef) === 'function' && _a) || Object, (typeof (_b = typeof platform_browser_1.DomSanitizer !== 'undefined' && platform_browser_1.DomSanitizer) === 'function' && _b) || Object])\n\t    ], RelationsList);\n\t    return RelationsList;\n\t    var _a, _b;\n\t}());\n\texports.RelationsList = RelationsList;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(113)))\n\n/***/ },\n\n/***/ 407:\n701,\n\n/***/ 409:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"row margin-lr-sm\\\">\\n    <div id=\\\"relations\\\" class=\\\"text-center\\\">\\n        <div *ngIf=\\\"relations.length > 0\\\">\\n            <div style=\\\"text-align:left !important;\\\">\\n                <ul class=\\\"reviews-list list list-group\\\">\\n                    <li *ngFor=\\\"let review of (relations | paginate: config); let i = index\\\">\\n                        <div class=\\\"panel panel-default no-padding\\\">\\n                            <div class=\\\"panel-heading\\\" (click)=\\\"toggle(i)\\\">\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'positive'\\\">\\n                                    <i class=\\\"fa fa-smile-o fa-2x green\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>{{review.doc_sentiment.score}}</span>\\n                                </div>\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'negative'\\\">\\n                                    <i class=\\\"fa fa-frown-o fa-2x red\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>{{review.doc_sentiment.score}}</span>\\n                                </div>\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'neutral'\\\">\\n                                    <i class=\\\"fa fa-meh-o fa-2x goldenrod\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>Neutral</span>\\n                                </div>\\n                                <h5>Product Name: </h5>\\n                                <h4>{{review.product_name}}</h4>\\n                                <h5>Review Text: </h5>\\n                                <p>{{review.review_text}}</p>\\n                                <h5>Doc Emotions: </h5>\\n                                <div class=\\\"sprite-image row\\\">\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"joy\\\"></div>\\n                                        <figcaption>Joy - {{review.doc_emotions.joy | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"sadness\\\"></div>\\n                                        <figcaption>Sadness - {{review.doc_emotions.sadness | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"anger\\\"></div>\\n                                        <figcaption>Anger - {{review.doc_emotions.anger | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"disgust\\\"></div>\\n                                        <figcaption>Disgust - {{review.doc_emotions.disgust | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"fear\\\"></div>\\n                                        <figcaption>Fear - {{review.doc_emotions.fear | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"panel-body\\\" [ngClass]=\\\"{hide: !review.opened}\\\">\\n                            <div class=\\\"text-center\\\"><i>The Watson Discovery Service returns back all the relations per sentence it can find in the review. If you hover over one of the underlined words, it will show the sentiment if one is returned.</i></div>\\n                                <div class=\\\"row text-center margin-tb-sm\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <span class=\\\"fa fa-circle fa-2x goldenrod\\\" aria-hidden=\\\"true\\\"></span>\\n                                        <span>Subject</span></div>\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <span class=\\\"fa fa-circle fa-2x crimsom\\\" aria-hidden=\\\"true\\\"></span>\\n                                        <span>Action</span>\\n                                    </div>\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <span class=\\\"fa fa-circle fa-2x darkblue\\\" aria-hidden=\\\"true\\\"></span>\\n                                        <span>Object</span>\\n                                    </div>\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <span class=\\\"fa fa-circle fa-2x darkviolet\\\" aria-hidden=\\\"true\\\"></span>\\n                                        <span>Location</span>\\n                                    </div>\\n                                </div>\\n                                <ul id=\\\"relations-list\\\" class=\\\"list-group\\\">\\n                                    <li class=\\\"list-group-item\\\" *ngFor=\\\"let sentence of review.relations\\\"\\n                                        [innerHTML]=\\\"sentence\\\"></li>\\n                                </ul>\\n                            </div>\\n\\n                        </div>\\n                    </li>\\n                </ul>\\n                <div class=\\\"\\\">\\n                    <pagination-controls [id]=\\\"config.id\\\" [maxSize]=\\\"maxSize\\\"\\n                                         [directionLinks]=\\\"directionLinks\\\"\\n                                         [autoHide]=\\\"autoHide\\\" (pageChange)=\\\"onPageChange($event);\\\"\\n                                         style=\\\"text-align:center;font-size:2em\\\"></pagination-controls>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"relations.length < 1\\\">\\n            <h1>There are no relations.</h1>\\n        </div>\\n    </div>\\n</div>\";\n\n/***/ },\n\n/***/ 410:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar d3 = __webpack_require__(398);\n\t__webpack_require__(105);\n\t__webpack_require__(411);\n\tvar KeywordsChart = (function () {\n\t    function KeywordsChart(element) {\n\t        this.element = element;\n\t        this.keywords = [];\n\t        this.labelArea = 160;\n\t        this.host = null;\n\t        this.chart = null;\n\t        this.width = 400;\n\t        this.bar_height = 20;\n\t        this.height = null; //this.bar_height * 3;\n\t        this.rightOffset = this.width + this.labelArea;\n\t        this.lCol = \"relevance\";\n\t        this.rCol = \"sentiment\";\n\t        this.xFrom = d3.scaleLinear().range([0, this.width - 100]);\n\t        this.xTo = d3.scaleLinear().range([0, this.width - 100]);\n\t        this.y = null;\n\t    }\n\t    // ngAfterViewInit() {\n\t    //     this.setupData(this.data);\n\t    //     this.host = d3.select(this.element.nativeElement.children[0]);\n\t    //     this.setup(this.keywords);\n\t    //     this.render(this.keywords);\n\t    // }\n\t    KeywordsChart.prototype.ngOnChanges = function (changes) {\n\t        this.setupData(this.data);\n\t        this.element.nativeElement.children[0].children;\n\t        var node = this.element.nativeElement.children[0];\n\t        while (node.firstChild) {\n\t            node.removeChild(node.firstChild);\n\t        }\n\t        this.host = d3.select(this.element.nativeElement.children[0]);\n\t        this.setup(this.keywords);\n\t        this.render(this.keywords);\n\t    };\n\t    KeywordsChart.prototype.setupData = function (data) {\n\t        this.keywords = [];\n\t        for (var i = 0; i < data.length; i++) {\n\t            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"keywords\"].length > 0) {\n\t                var words = data[i][\"review_text_enriched\"][\"keywords\"];\n\t                for (var j = 0; j < words.length; j++) {\n\t                    var kw = {\n\t                        \"keyword\": words[j][\"text\"],\n\t                        \"relevance\": words[j][\"relevance\"],\n\t                        \"sentiment\": words[j][\"sentiment\"] !== undefined && words[j][\"sentiment\"][\"score\"] !== undefined ? Math.abs(words[j][\"sentiment\"][\"score\"]) : 0,\n\t                        \"type\": words[j][\"sentiment\"][\"type\"]\n\t                    };\n\t                    this.keywords.push(kw);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    KeywordsChart.prototype.setup = function (data) {\n\t        var height = data.length * 2;\n\t        this.height = this.bar_height * height;\n\t        this.y = d3.scaleBand().range([20, this.height]);\n\t    };\n\t    KeywordsChart.prototype.render = function (data) {\n\t        var _this = this;\n\t        //this.element.nativeElement\n\t        this.chart = this.host\n\t            .append('svg')\n\t            .attr('class', 'chart')\n\t            .attr('width', this.labelArea + this.width + this.width)\n\t            .attr('height', this.height);\n\t        this.xFrom.domain(d3.extent(data, function (d) {\n\t            return d[_this.lCol];\n\t        }));\n\t        this.xTo.domain(d3.extent(data, function (d) {\n\t            return d[_this.rCol];\n\t        }));\n\t        this.y.domain(data.map(function (d) {\n\t            return d[\"keyword\"];\n\t        }));\n\t        var yPosByIndex = function (d) {\n\t            return _this.y(d[\"keyword\"]);\n\t        };\n\t        this.chart.selectAll(\"rect.left\")\n\t            .data(data)\n\t            .enter().append(\"rect\")\n\t            .attr(\"x\", function (d) {\n\t            return _this.width - _this.xFrom(d[_this.lCol]);\n\t        })\n\t            .attr(\"y\", yPosByIndex)\n\t            .attr(\"class\", \"left\")\n\t            .attr(\"width\", function (d) {\n\t            return _this.xFrom(d[_this.lCol]);\n\t        })\n\t            .attr(\"height\", this.y.bandwidth());\n\t        this.chart.selectAll(\"text.leftscore\")\n\t            .data(data)\n\t            .enter().append(\"text\")\n\t            .attr(\"x\", function (d) {\n\t            return _this.width - _this.xFrom(d[_this.lCol]) - 30;\n\t        })\n\t            .attr(\"y\", function (d) {\n\t            return _this.y(d[\"keyword\"]) + _this.y.bandwidth() / 2;\n\t        })\n\t            .attr(\"dx\", \"20\")\n\t            .attr(\"dy\", \".36em\")\n\t            .attr(\"text-anchor\", \"end\")\n\t            .attr('class', 'leftscore')\n\t            .text(function (d) {\n\t            return d[_this.lCol];\n\t        });\n\t        this.chart.selectAll(\"text.name\")\n\t            .data(data)\n\t            .enter().append(\"text\")\n\t            .attr(\"x\", (this.labelArea / 2) + this.width)\n\t            .attr(\"y\", function (d) {\n\t            return _this.y(d[\"keyword\"]) + _this.y.bandwidth() / 2;\n\t        })\n\t            .attr(\"dy\", \".20em\")\n\t            .attr(\"text-anchor\", \"middle\")\n\t            .attr('class', 'name')\n\t            .text(function (d) {\n\t            return d[\"keyword\"];\n\t        });\n\t        this.chart.selectAll(\"rect.right\")\n\t            .data(data)\n\t            .enter().append(\"rect\")\n\t            .attr(\"x\", this.rightOffset)\n\t            .attr(\"y\", yPosByIndex)\n\t            .attr(\"class\", function (d) {\n\t            var sentiment = d[\"type\"] == \"neutral\" ? \"right-neutral\" : d[\"type\"] === \"positive\" ? \"right-positive\" : \"right-negative\";\n\t            return \"right\" + \" \" + sentiment;\n\t        })\n\t            .attr(\"width\", function (d) {\n\t            return _this.xTo(d[_this.rCol]);\n\t        })\n\t            .attr(\"height\", this.y.bandwidth());\n\t        this.chart.selectAll(\"text.score\")\n\t            .data(data)\n\t            .enter().append(\"text\")\n\t            .attr(\"x\", function (d) {\n\t            var offset = d[\"type\"] == \"neutral\" ? _this.rightOffset + 10 : _this.rightOffset + 80;\n\t            return _this.xTo(d[_this.rCol]) + offset;\n\t        })\n\t            .attr(\"y\", function (d) {\n\t            return _this.y(d[\"keyword\"]) + _this.y.bandwidth() / 2;\n\t        })\n\t            .attr(\"dx\", -5)\n\t            .attr(\"dy\", \".36em\")\n\t            .attr(\"text-anchor\", \"end\")\n\t            .attr('class', 'score')\n\t            .text(function (d) {\n\t            return d[_this.rCol];\n\t        });\n\t        this.chart.append(\"text\").attr(\"x\", this.width / 3).attr(\"y\", 10).attr(\"class\", \"title\").text(\"Relevance\");\n\t        this.chart.append(\"text\").attr(\"x\", this.width / 3 + this.rightOffset).attr(\"y\", 10).attr(\"class\", \"title\").text(\"Sentiment\");\n\t        this.chart.append(\"text\").attr(\"x\", this.width + this.labelArea / 3).attr(\"y\", 10).attr(\"class\", \"title\").text(\"Keywords\");\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], KeywordsChart.prototype, \"data\", void 0);\n\t    KeywordsChart = __decorate([\n\t        core_1.Component({\n\t            selector: 'keywords-chart',\n\t            template: __webpack_require__(413),\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof core_1.ElementRef !== 'undefined' && core_1.ElementRef) === 'function' && _a) || Object])\n\t    ], KeywordsChart);\n\t    return KeywordsChart;\n\t    var _a;\n\t}());\n\texports.KeywordsChart = KeywordsChart;\n\n\n/***/ },\n\n/***/ 411:\n701,\n\n/***/ 413:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"keywords-chart\\\" class=\\\"text-center top-80\\\"></div>\";\n\n/***/ },\n\n/***/ 414:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar d3 = __webpack_require__(398);\n\t__webpack_require__(105);\n\t__webpack_require__(415);\n\tvar query_service_1 = __webpack_require__(114);\n\tvar BubbleChart = (function () {\n\t    function BubbleChart(queryService) {\n\t        this.queryService = queryService;\n\t        this.resultChange = new core_1.EventEmitter();\n\t        this.output = 0;\n\t        this.form = {\n\t            jitter: .5\n\t        };\n\t        this.plotData = function (selector, data, plot) {\n\t            return d3.select(selector).datum(data).call(plot);\n\t        };\n\t    }\n\t    BubbleChart.prototype.ngAfterViewInit = function () {\n\t        this.setupBubble();\n\t    };\n\t    BubbleChart.prototype.submitKeywordQuery = function (word) {\n\t        var _this = this;\n\t        $(\"#watson-overlay\").removeClass(\"hide\");\n\t        var params = {\n\t            \"query\": word\n\t        };\n\t        this.queryService.query(params).subscribe(function (data) {\n\t            _this.resultChange.emit(data);\n\t        }, function (err) {\n\t            console.log(err);\n\t        });\n\t    };\n\t    BubbleChart.prototype.setupBubble = function () {\n\t        var display, plot, text;\n\t        plot = this.bubbles();\n\t        return this.plotData(\"#vis\", this.data, plot);\n\t    };\n\t    BubbleChart.prototype.bubbles = function () {\n\t        var chart, clear, click, collide, collisionPadding, connectEvents, data, gravity, hashchange, height, idValue, jitter, label, margin, maxRadius, minCollisionRadius, mouseout, mouseover, node, rScale, rValue, textValue, tick, transformData, update, updateActive, updateLabels, updateNodes, width;\n\t        width = $(\"#vis\").width();\n\t        height = 510;\n\t        data = [];\n\t        node = null;\n\t        label = null;\n\t        var self = this;\n\t        margin = {\n\t            top: 5,\n\t            right: 0,\n\t            bottom: 0,\n\t            left: 0\n\t        };\n\t        maxRadius = 65;\n\t        rScale = d3.scaleSqrt().range([0, maxRadius]);\n\t        rValue = function (d) {\n\t            return parseInt(d.count);\n\t        };\n\t        idValue = function (d) {\n\t            return d.name;\n\t        };\n\t        textValue = function (d) {\n\t            return d.name;\n\t        };\n\t        collisionPadding = 4;\n\t        minCollisionRadius = 12;\n\t        jitter = .5;\n\t        transformData = function (rawData) {\n\t            rawData.forEach(function (d) {\n\t                d.count = parseInt(d.count);\n\t                return rawData.sort(function () {\n\t                    return 0.5 - Math.random();\n\t                });\n\t            });\n\t            return rawData;\n\t        };\n\t        tick = function (e) {\n\t            var dampenedAlpha = .1;\n\t            d3.selectAll(\".bubble-node\")\n\t                .each(gravity(dampenedAlpha))\n\t                .each(collide(jitter))\n\t                .attr(\"transform\", function (d) {\n\t                return \"translate(\" + d[\"x\"] + \",\" + d[\"y\"] + \")\";\n\t            });\n\t            d3.selectAll(\".bubble-label\").style(\"left\", function (d) {\n\t                return ((margin.left + d[\"x\"]) - d[\"dx\"] / 2) + \"px\";\n\t            }).style(\"top\", function (d) {\n\t                return ((margin.top + d[\"y\"]) - d[\"dy\"] / 2) + \"px\";\n\t            });\n\t        };\n\t        // constants used in the simulation\n\t        var center = { x: width / 2, y: height / 2 };\n\t        var forceStrength = 0.03;\n\t        function charge(d) {\n\t            return -forceStrength * Math.pow(d.radius, 2.0);\n\t        }\n\t        function dragstarted(d) {\n\t            if (!d3.event.active)\n\t                self.force.alphaTarget(0.3).restart();\n\t            d.fx = d[\"x\"];\n\t            d.fy = d[\"y\"];\n\t        }\n\t        function dragged(d) {\n\t            d.fx = d3.event.x;\n\t            d.fy = d3.event.y;\n\t        }\n\t        function dragended(d) {\n\t            if (!d3.event.active)\n\t                self.force.alphaTarget(0);\n\t            d.fx = null;\n\t            d.fy = null;\n\t        }\n\t        chart = function (selection) {\n\t            return selection.each(function (rawData) {\n\t                var maxDomainValue, svg, svgEnter;\n\t                data = transformData(rawData);\n\t                maxDomainValue = d3.max(data, function (d) {\n\t                    return rValue(d);\n\t                });\n\t                rScale.domain([0, maxDomainValue]);\n\t                svg = d3.select(this).selectAll(\"svg\").data([data]);\n\t                svgEnter = svg.enter().append(\"svg\");\n\t                svg.attr(\"width\", width + margin.left + margin.right);\n\t                svg.attr(\"height\", height + margin.top + margin.bottom);\n\t                node = svgEnter.append(\"g\").attr(\"id\", \"bubble-nodes\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t                node.append(\"rect\").attr(\"id\", \"bubble-background\").attr(\"width\", width).attr(\"height\", height).on(\"click\", clear);\n\t                label = d3.select(this).selectAll(\"#bubble-labels\").data([data]).enter().append(\"div\").attr(\"id\", \"bubble-labels\");\n\t                self.force = d3.forceSimulation()\n\t                    .velocityDecay(0.2)\n\t                    .on('tick', tick);\n\t                update();\n\t                //hashchange();\n\t                //return d3.select(window).on(\"hashchange\", hashchange);\n\t                return;\n\t            });\n\t        };\n\t        update = function () {\n\t            data.forEach(function (d, i) {\n\t                return d.forceR = Math.max(minCollisionRadius, rScale(rValue(d)));\n\t            });\n\t            self.force.nodes(data).restart();\n\t            updateNodes();\n\t            updateLabels();\n\t        };\n\t        updateNodes = function () {\n\t            node = node.selectAll(\".bubble-node\").data(data, function (d) {\n\t                return idValue(d);\n\t            });\n\t            node.exit().remove();\n\t            return node.enter().append(\"a\").attr(\"class\", \"bubble-node\").attr(\"xlink:href\", function (d) {\n\t                return \"#\" + (encodeURIComponent(idValue(d)));\n\t                // }).call(connectEvents).append(\"circle\").attr(\"r\", function (d) {\n\t            }).call(d3.drag()\n\t                .on(\"start\", dragstarted)\n\t                .on(\"drag\", dragged)\n\t                .on(\"end\", dragended)).call(connectEvents).append(\"circle\").attr(\"r\", function (d) {\n\t                return rScale(rValue(d));\n\t            });\n\t        };\n\t        updateLabels = function () {\n\t            var labelEnter;\n\t            label = label.selectAll(\".bubble-label\").data(data, function (d) {\n\t                return idValue(d);\n\t            });\n\t            label.exit().remove();\n\t            labelEnter = label.enter().append(\"a\").attr(\"class\", \"bubble-label\").attr(\"href\", function (d) {\n\t                return \"#\" + (encodeURIComponent(idValue(d)));\n\t            }).call(d3.drag()\n\t                .on(\"start\", dragstarted)\n\t                .on(\"drag\", dragged)\n\t                .on(\"end\", dragended)).call(connectEvents);\n\t            // }).call(connectEvents);\n\t            labelEnter.append(\"div\").attr(\"class\", \"bubble-label-name\").text(function (d) {\n\t                return textValue(d);\n\t            });\n\t            labelEnter.append(\"div\").attr(\"class\", \"bubble-label-value\").text(function (d) {\n\t                return rValue(d);\n\t            });\n\t            label.style(\"font-size\", function (d) {\n\t                return Math.max(8, rScale(rValue(d) / 2)) + \"px\";\n\t            }).style(\"width\", function (d) {\n\t                return 2.5 * rScale(rValue(d)) + \"px\";\n\t            });\n\t            labelEnter.append(\"span\").text(function (d) {\n\t                return textValue(d);\n\t            }).each(function (d) {\n\t                return d.dx = Math.max(2.5 * rScale(rValue(d)), this.getBoundingClientRect().width);\n\t            }).remove();\n\t            labelEnter.style(\"width\", function (d) {\n\t                return d.dx + \"px\";\n\t            });\n\t            return labelEnter.each(function (d) {\n\t                return d.dy = this.getBoundingClientRect().height;\n\t            });\n\t        };\n\t        gravity = function (alpha) {\n\t            var ax, ay, cx, cy;\n\t            cx = width / 2;\n\t            cy = height / 2;\n\t            ax = alpha / 8;\n\t            ay = alpha;\n\t            return function (d) {\n\t                d.x += (cx - d.x) * ax;\n\t                return d.y += (cy - d.y) * ay;\n\t            };\n\t        };\n\t        collide = function (jitter) {\n\t            return function (d) {\n\t                return data.forEach(function (d2) {\n\t                    var distance, minDistance, moveX, moveY, x, y;\n\t                    if (d !== d2) {\n\t                        x = d.x - d2.x;\n\t                        y = d.y - d2.y;\n\t                        distance = Math.sqrt(x * x + y * y);\n\t                        minDistance = d.forceR + d2.forceR + collisionPadding;\n\t                        if (distance < minDistance) {\n\t                            distance = (distance - minDistance) / distance * jitter;\n\t                            moveX = x * distance;\n\t                            moveY = y * distance;\n\t                            d.x -= moveX;\n\t                            d.y -= moveY;\n\t                            d2.x += moveX;\n\t                            return d2.y += moveY;\n\t                        }\n\t                    }\n\t                });\n\t            };\n\t        };\n\t        connectEvents = function (d) {\n\t            d.on(\"mouseover\", mouseover);\n\t            return d.on(\"mouseout\", mouseout);\n\t        };\n\t        clear = function () {\n\t            return location.replace(\"#\");\n\t        };\n\t        click = function (d) {\n\t            location.replace(\"#\" + encodeURIComponent(idValue(d)));\n\t            d3.event.preventDefault();\n\t            hashchange();\n\t            //return\n\t        };\n\t        hashchange = function () {\n\t            var id;\n\t            id = decodeURIComponent(location.hash.substring(1)).trim();\n\t            return updateActive(id);\n\t        };\n\t        updateActive = function (id) {\n\t            node.classed(\"bubble-selected\", function (d) {\n\t                return id === idValue(d);\n\t            });\n\t            if (id.length > 0) {\n\t                self.submitKeywordQuery(id);\n\t            }\n\t            // if (id.length > 0) {\n\t            //     return d3.select(\"#status\").html(\"<h3>The word <span class=\\\"active\\\">\" + id + \"</span> is now active</h3>\");\n\t            // } else {\n\t            //     return d3.select(\"#status\").html(\"<h3>No word is active</h3>\");\n\t            // }\n\t        };\n\t        mouseover = function (d) {\n\t            return node.classed(\"bubble-hover\", function (p) {\n\t                return p === d;\n\t            });\n\t        };\n\t        mouseout = function (d) {\n\t            return node.classed(\"bubble-hover\", false);\n\t        };\n\t        chart.jitter = function (_) {\n\t            if (!arguments.length) {\n\t                return jitter;\n\t            }\n\t            jitter = _;\n\t            //self.force.restart();\n\t            return chart;\n\t        };\n\t        chart.height = function (_) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _;\n\t            return chart;\n\t        };\n\t        chart.width = function (_) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _;\n\t            return chart;\n\t        };\n\t        chart.r = function (_) {\n\t            if (!arguments.length) {\n\t                return rValue;\n\t            }\n\t            rValue = _;\n\t            return chart;\n\t        };\n\t        return chart;\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], BubbleChart.prototype, \"data\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], BubbleChart.prototype, \"resultChange\", void 0);\n\t    BubbleChart = __decorate([\n\t        core_1.Component({\n\t            selector: 'bubble-chart',\n\t            template: __webpack_require__(417),\n\t            providers: [query_service_1.QueryService]\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof query_service_1.QueryService !== 'undefined' && query_service_1.QueryService) === 'function' && _a) || Object])\n\t    ], BubbleChart);\n\t    return BubbleChart;\n\t    var _a;\n\t}());\n\texports.BubbleChart = BubbleChart;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(113)))\n\n/***/ },\n\n/***/ 415:\n701,\n\n/***/ 417:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"bubble-container\\\" class=\\\"\\\">\\n    <div id=\\\"main\\\" role=\\\"main\\\">\\n        <header><h1>Top Keywords</h1></header>\\n        <div id=\\\"vis\\\"></div>\\n        <div id=\\\"status\\\"></div>\\n    </div>\\n</div>\";\n\n/***/ },\n\n/***/ 418:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar d3 = __webpack_require__(398);\n\t__webpack_require__(105);\n\t__webpack_require__(419);\n\tvar StackedBarChart = (function () {\n\t    function StackedBarChart(el) {\n\t        this.el = el;\n\t    }\n\t    StackedBarChart.prototype.ngAfterContentInit = function () {\n\t        this.createBarChart();\n\t    };\n\t    StackedBarChart.prototype.createBarChart = function () {\n\t        this.svg = d3.select(this.el.nativeElement.firstElementChild)\n\t            .append(\"svg\");\n\t        this.svg.attr(\"width\", this.el.nativeElement.parentElement.offsetWidth * .9);\n\t        this.svg.attr(\"height\", 560);\n\t        var margin = { top: 20, right: 20, bottom: 30, left: 40 }, width = +this.svg.attr(\"width\") - margin.left - margin.right, height = +this.svg.attr(\"height\") - margin.top - margin.bottom, g = this.svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t        var x = d3.scaleBand()\n\t            .rangeRound([0, width])\n\t            .padding(0.1)\n\t            .align(0.1);\n\t        var y = d3.scaleLinear()\n\t            .rangeRound([height, 0]);\n\t        var z = d3.scaleOrdinal()\n\t            .range([\"green\", \"red\", \"goldenrod\"]);\n\t        //.range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\t        var stack = d3.stack();\n\t        var data = this.results;\n\t        var keys = this.getKeys(data[0]);\n\t        for (var i = 0; i < data.length; i++) {\n\t            data[i] = this.type(data[i], keys);\n\t        }\n\t        data.sort(function (a, b) {\n\t            return b[\"total\"] - a[\"total\"];\n\t        });\n\t        x.domain(data.map(function (d) {\n\t            return d[\"keyword\"];\n\t        }));\n\t        y.domain([0, d3.max(data, function (d) {\n\t                return d[\"total\"];\n\t            })]).nice();\n\t        z.domain(keys.slice(1));\n\t        g.selectAll(\".serie\")\n\t            .data(stack.keys(keys.slice(1))(data))\n\t            .enter().append(\"g\")\n\t            .attr(\"class\", \"serie\")\n\t            .attr(\"fill\", function (d) {\n\t            return z(d.key);\n\t        })\n\t            .selectAll(\"rect\")\n\t            .data(function (d) {\n\t            return d;\n\t        })\n\t            .enter().append(\"rect\")\n\t            .attr(\"x\", function (d) {\n\t            return x(d.data[\"keyword\"]);\n\t        })\n\t            .attr(\"y\", function (d) {\n\t            return y(d[1]);\n\t        })\n\t            .attr(\"height\", function (d) {\n\t            return y(d[0]) - y(d[1]);\n\t        })\n\t            .attr(\"width\", x.bandwidth());\n\t        g.append(\"g\")\n\t            .attr(\"class\", \"axis axis--x\")\n\t            .attr(\"transform\", \"translate(0,\" + height + \")\")\n\t            .call(d3.axisBottom(x));\n\t        g.append(\"g\")\n\t            .attr(\"class\", \"axis axis--y\")\n\t            .call(d3.axisLeft(y).ticks(10, \"s\"))\n\t            .append(\"text\")\n\t            .attr(\"x\", 2)\n\t            .attr(\"y\", y(y.ticks(10).pop()))\n\t            .attr(\"dy\", \"0.35em\")\n\t            .attr(\"text-anchor\", \"start\")\n\t            .attr(\"fill\", \"#000\")\n\t            .text(\"Keyword Count\");\n\t        var legend = g.selectAll(\".legend\")\n\t            .data(keys.slice(1).reverse())\n\t            .enter().append(\"g\")\n\t            .attr(\"class\", \"legend\")\n\t            .attr(\"transform\", function (d, i) {\n\t            return \"translate(0,\" + i * 20 + \")\";\n\t        })\n\t            .style(\"font\", \"10px sans-serif\");\n\t        legend.append(\"rect\")\n\t            .attr(\"x\", width - 18)\n\t            .attr(\"width\", 18)\n\t            .attr(\"height\", 18)\n\t            .attr(\"fill\", z);\n\t        legend.append(\"text\")\n\t            .attr(\"x\", width - 24)\n\t            .attr(\"y\", 9)\n\t            .attr(\"dy\", \".35em\")\n\t            .attr(\"text-anchor\", \"end\")\n\t            .text(function (d) {\n\t            return d;\n\t        });\n\t    };\n\t    StackedBarChart.prototype.type = function (d, columns) {\n\t        var i, t;\n\t        for (i = 1, t = 0; i < columns.length; ++i)\n\t            t += d[columns[i]] = +d[columns[i]];\n\t        d[\"total\"] = t;\n\t        return d;\n\t    };\n\t    StackedBarChart.prototype.getKeys = function (obj) {\n\t        var keys = [];\n\t        for (var k in obj)\n\t            keys.push(k);\n\t        return keys;\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], StackedBarChart.prototype, \"results\", void 0);\n\t    StackedBarChart = __decorate([\n\t        core_1.Component({\n\t            selector: 'stacked-barchart',\n\t            template: __webpack_require__(421),\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof core_1.ElementRef !== 'undefined' && core_1.ElementRef) === 'function' && _a) || Object])\n\t    ], StackedBarChart);\n\t    return StackedBarChart;\n\t    var _a;\n\t}());\n\texports.StackedBarChart = StackedBarChart;\n\n\n/***/ },\n\n/***/ 419:\n701,\n\n/***/ 421:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"text-center\\\"></div>\";\n\n/***/ },\n\n/***/ 422:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\t__webpack_require__(105);\n\t__webpack_require__(423);\n\tvar d3 = __webpack_require__(398);\n\tvar PieChart = (function () {\n\t    function PieChart(el) {\n\t        this.el = el;\n\t    }\n\t    PieChart.prototype.ngAfterViewInit = function () {\n\t        this.change(this.randomData(this.labels, this.percentages), this.svg, this.pie, this.key, this.arc, this.outerArc, this.color, this.radius, this.results.labels, this.svgOriginal);\n\t    };\n\t    PieChart.prototype.ngAfterContentInit = function () {\n\t        this.createPieChart();\n\t    };\n\t    PieChart.prototype.randomData = function (labels, percentages) {\n\t        return labels.map(function (label, i) {\n\t            return { label: label, value: percentages[i] };\n\t        });\n\t    };\n\t    PieChart.prototype.createPieChart = function () {\n\t        this.svg = d3.select(this.el.nativeElement.firstElementChild)\n\t            .append(\"svg\");\n\t        //.append(\"g\");\n\t        var width = this.width ? this.width : this.el.nativeElement.firstElementChild.offsetWidth * .9, //800,\n\t        height = 560;\n\t        this.svg.attr(\"width\", width);\n\t        this.svg.attr(\"height\", height);\n\t        this.svgOriginal = this.svg;\n\t        this.svg = this.svg.append(\"g\");\n\t        this.svg.append(\"g\")\n\t            .attr(\"class\", \"slices\");\n\t        this.svg.append(\"g\")\n\t            .attr(\"class\", \"labels\");\n\t        this.svg.append(\"g\")\n\t            .attr(\"class\", \"lines\");\n\t        this.radius = Math.min(width, height) / 2;\n\t        this.pie = d3.pie()\n\t            .sort(null)\n\t            .value(function (d) {\n\t            return d[\"value\"];\n\t        });\n\t        this.arc = d3.arc()\n\t            .outerRadius(this.radius * 0.8)\n\t            .innerRadius(this.radius * 0.4);\n\t        this.outerArc = d3.arc()\n\t            .innerRadius(this.radius * 0.9)\n\t            .outerRadius(this.radius * 0.9);\n\t        var transformWidth = this.width ? width / 2 + 50 : width / 2;\n\t        this.svg.attr(\"transform\", \"translate(\" + transformWidth + \",\" + height / 2 + \")\");\n\t        this.key = function (d) {\n\t            return d.data.label;\n\t        };\n\t        this.labels = this.results.labels; //[\"Lorem ipsum\", \"dolor sit\", \"amet\", \"consectetur\", \"adipisicing\", \"elit\", \"sed\", \"do\", \"eiusmod\", \"tempor\", \"incididunt\"];\n\t        this.percentages = this.results.percentages; //[.1, .2, .05, .2, .05, .1, .05, .05, .05, .1, .05];\n\t        this.color = d3.scaleOrdinal(d3.schemeCategory20c).domain(this.labels);\n\t        //.range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\t        var randomData = this.randomData;\n\t        var labels = this.labels;\n\t        var change = this.change;\n\t        var svg = this.svg, svgOriginal = this.svgOriginal, pie = this.pie, key = this.key, arc = this.arc, outerArc = this.outerArc, color = this.color, radius = this.radius, percentages = this.percentages;\n\t        this.change(randomData(labels, percentages), svg, pie, key, arc, outerArc, color, radius, labels, svgOriginal);\n\t        // d3.select(\".randomize\")\n\t        //     .on(\"click\", function () {\n\t        //         change(randomData(labels), svg, pie, key, arc, outerArc, color, radius);\n\t        //     });\n\t    };\n\t    PieChart.prototype.change = function (data, svg, pie, key, arc, outerArc, color, radius, labels, svgOriginal) {\n\t        /* ------- PIE SLICES -------*/\n\t        var slice = svg.select(\".slices\").selectAll(\"path.slice\")\n\t            .data(pie(data), key);\n\t        slice.enter()\n\t            .insert(\"path\")\n\t            .style(\"fill\", function (d) {\n\t            return color(d.data.label);\n\t        })\n\t            .attr(\"class\", \"slice\");\n\t        slice\n\t            .transition().duration(1000)\n\t            .attrTween(\"d\", function (d) {\n\t            this._current = this._current || d;\n\t            var interpolate = d3.interpolate(this._current, d);\n\t            this._current = interpolate(0);\n\t            return function (t) {\n\t                return arc(interpolate(t));\n\t            };\n\t        });\n\t        slice.exit()\n\t            .remove();\n\t        /* ------- TEXT LABELS -------*/\n\t        // var text = svg.select(\".labels\").selectAll(\"text\")\n\t        //     .data(pie(data), key);\n\t        //\n\t        // text.enter()\n\t        //     .append(\"text\")\n\t        //     .attr(\"dy\", \".35em\")\n\t        //     .text(function (d) {\n\t        //         return (d.data.value * 100).toFixed(2) + \"%\" + \" \" + d.data.label;\n\t        //     });\n\t        //\n\t        // function midAngle(d) {\n\t        //     return d.startAngle + (d.endAngle - d.startAngle) / 2;\n\t        // }\n\t        //\n\t        // text.transition().duration(1000)\n\t        //     .attrTween(\"transform\", function (d) {\n\t        //         this._current = this._current || d;\n\t        //         var interpolate = d3.interpolate(this._current, d);\n\t        //         this._current = interpolate(0);\n\t        //         return function (t) {\n\t        //             var d2 = interpolate(t);\n\t        //             var pos = outerArc.centroid(d2);\n\t        //             pos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n\t        //             return \"translate(\" + pos + \")\";\n\t        //         };\n\t        //     })\n\t        //     .styleTween(\"text-anchor\", function (d) {\n\t        //         this._current = this._current || d;\n\t        //         var interpolate = d3.interpolate(this._current, d);\n\t        //         this._current = interpolate(0);\n\t        //         return function (t) {\n\t        //             var d2 = interpolate(t);\n\t        //             return midAngle(d2) < Math.PI ? \"start\" : \"end\";\n\t        //         };\n\t        //     });\n\t        //\n\t        // text.exit()\n\t        //     .remove();\n\t        // /* ------- SLICE TO TEXT POLYLINES -------*/\n\t        //\n\t        // var polyline = svg.select(\".lines\").selectAll(\"polyline\")\n\t        //     .data(pie(data), key);\n\t        //\n\t        // polyline.enter()\n\t        //     .append(\"polyline\");\n\t        //\n\t        // polyline.transition().duration(1000)\n\t        //     .attrTween(\"points\", function (d) {\n\t        //         this._current = this._current || d;\n\t        //         var interpolate = d3.interpolate(this._current, d);\n\t        //         this._current = interpolate(0);\n\t        //         return function (t) {\n\t        //             var d2 = interpolate(t);\n\t        //             var pos = outerArc.centroid(d2);\n\t        //             pos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n\t        //             return [arc.centroid(d2), outerArc.centroid(d2), pos];\n\t        //         };\n\t        //     });\n\t        //\n\t        // polyline.exit()\n\t        //     .remove();\n\t        var legend = svg.selectAll(\".legend\")\n\t            .data(labels)\n\t            .enter().append(\"g\")\n\t            .attr(\"class\", \"legend\")\n\t            .attr(\"transform\", function (d, i) {\n\t            return \"translate(0,\" + i * 20 + \")\";\n\t        })\n\t            .style(\"font\", \"10px sans-serif\");\n\t        legend.append(\"rect\")\n\t            .attr(\"x\", 80 - (svgOriginal.attr(\"width\") / 2))\n\t            .attr(\"y\", 45 - svgOriginal.attr(\"height\") / 2)\n\t            .attr(\"width\", 18)\n\t            .attr(\"height\", 18)\n\t            .attr(\"fill\", color);\n\t        legend.append(\"text\")\n\t            .attr(\"x\", 70 - (svgOriginal.attr(\"width\") / 2))\n\t            .attr(\"y\", 50 - svgOriginal.attr(\"height\") / 2)\n\t            .attr(\"dy\", \".35em\")\n\t            .attr(\"text-anchor\", \"end\")\n\t            .text(function (d) {\n\t            return d;\n\t        });\n\t    };\n\t    ;\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], PieChart.prototype, \"results\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Number)\n\t    ], PieChart.prototype, \"width\", void 0);\n\t    PieChart = __decorate([\n\t        core_1.Component({\n\t            selector: 'pie-chart',\n\t            template: __webpack_require__(425),\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof core_1.ElementRef !== 'undefined' && core_1.ElementRef) === 'function' && _a) || Object])\n\t    ], PieChart);\n\t    return PieChart;\n\t    var _a;\n\t}());\n\texports.PieChart = PieChart;\n\n\n/***/ },\n\n/***/ 423:\n701,\n\n/***/ 425:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"pie-chart text-center top-60\\\">\\n    <!--<button class=\\\"randomize\\\">Randomize</button>-->\\n</div>\";\n\n/***/ },\n\n/***/ 426:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar d3 = __webpack_require__(398);\n\t__webpack_require__(105);\n\t//import '../../public/styles/number-line.component.css';\n\tvar NumberLine = (function () {\n\t    function NumberLine(el) {\n\t        this.el = el;\n\t    }\n\t    NumberLine.prototype.ngAfterContentInit = function () {\n\t        this.createNumberLine();\n\t    };\n\t    NumberLine.prototype.createNumberLine = function () {\n\t        this.svg = d3.select(this.el.nativeElement.firstElementChild)\n\t            .append(\"svg\");\n\t        this.svg.attr(\"width\", this.el.nativeElement.parentElement.offsetWidth);\n\t        this.svg.attr(\"height\", 200);\n\t        var margin = { top: 20, right: 20, bottom: 30, left: 70 }, width = +this.svg.attr(\"width\") - margin.left - margin.right, height = +this.svg.attr(\"height\") - margin.top - margin.bottom;\n\t        var x = d3.scaleLinear()\n\t            .domain([-1, 1])\n\t            .range([0, width]);\n\t        var xAxis = d3.axisTop(x);\n\t        x.domain([-1, 1]);\n\t        this.svg.append(\"g\")\n\t            .attr(\"class\", \"axis--x\")\n\t            .attr(\"transform\", \"translate(30,100)\")\n\t            .call(xAxis.ticks(5))\n\t            .selectAll(\"rect\")\n\t            .data(this.results)\n\t            .enter()\n\t            .append(\"rect\")\n\t            .attr(\"transform\", \"translate(0,-70)\")\n\t            .attr(\"fill\", function (d) {\n\t            if (d > 0)\n\t                return \"green\";\n\t            else if (d < 0)\n\t                return \"red\";\n\t            else\n\t                return \"goldenrod\";\n\t        })\n\t            .attr(\"x\", function (d) {\n\t            if (d > 0)\n\t                return x(0);\n\t            else if (d < 0)\n\t                return x(d);\n\t            else\n\t                return x(-.01);\n\t        })\n\t            .attr(\"y\", 20)\n\t            .attr(\"width\", function (d) {\n\t            if (d > 0)\n\t                return x(d) - x(0);\n\t            else if (d < 0)\n\t                return x(0) - x(d);\n\t            else\n\t                return x(-.98);\n\t        })\n\t            .attr(\"height\", 30);\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], NumberLine.prototype, \"results\", void 0);\n\t    NumberLine = __decorate([\n\t        core_1.Component({\n\t            selector: 'number-line',\n\t            template: __webpack_require__(427),\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof core_1.ElementRef !== 'undefined' && core_1.ElementRef) === 'function' && _a) || Object])\n\t    ], NumberLine);\n\t    return NumberLine;\n\t    var _a;\n\t}());\n\texports.NumberLine = NumberLine;\n\n\n/***/ },\n\n/***/ 427:\n421,\n\n/***/ 428:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar d3 = __webpack_require__(398);\n\t__webpack_require__(105);\n\t__webpack_require__(429);\n\tvar ProductSentimentTimeline = (function () {\n\t    function ProductSentimentTimeline(el) {\n\t        this.el = el;\n\t        this.parseTime = d3.timeParse(\"%dd-%mm-%yyyy\");\n\t        this.minDate = 0;\n\t        this.maxDate = 0;\n\t    }\n\t    ProductSentimentTimeline.prototype.ngAfterContentInit = function () {\n\t        this.createTimeline();\n\t    };\n\t    ProductSentimentTimeline.prototype.createTimeline = function () {\n\t        this.svg = d3.select(this.el.nativeElement.firstElementChild)\n\t            .append(\"svg\");\n\t        var w = this.width ? this.width : this.el.nativeElement.parentElement.offsetWidth;\n\t        this.svg.attr(\"width\", w);\n\t        this.svg.attr(\"height\", 345);\n\t        var margin = { top: 20, right: 20, bottom: 30, left: 50 }, width = +this.svg.attr(\"width\") - margin.left - margin.right, height = +this.svg.attr(\"height\") - margin.top - margin.bottom, g = this.svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t        //var parseTime = d3.timeParse(\"%dd-%mm-%yyyy\");\n\t        var x = d3.scaleTime()\n\t            .rangeRound([0, width]);\n\t        var y = d3.scaleLinear()\n\t            .rangeRound([height, 0]);\n\t        var line = d3.line()\n\t            .x(function (d) {\n\t            return x(d[\"date\"]);\n\t        })\n\t            .y(function (d) {\n\t            return y(d[\"sentiment\"]);\n\t        });\n\t        var data = this.results;\n\t        for (var i = 0; i < data.length; i++) {\n\t            this.type(data[i]);\n\t        }\n\t        x.domain([new Date(this.minDate), new Date(this.maxDate)]);\n\t        y.domain(d3.extent(data, function (d) {\n\t            return d[\"sentiment\"];\n\t        }));\n\t        g.append(\"g\")\n\t            .attr(\"class\", \"axis axis--x\")\n\t            .attr(\"transform\", \"translate(0,\" + height + \")\")\n\t            .call(d3.axisBottom(x));\n\t        g.append(\"g\")\n\t            .attr(\"class\", \"axis axis--y\")\n\t            .call(d3.axisLeft(y))\n\t            .append(\"text\")\n\t            .attr(\"fill\", \"#000\")\n\t            .attr(\"transform\", \"rotate(-90)\")\n\t            .attr(\"y\", -40)\n\t            .attr(\"dy\", \"0.71em\")\n\t            .style(\"text-anchor\", \"end\")\n\t            .text(this.ylabel);\n\t        g.append(\"path\")\n\t            .datum(data)\n\t            .attr(\"class\", \"line\")\n\t            .attr(\"d\", line);\n\t    };\n\t    ProductSentimentTimeline.prototype.type = function (d) {\n\t        if (this.minDate == 0 && this.maxDate == 0) {\n\t            this.minDate = d[\"date\"];\n\t            this.maxDate = d[\"date\"];\n\t        }\n\t        else if (d[\"date\"] < this.minDate) {\n\t            this.minDate = d[\"date\"];\n\t        }\n\t        else if (d[\"date\"] > this.maxDate) {\n\t            this.maxDate = d[\"date\"];\n\t        }\n\t        var date = new Date(d[\"date\"]);\n\t        var curr_date = date.getDate();\n\t        var curr_month = date.getMonth() + 1; //Months are zero based\n\t        var curr_year = date.getFullYear();\n\t        var formattedDate = curr_date + \"-\" + curr_month + \"-\" + curr_year;\n\t        d[\"date\"] = date; //this.parseTime(formattedDate);\n\t        d[\"sentiment\"] = +d.sentiment;\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], ProductSentimentTimeline.prototype, \"results\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], ProductSentimentTimeline.prototype, \"width\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], ProductSentimentTimeline.prototype, \"ylabel\", void 0);\n\t    ProductSentimentTimeline = __decorate([\n\t        core_1.Component({\n\t            selector: 'product-sentiment-timeline',\n\t            template: __webpack_require__(431),\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof core_1.ElementRef !== 'undefined' && core_1.ElementRef) === 'function' && _a) || Object])\n\t    ], ProductSentimentTimeline);\n\t    return ProductSentimentTimeline;\n\t    var _a;\n\t}());\n\texports.ProductSentimentTimeline = ProductSentimentTimeline;\n\n\n/***/ },\n\n/***/ 429:\n701,\n\n/***/ 431:\n421,\n\n/***/ 432:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar angular_2_data_table_1 = __webpack_require__(84);\n\t__webpack_require__(105);\n\t__webpack_require__(433);\n\tvar ProductDataTable = (function () {\n\t    function ProductDataTable() {\n\t        this.items = [];\n\t        this.itemCount = 0;\n\t    }\n\t    ProductDataTable.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        this.itemResource = new angular_2_data_table_1.DataTableResource(this.products);\n\t        this.items = [];\n\t        this.itemCount = 0;\n\t        this.itemResource.count().then(function (count) { return _this.itemCount = count; });\n\t    };\n\t    ProductDataTable.prototype.ngAfterContentInit = function () {\n\t    };\n\t    ProductDataTable.prototype.reloadItems = function (params) {\n\t        var _this = this;\n\t        this.itemResource.query(params).then(function (items) { return _this.items = items; });\n\t    };\n\t    // special properties:\n\t    ProductDataTable.prototype.rowClick = function (rowEvent) {\n\t        console.log('Clicked: ' + rowEvent.row.item.name);\n\t    };\n\t    ProductDataTable.prototype.rowDoubleClick = function (rowEvent) {\n\t        alert('Double clicked: ' + rowEvent.row.item.name);\n\t    };\n\t    ProductDataTable.prototype.rowTooltip = function (item) { return item.jobTitle; };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], ProductDataTable.prototype, \"products\", void 0);\n\t    ProductDataTable = __decorate([\n\t        core_1.Component({\n\t            selector: 'product-data-table',\n\t            template: __webpack_require__(435),\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], ProductDataTable);\n\t    return ProductDataTable;\n\t}());\n\texports.ProductDataTable = ProductDataTable;\n\n\n/***/ },\n\n/***/ 433:\n701,\n\n/***/ 435:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div style=\\\"margin: auto; max-width: 1000px; margin-bottom: 50px;\\\">\\n    <data-table id=\\\"product-grid\\\"\\n                headerTitle=\\\"\\\"\\n                [items]=\\\"items\\\"\\n                [itemCount]=\\\"itemCount\\\"\\n                (reload)=\\\"reloadItems($event)\\\">\\n        <data-table-column\\n                [property]=\\\"'name'\\\"\\n                [header]=\\\"'Product Name'\\\"\\n                [sortable]=\\\"true\\\"\\n                [resizable]=\\\"true\\\">\\n        </data-table-column>\\n        <data-table-column\\n                [property]=\\\"'count'\\\"\\n                [header]=\\\"'Review Count'\\\"\\n                [sortable]=\\\"true\\\">\\n        </data-table-column>\\n    </data-table>\\n</div>\";\n\n/***/ },\n\n/***/ 436:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar platform_browser_1 = __webpack_require__(21);\n\t__webpack_require__(105);\n\t__webpack_require__(407);\n\tvar ConceptsTable = (function () {\n\t    function ConceptsTable(elRef, sanitizer) {\n\t        this.elRef = elRef;\n\t        this.sanitizer = sanitizer;\n\t        //this array contains the image we will show for each page\n\t        this.reviews = [];\n\t        this.noResults = false;\n\t        this.filter = '';\n\t        this.maxSize = 7;\n\t        this.directionLinks = true;\n\t        this.autoHide = false;\n\t        this.config = {\n\t            id: 'concepts-pagination',\n\t            itemsPerPage: 10,\n\t            currentPage: 1\n\t        };\n\t        this.opened = false;\n\t    }\n\t    ConceptsTable.prototype.toggle = function (i) {\n\t        var index = (this.config.currentPage * this.config.itemsPerPage) - (this.config.itemsPerPage - i);\n\t        this.reviews[index][\"opened\"] = !this.reviews[index][\"opened\"];\n\t    };\n\t    ConceptsTable.prototype.onPageChange = function (number) {\n\t        this.config.currentPage = number;\n\t    };\n\t    ConceptsTable.prototype.ngAfterViewChecked = function () {\n\t    };\n\t    ConceptsTable.prototype.ngOnChanges = function (changes) {\n\t        this.config.currentPage = 1;\n\t        if (this.data) {\n\t            this.reviews = [];\n\t            this.parseData(this.data);\n\t        }\n\t        this.config.currentPage = 1;\n\t    };\n\t    ConceptsTable.prototype.parseData = function (data) {\n\t        for (var i = 0; i < data.length; i++) {\n\t            var jsonObj = {};\n\t            jsonObj[\"product_name\"] = data[i][\"product_name\"];\n\t            jsonObj[\"review_text\"] = data[i][\"review_text\"];\n\t            jsonObj[\"summary\"] = data[i][\"summary\"];\n\t            jsonObj[\"doc_sentiment\"] = {};\n\t            jsonObj[\"concepts\"] = [];\n\t            jsonObj[\"opened\"] = true;\n\t            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"concepts\"].length > 0) {\n\t                jsonObj[\"doc_sentiment\"][\"type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n\t                jsonObj[\"doc_sentiment\"][\"score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n\t                jsonObj[\"doc_emotions\"] = data[i][\"review_text_enriched\"][\"docEmotions\"];\n\t                var doc = data[i][\"review_text_enriched\"][\"concepts\"];\n\t                for (var j = 0; j < doc.length; j++) {\n\t                    var concept = {\n\t                        \"text\": null,\n\t                        \"relevance\": null\n\t                    };\n\t                    var obj = doc[j];\n\t                    concept[\"text\"] = obj[\"text\"];\n\t                    concept[\"relevance\"] = obj[\"relevance\"];\n\t                    if (obj[\"dbpedia\"])\n\t                        concept[\"dbpedia\"] = obj[\"dbpedia\"];\n\t                    if (obj[\"freebase\"])\n\t                        concept[\"freebase\"] = obj[\"freebase\"];\n\t                    if (obj[\"opencyc\"])\n\t                        concept[\"opencyc\"] = obj[\"opencyc\"];\n\t                    if (obj[\"yago\"])\n\t                        concept[\"yago\"] = obj[\"yago\"];\n\t                    if (obj[\"website\"])\n\t                        concept[\"website\"] = obj[\"website\"];\n\t                    if (obj[\"crunchbase\"])\n\t                        concept[\"crunchbase\"] = obj[\"crunchbase\"];\n\t                    jsonObj[\"concepts\"].push(concept);\n\t                }\n\t                this.reviews.push(jsonObj);\n\t            }\n\t        }\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], ConceptsTable.prototype, \"data\", void 0);\n\t    ConceptsTable = __decorate([\n\t        core_1.Component({\n\t            selector: 'concepts-table',\n\t            template: __webpack_require__(437),\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof core_1.ElementRef !== 'undefined' && core_1.ElementRef) === 'function' && _a) || Object, (typeof (_b = typeof platform_browser_1.DomSanitizer !== 'undefined' && platform_browser_1.DomSanitizer) === 'function' && _b) || Object])\n\t    ], ConceptsTable);\n\t    return ConceptsTable;\n\t    var _a, _b;\n\t}());\n\texports.ConceptsTable = ConceptsTable;\n\n\n/***/ },\n\n/***/ 437:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"row margin-lr-sm margin-tb-sm\\\">\\n    <div id=\\\"\\\" class=\\\"text-center\\\">\\n        <div *ngIf=\\\"reviews.length > 0\\\">\\n            <div style=\\\"text-align:left !important;\\\">\\n                <ul class=\\\"reviews-list list list-group\\\">\\n                    <li *ngFor=\\\"let review of (reviews | paginate: config); let i = index\\\">\\n                        <div class=\\\"panel panel-default no-padding\\\">\\n                            <div class=\\\"panel-heading\\\" (click)=\\\"toggle(i)\\\">\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'positive'\\\">\\n                                    <i class=\\\"fa fa-smile-o fa-2x green\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>{{review.doc_sentiment.score}}</span>\\n                                </div>\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'negative'\\\">\\n                                    <i class=\\\"fa fa-frown-o fa-2x red\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>{{review.doc_sentiment.score}}</span>\\n                                </div>\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'neutral'\\\">\\n                                    <i class=\\\"fa fa-meh-o fa-2x goldenrod\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>Neutral</span>\\n                                </div>\\n                                <h5>Product Name: </h5>\\n                                <h4>{{review.product_name}}</h4>\\n                                <h5>Review Text: </h5>\\n                                <p>{{review.review_text}}</p>\\n                                <h5>Doc Emotions: </h5>\\n                                <div class=\\\"sprite-image row\\\">\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"joy\\\"></div>\\n                                        <figcaption>Joy - {{review.doc_emotions.joy | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"sadness\\\"></div>\\n                                        <figcaption>Sadness - {{review.doc_emotions.sadness | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"anger\\\"></div>\\n                                        <figcaption>Anger - {{review.doc_emotions.anger | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"disgust\\\"></div>\\n                                        <figcaption>Disgust - {{review.doc_emotions.disgust | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"fear\\\"></div>\\n                                        <figcaption>Fear - {{review.doc_emotions.fear | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"panel-body\\\" [ngClass]=\\\"{hide: !review.opened}\\\">\\n                                <table class=\\\"table\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>Concept</th>\\n                                        <th>Relevance</th>\\n                                        <th>References</th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let concept of review.concepts\\\">\\n                                        <td>{{concept.text}}</td>\\n                                        <td>{{concept.relevance | percent: \\\"1.1-1\\\"}}</td>\\n                                        <td>\\n                                            <a *ngIf=\\\"concept.dbpedia\\\" href=\\\"{{concept.dbpedia}}\\\">DBPedia</a>\\n                                            <span *ngIf=\\\"concept.dbpedia\\\"> | </span>\\n                                            <a *ngIf=\\\"concept.freebase\\\" href=\\\"{{concept.freebase}}\\\">Freebase</a>\\n                                            <span *ngIf=\\\"concept.freebase\\\"> | </span>\\n                                            <a *ngIf=\\\"concept.opencyc\\\" href=\\\"{{concept.opencyc}}\\\">OpenCyc</a>\\n                                            <span *ngIf=\\\"concept.opencyc\\\"> | </span>\\n                                            <a *ngIf=\\\"concept.yago\\\" href=\\\"{{concept.yago}}\\\">Yago</a>\\n                                            <span *ngIf=\\\"concept.yago\\\"> | </span>\\n                                            <a *ngIf=\\\"concept.crunchbase\\\" href=\\\"{{concept.crunchbase}}\\\">Crunchbase</a>\\n                                            <span *ngIf=\\\"concept.crunchbase\\\"> | </span>\\n                                            <a *ngIf=\\\"concept.website\\\" href=\\\"{{concept.website}}\\\">Website</a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n\\n                        </div>\\n                    </li>\\n                </ul>\\n                <div class=\\\"\\\">\\n                    <pagination-controls [id]=\\\"config.id\\\" [maxSize]=\\\"maxSize\\\"\\n                                         [directionLinks]=\\\"directionLinks\\\"\\n                                         [autoHide]=\\\"autoHide\\\" (pageChange)=\\\"onPageChange($event);\\\"\\n                                         style=\\\"text-align:center;font-size:2em\\\"></pagination-controls>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"reviews.length < 1\\\">\\n            <h1>There are no concepts.</h1>\\n        </div>\\n    </div>\\n</div>\";\n\n/***/ },\n\n/***/ 438:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar platform_browser_1 = __webpack_require__(21);\n\tvar helpers = __webpack_require__(399);\n\tvar d3 = __webpack_require__(398);\n\t__webpack_require__(105);\n\t__webpack_require__(407);\n\tvar EntitiesTable = (function () {\n\t    function EntitiesTable(elRef, sanitizer) {\n\t        this.elRef = elRef;\n\t        this.sanitizer = sanitizer;\n\t        //this array contains the image we will show for each page\n\t        this.reviews = [];\n\t        this.noResults = false;\n\t        this.filter = '';\n\t        this.maxSize = 7;\n\t        this.directionLinks = true;\n\t        this.autoHide = false;\n\t        this.config = {\n\t            id: 'entities-pagination',\n\t            itemsPerPage: 10,\n\t            currentPage: 1\n\t        };\n\t        this.opened = false;\n\t    }\n\t    EntitiesTable.prototype.toggle = function (i) {\n\t        var index = (this.config.currentPage * this.config.itemsPerPage) - (this.config.itemsPerPage - i);\n\t        this.reviews[index][\"opened\"] = !this.reviews[index][\"opened\"];\n\t    };\n\t    EntitiesTable.prototype.onPageChange = function (number) {\n\t        this.config.currentPage = number;\n\t    };\n\t    EntitiesTable.prototype.ngAfterViewChecked = function () {\n\t    };\n\t    EntitiesTable.prototype.ngOnChanges = function (changes) {\n\t        this.config.currentPage = 1;\n\t        if (this.data) {\n\t            this.reviews = [];\n\t            this.parseData(this.data);\n\t        }\n\t        this.config.currentPage = 1;\n\t    };\n\t    EntitiesTable.prototype.parseData = function (data) {\n\t        for (var i = 0; i < data.length; i++) {\n\t            var jsonObj = {};\n\t            jsonObj[\"product_name\"] = data[i][\"product_name\"];\n\t            jsonObj[\"review_text\"] = data[i][\"review_text\"];\n\t            jsonObj[\"summary\"] = data[i][\"summary\"];\n\t            jsonObj[\"doc_sentiment\"] = {};\n\t            jsonObj[\"entities\"] = [];\n\t            jsonObj[\"opened\"] = true;\n\t            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"entities\"].length > 0) {\n\t                jsonObj[\"doc_sentiment\"][\"type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n\t                jsonObj[\"doc_sentiment\"][\"score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n\t                jsonObj[\"doc_emotions\"] = data[i][\"review_text_enriched\"][\"docEmotions\"];\n\t                var doc = data[i][\"review_text_enriched\"][\"entities\"];\n\t                for (var j = 0; j < doc.length; j++) {\n\t                    var entity = {\n\t                        \"text\": null,\n\t                        \"relevance\": null,\n\t                        \"count\": null,\n\t                        \"sentiment\": {\n\t                            \"type\": null,\n\t                            \"score\": null\n\t                        },\n\t                        \"type\": null\n\t                    };\n\t                    var obj = doc[j];\n\t                    entity[\"text\"] = obj[\"text\"];\n\t                    entity[\"relevance\"] = obj[\"relevance\"];\n\t                    entity[\"type\"] = obj[\"type\"];\n\t                    entity[\"sentiment\"][\"type\"] = obj[\"sentiment\"][\"type\"];\n\t                    if (obj[\"sentiment\"][\"score\"])\n\t                        entity[\"sentiment\"][\"score\"] = obj[\"sentiment\"][\"score\"];\n\t                    jsonObj[\"entities\"].push(entity);\n\t                }\n\t                this.reviews.push(jsonObj);\n\t            }\n\t        }\n\t    };\n\t    EntitiesTable.prototype.convertToCSV = function (data) {\n\t        var csvReviews = [];\n\t        for (var i = 0; i < data.length; i++) {\n\t            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"entities\"].length > 0) {\n\t                var doc = data[i][\"review_text_enriched\"][\"entities\"];\n\t                for (var j = 0; j < doc.length; j++) {\n\t                    var obj = doc[j];\n\t                    var jsonObj = {};\n\t                    jsonObj[\"product_name\"] = data[i][\"product_name\"];\n\t                    jsonObj[\"review_text\"] = data[i][\"review_text\"];\n\t                    jsonObj[\"summary\"] = data[i][\"summary\"];\n\t                    jsonObj[\"doc_sentiment_type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n\t                    jsonObj[\"doc_sentiment_score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n\t                    jsonObj[\"entity_text\"] = obj[\"text\"];\n\t                    jsonObj[\"entity_relevance\"] = obj[\"relevance\"];\n\t                    jsonObj[\"entity_type\"] = obj[\"type\"];\n\t                    jsonObj[\"sentiment_score\"] = obj[\"sentiment\"][\"score\"];\n\t                    jsonObj[\"sentiment_type\"] = obj[\"sentiment\"][\"type\"];\n\t                    csvReviews.push(jsonObj);\n\t                }\n\t            }\n\t        }\n\t        return csvReviews;\n\t    };\n\t    EntitiesTable.prototype.downloadAsCSV = function () {\n\t        var csvFile = d3.csvFormat(this.convertToCSV(this.data));\n\t        helpers.exportToCSV(csvFile, \"entities-export.csv\");\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], EntitiesTable.prototype, \"data\", void 0);\n\t    EntitiesTable = __decorate([\n\t        core_1.Component({\n\t            selector: 'entities-table',\n\t            template: __webpack_require__(439),\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof core_1.ElementRef !== 'undefined' && core_1.ElementRef) === 'function' && _a) || Object, (typeof (_b = typeof platform_browser_1.DomSanitizer !== 'undefined' && platform_browser_1.DomSanitizer) === 'function' && _b) || Object])\n\t    ], EntitiesTable);\n\t    return EntitiesTable;\n\t    var _a, _b;\n\t}());\n\texports.EntitiesTable = EntitiesTable;\n\n\n/***/ },\n\n/***/ 439:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"row margin-lr-sm margin-tb-sm\\\">\\n    <div id=\\\"\\\" class=\\\"text-center\\\">\\n        <div *ngIf=\\\"reviews.length > 0\\\">\\n            <div style=\\\"text-align:left !important;\\\">\\n                <ul class=\\\"reviews-list list list-group\\\">\\n                    <li *ngFor=\\\"let review of (reviews | paginate: config); let i = index\\\">\\n                        <div class=\\\"panel panel-default no-padding\\\">\\n                            <div class=\\\"panel-heading\\\" (click)=\\\"toggle(i)\\\">\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'positive'\\\">\\n                                    <i class=\\\"fa fa-smile-o fa-2x green\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>{{review.doc_sentiment.score}}</span>\\n                                </div>\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'negative'\\\">\\n                                    <i class=\\\"fa fa-frown-o fa-2x red\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>{{review.doc_sentiment.score}}</span>\\n                                </div>\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'neutral'\\\">\\n                                    <i class=\\\"fa fa-meh-o fa-2x goldenrod\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>Neutral</span>\\n                                </div>\\n                                <h5>Product Name: </h5>\\n                                <h4>{{review.product_name}}</h4>\\n                                <h5>Review Text: </h5>\\n                                <p>{{review.review_text}}</p>\\n                                <h5>Doc Emotions: </h5>\\n                                <div class=\\\"sprite-image row\\\">\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"joy\\\"></div>\\n                                        <figcaption>Joy - {{review.doc_emotions.joy | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"sadness\\\"></div>\\n                                        <figcaption>Sadness - {{review.doc_emotions.sadness | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"anger\\\"></div>\\n                                        <figcaption>Anger - {{review.doc_emotions.anger | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"disgust\\\"></div>\\n                                        <figcaption>Disgust - {{review.doc_emotions.disgust | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"fear\\\"></div>\\n                                        <figcaption>Fear - {{review.doc_emotions.fear | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"panel-body\\\" [ngClass]=\\\"{hide: !review.opened}\\\">\\n                                <table class=\\\"table\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>Entity</th>\\n                                        <th>Relevance</th>\\n                                        <th>Type</th>\\n                                        <th>Sentiment</th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let entity of review.entities\\\">\\n                                        <td>{{entity.text}}</td>\\n                                        <td>{{entity.relevance | percent: \\\"1.1-1\\\"}}</td>\\n                                        <td>{{entity.type}}</td>\\n                                        <td>\\n                                            <p *ngIf=\\\"entity.sentiment.type == 'positive'\\\">\\n                                                <i class=\\\"fa fa-smile-o fa-2x green\\\" aria-hidden=\\\"true\\\"></i>\\n                                                <span>{{entity.sentiment.score}}</span>\\n                                            </p>\\n                                            <p *ngIf=\\\"entity.sentiment.type == 'negative'\\\">\\n                                                <i class=\\\"fa fa-frown-o fa-2x red\\\" aria-hidden=\\\"true\\\"></i>\\n                                                <span>{{entity.sentiment.score}}</span>\\n                                            </p>\\n                                            <p *ngIf=\\\"entity.sentiment.type == 'neutral'\\\">\\n                                                <i class=\\\"fa fa-meh-o fa-2x goldenrod\\\" aria-hidden=\\\"true\\\"></i>\\n                                                <span>Neutral</span>\\n                                            </p>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n\\n                        </div>\\n                    </li>\\n                </ul>\\n                <div class=\\\"\\\">\\n                    <pagination-controls [id]=\\\"config.id\\\" [maxSize]=\\\"maxSize\\\"\\n                                         [directionLinks]=\\\"directionLinks\\\"\\n                                         [autoHide]=\\\"autoHide\\\" (pageChange)=\\\"onPageChange($event);\\\"\\n                                         style=\\\"text-align:center;font-size:2em\\\"></pagination-controls>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"reviews.length < 1\\\">\\n            <h1>There are no entities.</h1>\\n        </div>\\n    </div>\\n</div>\";\n\n/***/ },\n\n/***/ 440:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar platform_browser_1 = __webpack_require__(21);\n\t__webpack_require__(105);\n\t__webpack_require__(407);\n\tvar KeywordsTable = (function () {\n\t    function KeywordsTable(elRef, sanitizer) {\n\t        this.elRef = elRef;\n\t        this.sanitizer = sanitizer;\n\t        //this array contains the image we will show for each page\n\t        this.reviews = [];\n\t        this.noResults = false;\n\t        this.filter = '';\n\t        this.maxSize = 7;\n\t        this.directionLinks = true;\n\t        this.autoHide = false;\n\t        this.config = {\n\t            id: 'keywords-pagination',\n\t            itemsPerPage: 10,\n\t            currentPage: 1\n\t        };\n\t        this.opened = false;\n\t    }\n\t    KeywordsTable.prototype.toggle = function (i) {\n\t        var index = (this.config.currentPage * this.config.itemsPerPage) - (this.config.itemsPerPage - i);\n\t        this.reviews[index][\"opened\"] = !this.reviews[index][\"opened\"];\n\t    };\n\t    KeywordsTable.prototype.onPageChange = function (number) {\n\t        this.config.currentPage = number;\n\t    };\n\t    KeywordsTable.prototype.ngAfterViewChecked = function () {\n\t    };\n\t    KeywordsTable.prototype.ngOnChanges = function (changes) {\n\t        this.config.currentPage = 1;\n\t        if (this.data) {\n\t            this.reviews = [];\n\t            this.parseData(this.data);\n\t        }\n\t        this.config.currentPage = 1;\n\t    };\n\t    KeywordsTable.prototype.parseData = function (data) {\n\t        for (var i = 0; i < data.length; i++) {\n\t            var jsonObj = {};\n\t            jsonObj[\"product_name\"] = data[i][\"product_name\"];\n\t            jsonObj[\"review_text\"] = data[i][\"review_text\"];\n\t            jsonObj[\"summary\"] = data[i][\"summary\"];\n\t            jsonObj[\"doc_sentiment\"] = {};\n\t            jsonObj[\"keywords\"] = [];\n\t            jsonObj[\"opened\"] = true;\n\t            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"keywords\"].length > 0) {\n\t                jsonObj[\"doc_sentiment\"][\"type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n\t                jsonObj[\"doc_sentiment\"][\"score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n\t                jsonObj[\"doc_emotions\"] = data[i][\"review_text_enriched\"][\"docEmotions\"];\n\t                var doc = data[i][\"review_text_enriched\"][\"keywords\"];\n\t                for (var j = 0; j < doc.length; j++) {\n\t                    var keyword = {\n\t                        \"text\": null,\n\t                        \"relevance\": null,\n\t                        \"sentiment\": {\n\t                            \"type\": null,\n\t                            \"score\": null\n\t                        }\n\t                    };\n\t                    var obj = doc[j];\n\t                    keyword[\"text\"] = obj[\"text\"];\n\t                    keyword[\"relevance\"] = obj[\"relevance\"];\n\t                    keyword[\"sentiment\"][\"type\"] = obj[\"sentiment\"][\"type\"];\n\t                    if (obj[\"sentiment\"][\"score\"])\n\t                        keyword[\"sentiment\"][\"score\"] = obj[\"sentiment\"][\"score\"];\n\t                    jsonObj[\"keywords\"].push(keyword);\n\t                }\n\t                this.reviews.push(jsonObj);\n\t            }\n\t        }\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], KeywordsTable.prototype, \"data\", void 0);\n\t    KeywordsTable = __decorate([\n\t        core_1.Component({\n\t            selector: 'keywords-table',\n\t            template: __webpack_require__(441),\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof core_1.ElementRef !== 'undefined' && core_1.ElementRef) === 'function' && _a) || Object, (typeof (_b = typeof platform_browser_1.DomSanitizer !== 'undefined' && platform_browser_1.DomSanitizer) === 'function' && _b) || Object])\n\t    ], KeywordsTable);\n\t    return KeywordsTable;\n\t    var _a, _b;\n\t}());\n\texports.KeywordsTable = KeywordsTable;\n\n\n/***/ },\n\n/***/ 441:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"row margin-lr-sm margin-tb-sm\\\">\\n    <div id=\\\"\\\" class=\\\"text-center\\\">\\n        <div *ngIf=\\\"reviews.length > 0\\\">\\n            <div style=\\\"text-align:left !important;\\\">\\n                <ul class=\\\"reviews-list list list-group\\\">\\n                    <li *ngFor=\\\"let review of (reviews | paginate: config); let i = index\\\">\\n                        <div class=\\\"panel panel-default no-padding\\\">\\n                            <div class=\\\"panel-heading\\\" (click)=\\\"toggle(i)\\\">\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'positive'\\\">\\n                                    <i class=\\\"fa fa-smile-o fa-2x green\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>{{review.doc_sentiment.score}}</span>\\n                                </div>\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'negative'\\\">\\n                                    <i class=\\\"fa fa-frown-o fa-2x red\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>{{review.doc_sentiment.score}}</span>\\n                                </div>\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'neutral'\\\">\\n                                    <i class=\\\"fa fa-meh-o fa-2x goldenrod\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>Neutral</span>\\n                                </div>\\n                                <h5>Product Name: </h5>\\n                                <h4>{{review.product_name}}</h4>\\n                                <h5>Review Text: </h5>\\n                                <p>{{review.review_text}}</p>\\n                                <h5>Doc Emotions: </h5>\\n                                <div class=\\\"sprite-image row\\\">\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"joy\\\"></div>\\n                                        <figcaption>Joy - {{review.doc_emotions.joy | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"sadness\\\"></div>\\n                                        <figcaption>Sadness - {{review.doc_emotions.sadness | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"anger\\\"></div>\\n                                        <figcaption>Anger - {{review.doc_emotions.anger | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"disgust\\\"></div>\\n                                        <figcaption>Disgust - {{review.doc_emotions.disgust | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"fear\\\"></div>\\n                                        <figcaption>Fear - {{review.doc_emotions.fear | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"panel-body\\\" [ngClass]=\\\"{hide: !review.opened}\\\">\\n                                <table class=\\\"table\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>Keyword</th>\\n                                        <th>Relevance</th>\\n                                        <th>Sentiment</th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let keyword of review.keywords\\\">\\n                                        <td>{{keyword.text}}</td>\\n                                        <td>{{keyword.relevance | percent: \\\"1.1-1\\\"}}</td>\\n                                        <td>\\n                                            <p *ngIf=\\\"keyword.sentiment.type == 'positive'\\\">\\n                                                <i class=\\\"fa fa-smile-o fa-2x green\\\" aria-hidden=\\\"true\\\"></i>\\n                                                <span>{{keyword.sentiment.score}}</span>\\n                                            </p>\\n                                            <p *ngIf=\\\"keyword.sentiment.type == 'negative'\\\">\\n                                                <i class=\\\"fa fa-frown-o fa-2x red\\\" aria-hidden=\\\"true\\\"></i>\\n                                                <span>{{keyword.sentiment.score}}</span>\\n                                            </p>\\n                                            <p *ngIf=\\\"keyword.sentiment.type == 'neutral'\\\">\\n                                                <i class=\\\"fa fa-meh-o fa-2x goldenrod\\\" aria-hidden=\\\"true\\\"></i>\\n                                                <span>Neutral</span>\\n                                            </p>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n\\n                        </div>\\n                    </li>\\n                </ul>\\n                <div class=\\\"\\\">\\n                    <pagination-controls [id]=\\\"config.id\\\" [maxSize]=\\\"maxSize\\\"\\n                                         [directionLinks]=\\\"directionLinks\\\"\\n                                         [autoHide]=\\\"autoHide\\\" (pageChange)=\\\"onPageChange($event);\\\"\\n                                         style=\\\"text-align:center;font-size:2em\\\"></pagination-controls>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"reviews.length < 1\\\">\\n            <h1>There are no concepts.</h1>\\n        </div>\\n    </div>\\n</div>\";\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// app.83a80abbca61b37e33c3.min.js","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app/app.module';\nif (process.env.ENV === 'production') {\n    enableProdMode();\n}\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/main.ts","import { NgModule } from '@angular/core';\nimport { APP_BASE_HREF, LocationStrategy, HashLocationStrategy} from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { Ng2PaginationModule } from 'ng2-pagination';\nimport { MaterialModule } from '@angular/material';\nimport { DataTableModule } from 'angular-2-data-table';\n\nimport { AppComponent } from './app.component';\n\nimport { ReviewOverview } from './pages/review-overview.component';\nimport { EnrichmentVisualizer } from './pages/enrichment-visualizer.component';\nimport { ProductSearch } from './pages/product-search.component';\n\nimport { QueryForm } from './components/query-form.component';\nimport { RelationsList } from './components/relations-list.component';\nimport { KeywordsChart } from './components/keywords-chart.component';\nimport { BubbleChart } from './components/bubble-chart.component';\nimport { StackedBarChart } from './components/stacked-barchart.component'\nimport { PieChart } from './components/pie-chart.component';\nimport { NumberLine } from './components/number-line.component';\nimport { ProductSentimentTimeline } from './components/product-sentiment-timeline.component';\nimport { ProductDataTable } from './components/data-table.component'\nimport { ConceptsTable } from './components/concepts-table.component'\nimport { EntitiesTable } from './components/entities-table.component'\nimport { KeywordsTable } from './components/keywords-table.component'\n\n\nconst appRoutes: Routes = [\n    {\n        path: '',\n        redirectTo: '/home',\n        pathMatch: 'full'\n    },\n    { path: \"home\", component: ReviewOverview},\n    { path: 'enrichment-visualizer', component: EnrichmentVisualizer },\n    { path: 'product-search', component: ProductSearch }\n\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(appRoutes),\n        BrowserModule,\n        FormsModule,\n        HttpModule,\n        JsonpModule,\n        Ng2PaginationModule,\n        MaterialModule,\n        DataTableModule\n    ],\n    providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}],\n    declarations: [ AppComponent, ReviewOverview, EnrichmentVisualizer, ProductSearch, StackedBarChart, NumberLine, ProductSentimentTimeline, QueryForm, RelationsList, KeywordsChart, BubbleChart, PieChart, ProductDataTable, ConceptsTable, EntitiesTable, KeywordsTable],\n    bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/app.module.ts","/**\n * @license Angular v2.2.4\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs/operator/toPromise'), require('rxjs/Subject'), require('rxjs/Observable'), require('rxjs/observable/fromPromise')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/operator/toPromise', 'rxjs/Subject', 'rxjs/Observable', 'rxjs/observable/fromPromise'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.forms = global.ng.forms || {}),global.ng.core,global.Rx.Observable.prototype,global.Rx,global.Rx,global.Rx.Observable));\n}(this, function (exports,_angular_core,rxjs_operator_toPromise,rxjs_Subject,rxjs_Observable,rxjs_observable_fromPromise) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for control directives.\n     *\n     * Only used internally in the forms module.\n     *\n     * @stable\n     */\n    var AbstractControlDirective = (function () {\n        function AbstractControlDirective() {\n        }\n        Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n            get: function () { throw new Error('unimplemented'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n            get: function () { return this.control ? this.control.value : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n            get: function () { return this.control ? this.control.valid : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n            get: function () { return this.control ? this.control.invalid : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n            get: function () { return this.control ? this.control.pending : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n            get: function () { return this.control ? this.control.errors : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n            get: function () { return this.control ? this.control.pristine : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n            get: function () { return this.control ? this.control.dirty : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n            get: function () { return this.control ? this.control.touched : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n            get: function () { return this.control ? this.control.untouched : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n            get: function () { return this.control ? this.control.disabled : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n            get: function () { return this.control ? this.control.enabled : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n            get: function () { return this.control ? this.control.statusChanges : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n            get: function () { return this.control ? this.control.valueChanges : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        AbstractControlDirective.prototype.reset = function (value) {\n            if (value === void 0) { value = undefined; }\n            if (this.control)\n                this.control.reset(value);\n        };\n        AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return this.control ? this.control.hasError(errorCode, path) : false;\n        };\n        AbstractControlDirective.prototype.getError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return this.control ? this.control.getError(errorCode, path) : null;\n        };\n        return AbstractControlDirective;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * A directive that contains multiple {@link NgControl}s.\n     *\n     * Only used by the forms module.\n     *\n     * @stable\n     */\n    var ControlContainer = (function (_super) {\n        __extends$1(ControlContainer, _super);\n        function ControlContainer() {\n            _super.apply(this, arguments);\n        }\n        Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n            /**\n             * Get the form to which this container belongs.\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ControlContainer.prototype, \"path\", {\n            /**\n             * Get the path to this container.\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return ControlContainer;\n    }(AbstractControlDirective));\n\n    function isPresent(obj) {\n        return obj != null;\n    }\n    function isBlank(obj) {\n        return obj == null;\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    function isPrimitive(obj) {\n        return !isJsObject(obj);\n    }\n\n    /**\n     * Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        StringMapWrapper.merge = function (m1, m2) {\n            var m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        StringMapWrapper.equals = function (m1, m2) {\n            var k1 = Object.keys(m1);\n            var k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var i = 0; i < k1.length; i++) {\n                var key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n    var ListWrapper = (function () {\n        function ListWrapper() {\n        }\n        ListWrapper.removeAll = function (list, items) {\n            for (var i = 0; i < items.length; ++i) {\n                var index = list.indexOf(items[i]);\n                if (index > -1) {\n                    list.splice(index, 1);\n                }\n            }\n        };\n        ListWrapper.remove = function (list, el) {\n            var index = list.indexOf(el);\n            if (index > -1) {\n                list.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        ListWrapper.equals = function (a, b) {\n            if (a.length != b.length)\n                return false;\n            for (var i = 0; i < a.length; ++i) {\n                if (a[i] !== b[i])\n                    return false;\n            }\n            return true;\n        };\n        ListWrapper.flatten = function (list) {\n            return list.reduce(function (flat, item) {\n                var flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n                return flat.concat(flatItem);\n            }, []);\n        };\n        return ListWrapper;\n    }());\n\n    var isPromise = _angular_core.__core_private__.isPromise;\n\n    function isEmptyInputValue(value) {\n        return value == null || typeof value === 'string' && value.length === 0;\n    }\n    /**\n     * Providers for validators to be used for {@link FormControl}s in a form.\n     *\n     * Provide this using `multi: true` to add validators.\n     *\n     * ### Example\n     *\n     * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n     * @stable\n     */\n    var NG_VALIDATORS = new _angular_core.OpaqueToken('NgValidators');\n    /**\n     * Providers for asynchronous validators to be used for {@link FormControl}s\n     * in a form.\n     *\n     * Provide this using `multi: true` to add validators.\n     *\n     * See {@link NG_VALIDATORS} for more details.\n     *\n     * @stable\n     */\n    var NG_ASYNC_VALIDATORS = new _angular_core.OpaqueToken('NgAsyncValidators');\n    /**\n     * Provides a set of validators used by form controls.\n     *\n     * A validator is a function that processes a {@link FormControl} or collection of\n     * controls and returns a map of errors. A null map means that validation has passed.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * var loginControl = new FormControl(\"\", Validators.required)\n     * ```\n     *\n     * @stable\n     */\n    var Validators = (function () {\n        function Validators() {\n        }\n        /**\n         * Validator that requires controls to have a non-empty value.\n         */\n        Validators.required = function (control) {\n            return isEmptyInputValue(control.value) ? { 'required': true } : null;\n        };\n        /**\n         * Validator that requires controls to have a value of a minimum length.\n         */\n        Validators.minLength = function (minLength) {\n            return function (control) {\n                if (isEmptyInputValue(control.value)) {\n                    return null; // don't validate empty values to allow optional controls\n                }\n                var length = typeof control.value === 'string' ? control.value.length : 0;\n                return length < minLength ?\n                    { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                    null;\n            };\n        };\n        /**\n         * Validator that requires controls to have a value of a maximum length.\n         */\n        Validators.maxLength = function (maxLength) {\n            return function (control) {\n                var length = typeof control.value === 'string' ? control.value.length : 0;\n                return length > maxLength ?\n                    { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                    null;\n            };\n        };\n        /**\n         * Validator that requires a control to match a regex to its value.\n         */\n        Validators.pattern = function (pattern) {\n            if (!pattern)\n                return Validators.nullValidator;\n            var regex;\n            var regexStr;\n            if (typeof pattern === 'string') {\n                regexStr = \"^\" + pattern + \"$\";\n                regex = new RegExp(regexStr);\n            }\n            else {\n                regexStr = pattern.toString();\n                regex = pattern;\n            }\n            return function (control) {\n                if (isEmptyInputValue(control.value)) {\n                    return null; // don't validate empty values to allow optional controls\n                }\n                var value = control.value;\n                return regex.test(value) ? null :\n                    { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n            };\n        };\n        /**\n         * No-op validator.\n         */\n        Validators.nullValidator = function (c) { return null; };\n        /**\n         * Compose multiple validators into a single function that returns the union\n         * of the individual error maps.\n         */\n        Validators.compose = function (validators) {\n            if (!validators)\n                return null;\n            var presentValidators = validators.filter(isPresent);\n            if (presentValidators.length == 0)\n                return null;\n            return function (control) {\n                return _mergeErrors(_executeValidators(control, presentValidators));\n            };\n        };\n        Validators.composeAsync = function (validators) {\n            if (!validators)\n                return null;\n            var presentValidators = validators.filter(isPresent);\n            if (presentValidators.length == 0)\n                return null;\n            return function (control) {\n                var promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);\n                return Promise.all(promises).then(_mergeErrors);\n            };\n        };\n        return Validators;\n    }());\n    function _convertToPromise(obj) {\n        return isPromise(obj) ? obj : rxjs_operator_toPromise.toPromise.call(obj);\n    }\n    function _executeValidators(control, validators) {\n        return validators.map(function (v) { return v(control); });\n    }\n    function _executeAsyncValidators(control, validators) {\n        return validators.map(function (v) { return v(control); });\n    }\n    function _mergeErrors(arrayOfErrors) {\n        var res = arrayOfErrors.reduce(function (res, errors) {\n            return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n        }, {});\n        return Object.keys(res).length === 0 ? null : res;\n    }\n\n    /**\n     * Used to provide a {@link ControlValueAccessor} for form controls.\n     *\n     * See {@link DefaultValueAccessor} for how to implement one.\n     * @stable\n     */\n    var NG_VALUE_ACCESSOR = new _angular_core.OpaqueToken('NgValueAccessor');\n\n    var CHECKBOX_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return CheckboxControlValueAccessor; }),\n        multi: true,\n    };\n    /**\n     * The accessor for writing a value and listening to changes on a checkbox input element.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n     *  ```\n     *\n     *  @stable\n     */\n    var CheckboxControlValueAccessor = (function () {\n        function CheckboxControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n        };\n        CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n        CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        CheckboxControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                        host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                        providers: [CHECKBOX_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        CheckboxControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return CheckboxControlValueAccessor;\n    }());\n\n    var DEFAULT_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return DefaultValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The default accessor for writing a value and listening to changes that is used by the\n     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"text\" name=\"searchQuery\" ngModel>\n     *  ```\n     *\n     *  @stable\n     */\n    var DefaultValueAccessor = (function () {\n        function DefaultValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        DefaultValueAccessor.prototype.writeValue = function (value) {\n            var normalizedValue = value == null ? '' : value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        };\n        DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n        DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        DefaultValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                        // TODO: vsavkin replace the above selector with the one below it once\n                        // https://github.com/angular/angular/issues/3011 is implemented\n                        // selector: '[ngControl],[ngModel],[ngFormControl]',\n                        host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                        providers: [DEFAULT_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        DefaultValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return DefaultValueAccessor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeValidator(validator) {\n        if (validator.validate) {\n            return function (c) { return validator.validate(c); };\n        }\n        else {\n            return validator;\n        }\n    }\n    function normalizeAsyncValidator(validator) {\n        if (validator.validate) {\n            return function (c) { return validator.validate(c); };\n        }\n        else {\n            return validator;\n        }\n    }\n\n    var NUMBER_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return NumberValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The accessor for writing a number value and listening to changes that is used by the\n     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"number\" [(ngModel)]=\"age\">\n     *  ```\n     */\n    var NumberValueAccessor = (function () {\n        function NumberValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        NumberValueAccessor.prototype.writeValue = function (value) {\n            // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n            var normalizedValue = value == null ? '' : value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        };\n        NumberValueAccessor.prototype.registerOnChange = function (fn) {\n            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n        };\n        NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        NumberValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                        host: {\n                            '(change)': 'onChange($event.target.value)',\n                            '(input)': 'onChange($event.target.value)',\n                            '(blur)': 'onTouched()'\n                        },\n                        providers: [NUMBER_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        NumberValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return NumberValueAccessor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    function unimplemented() {\n        throw new Error('unimplemented');\n    }\n    /**\n     * A base class that all control directive extend.\n     * It binds a {@link FormControl} object to a DOM element.\n     *\n     * Used internally by Angular forms.\n     *\n     * @stable\n     */\n    var NgControl = (function (_super) {\n        __extends$2(NgControl, _super);\n        function NgControl() {\n            _super.apply(this, arguments);\n            /** @internal */\n            this._parent = null;\n            this.name = null;\n            this.valueAccessor = null;\n            /** @internal */\n            this._rawValidators = [];\n            /** @internal */\n            this._rawAsyncValidators = [];\n        }\n        Object.defineProperty(NgControl.prototype, \"validator\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return NgControl;\n    }(AbstractControlDirective));\n\n    var RADIO_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return RadioControlValueAccessor; }),\n        multi: true\n    };\n    /**\n     * Internal class used by Angular to uncheck radio buttons with the matching name.\n     */\n    var RadioControlRegistry = (function () {\n        function RadioControlRegistry() {\n            this._accessors = [];\n        }\n        RadioControlRegistry.prototype.add = function (control, accessor) {\n            this._accessors.push([control, accessor]);\n        };\n        RadioControlRegistry.prototype.remove = function (accessor) {\n            for (var i = this._accessors.length - 1; i >= 0; --i) {\n                if (this._accessors[i][1] === accessor) {\n                    this._accessors.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        RadioControlRegistry.prototype.select = function (accessor) {\n            var _this = this;\n            this._accessors.forEach(function (c) {\n                if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                    c[1].fireUncheck(accessor.value);\n                }\n            });\n        };\n        RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n            if (!controlPair[0].control)\n                return false;\n            return controlPair[0]._parent === accessor._control._parent &&\n                controlPair[1].name === accessor.name;\n        };\n        RadioControlRegistry.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        RadioControlRegistry.ctorParameters = [];\n        return RadioControlRegistry;\n    }());\n    /**\n     * @whatItDoes  Writes radio control values and listens to radio control changes.\n     *\n     * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n     * to keep the view synced with the {@link FormControl} model.\n     *\n     * @howToUse\n     *\n     * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n     * value accessor will be active on any radio control that has a form directive. You do\n     * **not** need to add a special selector to activate it.\n     *\n     * ### How to use radio buttons with form directives\n     *\n     * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n     * in the same group have the same `name` attribute.  Radio buttons with different `name`\n     * attributes do not affect each other.\n     *\n     * {@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n     *\n     * When using radio buttons in a reactive form, radio buttons in the same group should have the\n     * same `formControlName`. You can also add a `name` attribute, but it's optional.\n     *\n     * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n     *\n     *  * **npm package**: `@angular/forms`\n     *\n     *  @stable\n     */\n    var RadioControlValueAccessor = (function () {\n        function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this._registry = _registry;\n            this._injector = _injector;\n            this.onChange = function () { };\n            this.onTouched = function () { };\n        }\n        RadioControlValueAccessor.prototype.ngOnInit = function () {\n            this._control = this._injector.get(NgControl);\n            this._checkName();\n            this._registry.add(this._control, this);\n        };\n        RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n        RadioControlValueAccessor.prototype.writeValue = function (value) {\n            this._state = value === this.value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n        };\n        RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this._fn = fn;\n            this.onChange = function () {\n                fn(_this.value);\n                _this._registry.select(_this);\n            };\n        };\n        RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n        RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        RadioControlValueAccessor.prototype._checkName = function () {\n            if (this.name && this.formControlName && this.name !== this.formControlName) {\n                this._throwNameError();\n            }\n            if (!this.name && this.formControlName)\n                this.name = this.formControlName;\n        };\n        RadioControlValueAccessor.prototype._throwNameError = function () {\n            throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n        };\n        RadioControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                        host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                        providers: [RADIO_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        RadioControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n            { type: RadioControlRegistry, },\n            { type: _angular_core.Injector, },\n        ];\n        RadioControlValueAccessor.propDecorators = {\n            'name': [{ type: _angular_core.Input },],\n            'formControlName': [{ type: _angular_core.Input },],\n            'value': [{ type: _angular_core.Input },],\n        };\n        return RadioControlValueAccessor;\n    }());\n\n    var RANGE_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return RangeValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The accessor for writing a range value and listening to changes that is used by the\n     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"range\" [(ngModel)]=\"age\" >\n     *  ```\n     */\n    var RangeValueAccessor = (function () {\n        function RangeValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        RangeValueAccessor.prototype.writeValue = function (value) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n        };\n        RangeValueAccessor.prototype.registerOnChange = function (fn) {\n            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n        };\n        RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        RangeValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                        host: {\n                            '(change)': 'onChange($event.target.value)',\n                            '(input)': 'onChange($event.target.value)',\n                            '(blur)': 'onTouched()'\n                        },\n                        providers: [RANGE_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        RangeValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return RangeValueAccessor;\n    }());\n\n    var SELECT_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return SelectControlValueAccessor; }),\n        multi: true\n    };\n    function _buildValueString(id, value) {\n        if (id == null)\n            return \"\" + value;\n        if (!isPrimitive(value))\n            value = 'Object';\n        return (id + \": \" + value).slice(0, 50);\n    }\n    function _extractId(valueString) {\n        return valueString.split(':')[0];\n    }\n    /**\n     * @whatItDoes Writes values and listens to changes on a select element.\n     *\n     * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n     * to keep the view synced with the {@link FormControl} model.\n     *\n     * @howToUse\n     *\n     * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n     * value accessor will be active on any select control that has a form directive. You do\n     * **not** need to add a special selector to activate it.\n     *\n     * ### How to use select controls with form directives\n     *\n     * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n     * attribute to the main `<select>` tag.\n     *\n     * If your option values are simple strings, you can bind to the normal `value` property\n     * on the option.  If your option values happen to be objects (and you'd like to save the\n     * selection in your form as an object), use `ngValue` instead:\n     *\n     * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n     *\n     * In reactive forms, you'll also want to add your form directive (`formControlName` or\n     * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n     * choice of binding to the  `value` or `ngValue` property on the select's options.\n     *\n     * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n     *\n     * Note: We listen to the 'change' event because 'input' events aren't fired\n     * for selects in Firefox and IE:\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n     * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var SelectControlValueAccessor = (function () {\n        function SelectControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        SelectControlValueAccessor.prototype.writeValue = function (value) {\n            this.value = value;\n            var valueString = _buildValueString(this._getOptionId(value), value);\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n        };\n        SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this.onChange = function (valueString) {\n                _this.value = valueString;\n                fn(_this._getOptionValue(valueString));\n            };\n        };\n        SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /** @internal */\n        SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n        /** @internal */\n        SelectControlValueAccessor.prototype._getOptionId = function (value) {\n            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n                var id = _a[_i];\n                if (looseIdentical(this._optionMap.get(id), value))\n                    return id;\n            }\n            return null;\n        };\n        /** @internal */\n        SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n            var id = _extractId(valueString);\n            return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n        };\n        SelectControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                        host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                        providers: [SELECT_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        SelectControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return SelectControlValueAccessor;\n    }());\n    /**\n     * @whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n     *\n     * @howToUse\n     *\n     * See docs for {@link SelectControlValueAccessor} for usage examples.\n     *\n     * @stable\n     */\n    var NgSelectOption = (function () {\n        function NgSelectOption(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (this._select)\n                this.id = this._select._registerOption();\n        }\n        Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n            set: function (value) {\n                if (this._select == null)\n                    return;\n                this._select._optionMap.set(this.id, value);\n                this._setElementValue(_buildValueString(this.id, value));\n                this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectOption.prototype, \"value\", {\n            set: function (value) {\n                this._setElementValue(value);\n                if (this._select)\n                    this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        NgSelectOption.prototype._setElementValue = function (value) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n        };\n        NgSelectOption.prototype.ngOnDestroy = function () {\n            if (this._select) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        };\n        NgSelectOption.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n        ];\n        /** @nocollapse */\n        NgSelectOption.ctorParameters = [\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n            { type: SelectControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n        ];\n        NgSelectOption.propDecorators = {\n            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n            'value': [{ type: _angular_core.Input, args: ['value',] },],\n        };\n        return NgSelectOption;\n    }());\n\n    var SELECT_MULTIPLE_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n        multi: true\n    };\n    function _buildValueString$1(id, value) {\n        if (id == null)\n            return \"\" + value;\n        if (typeof value === 'string')\n            value = \"'\" + value + \"'\";\n        if (!isPrimitive(value))\n            value = 'Object';\n        return (id + \": \" + value).slice(0, 50);\n    }\n    function _extractId$1(valueString) {\n        return valueString.split(':')[0];\n    }\n    /**\n     * The accessor for writing a value and listening to changes on a select element.\n     *\n     * @stable\n     */\n    var SelectMultipleControlValueAccessor = (function () {\n        function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n            var _this = this;\n            this.value = value;\n            if (value == null)\n                return;\n            var values = value;\n            // convert values to ids\n            var ids = values.map(function (v) { return _this._getOptionId(v); });\n            this._optionMap.forEach(function (opt, o) { opt._setSelected(ids.indexOf(o.toString()) > -1); });\n        };\n        SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this.onChange = function (_) {\n                var selected = [];\n                if (_.hasOwnProperty('selectedOptions')) {\n                    var options = _.selectedOptions;\n                    for (var i = 0; i < options.length; i++) {\n                        var opt = options.item(i);\n                        var val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n                else {\n                    var options = _.options;\n                    for (var i = 0; i < options.length; i++) {\n                        var opt = options.item(i);\n                        if (opt.selected) {\n                            var val = _this._getOptionValue(opt.value);\n                            selected.push(val);\n                        }\n                    }\n                }\n                fn(selected);\n            };\n        };\n        SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /** @internal */\n        SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n            var id = (this._idCounter++).toString();\n            this._optionMap.set(id, value);\n            return id;\n        };\n        /** @internal */\n        SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n                var id = _a[_i];\n                if (looseIdentical(this._optionMap.get(id)._value, value))\n                    return id;\n            }\n            return null;\n        };\n        /** @internal */\n        SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n            var id = _extractId$1(valueString);\n            return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n        };\n        SelectMultipleControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                        host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                        providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        SelectMultipleControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return SelectMultipleControlValueAccessor;\n    }());\n    /**\n     * Marks `<option>` as dynamic, so Angular can be notified when options change.\n     *\n     * ### Example\n     *\n     * ```\n     * <select multiple name=\"city\" ngModel>\n     *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n     * </select>\n     * ```\n     */\n    var NgSelectMultipleOption = (function () {\n        function NgSelectMultipleOption(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (this._select) {\n                this.id = this._select._registerOption(this);\n            }\n        }\n        Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n            set: function (value) {\n                if (this._select == null)\n                    return;\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n            set: function (value) {\n                if (this._select) {\n                    this._value = value;\n                    this._setElementValue(_buildValueString$1(this.id, value));\n                    this._select.writeValue(this._select.value);\n                }\n                else {\n                    this._setElementValue(value);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        NgSelectMultipleOption.prototype._setElementValue = function (value) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n        };\n        /** @internal */\n        NgSelectMultipleOption.prototype._setSelected = function (selected) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n        };\n        NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n            if (this._select) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        };\n        NgSelectMultipleOption.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n        ];\n        /** @nocollapse */\n        NgSelectMultipleOption.ctorParameters = [\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n            { type: SelectMultipleControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n        ];\n        NgSelectMultipleOption.propDecorators = {\n            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n            'value': [{ type: _angular_core.Input, args: ['value',] },],\n        };\n        return NgSelectMultipleOption;\n    }());\n\n    function controlPath(name, parent) {\n        return parent.path.concat([name]);\n    }\n    function setUpControl(control, dir) {\n        if (!control)\n            _throwError(dir, 'Cannot find control with');\n        if (!dir.valueAccessor)\n            _throwError(dir, 'No value accessor for form control with');\n        control.validator = Validators.compose([control.validator, dir.validator]);\n        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n        dir.valueAccessor.writeValue(control.value);\n        // view -> model\n        dir.valueAccessor.registerOnChange(function (newValue) {\n            dir.viewToModelUpdate(newValue);\n            control.markAsDirty();\n            control.setValue(newValue, { emitModelToViewChange: false });\n        });\n        // touched\n        dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n        control.registerOnChange(function (newValue, emitModelEvent) {\n            // control -> view\n            dir.valueAccessor.writeValue(newValue);\n            // control -> ngModel\n            if (emitModelEvent)\n                dir.viewToModelUpdate(newValue);\n        });\n        if (dir.valueAccessor.setDisabledState) {\n            control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n        }\n        // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n        dir._rawValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange)\n                validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n        });\n        dir._rawAsyncValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange)\n                validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n        });\n    }\n    function cleanUpControl(control, dir) {\n        dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n        dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n        dir._rawValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange) {\n                validator.registerOnValidatorChange(null);\n            }\n        });\n        dir._rawAsyncValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange) {\n                validator.registerOnValidatorChange(null);\n            }\n        });\n        if (control)\n            control._clearChangeFns();\n    }\n    function setUpFormContainer(control, dir) {\n        if (isBlank(control))\n            _throwError(dir, 'Cannot find control with');\n        control.validator = Validators.compose([control.validator, dir.validator]);\n        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    }\n    function _noControlError(dir) {\n        return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n    }\n    function _throwError(dir, message) {\n        var messageEnd;\n        if (dir.path.length > 1) {\n            messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n        }\n        else if (dir.path[0]) {\n            messageEnd = \"name: '\" + dir.path + \"'\";\n        }\n        else {\n            messageEnd = 'unspecified name attribute';\n        }\n        throw new Error(message + \" \" + messageEnd);\n    }\n    function composeValidators(validators) {\n        return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n    }\n    function composeAsyncValidators(validators) {\n        return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n            null;\n    }\n    function isPropertyUpdated(changes, viewModel) {\n        if (!changes.hasOwnProperty('model'))\n            return false;\n        var change = changes['model'];\n        if (change.isFirstChange())\n            return true;\n        return !looseIdentical(viewModel, change.currentValue);\n    }\n    var BUILTIN_ACCESSORS = [\n        CheckboxControlValueAccessor,\n        RangeValueAccessor,\n        NumberValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n    ];\n    function isBuiltInAccessor(valueAccessor) {\n        return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n    }\n    // TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\n    function selectValueAccessor(dir, valueAccessors) {\n        if (!valueAccessors)\n            return null;\n        var defaultAccessor;\n        var builtinAccessor;\n        var customAccessor;\n        valueAccessors.forEach(function (v) {\n            if (v.constructor === DefaultValueAccessor) {\n                defaultAccessor = v;\n            }\n            else if (isBuiltInAccessor(v)) {\n                if (builtinAccessor)\n                    _throwError(dir, 'More than one built-in value accessor matches form control with');\n                builtinAccessor = v;\n            }\n            else {\n                if (customAccessor)\n                    _throwError(dir, 'More than one custom value accessor matches form control with');\n                customAccessor = v;\n            }\n        });\n        if (customAccessor)\n            return customAccessor;\n        if (builtinAccessor)\n            return builtinAccessor;\n        if (defaultAccessor)\n            return defaultAccessor;\n        _throwError(dir, 'No valid value accessor for form control with');\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * This is a base class for code shared between {@link NgModelGroup} and {@link FormGroupName}.\n     *\n     * @stable\n     */\n    var AbstractFormGroupDirective = (function (_super) {\n        __extends(AbstractFormGroupDirective, _super);\n        function AbstractFormGroupDirective() {\n            _super.apply(this, arguments);\n        }\n        AbstractFormGroupDirective.prototype.ngOnInit = function () {\n            this._checkParentType();\n            this.formDirective.addFormGroup(this);\n        };\n        AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeFormGroup(this);\n            }\n        };\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n            /**\n             * Get the {@link FormGroup} backing this binding.\n             */\n            get: function () { return this.formDirective.getFormGroup(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n            /**\n             * Get the path to this control group.\n             */\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n            /**\n             * Get the {@link Form} to which this group belongs.\n             */\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n            get: function () { return composeValidators(this._validators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n            get: function () { return composeAsyncValidators(this._asyncValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        AbstractFormGroupDirective.prototype._checkParentType = function () { };\n        return AbstractFormGroupDirective;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var AbstractControlStatus = (function () {\n        function AbstractControlStatus(cd) {\n            this._cd = cd;\n        }\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n            get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n            get: function () { return this._cd.control ? this._cd.control.touched : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n            get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n            get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n            get: function () { return this._cd.control ? this._cd.control.valid : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n            get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n            get: function () { return this._cd.control ? this._cd.control.pending : false; },\n            enumerable: true,\n            configurable: true\n        });\n        return AbstractControlStatus;\n    }());\n    var ngControlStatusHost = {\n        '[class.ng-untouched]': 'ngClassUntouched',\n        '[class.ng-touched]': 'ngClassTouched',\n        '[class.ng-pristine]': 'ngClassPristine',\n        '[class.ng-dirty]': 'ngClassDirty',\n        '[class.ng-valid]': 'ngClassValid',\n        '[class.ng-invalid]': 'ngClassInvalid',\n        '[class.ng-pending]': 'ngClassPending',\n    };\n    /**\n     * Directive automatically applied to Angular form controls that sets CSS classes\n     * based on control status (valid/invalid/dirty/etc).\n     *\n     * @stable\n     */\n    var NgControlStatus = (function (_super) {\n        __extends$3(NgControlStatus, _super);\n        function NgControlStatus(cd) {\n            _super.call(this, cd);\n        }\n        NgControlStatus.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n        ];\n        /** @nocollapse */\n        NgControlStatus.ctorParameters = [\n            { type: NgControl, decorators: [{ type: _angular_core.Self },] },\n        ];\n        return NgControlStatus;\n    }(AbstractControlStatus));\n    /**\n     * Directive automatically applied to Angular form groups that sets CSS classes\n     * based on control status (valid/invalid/dirty/etc).\n     *\n     * @stable\n     */\n    var NgControlStatusGroup = (function (_super) {\n        __extends$3(NgControlStatusGroup, _super);\n        function NgControlStatusGroup(cd) {\n            _super.call(this, cd);\n        }\n        NgControlStatusGroup.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                        host: ngControlStatusHost\n                    },] },\n        ];\n        /** @nocollapse */\n        NgControlStatusGroup.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Self },] },\n        ];\n        return NgControlStatusGroup;\n    }(AbstractControlStatus));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     * @stable\n     */\n    var EventEmitter = (function (_super) {\n        __extends$5(EventEmitter, _super);\n        /**\n         * Creates an instance of [EventEmitter], which depending on [isAsync],\n         * delivers events synchronously or asynchronously.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            _super.call(this);\n            this.__isAsync = isAsync;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        };\n        return EventEmitter;\n    }(rxjs_Subject.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n     */\n    var VALID = 'VALID';\n    /**\n     * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n     */\n    var INVALID = 'INVALID';\n    /**\n     * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n     * errors are not yet available for the input value.\n     */\n    var PENDING = 'PENDING';\n    /**\n     * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n     * calculations of validity or value.\n     */\n    var DISABLED = 'DISABLED';\n    function _find(control, path, delimiter) {\n        if (path == null)\n            return null;\n        if (!(path instanceof Array)) {\n            path = path.split(delimiter);\n        }\n        if (path instanceof Array && (path.length === 0))\n            return null;\n        return path.reduce(function (v, name) {\n            if (v instanceof FormGroup) {\n                return v.controls[name] || null;\n            }\n            if (v instanceof FormArray) {\n                return v.at(name) || null;\n            }\n            return null;\n        }, control);\n    }\n    function toObservable(r) {\n        return isPromise(r) ? rxjs_observable_fromPromise.fromPromise(r) : r;\n    }\n    function coerceToValidator(validator) {\n        return Array.isArray(validator) ? composeValidators(validator) : validator;\n    }\n    function coerceToAsyncValidator(asyncValidator) {\n        return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n    }\n    /**\n     * @whatItDoes This is the base class for {@link FormControl}, {@link FormGroup}, and\n     * {@link FormArray}.\n     *\n     * It provides some of the shared behavior that all controls and groups of controls have, like\n     * running validators, calculating status, and resetting state. It also defines the properties\n     * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n     * instantiated directly.\n     *\n     * @stable\n     */\n    var AbstractControl = (function () {\n        function AbstractControl(validator, asyncValidator) {\n            this.validator = validator;\n            this.asyncValidator = asyncValidator;\n            /** @internal */\n            this._onCollectionChange = function () { };\n            this._pristine = true;\n            this._touched = false;\n            /** @internal */\n            this._onDisabledChange = [];\n        }\n        Object.defineProperty(AbstractControl.prototype, \"value\", {\n            /**\n             * The value of the control.\n             */\n            get: function () { return this._value; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"parent\", {\n            /**\n             * The parent control.\n             */\n            get: function () { return this._parent; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"status\", {\n            /**\n             * The validation status of the control. There are four possible\n             * validation statuses:\n             *\n             * * **VALID**:  control has passed all validation checks\n             * * **INVALID**: control has failed at least one validation check\n             * * **PENDING**: control is in the midst of conducting a validation check\n             * * **DISABLED**: control is exempt from validation checks\n             *\n             * These statuses are mutually exclusive, so a control cannot be\n             * both valid AND invalid or invalid AND disabled.\n             */\n            get: function () { return this._status; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"valid\", {\n            /**\n             * A control is `valid` when its `status === VALID`.\n             *\n             * In order to have this status, the control must have passed all its\n             * validation checks.\n             */\n            get: function () { return this._status === VALID; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n            /**\n             * A control is `invalid` when its `status === INVALID`.\n             *\n             * In order to have this status, the control must have failed\n             * at least one of its validation checks.\n             */\n            get: function () { return this._status === INVALID; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"pending\", {\n            /**\n             * A control is `pending` when its `status === PENDING`.\n             *\n             * In order to have this status, the control must be in the\n             * middle of conducting a validation check.\n             */\n            get: function () { return this._status == PENDING; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n            /**\n             * A control is `disabled` when its `status === DISABLED`.\n             *\n             * Disabled controls are exempt from validation checks and\n             * are not included in the aggregate value of their ancestor\n             * controls.\n             */\n            get: function () { return this._status === DISABLED; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n            /**\n             * A control is `enabled` as long as its `status !== DISABLED`.\n             *\n             * In other words, it has a status of `VALID`, `INVALID`, or\n             * `PENDING`.\n             */\n            get: function () { return this._status !== DISABLED; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"errors\", {\n            /**\n             * Returns any errors generated by failing validation. If there\n             * are no errors, it will return null.\n             */\n            get: function () { return this._errors; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n            /**\n             * A control is `pristine` if the user has not yet changed\n             * the value in the UI.\n             *\n             * Note that programmatic changes to a control's value will\n             * *not* mark it dirty.\n             */\n            get: function () { return this._pristine; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n            /**\n             * A control is `dirty` if the user has changed the value\n             * in the UI.\n             *\n             * Note that programmatic changes to a control's value will\n             * *not* mark it dirty.\n             */\n            get: function () { return !this.pristine; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"touched\", {\n            /**\n            * A control is marked `touched` once the user has triggered\n            * a `blur` event on it.\n            */\n            get: function () { return this._touched; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n            /**\n             * A control is `untouched` if the user has not yet triggered\n             * a `blur` event on it.\n             */\n            get: function () { return !this._touched; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n            /**\n             * Emits an event every time the value of the control changes, in\n             * the UI or programmatically.\n             */\n            get: function () { return this._valueChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n            /**\n             * Emits an event every time the validation status of the control\n             * is re-calculated.\n             */\n            get: function () { return this._statusChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Sets the synchronous validators that are active on this control.  Calling\n         * this will overwrite any existing sync validators.\n         */\n        AbstractControl.prototype.setValidators = function (newValidator) {\n            this.validator = coerceToValidator(newValidator);\n        };\n        /**\n         * Sets the async validators that are active on this control. Calling this\n         * will overwrite any existing async validators.\n         */\n        AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n            this.asyncValidator = coerceToAsyncValidator(newValidator);\n        };\n        /**\n         * Empties out the sync validator list.\n         */\n        AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n        /**\n         * Empties out the async validator list.\n         */\n        AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n        /**\n         * Marks the control as `touched`.\n         *\n         * This will also mark all direct ancestors as `touched` to maintain\n         * the model.\n         */\n        AbstractControl.prototype.markAsTouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = true;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `untouched`.\n         *\n         * If the control has any children, it will also mark all children as `untouched`\n         * to maintain the model, and re-calculate the `touched` status of all parent\n         * controls.\n         */\n        AbstractControl.prototype.markAsUntouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = false;\n            this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n            if (this._parent && !onlySelf) {\n                this._parent._updateTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `dirty`.\n         *\n         * This will also mark all direct ancestors as `dirty` to maintain\n         * the model.\n         */\n        AbstractControl.prototype.markAsDirty = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = false;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsDirty({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `pristine`.\n         *\n         * If the control has any children, it will also mark all children as `pristine`\n         * to maintain the model, and re-calculate the `pristine` status of all parent\n         * controls.\n         */\n        AbstractControl.prototype.markAsPristine = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = true;\n            this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n            if (this._parent && !onlySelf) {\n                this._parent._updatePristine({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `pending`.\n         */\n        AbstractControl.prototype.markAsPending = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._status = PENDING;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsPending({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Disables the control. This means the control will be exempt from validation checks and\n         * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n         *\n         * If the control has children, all children will be disabled to maintain the model.\n         */\n        AbstractControl.prototype.disable = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._status = DISABLED;\n            this._errors = null;\n            this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n            this._updateValue();\n            if (emitEvent !== false) {\n                this._valueChanges.emit(this._value);\n                this._statusChanges.emit(this._status);\n            }\n            this._updateAncestors(onlySelf);\n            this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n        };\n        /**\n         * Enables the control. This means the control will be included in validation checks and\n         * the aggregate value of its parent. Its status is re-calculated based on its value and\n         * its validators.\n         *\n         * If the control has children, all children will be enabled.\n         */\n        AbstractControl.prototype.enable = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._status = VALID;\n            this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n            this._updateAncestors(onlySelf);\n            this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n        };\n        AbstractControl.prototype._updateAncestors = function (onlySelf) {\n            if (this._parent && !onlySelf) {\n                this._parent.updateValueAndValidity();\n                this._parent._updatePristine();\n                this._parent._updateTouched();\n            }\n        };\n        AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n        /**\n         * Re-calculates the value and validation status of the control.\n         *\n         * By default, it will also update the value and validity of its ancestors.\n         */\n        AbstractControl.prototype.updateValueAndValidity = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._setInitialStatus();\n            this._updateValue();\n            if (this.enabled) {\n                this._errors = this._runValidator();\n                this._status = this._calculateStatus();\n                if (this._status === VALID || this._status === PENDING) {\n                    this._runAsyncValidator(emitEvent);\n                }\n            }\n            if (emitEvent !== false) {\n                this._valueChanges.emit(this._value);\n                this._statusChanges.emit(this._status);\n            }\n            if (this._parent && !onlySelf) {\n                this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._updateTreeValidity = function (_a) {\n            var emitEvent = (_a === void 0 ? { emitEvent: true } : _a).emitEvent;\n            this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity({ emitEvent: emitEvent }); });\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n        };\n        AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n        AbstractControl.prototype._runValidator = function () {\n            return this.validator ? this.validator(this) : null;\n        };\n        AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n            var _this = this;\n            if (this.asyncValidator) {\n                this._status = PENDING;\n                this._cancelExistingSubscription();\n                var obs = toObservable(this.asyncValidator(this));\n                this._asyncValidationSubscription =\n                    obs.subscribe({ next: function (res) { return _this.setErrors(res, { emitEvent: emitEvent }); } });\n            }\n        };\n        AbstractControl.prototype._cancelExistingSubscription = function () {\n            if (this._asyncValidationSubscription) {\n                this._asyncValidationSubscription.unsubscribe();\n            }\n        };\n        /**\n         * Sets errors on a form control.\n         *\n         * This is used when validations are run manually by the user, rather than automatically.\n         *\n         * Calling `setErrors` will also update the validity of the parent control.\n         *\n         * ### Example\n         *\n         * ```\n         * const login = new FormControl(\"someLogin\");\n         * login.setErrors({\n         *   \"notUnique\": true\n         * });\n         *\n         * expect(login.valid).toEqual(false);\n         * expect(login.errors).toEqual({\"notUnique\": true});\n         *\n         * login.setValue(\"someOtherLogin\");\n         *\n         * expect(login.valid).toEqual(true);\n         * ```\n         */\n        AbstractControl.prototype.setErrors = function (errors, _a) {\n            var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n            this._errors = errors;\n            this._updateControlsErrors(emitEvent !== false);\n        };\n        /**\n         * Retrieves a child control given the control's name or path.\n         *\n         * Paths can be passed in as an array or a string delimited by a dot.\n         *\n         * To get a control nested within a `person` sub-group:\n         *\n         * * `this.form.get('person.name');`\n         *\n         * -OR-\n         *\n         * * `this.form.get(['person', 'name']);`\n         */\n        AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n        /**\n         * Returns true if the control with the given path has the error specified. Otherwise\n         * returns null or undefined.\n         *\n         * If no path is given, it checks for the error on the present control.\n         */\n        AbstractControl.prototype.getError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            var control = path ? this.get(path) : this;\n            return control && control._errors ? control._errors[errorCode] : null;\n        };\n        /**\n         * Returns true if the control with the given path has the error specified. Otherwise\n         * returns false.\n         *\n         * If no path is given, it checks for the error on the present control.\n         */\n        AbstractControl.prototype.hasError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return !!this.getError(errorCode, path);\n        };\n        Object.defineProperty(AbstractControl.prototype, \"root\", {\n            /**\n             * Retrieves the top-level ancestor of this control.\n             */\n            get: function () {\n                var x = this;\n                while (x._parent) {\n                    x = x._parent;\n                }\n                return x;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n            this._status = this._calculateStatus();\n            if (emitEvent) {\n                this._statusChanges.emit(this._status);\n            }\n            if (this._parent) {\n                this._parent._updateControlsErrors(emitEvent);\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._initObservables = function () {\n            this._valueChanges = new EventEmitter();\n            this._statusChanges = new EventEmitter();\n        };\n        AbstractControl.prototype._calculateStatus = function () {\n            if (this._allControlsDisabled())\n                return DISABLED;\n            if (this._errors)\n                return INVALID;\n            if (this._anyControlsHaveStatus(PENDING))\n                return PENDING;\n            if (this._anyControlsHaveStatus(INVALID))\n                return INVALID;\n            return VALID;\n        };\n        /** @internal */\n        AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n            return this._anyControls(function (control) { return control.status === status; });\n        };\n        /** @internal */\n        AbstractControl.prototype._anyControlsDirty = function () {\n            return this._anyControls(function (control) { return control.dirty; });\n        };\n        /** @internal */\n        AbstractControl.prototype._anyControlsTouched = function () {\n            return this._anyControls(function (control) { return control.touched; });\n        };\n        /** @internal */\n        AbstractControl.prototype._updatePristine = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = !this._anyControlsDirty();\n            if (this._parent && !onlySelf) {\n                this._parent._updatePristine({ onlySelf: onlySelf });\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._updateTouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = this._anyControlsTouched();\n            if (this._parent && !onlySelf) {\n                this._parent._updateTouched({ onlySelf: onlySelf });\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._isBoxedValue = function (formState) {\n            return typeof formState === 'object' && formState !== null &&\n                Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n        };\n        /** @internal */\n        AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n        return AbstractControl;\n    }());\n    /**\n     * @whatItDoes Tracks the value and validation status of an individual form control.\n     *\n     * It is one of the three fundamental building blocks of Angular forms, along with\n     * {@link FormGroup} and {@link FormArray}.\n     *\n     * @howToUse\n     *\n     * When instantiating a {@link FormControl}, you can pass in an initial value as the\n     * first argument. Example:\n     *\n     * ```ts\n     * const ctrl = new FormControl('some value');\n     * console.log(ctrl.value);     // 'some value'\n     *```\n     *\n     * You can also initialize the control with a form state object on instantiation,\n     * which includes both the value and whether or not the control is disabled.\n     * You can't use the value key without the disabled key; both are required\n     * to use this way of initialization.\n     *\n     * ```ts\n     * const ctrl = new FormControl({value: 'n/a', disabled: true});\n     * console.log(ctrl.value);     // 'n/a'\n     * console.log(ctrl.status);   // 'DISABLED'\n     * ```\n     *\n     * To include a sync validator (or an array of sync validators) with the control,\n     * pass it in as the second argument. Async validators are also supported, but\n     * have to be passed in separately as the third arg.\n     *\n     * ```ts\n     * const ctrl = new FormControl('', Validators.required);\n     * console.log(ctrl.value);     // ''\n     * console.log(ctrl.status);   // 'INVALID'\n     * ```\n     *\n     * See its superclass, {@link AbstractControl}, for more properties and methods.\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var FormControl = (function (_super) {\n        __extends$6(FormControl, _super);\n        function FormControl(formState, validator, asyncValidator) {\n            if (formState === void 0) { formState = null; }\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n            /** @internal */\n            this._onChange = [];\n            this._applyFormState(formState);\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n            this._initObservables();\n        }\n        /**\n         * Set the value of the form control to `value`.\n         *\n         * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n         * and not its parent component. This defaults to false.\n         *\n         * If `emitEvent` is `true`, this\n         * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n         * to true (as it falls through to `updateValueAndValidity`).\n         *\n         * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n         * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n         * specified.\n         *\n         * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n         * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n         */\n        FormControl.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n            this._value = value;\n            if (this._onChange.length && emitModelToViewChange !== false) {\n                this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange !== false); });\n            }\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * Patches the value of a control.\n         *\n         * This function is functionally the same as {@link FormControl.setValue} at this level.\n         * It exists for symmetry with {@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,\n         * where it does behave differently.\n         */\n        FormControl.prototype.patchValue = function (value, options) {\n            if (options === void 0) { options = {}; }\n            this.setValue(value, options);\n        };\n        /**\n         * Resets the form control. This means by default:\n         *\n         * * it is marked as `pristine`\n         * * it is marked as `untouched`\n         * * value is set to null\n         *\n         * You can also reset to a specific form state by passing through a standalone\n         * value or a form state object that contains both a value and a disabled state\n         * (these are the only two properties that cannot be calculated).\n         *\n         * Ex:\n         *\n         * ```ts\n         * this.control.reset('Nancy');\n         *\n         * console.log(this.control.value);  // 'Nancy'\n         * ```\n         *\n         * OR\n         *\n         * ```\n         * this.control.reset({value: 'Nancy', disabled: true});\n         *\n         * console.log(this.control.value);  // 'Nancy'\n         * console.log(this.control.status);  // 'DISABLED'\n         * ```\n         */\n        FormControl.prototype.reset = function (formState, _a) {\n            if (formState === void 0) { formState = null; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._applyFormState(formState);\n            this.markAsPristine({ onlySelf: onlySelf });\n            this.markAsUntouched({ onlySelf: onlySelf });\n            this.setValue(this._value, { onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * @internal\n         */\n        FormControl.prototype._updateValue = function () { };\n        /**\n         * @internal\n         */\n        FormControl.prototype._anyControls = function (condition) { return false; };\n        /**\n         * @internal\n         */\n        FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n        /**\n         * Register a listener for change events.\n         */\n        FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n        /**\n         * @internal\n         */\n        FormControl.prototype._clearChangeFns = function () {\n            this._onChange = [];\n            this._onDisabledChange = [];\n            this._onCollectionChange = function () { };\n        };\n        /**\n         * Register a listener for disabled events.\n         */\n        FormControl.prototype.registerOnDisabledChange = function (fn) {\n            this._onDisabledChange.push(fn);\n        };\n        /**\n         * @internal\n         */\n        FormControl.prototype._forEachChild = function (cb) { };\n        FormControl.prototype._applyFormState = function (formState) {\n            if (this._isBoxedValue(formState)) {\n                this._value = formState.value;\n                formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                    this.enable({ onlySelf: true, emitEvent: false });\n            }\n            else {\n                this._value = formState;\n            }\n        };\n        return FormControl;\n    }(AbstractControl));\n    /**\n     * @whatItDoes Tracks the value and validity state of a group of {@link FormControl}\n     * instances.\n     *\n     * A `FormGroup` aggregates the values of each child {@link FormControl} into one object,\n     * with each control name as the key.  It calculates its status by reducing the statuses\n     * of its children. For example, if one of the controls in a group is invalid, the entire\n     * group becomes invalid.\n     *\n     * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n     * along with {@link FormControl} and {@link FormArray}.\n     *\n     * @howToUse\n     *\n     * When instantiating a {@link FormGroup}, pass in a collection of child controls as the first\n     * argument. The key for each child will be the name under which it is registered.\n     *\n     * ### Example\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('Nancy', Validators.minLength(2)),\n     *   last: new FormControl('Drew'),\n     * });\n     *\n     * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n     * console.log(form.status);  // 'VALID'\n     * ```\n     *\n     * You can also include group-level validators as the second arg, or group-level async\n     * validators as the third arg. These come in handy when you want to perform validation\n     * that considers the value of more than one child control.\n     *\n     * ### Example\n     *\n     * ```\n     * const form = new FormGroup({\n     *   password: new FormControl('', Validators.minLength(2)),\n     *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n     * }, passwordMatchValidator);\n     *\n     *\n     * function passwordMatchValidator(g: FormGroup) {\n     *    return g.get('password').value === g.get('passwordConfirm').value\n     *       ? null : {'mismatch': true};\n     * }\n     * ```\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var FormGroup = (function (_super) {\n        __extends$6(FormGroup, _super);\n        function FormGroup(controls, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, validator, asyncValidator);\n            this.controls = controls;\n            this._initObservables();\n            this._setUpControls();\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        /**\n         * Registers a control with the group's list of controls.\n         *\n         * This method does not update value or validity of the control, so for\n         * most cases you'll want to use {@link FormGroup.addControl} instead.\n         */\n        FormGroup.prototype.registerControl = function (name, control) {\n            if (this.controls[name])\n                return this.controls[name];\n            this.controls[name] = control;\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n            return control;\n        };\n        /**\n         * Add a control to this group.\n         */\n        FormGroup.prototype.addControl = function (name, control) {\n            this.registerControl(name, control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Remove a control from this group.\n         */\n        FormGroup.prototype.removeControl = function (name) {\n            if (this.controls[name])\n                this.controls[name]._registerOnCollectionChange(function () { });\n            delete (this.controls[name]);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Replace an existing control.\n         */\n        FormGroup.prototype.setControl = function (name, control) {\n            if (this.controls[name])\n                this.controls[name]._registerOnCollectionChange(function () { });\n            delete (this.controls[name]);\n            if (control)\n                this.registerControl(name, control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Check whether there is an enabled control with the given name in the group.\n         *\n         * It will return false for disabled controls. If you'd like to check for\n         * existence in the group only, use {@link AbstractControl.get} instead.\n         */\n        FormGroup.prototype.contains = function (controlName) {\n            return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n        };\n        /**\n         *  Sets the value of the {@link FormGroup}. It accepts an object that matches\n         *  the structure of the group, with control names as keys.\n         *\n         * This method performs strict checks, so it will throw an error if you try\n         * to set the value of a control that doesn't exist or if you exclude the\n         * value of a control.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const form = new FormGroup({\n         *     first: new FormControl(),\n         *     last: new FormControl()\n         *  });\n         *  console.log(form.value);   // {first: null, last: null}\n         *\n         *  form.setValue({first: 'Nancy', last: 'Drew'});\n         *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n         *\n         *  ```\n         */\n        FormGroup.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._checkAllValuesPresent(value);\n            Object.keys(value).forEach(function (name) {\n                _this._throwIfControlMissing(name);\n                _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Patches the value of the {@link FormGroup}. It accepts an object with control\n         *  names as keys, and will do its best to match the values to the correct controls\n         *  in the group.\n         *\n         *  It accepts both super-sets and sub-sets of the group without throwing an error.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const form = new FormGroup({\n         *     first: new FormControl(),\n         *     last: new FormControl()\n         *  });\n         *  console.log(form.value);   // {first: null, last: null}\n         *\n         *  form.patchValue({first: 'Nancy'});\n         *  console.log(form.value);   // {first: 'Nancy', last: null}\n         *\n         *  ```\n         */\n        FormGroup.prototype.patchValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            Object.keys(value).forEach(function (name) {\n                if (_this.controls[name]) {\n                    _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n                }\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * Resets the {@link FormGroup}. This means by default:\n         *\n         * * The group and all descendants are marked `pristine`\n         * * The group and all descendants are marked `untouched`\n         * * The value of all descendants will be null or null maps\n         *\n         * You can also reset to a specific form state by passing in a map of states\n         * that matches the structure of your form, with control names as keys. The state\n         * can be a standalone value or a form state object with both a value and a disabled\n         * status.\n         *\n         * ### Example\n         *\n         * ```ts\n         * this.form.reset({first: 'name', last: 'last name'});\n         *\n         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n         * ```\n         *\n         * - OR -\n         *\n         * ```\n         * this.form.reset({\n         *   first: {value: 'name', disabled: true},\n         *   last: 'last'\n         * });\n         *\n         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n         * console.log(this.form.get('first').status);  // 'DISABLED'\n         * ```\n         */\n        FormGroup.prototype.reset = function (value, _a) {\n            if (value === void 0) { value = {}; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._forEachChild(function (control, name) {\n                control.reset(value[name], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            this._updatePristine({ onlySelf: onlySelf });\n            this._updateTouched({ onlySelf: onlySelf });\n        };\n        /**\n         * The aggregate value of the {@link FormGroup}, including any disabled controls.\n         *\n         * If you'd like to include all values regardless of disabled status, use this method.\n         * Otherwise, the `value` property is the best way to get the value of the group.\n         */\n        FormGroup.prototype.getRawValue = function () {\n            return this._reduceChildren({}, function (acc, control, name) {\n                acc[name] = control.value;\n                return acc;\n            });\n        };\n        /** @internal */\n        FormGroup.prototype._throwIfControlMissing = function (name) {\n            if (!Object.keys(this.controls).length) {\n                throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n            }\n            if (!this.controls[name]) {\n                throw new Error(\"Cannot find form control with name: \" + name + \".\");\n            }\n        };\n        /** @internal */\n        FormGroup.prototype._forEachChild = function (cb) {\n            var _this = this;\n            Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n        };\n        /** @internal */\n        FormGroup.prototype._setUpControls = function () {\n            var _this = this;\n            this._forEachChild(function (control) {\n                control.setParent(_this);\n                control._registerOnCollectionChange(_this._onCollectionChange);\n            });\n        };\n        /** @internal */\n        FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n        /** @internal */\n        FormGroup.prototype._anyControls = function (condition) {\n            var _this = this;\n            var res = false;\n            this._forEachChild(function (control, name) {\n                res = res || (_this.contains(name) && condition(control));\n            });\n            return res;\n        };\n        /** @internal */\n        FormGroup.prototype._reduceValue = function () {\n            var _this = this;\n            return this._reduceChildren({}, function (acc, control, name) {\n                if (control.enabled || _this.disabled) {\n                    acc[name] = control.value;\n                }\n                return acc;\n            });\n        };\n        /** @internal */\n        FormGroup.prototype._reduceChildren = function (initValue, fn) {\n            var res = initValue;\n            this._forEachChild(function (control, name) { res = fn(res, control, name); });\n            return res;\n        };\n        /** @internal */\n        FormGroup.prototype._allControlsDisabled = function () {\n            for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n                var controlName = _a[_i];\n                if (this.controls[controlName].enabled) {\n                    return false;\n                }\n            }\n            return Object.keys(this.controls).length > 0 || this.disabled;\n        };\n        /** @internal */\n        FormGroup.prototype._checkAllValuesPresent = function (value) {\n            this._forEachChild(function (control, name) {\n                if (value[name] === undefined) {\n                    throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n                }\n            });\n        };\n        return FormGroup;\n    }(AbstractControl));\n    /**\n     * @whatItDoes Tracks the value and validity state of an array of {@link FormControl}\n     * instances.\n     *\n     * A `FormArray` aggregates the values of each child {@link FormControl} into an array.\n     * It calculates its status by reducing the statuses of its children. For example, if one of\n     * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n     *\n     * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n     * along with {@link FormControl} and {@link FormGroup}.\n     *\n     * @howToUse\n     *\n     * When instantiating a {@link FormArray}, pass in an array of child controls as the first\n     * argument.\n     *\n     * ### Example\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl('Nancy', Validators.minLength(2)),\n     *   new FormControl('Drew'),\n     * ]);\n     *\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * console.log(arr.status);  // 'VALID'\n     * ```\n     *\n     * You can also include array-level validators as the second arg, or array-level async\n     * validators as the third arg. These come in handy when you want to perform validation\n     * that considers the value of more than one child control.\n     *\n     * ### Adding or removing controls\n     *\n     * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n     * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n     * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n     * the `FormArray` directly, as that will result in strange and unexpected behavior such\n     * as broken change detection.\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var FormArray = (function (_super) {\n        __extends$6(FormArray, _super);\n        function FormArray(controls, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, validator, asyncValidator);\n            this.controls = controls;\n            this._initObservables();\n            this._setUpControls();\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        /**\n         * Get the {@link AbstractControl} at the given `index` in the array.\n         */\n        FormArray.prototype.at = function (index) { return this.controls[index]; };\n        /**\n         * Insert a new {@link AbstractControl} at the end of the array.\n         */\n        FormArray.prototype.push = function (control) {\n            this.controls.push(control);\n            this._registerControl(control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Insert a new {@link AbstractControl} at the given `index` in the array.\n         */\n        FormArray.prototype.insert = function (index, control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Remove the control at the given `index` in the array.\n         */\n        FormArray.prototype.removeAt = function (index) {\n            if (this.controls[index])\n                this.controls[index]._registerOnCollectionChange(function () { });\n            this.controls.splice(index, 1);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Replace an existing control.\n         */\n        FormArray.prototype.setControl = function (index, control) {\n            if (this.controls[index])\n                this.controls[index]._registerOnCollectionChange(function () { });\n            this.controls.splice(index, 1);\n            if (control) {\n                this.controls.splice(index, 0, control);\n                this._registerControl(control);\n            }\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        Object.defineProperty(FormArray.prototype, \"length\", {\n            /**\n             * Length of the control array.\n             */\n            get: function () { return this.controls.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         *  Sets the value of the {@link FormArray}. It accepts an array that matches\n         *  the structure of the control.\n         *\n         * This method performs strict checks, so it will throw an error if you try\n         * to set the value of a control that doesn't exist or if you exclude the\n         * value of a control.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const arr = new FormArray([\n         *     new FormControl(),\n         *     new FormControl()\n         *  ]);\n         *  console.log(arr.value);   // [null, null]\n         *\n         *  arr.setValue(['Nancy', 'Drew']);\n         *  console.log(arr.value);   // ['Nancy', 'Drew']\n         *  ```\n         */\n        FormArray.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._checkAllValuesPresent(value);\n            value.forEach(function (newValue, index) {\n                _this._throwIfControlMissing(index);\n                _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Patches the value of the {@link FormArray}. It accepts an array that matches the\n         *  structure of the control, and will do its best to match the values to the correct\n         *  controls in the group.\n         *\n         *  It accepts both super-sets and sub-sets of the array without throwing an error.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const arr = new FormArray([\n         *     new FormControl(),\n         *     new FormControl()\n         *  ]);\n         *  console.log(arr.value);   // [null, null]\n         *\n         *  arr.patchValue(['Nancy']);\n         *  console.log(arr.value);   // ['Nancy', null]\n         *  ```\n         */\n        FormArray.prototype.patchValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            value.forEach(function (newValue, index) {\n                if (_this.at(index)) {\n                    _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n                }\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * Resets the {@link FormArray}. This means by default:\n         *\n         * * The array and all descendants are marked `pristine`\n         * * The array and all descendants are marked `untouched`\n         * * The value of all descendants will be null or null maps\n         *\n         * You can also reset to a specific form state by passing in an array of states\n         * that matches the structure of the control. The state can be a standalone value\n         * or a form state object with both a value and a disabled status.\n         *\n         * ### Example\n         *\n         * ```ts\n         * this.arr.reset(['name', 'last name']);\n         *\n         * console.log(this.arr.value);  // ['name', 'last name']\n         * ```\n         *\n         * - OR -\n         *\n         * ```\n         * this.arr.reset([\n         *   {value: 'name', disabled: true},\n         *   'last'\n         * ]);\n         *\n         * console.log(this.arr.value);  // ['name', 'last name']\n         * console.log(this.arr.get(0).status);  // 'DISABLED'\n         * ```\n         */\n        FormArray.prototype.reset = function (value, _a) {\n            if (value === void 0) { value = []; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._forEachChild(function (control, index) {\n                control.reset(value[index], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            this._updatePristine({ onlySelf: onlySelf });\n            this._updateTouched({ onlySelf: onlySelf });\n        };\n        /**\n         * The aggregate value of the array, including any disabled controls.\n         *\n         * If you'd like to include all values regardless of disabled status, use this method.\n         * Otherwise, the `value` property is the best way to get the value of the array.\n         */\n        FormArray.prototype.getRawValue = function () { return this.controls.map(function (control) { return control.value; }); };\n        /** @internal */\n        FormArray.prototype._throwIfControlMissing = function (index) {\n            if (!this.controls.length) {\n                throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n            }\n            if (!this.at(index)) {\n                throw new Error(\"Cannot find form control at index \" + index);\n            }\n        };\n        /** @internal */\n        FormArray.prototype._forEachChild = function (cb) {\n            this.controls.forEach(function (control, index) { cb(control, index); });\n        };\n        /** @internal */\n        FormArray.prototype._updateValue = function () {\n            var _this = this;\n            this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n                .map(function (control) { return control.value; });\n        };\n        /** @internal */\n        FormArray.prototype._anyControls = function (condition) {\n            return this.controls.some(function (control) { return control.enabled && condition(control); });\n        };\n        /** @internal */\n        FormArray.prototype._setUpControls = function () {\n            var _this = this;\n            this._forEachChild(function (control) { return _this._registerControl(control); });\n        };\n        /** @internal */\n        FormArray.prototype._checkAllValuesPresent = function (value) {\n            this._forEachChild(function (control, i) {\n                if (value[i] === undefined) {\n                    throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n                }\n            });\n        };\n        /** @internal */\n        FormArray.prototype._allControlsDisabled = function () {\n            for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n                var control = _a[_i];\n                if (control.enabled)\n                    return false;\n            }\n            return this.controls.length > 0 || this.disabled;\n        };\n        FormArray.prototype._registerControl = function (control) {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        };\n        return FormArray;\n    }(AbstractControl));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formDirectiveProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return NgForm; })\n    };\n    var resolvedPromise = Promise.resolve(null);\n    /**\n     * @whatItDoes Creates a top-level {@link FormGroup} instance and binds it to a form\n     * to track aggregate form value and validation status.\n     *\n     * @howToUse\n     *\n     * As soon as you import the `FormsModule`, this directive becomes active by default on\n     * all `<form>` tags.  You don't need to add a special selector.\n     *\n     * You can export the directive into a local template variable using `ngForm` as the key\n     * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n     * {@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n     * will give you access to the aggregate value and validity status of the form, as well as\n     * user interaction properties like `dirty` and `touched`.\n     *\n     * To register child controls with the form, you'll want to use {@link NgModel} with a\n     * `name` attribute.  You can also use {@link NgModelGroup} if you'd like to create\n     * sub-groups within the form.\n     *\n     * You can listen to the directive's `ngSubmit` event to be notified when the user has\n     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n     * submission event.\n     *\n     * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `FormsModule`\n     *\n     *  @stable\n     */\n    var NgForm = (function (_super) {\n        __extends$4(NgForm, _super);\n        function NgForm(validators, asyncValidators) {\n            _super.call(this);\n            this._submitted = false;\n            this.ngSubmit = new EventEmitter();\n            this.form =\n                new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        }\n        Object.defineProperty(NgForm.prototype, \"submitted\", {\n            get: function () { return this._submitted; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"formDirective\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"control\", {\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"path\", {\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"controls\", {\n            get: function () { return this.form.controls; },\n            enumerable: true,\n            configurable: true\n        });\n        NgForm.prototype.addControl = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                dir._control = container.registerControl(dir.name, dir.control);\n                setUpControl(dir.control, dir);\n                dir.control.updateValueAndValidity({ emitEvent: false });\n            });\n        };\n        NgForm.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n        NgForm.prototype.removeControl = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                if (container) {\n                    container.removeControl(dir.name);\n                }\n            });\n        };\n        NgForm.prototype.addFormGroup = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                var group = new FormGroup({});\n                setUpFormContainer(group, dir);\n                container.registerControl(dir.name, group);\n                group.updateValueAndValidity({ emitEvent: false });\n            });\n        };\n        NgForm.prototype.removeFormGroup = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                if (container) {\n                    container.removeControl(dir.name);\n                }\n            });\n        };\n        NgForm.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n        NgForm.prototype.updateModel = function (dir, value) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var ctrl = _this.form.get(dir.path);\n                ctrl.setValue(value);\n            });\n        };\n        NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n        NgForm.prototype.onSubmit = function ($event) {\n            this._submitted = true;\n            this.ngSubmit.emit($event);\n            return false;\n        };\n        NgForm.prototype.onReset = function () { this.resetForm(); };\n        NgForm.prototype.resetForm = function (value) {\n            if (value === void 0) { value = undefined; }\n            this.form.reset(value);\n            this._submitted = false;\n        };\n        /** @internal */\n        NgForm.prototype._findContainer = function (path) {\n            path.pop();\n            return path.length ? this.form.get(path) : this.form;\n        };\n        NgForm.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                        providers: [formDirectiveProvider],\n                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                        outputs: ['ngSubmit'],\n                        exportAs: 'ngForm'\n                    },] },\n        ];\n        /** @nocollapse */\n        NgForm.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        return NgForm;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Examples = {\n        formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n        formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n        formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; let i=index\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n        ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n        ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n    };\n\n    var TemplateDrivenErrors = (function () {\n        function TemplateDrivenErrors() {\n        }\n        TemplateDrivenErrors.modelParentException = function () {\n            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + Examples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + Examples.ngModelWithFormGroup);\n        };\n        TemplateDrivenErrors.formGroupNameException = function () {\n            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n        };\n        TemplateDrivenErrors.missingNameException = function () {\n            throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n        };\n        TemplateDrivenErrors.modelGroupParentException = function () {\n            throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n        };\n        return TemplateDrivenErrors;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var modelGroupProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return NgModelGroup; })\n    };\n    /**\n     * @whatItDoes Creates and binds a {@link FormGroup} instance to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive can only be used as a child of {@link NgForm} (or in other words,\n     * within `<form>` tags).\n     *\n     * Use this directive if you'd like to create a sub-group within a form. This can\n     * come in handy if you want to validate a sub-group of your form separately from\n     * the rest of your form, or if some values in your domain model make more sense to\n     * consume together in a nested object.\n     *\n     * Pass in the name you'd like this sub-group to have and it will become the key\n     * for the sub-group in the form's full value. You can also export the directive into\n     * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n     *\n     * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `FormsModule`\n     *\n     * @stable\n     */\n    var NgModelGroup = (function (_super) {\n        __extends$8(NgModelGroup, _super);\n        function NgModelGroup(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /** @internal */\n        NgModelGroup.prototype._checkParentType = function () {\n            if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelGroupParentException();\n            }\n        };\n        NgModelGroup.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n        ];\n        /** @nocollapse */\n        NgModelGroup.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        NgModelGroup.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['ngModelGroup',] },],\n        };\n        return NgModelGroup;\n    }(AbstractFormGroupDirective));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formControlBinding = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return NgModel; })\n    };\n    /**\n     * `ngModel` forces an additional change detection run when its inputs change:\n     * E.g.:\n     * ```\n     * <div>{{myModel.valid}}</div>\n     * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n     * ```\n     * I.e. `ngModel` can export itself on the element and then be used in the template.\n     * Normally, this would result in expressions before the `input` that use the exported directive\n     * to have and old value as they have been\n     * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n     * detection run.\n     *\n     * Notes:\n     * - this is just one extra run no matter how many `ngModel` have been changed.\n     * - this is a general problem when using `exportAs` for directives!\n     */\n    var resolvedPromise$1 = Promise.resolve(null);\n    /**\n     * @whatItDoes Creates a {@link FormControl} instance from a domain model and binds it\n     * to a form control element.\n     *\n     * The {@link FormControl} instance will track the value, user interaction, and\n     * validation status of the control and keep the view synced with the model. If used\n     * within a parent form, the directive will also register itself with the form as a child\n     * control.\n     *\n     * @howToUse\n     *\n     * This directive can be used by itself or as part of a larger form. All you need is the\n     * `ngModel` selector to activate it.\n     *\n     * It accepts a domain model as an optional {@link @Input}. If you have a one-way binding\n     * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n     * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n     * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n     * the domain model in your class as well.\n     *\n     * If you wish to inspect the properties of the associated {@link FormControl} (like\n     * validity state), you can also export the directive into a local template variable using\n     * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n     * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n     * will fall through to the control anyway, so you can access them directly. You can see a\n     * full list of properties directly available in {@link AbstractControlDirective}.\n     *\n     * The following is an example of a simple standalone control using `ngModel`:\n     *\n     * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n     *\n     * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n     * so that the control can be registered with the parent form under that name.\n     *\n     * It's worth noting that in the context of a parent form, you often can skip one-way or\n     * two-way binding because the parent form will sync the value for you. You can access\n     * its properties by exporting it into a local template variable using `ngForm` (ex:\n     * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n     *\n     * If you do need to populate initial values into your form, using a one-way binding for\n     * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n     * than the domain model's value on submit.\n     *\n     * Take a look at an example of using `ngModel` within a form:\n     *\n     * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n     *\n     * To see `ngModel` examples with different form control types, see:\n     *\n     * * Radio buttons: {@link RadioControlValueAccessor}\n     * * Selects: {@link SelectControlValueAccessor}\n     *\n     * **npm package**: `@angular/forms`\n     *\n     * **NgModule**: `FormsModule`\n     *\n     *  @stable\n     */\n    var NgModel = (function (_super) {\n        __extends$7(NgModel, _super);\n        function NgModel(parent, validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            /** @internal */\n            this._control = new FormControl();\n            /** @internal */\n            this._registered = false;\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        NgModel.prototype.ngOnChanges = function (changes) {\n            this._checkForErrors();\n            if (!this._registered)\n                this._setUpControl();\n            if ('isDisabled' in changes) {\n                this._updateDisabled(changes);\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this._updateValue(this.model);\n                this.viewModel = this.model;\n            }\n        };\n        NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n        Object.defineProperty(NgModel.prototype, \"control\", {\n            get: function () { return this._control; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"path\", {\n            get: function () {\n                return this._parent ? controlPath(this.name, this._parent) : [this.name];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"formDirective\", {\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"validator\", {\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModel.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        NgModel.prototype._setUpControl = function () {\n            this._isStandalone() ? this._setUpStandalone() :\n                this.formDirective.addControl(this);\n            this._registered = true;\n        };\n        NgModel.prototype._isStandalone = function () {\n            return !this._parent || (this.options && this.options.standalone);\n        };\n        NgModel.prototype._setUpStandalone = function () {\n            setUpControl(this._control, this);\n            this._control.updateValueAndValidity({ emitEvent: false });\n        };\n        NgModel.prototype._checkForErrors = function () {\n            if (!this._isStandalone()) {\n                this._checkParentType();\n            }\n            this._checkName();\n        };\n        NgModel.prototype._checkParentType = function () {\n            if (!(this._parent instanceof NgModelGroup) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                TemplateDrivenErrors.formGroupNameException();\n            }\n            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelParentException();\n            }\n        };\n        NgModel.prototype._checkName = function () {\n            if (this.options && this.options.name)\n                this.name = this.options.name;\n            if (!this._isStandalone() && !this.name) {\n                TemplateDrivenErrors.missingNameException();\n            }\n        };\n        NgModel.prototype._updateValue = function (value) {\n            var _this = this;\n            resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n        };\n        NgModel.prototype._updateDisabled = function (changes) {\n            var _this = this;\n            var disabledValue = changes['isDisabled'].currentValue;\n            var isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n            resolvedPromise$1.then(function () {\n                if (isDisabled && !_this.control.disabled) {\n                    _this.control.disable();\n                }\n                else if (!isDisabled && _this.control.disabled) {\n                    _this.control.enable();\n                }\n            });\n        };\n        NgModel.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[ngModel]:not([formControlName]):not([formControl])',\n                        providers: [formControlBinding],\n                        exportAs: 'ngModel'\n                    },] },\n        ];\n        /** @nocollapse */\n        NgModel.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ];\n        NgModel.propDecorators = {\n            'name': [{ type: _angular_core.Input },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'options': [{ type: _angular_core.Input, args: ['ngModelOptions',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n        };\n        return NgModel;\n    }(NgControl));\n\n    var ReactiveErrors = (function () {\n        function ReactiveErrors() {\n        }\n        ReactiveErrors.controlParentException = function () {\n            throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formControlName);\n        };\n        ReactiveErrors.ngModelGroupException = function () {\n            throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + Examples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + Examples.ngModelGroup);\n        };\n        ReactiveErrors.missingFormException = function () {\n            throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + Examples.formControlName);\n        };\n        ReactiveErrors.groupParentException = function () {\n            throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formGroupName);\n        };\n        ReactiveErrors.arrayParentException = function () {\n            throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + Examples.formArrayName);\n        };\n        ReactiveErrors.disabledAttrWarning = function () {\n            console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n        };\n        return ReactiveErrors;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$9 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formControlBinding$1 = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return FormControlDirective; })\n    };\n    /**\n     * @whatItDoes Syncs a standalone {@link FormControl} instance to a form control element.\n     *\n     * In other words, this directive ensures that any values written to the {@link FormControl}\n     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n     * any values written to the DOM element through user input will be reflected in the\n     * {@link FormControl} instance (view -> model).\n     *\n     * @howToUse\n     *\n     * Use this directive if you'd like to create and manage a {@link FormControl} instance directly.\n     * Simply create a {@link FormControl}, save it to your component class, and pass it into the\n     * {@link FormControlDirective}.\n     *\n     * This directive is designed to be used as a standalone control.  Unlike {@link FormControlName},\n     * it does not require that your {@link FormControl} instance be part of any parent\n     * {@link FormGroup}, and it won't be registered to any {@link FormGroupDirective} that\n     * exists above it.\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {@link FormControl} instance. See a full list of available properties in\n     * {@link AbstractControl}.\n     *\n     * **Set the value**: You can pass in an initial value when instantiating the {@link FormControl},\n     * or you can set it programmatically later using {@link AbstractControl.setValue} or\n     * {@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     *  @stable\n     */\n    var FormControlDirective = (function (_super) {\n        __extends$9(FormControlDirective, _super);\n        function FormControlDirective(validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            this.update = new EventEmitter();\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlDirective.prototype.ngOnChanges = function (changes) {\n            if (this._isControlChanged(changes)) {\n                setUpControl(this.form, this);\n                if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                    this.valueAccessor.setDisabledState(true);\n                }\n                this.form.updateValueAndValidity({ emitEvent: false });\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this.form.setValue(this.model);\n                this.viewModel = this.model;\n            }\n        };\n        Object.defineProperty(FormControlDirective.prototype, \"path\", {\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"control\", {\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        FormControlDirective.prototype._isControlChanged = function (changes) {\n            return changes.hasOwnProperty('form');\n        };\n        FormControlDirective.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n        ];\n        /** @nocollapse */\n        FormControlDirective.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ];\n        FormControlDirective.propDecorators = {\n            'form': [{ type: _angular_core.Input, args: ['formControl',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n        };\n        return FormControlDirective;\n    }(NgControl));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$11 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formDirectiveProvider$1 = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormGroupDirective; })\n    };\n    /**\n     * @whatItDoes Binds an existing {@link FormGroup} to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive accepts an existing {@link FormGroup} instance. It will then use this\n     * {@link FormGroup} instance to match any child {@link FormControl}, {@link FormGroup},\n     * and {@link FormArray} instances to child {@link FormControlName}, {@link FormGroupName},\n     * and {@link FormArrayName} directives.\n     *\n     * **Set value**: You can set the form's initial value when instantiating the\n     * {@link FormGroup}, or you can set it programmatically later using the {@link FormGroup}'s\n     * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue} methods.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n     * to the {@link FormGroup}'s {@link AbstractControl.valueChanges} event.  You can also listen to\n     * its {@link AbstractControl.statusChanges} event to be notified when the validation status is\n     * re-calculated.\n     *\n     * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n     * submission event.\n     *\n     * ### Example\n     *\n     * In this example, we create form controls for first name and last name.\n     *\n     * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n     *\n     * **npm package**: `@angular/forms`\n     *\n     * **NgModule**: {@link ReactiveFormsModule}\n     *\n     *  @stable\n     */\n    var FormGroupDirective = (function (_super) {\n        __extends$11(FormGroupDirective, _super);\n        function FormGroupDirective(_validators, _asyncValidators) {\n            _super.call(this);\n            this._validators = _validators;\n            this._asyncValidators = _asyncValidators;\n            this._submitted = false;\n            this.directives = [];\n            this.form = null;\n            this.ngSubmit = new EventEmitter();\n        }\n        FormGroupDirective.prototype.ngOnChanges = function (changes) {\n            this._checkFormPresent();\n            if (changes.hasOwnProperty('form')) {\n                this._updateValidators();\n                this._updateDomValue();\n                this._updateRegistrations();\n            }\n        };\n        Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n            get: function () { return this._submitted; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        FormGroupDirective.prototype.addControl = function (dir) {\n            var ctrl = this.form.get(dir.path);\n            setUpControl(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n            this.directives.push(dir);\n            return ctrl;\n        };\n        FormGroupDirective.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n        FormGroupDirective.prototype.removeControl = function (dir) { ListWrapper.remove(this.directives, dir); };\n        FormGroupDirective.prototype.addFormGroup = function (dir) {\n            var ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        };\n        FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n        FormGroupDirective.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n        FormGroupDirective.prototype.addFormArray = function (dir) {\n            var ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        };\n        FormGroupDirective.prototype.removeFormArray = function (dir) { };\n        FormGroupDirective.prototype.getFormArray = function (dir) { return this.form.get(dir.path); };\n        FormGroupDirective.prototype.updateModel = function (dir, value) {\n            var ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        };\n        FormGroupDirective.prototype.onSubmit = function ($event) {\n            this._submitted = true;\n            this.ngSubmit.emit($event);\n            return false;\n        };\n        FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n        FormGroupDirective.prototype.resetForm = function (value) {\n            if (value === void 0) { value = undefined; }\n            this.form.reset(value);\n            this._submitted = false;\n        };\n        /** @internal */\n        FormGroupDirective.prototype._updateDomValue = function () {\n            var _this = this;\n            this.directives.forEach(function (dir) {\n                var newCtrl = _this.form.get(dir.path);\n                if (dir._control !== newCtrl) {\n                    cleanUpControl(dir._control, dir);\n                    if (newCtrl)\n                        setUpControl(newCtrl, dir);\n                    dir._control = newCtrl;\n                }\n            });\n            this.form._updateTreeValidity({ emitEvent: false });\n        };\n        FormGroupDirective.prototype._updateRegistrations = function () {\n            var _this = this;\n            this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n            if (this._oldForm)\n                this._oldForm._registerOnCollectionChange(function () { });\n            this._oldForm = this.form;\n        };\n        FormGroupDirective.prototype._updateValidators = function () {\n            var sync = composeValidators(this._validators);\n            this.form.validator = Validators.compose([this.form.validator, sync]);\n            var async = composeAsyncValidators(this._asyncValidators);\n            this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n        };\n        FormGroupDirective.prototype._checkFormPresent = function () {\n            if (!this.form) {\n                ReactiveErrors.missingFormException();\n            }\n        };\n        FormGroupDirective.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[formGroup]',\n                        providers: [formDirectiveProvider$1],\n                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                        exportAs: 'ngForm'\n                    },] },\n        ];\n        /** @nocollapse */\n        FormGroupDirective.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        FormGroupDirective.propDecorators = {\n            'form': [{ type: _angular_core.Input, args: ['formGroup',] },],\n            'ngSubmit': [{ type: _angular_core.Output },],\n        };\n        return FormGroupDirective;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$12 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formGroupNameProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormGroupName; })\n    };\n    /**\n     * @whatItDoes Syncs a nested {@link FormGroup} to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive can only be used with a parent {@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the nested {@link FormGroup} you want to link, and\n     * will look for a {@link FormGroup} registered with that name in the parent\n     * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n     *\n     * Nested form groups can come in handy when you want to validate a sub-group of a\n     * form separately from the rest or when you'd like to group the values of certain\n     * controls into their own nested object.\n     *\n     * **Access the group**: You can access the associated {@link FormGroup} using the\n     * {@link AbstractControl.get} method. Ex: `this.form.get('name')`.\n     *\n     * You can also access individual controls within the group using dot syntax.\n     * Ex: `this.form.get('name.first')`\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {@link FormGroup}. See a full list of available properties in {@link AbstractControl}.\n     *\n     * **Set the value**: You can set an initial value for each child control when instantiating\n     * the {@link FormGroup}, or you can set it programmatically later using\n     * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the group, you can\n     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     * @stable\n     */\n    var FormGroupName = (function (_super) {\n        __extends$12(FormGroupName, _super);\n        function FormGroupName(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /** @internal */\n        FormGroupName.prototype._checkParentType = function () {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.groupParentException();\n            }\n        };\n        FormGroupName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n        ];\n        /** @nocollapse */\n        FormGroupName.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        FormGroupName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formGroupName',] },],\n        };\n        return FormGroupName;\n    }(AbstractFormGroupDirective));\n    var formArrayNameProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormArrayName; })\n    };\n    /**\n     * @whatItDoes Syncs a nested {@link FormArray} to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the nested {@link FormArray} you want to link, and\n     * will look for a {@link FormArray} registered with that name in the parent\n     * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n     *\n     * Nested form arrays can come in handy when you have a group of form controls but\n     * you're not sure how many there will be. Form arrays allow you to create new\n     * form controls dynamically.\n     *\n     * **Access the array**: You can access the associated {@link FormArray} using the\n     * {@link AbstractControl.get} method on the parent {@link FormGroup}.\n     * Ex: `this.form.get('cities')`.\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {@link FormArray}. See a full list of available properties in {@link AbstractControl}.\n     *\n     * **Set the value**: You can set an initial value for each child control when instantiating\n     * the {@link FormArray}, or you can set the value programmatically later using the\n     * {@link FormArray}'s {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}\n     * methods.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the array, you can\n     * subscribe to the {@link FormArray}'s {@link AbstractControl.valueChanges} event.  You can also\n     * listen to its {@link AbstractControl.statusChanges} event to be notified when the validation\n     * status is re-calculated.\n     *\n     * **Add new controls**: You can add new controls to the {@link FormArray} dynamically by\n     * calling its {@link FormArray.push} method.\n     *  Ex: `this.form.get('cities').push(new FormControl());`\n     *\n     * ### Example\n     *\n     * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     * @stable\n     */\n    var FormArrayName = (function (_super) {\n        __extends$12(FormArrayName, _super);\n        function FormArrayName(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        FormArrayName.prototype.ngOnInit = function () {\n            this._checkParentType();\n            this.formDirective.addFormArray(this);\n        };\n        FormArrayName.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeFormArray(this);\n            }\n        };\n        Object.defineProperty(FormArrayName.prototype, \"control\", {\n            get: function () { return this.formDirective.getFormArray(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n            get: function () {\n                return this._parent ? this._parent.formDirective : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"path\", {\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"validator\", {\n            get: function () { return composeValidators(this._validators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n            get: function () { return composeAsyncValidators(this._asyncValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        FormArrayName.prototype._checkParentType = function () {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.arrayParentException();\n            }\n        };\n        FormArrayName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n        ];\n        /** @nocollapse */\n        FormArrayName.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        FormArrayName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formArrayName',] },],\n        };\n        return FormArrayName;\n    }(ControlContainer));\n    function _hasInvalidParent(parent) {\n        return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n            !(parent instanceof FormArrayName);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$10 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var controlNameBinding = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return FormControlName; })\n    };\n    /**\n     * @whatItDoes  Syncs a {@link FormControl} in an existing {@link FormGroup} to a form control\n     * element by name.\n     *\n     * In other words, this directive ensures that any values written to the {@link FormControl}\n     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n     * any values written to the DOM element through user input will be reflected in the\n     * {@link FormControl} instance (view -> model).\n     *\n     * @howToUse\n     *\n     * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the {@link FormControl} instance you want to\n     * link, and will look for a {@link FormControl} registered with that name in the\n     * closest {@link FormGroup} or {@link FormArray} above it.\n     *\n     * **Access the control**: You can access the {@link FormControl} associated with\n     * this directive by using the {@link AbstractControl.get} method.\n     * Ex: `this.form.get('first');`\n     *\n     * **Get value**: the `value` property is always synced and available on the {@link FormControl}.\n     * See a full list of available properties in {@link AbstractControl}.\n     *\n     *  **Set value**: You can set an initial value for the control when instantiating the\n     *  {@link FormControl}, or you can set it programmatically later using\n     *  {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * In this example, we create form controls for first name and last name.\n     *\n     * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n     *\n     * To see `formControlName` examples with different form control types, see:\n     *\n     * * Radio buttons: {@link RadioControlValueAccessor}\n     * * Selects: {@link SelectControlValueAccessor}\n     *\n     * **npm package**: `@angular/forms`\n     *\n     * **NgModule**: {@link ReactiveFormsModule}\n     *\n     *  @stable\n     */\n    var FormControlName = (function (_super) {\n        __extends$10(FormControlName, _super);\n        function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            this._added = false;\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlName.prototype.ngOnChanges = function (changes) {\n            if (!this._added)\n                this._setUpControl();\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this.viewModel = this.model;\n                this.formDirective.updateModel(this, this.model);\n            }\n        };\n        FormControlName.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeControl(this);\n            }\n        };\n        FormControlName.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        Object.defineProperty(FormControlName.prototype, \"path\", {\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"validator\", {\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"control\", {\n            get: function () { return this._control; },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlName.prototype._checkParentType = function () {\n            if (!(this._parent instanceof FormGroupName) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                ReactiveErrors.ngModelGroupException();\n            }\n            else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n                !(this._parent instanceof FormArrayName)) {\n                ReactiveErrors.controlParentException();\n            }\n        };\n        FormControlName.prototype._setUpControl = function () {\n            this._checkParentType();\n            this._control = this.formDirective.addControl(this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this._added = true;\n        };\n        FormControlName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n        ];\n        /** @nocollapse */\n        FormControlName.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ];\n        FormControlName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formControlName',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n        };\n        return FormControlName;\n    }(NgControl));\n\n    var REQUIRED_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return RequiredValidator; }),\n        multi: true\n    };\n    /**\n     * A Directive that adds the `required` validator to any controls marked with the\n     * `required` attribute, via the {@link NG_VALIDATORS} binding.\n     *\n     * ### Example\n     *\n     * ```\n     * <input name=\"fullName\" ngModel required>\n     * ```\n     *\n     * @stable\n     */\n    var RequiredValidator = (function () {\n        function RequiredValidator() {\n        }\n        Object.defineProperty(RequiredValidator.prototype, \"required\", {\n            get: function () { return this._required; },\n            set: function (value) {\n                this._required = value != null && value !== false && \"\" + value !== 'false';\n                if (this._onChange)\n                    this._onChange();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RequiredValidator.prototype.validate = function (c) {\n            return this.required ? Validators.required(c) : null;\n        };\n        RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        RequiredValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[required][formControlName],[required][formControl],[required][ngModel]',\n                        providers: [REQUIRED_VALIDATOR],\n                        host: { '[attr.required]': 'required ? \"\" : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        RequiredValidator.ctorParameters = [];\n        RequiredValidator.propDecorators = {\n            'required': [{ type: _angular_core.Input },],\n        };\n        return RequiredValidator;\n    }());\n    /**\n     * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n     *\n     * ## Example:\n     *\n     * {@example common/forms/ts/validators/validators.ts region='min'}\n     */\n    var MIN_LENGTH_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return MinLengthValidator; }),\n        multi: true\n    };\n    /**\n     * A directive which installs the {@link MinLengthValidator} for any `formControlName`,\n     * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n     *\n     * @stable\n     */\n    var MinLengthValidator = (function () {\n        function MinLengthValidator() {\n        }\n        MinLengthValidator.prototype.ngOnChanges = function (changes) {\n            if ('minlength' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        MinLengthValidator.prototype.validate = function (c) {\n            return this.minlength == null ? null : this._validator(c);\n        };\n        MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        MinLengthValidator.prototype._createValidator = function () {\n            this._validator = Validators.minLength(parseInt(this.minlength, 10));\n        };\n        MinLengthValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                        providers: [MIN_LENGTH_VALIDATOR],\n                        host: { '[attr.minlength]': 'minlength ? minlength : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        MinLengthValidator.ctorParameters = [];\n        MinLengthValidator.propDecorators = {\n            'minlength': [{ type: _angular_core.Input },],\n        };\n        return MinLengthValidator;\n    }());\n    /**\n     * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n     *\n     * ## Example:\n     *\n     * {@example common/forms/ts/validators/validators.ts region='max'}\n     */\n    var MAX_LENGTH_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return MaxLengthValidator; }),\n        multi: true\n    };\n    /**\n     * A directive which installs the {@link MaxLengthValidator} for any `formControlName,\n     * `formControl`,\n     * or control with `ngModel` that also has a `maxlength` attribute.\n     *\n     * @stable\n     */\n    var MaxLengthValidator = (function () {\n        function MaxLengthValidator() {\n        }\n        MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n            if ('maxlength' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        MaxLengthValidator.prototype.validate = function (c) {\n            return this.maxlength != null ? this._validator(c) : null;\n        };\n        MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        MaxLengthValidator.prototype._createValidator = function () {\n            this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n        };\n        MaxLengthValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                        providers: [MAX_LENGTH_VALIDATOR],\n                        host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        MaxLengthValidator.ctorParameters = [];\n        MaxLengthValidator.propDecorators = {\n            'maxlength': [{ type: _angular_core.Input },],\n        };\n        return MaxLengthValidator;\n    }());\n    var PATTERN_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return PatternValidator; }),\n        multi: true\n    };\n    /**\n     * A Directive that adds the `pattern` validator to any controls marked with the\n     * `pattern` attribute, via the {@link NG_VALIDATORS} binding. Uses attribute value\n     * as the regex to validate Control value against.  Follows pattern attribute\n     * semantics; i.e. regex must match entire Control value.\n     *\n     * ### Example\n     *\n     * ```\n     * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n     * ```\n     * @stable\n     */\n    var PatternValidator = (function () {\n        function PatternValidator() {\n        }\n        PatternValidator.prototype.ngOnChanges = function (changes) {\n            if ('pattern' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n        PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n        PatternValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                        providers: [PATTERN_VALIDATOR],\n                        host: { '[attr.pattern]': 'pattern ? pattern : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        PatternValidator.ctorParameters = [];\n        PatternValidator.propDecorators = {\n            'pattern': [{ type: _angular_core.Input },],\n        };\n        return PatternValidator;\n    }());\n\n    /**\n     * @whatItDoes Creates an {@link AbstractControl} from a user-specified configuration.\n     *\n     * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n     * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n     * forms.\n     *\n     * @howToUse\n     *\n     * To use, inject `FormBuilder` into your component class. You can then call its methods\n     * directly.\n     *\n     * {@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n     *\n     *  * **npm package**: `@angular/forms`\n     *\n     *  * **NgModule**: {@link ReactiveFormsModule}\n     *\n     * @stable\n     */\n    var FormBuilder = (function () {\n        function FormBuilder() {\n        }\n        /**\n         * Construct a new {@link FormGroup} with the given map of configuration.\n         * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n         *\n         * See the {@link FormGroup} constructor for more details.\n         */\n        FormBuilder.prototype.group = function (controlsConfig, extra) {\n            if (extra === void 0) { extra = null; }\n            var controls = this._reduceControls(controlsConfig);\n            var validator = isPresent(extra) ? extra['validator'] : null;\n            var asyncValidator = isPresent(extra) ? extra['asyncValidator'] : null;\n            return new FormGroup(controls, validator, asyncValidator);\n        };\n        /**\n         * Construct a new {@link FormControl} with the given `formState`,`validator`, and\n         * `asyncValidator`.\n         *\n         * `formState` can either be a standalone value for the form control or an object\n         * that contains both a value and a disabled status.\n         *\n         */\n        FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            return new FormControl(formState, validator, asyncValidator);\n        };\n        /**\n         * Construct a {@link FormArray} from the given `controlsConfig` array of\n         * configuration, with the given optional `validator` and `asyncValidator`.\n         */\n        FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n            var _this = this;\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            var controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n            return new FormArray(controls, validator, asyncValidator);\n        };\n        /** @internal */\n        FormBuilder.prototype._reduceControls = function (controlsConfig) {\n            var _this = this;\n            var controls = {};\n            Object.keys(controlsConfig).forEach(function (controlName) {\n                controls[controlName] = _this._createControl(controlsConfig[controlName]);\n            });\n            return controls;\n        };\n        /** @internal */\n        FormBuilder.prototype._createControl = function (controlConfig) {\n            if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n                controlConfig instanceof FormArray) {\n                return controlConfig;\n            }\n            else if (Array.isArray(controlConfig)) {\n                var value = controlConfig[0];\n                var validator = controlConfig.length > 1 ? controlConfig[1] : null;\n                var asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n                return this.control(value, validator, asyncValidator);\n            }\n            else {\n                return this.control(controlConfig);\n            }\n        };\n        FormBuilder.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        FormBuilder.ctorParameters = [];\n        return FormBuilder;\n    }());\n\n    var SHARED_FORM_DIRECTIVES = [\n        NgSelectOption, NgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor,\n        RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus,\n        NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator\n    ];\n    var TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\n    var REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n    /**\n     * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n     */\n    var InternalFormsSharedModule = (function () {\n        function InternalFormsSharedModule() {\n        }\n        InternalFormsSharedModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: SHARED_FORM_DIRECTIVES,\n                        exports: SHARED_FORM_DIRECTIVES,\n                    },] },\n        ];\n        /** @nocollapse */\n        InternalFormsSharedModule.ctorParameters = [];\n        return InternalFormsSharedModule;\n    }());\n\n    /**\n     * The ng module for forms.\n     * @stable\n     */\n    var FormsModule = (function () {\n        function FormsModule() {\n        }\n        FormsModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                        providers: [RadioControlRegistry],\n                        exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n                    },] },\n        ];\n        /** @nocollapse */\n        FormsModule.ctorParameters = [];\n        return FormsModule;\n    }());\n    /**\n     * The ng module for reactive forms.\n     * @stable\n     */\n    var ReactiveFormsModule = (function () {\n        function ReactiveFormsModule() {\n        }\n        ReactiveFormsModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                        providers: [FormBuilder, RadioControlRegistry],\n                        exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n                    },] },\n        ];\n        /** @nocollapse */\n        ReactiveFormsModule.ctorParameters = [];\n        return ReactiveFormsModule;\n    }());\n\n    exports.AbstractControlDirective = AbstractControlDirective;\n    exports.AbstractFormGroupDirective = AbstractFormGroupDirective;\n    exports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;\n    exports.ControlContainer = ControlContainer;\n    exports.NG_VALUE_ACCESSOR = NG_VALUE_ACCESSOR;\n    exports.DefaultValueAccessor = DefaultValueAccessor;\n    exports.NgControl = NgControl;\n    exports.NgControlStatus = NgControlStatus;\n    exports.NgControlStatusGroup = NgControlStatusGroup;\n    exports.NgForm = NgForm;\n    exports.NgModel = NgModel;\n    exports.NgModelGroup = NgModelGroup;\n    exports.RadioControlValueAccessor = RadioControlValueAccessor;\n    exports.FormControlDirective = FormControlDirective;\n    exports.FormControlName = FormControlName;\n    exports.FormGroupDirective = FormGroupDirective;\n    exports.FormArrayName = FormArrayName;\n    exports.FormGroupName = FormGroupName;\n    exports.NgSelectOption = NgSelectOption;\n    exports.SelectControlValueAccessor = SelectControlValueAccessor;\n    exports.SelectMultipleControlValueAccessor = SelectMultipleControlValueAccessor;\n    exports.MaxLengthValidator = MaxLengthValidator;\n    exports.MinLengthValidator = MinLengthValidator;\n    exports.PatternValidator = PatternValidator;\n    exports.RequiredValidator = RequiredValidator;\n    exports.FormBuilder = FormBuilder;\n    exports.AbstractControl = AbstractControl;\n    exports.FormArray = FormArray;\n    exports.FormControl = FormControl;\n    exports.FormGroup = FormGroup;\n    exports.NG_ASYNC_VALIDATORS = NG_ASYNC_VALIDATORS;\n    exports.NG_VALIDATORS = NG_VALIDATORS;\n    exports.Validators = Validators;\n    exports.FormsModule = FormsModule;\n    exports.ReactiveFormsModule = ReactiveFormsModule;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/bundles/forms.umd.js\n// module id = 56\n// module chunks = 0","function __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(require('./dist/ng2-pagination'));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-pagination/index.js\n// module id = 59\n// module chunks = 0","\"use strict\";\r\nvar core_1 = require('@angular/core');\r\nvar common_1 = require('@angular/common');\r\nvar paginate_pipe_1 = require('./paginate.pipe');\r\nvar pagination_service_1 = require('./pagination.service');\r\nvar pagination_controls_component_1 = require('./pagination-controls.component');\r\nvar pagination_controls_directive_1 = require('./pagination-controls.directive');\r\nvar pagination_service_2 = require('./pagination.service');\r\nexports.PaginationService = pagination_service_2.PaginationService;\r\nvar pagination_controls_component_2 = require('./pagination-controls.component');\r\nexports.PaginationControlsComponent = pagination_controls_component_2.PaginationControlsComponent;\r\nvar pagination_controls_directive_2 = require('./pagination-controls.directive');\r\nexports.PaginationControlsDirective = pagination_controls_directive_2.PaginationControlsDirective;\r\nvar paginate_pipe_2 = require('./paginate.pipe');\r\nexports.PaginatePipe = paginate_pipe_2.PaginatePipe;\r\nvar Ng2PaginationModule = (function () {\r\n    function Ng2PaginationModule() {\r\n    }\r\n    Ng2PaginationModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [common_1.CommonModule],\r\n                    declarations: [\r\n                        paginate_pipe_1.PaginatePipe,\r\n                        pagination_controls_component_1.PaginationControlsComponent,\r\n                        pagination_controls_directive_1.PaginationControlsDirective\r\n                    ],\r\n                    providers: [pagination_service_1.PaginationService],\r\n                    exports: [paginate_pipe_1.PaginatePipe, pagination_controls_component_1.PaginationControlsComponent, pagination_controls_directive_1.PaginationControlsDirective]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    Ng2PaginationModule.ctorParameters = [];\r\n    return Ng2PaginationModule;\r\n}());\r\nexports.Ng2PaginationModule = Ng2PaginationModule;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-pagination/dist/ng2-pagination.js\n// module id = 60\n// module chunks = 0","\"use strict\";\r\nvar core_1 = require(\"@angular/core\");\r\nvar pagination_service_1 = require(\"./pagination.service\");\r\nvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nvar PaginatePipe = (function () {\r\n    function PaginatePipe(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    PaginatePipe.prototype.transform = function (collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (args instanceof Array) {\r\n            // compatible with angular2 before beta16\r\n            args = args[0];\r\n        }\r\n        if (!(collection instanceof Array)) {\r\n            var _id = args.id || this.service.defaultId;\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        var serverSideMode = args.totalItems !== undefined;\r\n        var instance = this.createInstance(collection, args);\r\n        var id = instance.id;\r\n        var start, end;\r\n        var perPage = instance.itemsPerPage;\r\n        this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = +perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            var isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                var slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        // save the state for server-side collection to avoid null\r\n        // flash as new data loads.\r\n        this.saveState(id, collection, collection, start, end);\r\n        return collection;\r\n    };\r\n    /**\r\n     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    PaginatePipe.prototype.createInstance = function (collection, args) {\r\n        var config = args;\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id || this.service.defaultId(),\r\n            itemsPerPage: config.itemsPerPage || 0,\r\n            currentPage: config.currentPage || 1,\r\n            totalItems: config.totalItems || collection.length\r\n        };\r\n    };\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    PaginatePipe.prototype.checkConfig = function (config) {\r\n        var required = ['itemsPerPage', 'currentPage'];\r\n        var missing = required.filter(function (prop) { return !config.hasOwnProperty(prop); });\r\n        if (0 < missing.length) {\r\n            throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\r\n        }\r\n    };\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection: collection,\r\n            size: collection.length,\r\n            slice: slice,\r\n            start: start,\r\n            end: end\r\n        };\r\n    };\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\r\n        var state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        var isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every(function (element, index) { return element === collection[start + index]; });\r\n    };\r\n    PaginatePipe.decorators = [\r\n        { type: core_1.Pipe, args: [{\r\n                    name: 'paginate',\r\n                    pure: false\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginatePipe.ctorParameters = [\r\n        { type: pagination_service_1.PaginationService, },\r\n    ];\r\n    return PaginatePipe;\r\n}());\r\nexports.PaginatePipe = PaginatePipe;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-pagination/dist/paginate.pipe.js\n// module id = 61\n// module chunks = 0","\"use strict\";\r\nvar core_1 = require('@angular/core');\r\nvar PaginationService = (function () {\r\n    function PaginationService() {\r\n        this.change = new core_1.EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    PaginationService.prototype.defaultId = function () { return this.DEFAULT_ID; };\r\n    PaginationService.prototype.register = function (instance) {\r\n        if (!instance.id) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            this.change.emit(instance.id);\r\n        }\r\n        else {\r\n            var changed = this.updateInstance(instance);\r\n            if (changed) {\r\n                this.change.emit(instance.id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    PaginationService.prototype.updateInstance = function (instance) {\r\n        var changed = false;\r\n        for (var prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    PaginationService.prototype.getCurrentPage = function (id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    PaginationService.prototype.setCurrentPage = function (id, page) {\r\n        if (this.instances[id]) {\r\n            var instance = this.instances[id];\r\n            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    PaginationService.prototype.setTotalItems = function (id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    PaginationService.prototype.getInstance = function (id) {\r\n        if (id === void 0) { id = this.DEFAULT_ID; }\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    };\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    PaginationService.prototype.clone = function (obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n    return PaginationService;\r\n}());\r\nexports.PaginationService = PaginationService;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-pagination/dist/pagination.service.js\n// module id = 62\n// module chunks = 0","\"use strict\";\r\nvar core_1 = require('@angular/core');\r\nvar template_1 = require('./template');\r\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\nvar PaginationControlsComponent = (function () {\r\n    function PaginationControlsComponent() {\r\n        this.maxSize = 7;\r\n        this.pageChange = new core_1.EventEmitter();\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n    }\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"directionLinks\", {\r\n        get: function () {\r\n            return this._directionLinks;\r\n        },\r\n        set: function (value) {\r\n            this._directionLinks = !!value && value !== 'false';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"autoHide\", {\r\n        get: function () {\r\n            return this._autoHide;\r\n        },\r\n        set: function (value) {\r\n            this._autoHide = !!value && value !== 'false';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PaginationControlsComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'pagination-controls',\r\n                    template: template_1.DEFAULT_TEMPLATE,\r\n                    styles: [template_1.DEFAULT_STYLES],\r\n                    changeDetection: core_1.ChangeDetectionStrategy.OnPush\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginationControlsComponent.ctorParameters = [];\r\n    PaginationControlsComponent.propDecorators = {\r\n        'id': [{ type: core_1.Input },],\r\n        'maxSize': [{ type: core_1.Input },],\r\n        'directionLinks': [{ type: core_1.Input },],\r\n        'autoHide': [{ type: core_1.Input },],\r\n        'pageChange': [{ type: core_1.Output },],\r\n    };\r\n    return PaginationControlsComponent;\r\n}());\r\nexports.PaginationControlsComponent = PaginationControlsComponent;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-pagination/dist/pagination-controls.component.js\n// module id = 63\n// module chunks = 0","/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\n\"use strict\";\r\nexports.DEFAULT_TEMPLATE = \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\">\\n    <ul class=\\\"ng2-pagination\\\" \\n        role=\\\"navigation\\\" \\n        aria-label=\\\"Pagination\\\" \\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a *ngIf=\\\"1 < p.getCurrent()\\\" (click)=\\\"p.previous()\\\" aria-label=\\\"Next page\\\">\\n                Previous <span class=\\\"show-for-sr\\\">page</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\">Previous <span class=\\\"show-for-sr\\\">page</span></span>\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" *ngFor=\\\"let page of p.pages\\\">\\n            <a (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">Page</span>\\n                <span>{{ page.label }}</span>\\n            </a>\\n            <div *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">You're on page</span>\\n                <span>{{ page.label }}</span> \\n            </div>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a *ngIf=\\\"!p.isLastPage()\\\" (click)=\\\"p.next()\\\" aria-label=\\\"Next page\\\">\\n                Next <span class=\\\"show-for-sr\\\">page</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\">Next <span class=\\\"show-for-sr\\\">page</span></span>\\n        </li>\\n\\n    </ul>\\n    </pagination-template>\\n    \";\r\nexports.DEFAULT_STYLES = \"\\n.ng2-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ng2-pagination::before, .ng2-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ng2-pagination::after {\\n    clear: both; }\\n  .ng2-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    font-size: 0.875rem;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ng2-pagination li {\\n    display: inline-block; }\\n  .ng2-pagination a,\\n  .ng2-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ng2-pagination a:hover,\\n    .ng2-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ng2-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ng2-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ng2-pagination .disabled:hover {\\n      background: transparent; }\\n  .ng2-pagination .ellipsis::after {\\n    content: '\\u2026';\\n    padding: 0.1875rem 0.625rem;\\n    color: #0a0a0a; }\\n\\n.ng2-pagination .pagination-previous a::before,\\n.ng2-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ng2-pagination .pagination-next a::after,\\n.ng2-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ng2-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\";\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-pagination/dist/template.js\n// module id = 64\n// module chunks = 0","\"use strict\";\r\nvar core_1 = require('@angular/core');\r\nvar pagination_service_1 = require('./pagination.service');\r\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\nvar PaginationControlsDirective = (function () {\r\n    function PaginationControlsDirective(service, changeDetectorRef) {\r\n        var _this = this;\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new core_1.EventEmitter();\r\n        this.pages = [];\r\n        this.changeSub = this.service.change\r\n            .subscribe(function (id) {\r\n            if (_this.id === id) {\r\n                _this.updatePageLinks();\r\n                _this.changeDetectorRef.markForCheck();\r\n                _this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    PaginationControlsDirective.prototype.ngOnInit = function () {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnChanges = function (changes) {\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnDestroy = function () {\r\n        this.changeSub.unsubscribe();\r\n    };\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    PaginationControlsDirective.prototype.previous = function () {\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    };\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    PaginationControlsDirective.prototype.next = function () {\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    };\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    PaginationControlsDirective.prototype.isFirstPage = function () {\r\n        return this.getCurrent() === 1;\r\n    };\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    PaginationControlsDirective.prototype.isLastPage = function () {\r\n        return this.getLastPage() === this.getCurrent();\r\n    };\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.setCurrent = function (page) {\r\n        this.pageChange.emit(page);\r\n    };\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.getCurrent = function () {\r\n        return this.service.getCurrentPage(this.id);\r\n    };\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    PaginationControlsDirective.prototype.getLastPage = function () {\r\n        var inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    };\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    PaginationControlsDirective.prototype.updatePageLinks = function () {\r\n        var _this = this;\r\n        var inst = this.service.getInstance(this.id);\r\n        var correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(function () {\r\n                _this.setCurrent(correctedCurrentPage);\r\n                _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);\r\n            });\r\n        }\r\n        else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    };\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {\r\n        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    };\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        var pages = [];\r\n        var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        var isStart = currentPage <= halfWay;\r\n        var isEnd = totalPages - halfWay < currentPage;\r\n        var isMiddle = !isStart && !isEnd;\r\n        var ellipsesNeeded = paginationRange < totalPages;\r\n        var i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            var label = void 0;\r\n            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    };\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    };\r\n    PaginationControlsDirective.decorators = [\r\n        { type: core_1.Directive, args: [{\r\n                    selector: 'pagination-template,[pagination-template]',\r\n                    exportAs: 'paginationApi'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginationControlsDirective.ctorParameters = [\r\n        { type: pagination_service_1.PaginationService, },\r\n        { type: core_1.ChangeDetectorRef, },\r\n    ];\r\n    PaginationControlsDirective.propDecorators = {\r\n        'id': [{ type: core_1.Input },],\r\n        'maxSize': [{ type: core_1.Input },],\r\n        'pageChange': [{ type: core_1.Output },],\r\n    };\r\n    return PaginationControlsDirective;\r\n}());\r\nexports.PaginationControlsDirective = PaginationControlsDirective;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-pagination/dist/pagination-controls.directive.js\n// module id = 65\n// module chunks = 0","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs/Subject'), require('@angular/platform-browser'), require('@angular/forms'), require('rxjs/Observable'), require('@angular/common'), require('@angular/http'), require('rxjs/add/observable/forkJoin'), require('rxjs/add/observable/of'), require('rxjs/add/operator/map'), require('rxjs/add/operator/filter'), require('rxjs/add/operator/do'), require('rxjs/add/operator/share'), require('rxjs/add/operator/finally'), require('rxjs/add/operator/catch'), require('rxjs/add/operator/first')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/Subject', '@angular/platform-browser', '@angular/forms', 'rxjs/Observable', '@angular/common', '@angular/http', 'rxjs/add/observable/forkJoin', 'rxjs/add/observable/of', 'rxjs/add/operator/map', 'rxjs/add/operator/filter', 'rxjs/add/operator/do', 'rxjs/add/operator/share', 'rxjs/add/operator/finally', 'rxjs/add/operator/catch', 'rxjs/add/operator/first'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}),global.ng.core,global.Rx,global.ng.platformBrowser,global.ng.forms,global.Rx,global.ng.common,global.ng.http,global.Rx.Observable,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype));\n}(this, (function (exports,_angular_core,rxjs_Subject,_angular_platformBrowser,_angular_forms,rxjs_Observable,_angular_common,_angular_http,rxjs_add_observable_forkJoin,rxjs_add_observable_of,rxjs_add_operator_map,rxjs_add_operator_filter,rxjs_add_operator_do,rxjs_add_operator_share,rxjs_add_operator_finally,rxjs_add_operator_catch,rxjs_add_operator_first) { 'use strict';\n\nvar __decorate$1 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$1 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MdLine) query, then\n * counted by checking the query list's length.\n */\nvar MdLine = (function () {\n    function MdLine() {\n    }\n    MdLine = __decorate$1([\n        _angular_core.Directive({ selector: '[md-line]' }), \n        __metadata$1('design:paramtypes', [])\n    ], MdLine);\n    return MdLine;\n}());\n/* Helper that takes a query list of lines and sets the correct class on the host */\nvar MdLineSetter = (function () {\n    function MdLineSetter(_lines, _renderer, _element) {\n        var _this = this;\n        this._lines = _lines;\n        this._renderer = _renderer;\n        this._element = _element;\n        this._setLineClass(this._lines.length);\n        this._lines.changes.subscribe(function () {\n            _this._setLineClass(_this._lines.length);\n        });\n    }\n    MdLineSetter.prototype._setLineClass = function (count) {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(\"md-\" + count + \"-line\", true);\n        }\n        else if (count > 3) {\n            this._setClass(\"md-multi-line\", true);\n        }\n    };\n    MdLineSetter.prototype._resetClasses = function () {\n        this._setClass('md-2-line', false);\n        this._setClass('md-3-line', false);\n        this._setClass('md-multi-line', false);\n    };\n    MdLineSetter.prototype._setClass = function (className, bool) {\n        this._renderer.setElementClass(this._element.nativeElement, className, bool);\n    };\n    return MdLineSetter;\n}());\nvar MdLineModule = (function () {\n    function MdLineModule() {\n    }\n    MdLineModule = __decorate$1([\n        _angular_core.NgModule({\n            exports: [MdLine],\n            declarations: [MdLine],\n        }), \n        __metadata$1('design:paramtypes', [])\n    ], MdLineModule);\n    return MdLineModule;\n}());\n\nvar __decorate$2 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$2 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/**\n * Directive to listen to changes of direction of part of the DOM.\n *\n * Applications should use this directive instead of the native attribute so that Material\n * components can listen on changes of direction.\n */\nvar Dir = (function () {\n    function Dir() {\n        this._dir = 'ltr';\n        this.dirChange = new _angular_core.EventEmitter();\n    }\n    Object.defineProperty(Dir.prototype, \"dir\", {\n        get: function () {\n            return this._dir;\n        },\n        set: function (v) {\n            var old = this._dir;\n            this._dir = v;\n            if (old != this._dir) {\n                this.dirChange.emit();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Dir.prototype, \"value\", {\n        get: function () { return this.dir; },\n        set: function (v) { this.dir = v; },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate$2([\n        _angular_core.Input('dir'), \n        __metadata$2('design:type', String)\n    ], Dir.prototype, \"_dir\", void 0);\n    __decorate$2([\n        _angular_core.Output(), \n        __metadata$2('design:type', Object)\n    ], Dir.prototype, \"dirChange\", void 0);\n    __decorate$2([\n        _angular_core.HostBinding('attr.dir'), \n        __metadata$2('design:type', String)\n    ], Dir.prototype, \"dir\", null);\n    Dir = __decorate$2([\n        _angular_core.Directive({\n            selector: '[dir]',\n            // TODO(hansl): maybe `$implicit` isn't the best option here, but for now that's the best we got.\n            exportAs: '$implicit'\n        }), \n        __metadata$2('design:paramtypes', [])\n    ], Dir);\n    return Dir;\n}());\nvar RtlModule = (function () {\n    function RtlModule() {\n    }\n    RtlModule.forRoot = function () {\n        return {\n            ngModule: RtlModule,\n            providers: []\n        };\n    };\n    RtlModule = __decorate$2([\n        _angular_core.NgModule({\n            exports: [Dir],\n            declarations: [Dir]\n        }), \n        __metadata$2('design:paramtypes', [])\n    ], RtlModule);\n    return RtlModule;\n}());\n\n/** TODO: internal */\nvar ForegroundRippleState;\n(function (ForegroundRippleState) {\n    ForegroundRippleState[ForegroundRippleState[\"NEW\"] = 0] = \"NEW\";\n    ForegroundRippleState[ForegroundRippleState[\"EXPANDING\"] = 1] = \"EXPANDING\";\n    ForegroundRippleState[ForegroundRippleState[\"FADING_OUT\"] = 2] = \"FADING_OUT\";\n})(ForegroundRippleState || (ForegroundRippleState = {}));\n/**\n * Wrapper for a foreground ripple DOM element and its animation state.\n * TODO: internal\n */\nvar ForegroundRipple = (function () {\n    function ForegroundRipple(rippleElement) {\n        this.rippleElement = rippleElement;\n        this.state = ForegroundRippleState.NEW;\n    }\n    return ForegroundRipple;\n}());\nvar RIPPLE_SPEED_PX_PER_SECOND = 1000;\nvar MIN_RIPPLE_FILL_TIME_SECONDS = 0.1;\nvar MAX_RIPPLE_FILL_TIME_SECONDS = 0.3;\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nvar distanceToFurthestCorner = function (x, y, rect) {\n    var distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    var distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n};\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * TODO: internal\n */\nvar RippleRenderer = (function () {\n    function RippleRenderer(_elementRef, _eventHandlers) {\n        this._eventHandlers = _eventHandlers;\n        this._rippleElement = _elementRef.nativeElement;\n        // It might be nice to delay creating the background until it's needed, but doing this in\n        // fadeInRippleBackground causes the first click event to not be handled reliably.\n        this._backgroundDiv = document.createElement('div');\n        this._backgroundDiv.classList.add('md-ripple-background');\n        this._rippleElement.appendChild(this._backgroundDiv);\n    }\n    /**\n     * Installs event handlers on the given trigger element, and removes event handlers from the\n     * previous trigger if needed.\n     */\n    RippleRenderer.prototype.setTriggerElement = function (newTrigger) {\n        var _this = this;\n        if (this._triggerElement !== newTrigger) {\n            if (this._triggerElement) {\n                this._eventHandlers.forEach(function (eventHandler, eventName) {\n                    _this._triggerElement.removeEventListener(eventName, eventHandler);\n                });\n            }\n            this._triggerElement = newTrigger;\n            if (this._triggerElement) {\n                this._eventHandlers.forEach(function (eventHandler, eventName) {\n                    _this._triggerElement.addEventListener(eventName, eventHandler);\n                });\n            }\n        }\n    };\n    /**\n     * Installs event handlers on the host element of the md-ripple directive.\n     */\n    RippleRenderer.prototype.setTriggerElementToHost = function () {\n        this.setTriggerElement(this._rippleElement);\n    };\n    /**\n     * Removes event handlers from the current trigger element if needed.\n     */\n    RippleRenderer.prototype.clearTriggerElement = function () {\n        this.setTriggerElement(null);\n    };\n    /**\n     * Creates a foreground ripple and sets its animation to expand and fade in from the position\n     * given by rippleOriginLeft and rippleOriginTop (or from the center of the <md-ripple>\n     * bounding rect if centered is true).\n     */\n    RippleRenderer.prototype.createForegroundRipple = function (rippleOriginLeft, rippleOriginTop, color, centered, radius, speedFactor, transitionEndCallback) {\n        var parentRect = this._rippleElement.getBoundingClientRect();\n        // Create a foreground ripple div with the size and position of the fully expanded ripple.\n        // When the div is created, it's given a transform style that causes the ripple to be displayed\n        // small and centered on the event location (or the center of the bounding rect if the centered\n        // argument is true). Removing that transform causes the ripple to animate to its natural size.\n        var startX = centered ? (parentRect.left + parentRect.width / 2) : rippleOriginLeft;\n        var startY = centered ? (parentRect.top + parentRect.height / 2) : rippleOriginTop;\n        var offsetX = startX - parentRect.left;\n        var offsetY = startY - parentRect.top;\n        var maxRadius = radius > 0 ? radius : distanceToFurthestCorner(startX, startY, parentRect);\n        var rippleDiv = document.createElement('div');\n        this._rippleElement.appendChild(rippleDiv);\n        rippleDiv.classList.add('md-ripple-foreground');\n        rippleDiv.style.left = (offsetX - maxRadius) + \"px\";\n        rippleDiv.style.top = (offsetY - maxRadius) + \"px\";\n        rippleDiv.style.width = 2 * maxRadius + \"px\";\n        rippleDiv.style.height = rippleDiv.style.width;\n        // If color input is not set, this will default to the background color defined in CSS.\n        rippleDiv.style.backgroundColor = color;\n        // Start the ripple tiny.\n        rippleDiv.style.transform = \"scale(0.001)\";\n        var fadeInSeconds = (1 / (speedFactor || 1)) * Math.max(MIN_RIPPLE_FILL_TIME_SECONDS, Math.min(MAX_RIPPLE_FILL_TIME_SECONDS, maxRadius / RIPPLE_SPEED_PX_PER_SECOND));\n        rippleDiv.style.transitionDuration = fadeInSeconds + \"s\";\n        // https://timtaubert.de/blog/2012/09/css-transitions-for-dynamically-created-dom-elements/\n        window.getComputedStyle(rippleDiv).opacity;\n        rippleDiv.classList.add('md-ripple-fade-in');\n        // Clearing the transform property causes the ripple to animate to its full size.\n        rippleDiv.style.transform = '';\n        var ripple = new ForegroundRipple(rippleDiv);\n        ripple.state = ForegroundRippleState.EXPANDING;\n        rippleDiv.addEventListener('transitionend', function (event) { return transitionEndCallback(ripple, event); });\n    };\n    /**\n     * Fades out a foreground ripple after it has fully expanded and faded in.\n     */\n    RippleRenderer.prototype.fadeOutForegroundRipple = function (ripple) {\n        ripple.classList.remove('md-ripple-fade-in');\n        ripple.classList.add('md-ripple-fade-out');\n    };\n    /**\n     * Removes a foreground ripple from the DOM after it has faded out.\n     */\n    RippleRenderer.prototype.removeRippleFromDom = function (ripple) {\n        ripple.parentElement.removeChild(ripple);\n    };\n    /**\n     * Fades in the ripple background.\n     */\n    RippleRenderer.prototype.fadeInRippleBackground = function (color) {\n        this._backgroundDiv.classList.add('md-ripple-active');\n        // If color is not set, this will default to the background color defined in CSS.\n        this._backgroundDiv.style.backgroundColor = color;\n    };\n    /**\n     * Fades out the ripple background.\n     */\n    RippleRenderer.prototype.fadeOutRippleBackground = function () {\n        if (this._backgroundDiv) {\n            this._backgroundDiv.classList.remove('md-ripple-active');\n        }\n    };\n    return RippleRenderer;\n}());\n\nvar __decorate$3 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$3 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar MdRipple = (function () {\n    function MdRipple(_elementRef) {\n        var _this = this;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.maxRadius = 0;\n        /**\n         * If set, the normal duration of ripple animations is divided by this value. For example,\n         * setting it to 0.5 will cause the animations to take twice as long.\n         */\n        this.speedFactor = 1;\n        // These event handlers are attached to the element that triggers the ripple animations.\n        var eventHandlers = new Map();\n        eventHandlers.set('mousedown', function (event) { return _this._mouseDown(event); });\n        eventHandlers.set('click', function (event) { return _this._click(event); });\n        eventHandlers.set('mouseleave', function (event) { return _this._mouseLeave(event); });\n        this._rippleRenderer = new RippleRenderer(_elementRef, eventHandlers);\n    }\n    /** TODO: internal */\n    MdRipple.prototype.ngOnInit = function () {\n        // If no trigger element was explicity set, use the host element\n        if (!this.trigger) {\n            this._rippleRenderer.setTriggerElementToHost();\n        }\n    };\n    /** TODO: internal */\n    MdRipple.prototype.ngOnDestroy = function () {\n        // Remove event listeners on the trigger element.\n        this._rippleRenderer.clearTriggerElement();\n    };\n    /** TODO: internal */\n    MdRipple.prototype.ngOnChanges = function (changes) {\n        // If the trigger element changed (or is being initially set), add event listeners to it.\n        var changedInputs = Object.keys(changes);\n        if (changedInputs.indexOf('trigger') !== -1) {\n            this._rippleRenderer.setTriggerElement(this.trigger);\n        }\n    };\n    /**\n     * Responds to the start of a ripple animation trigger by fading the background in.\n     */\n    MdRipple.prototype.start = function () {\n        this._rippleRenderer.fadeInRippleBackground(this.backgroundColor);\n    };\n    /**\n     * Responds to the end of a ripple animation trigger by fading the background out, and creating a\n     * foreground ripple that expands from the event location (or from the center of the element if\n     * the \"centered\" property is set or forceCenter is true).\n     */\n    MdRipple.prototype.end = function (left, top, forceCenter) {\n        var _this = this;\n        if (forceCenter === void 0) { forceCenter = true; }\n        this._rippleRenderer.createForegroundRipple(left, top, this.color, this.centered || forceCenter, this.maxRadius, this.speedFactor, function (ripple, e) { return _this._rippleTransitionEnded(ripple, e); });\n        this._rippleRenderer.fadeOutRippleBackground();\n    };\n    MdRipple.prototype._rippleTransitionEnded = function (ripple, event) {\n        if (event.propertyName === 'opacity') {\n            // If the ripple finished expanding, start fading it out. If it finished fading out,\n            // remove it from the DOM.\n            switch (ripple.state) {\n                case ForegroundRippleState.EXPANDING:\n                    this._rippleRenderer.fadeOutForegroundRipple(ripple.rippleElement);\n                    ripple.state = ForegroundRippleState.FADING_OUT;\n                    break;\n                case ForegroundRippleState.FADING_OUT:\n                    this._rippleRenderer.removeRippleFromDom(ripple.rippleElement);\n                    break;\n            }\n        }\n    };\n    /**\n     * Called when the trigger element receives a mousedown event. Starts the ripple animation by\n     * fading in the background.\n     */\n    MdRipple.prototype._mouseDown = function (event) {\n        if (!this.disabled && event.button === 0) {\n            this.start();\n        }\n    };\n    /**\n     * Called when the trigger element receives a click event. Creates a foreground ripple and\n     * runs its animation.\n     */\n    MdRipple.prototype._click = function (event) {\n        if (!this.disabled && event.button === 0) {\n            // If screen and page positions are all 0, this was probably triggered by a keypress.\n            // In that case, use the center of the bounding rect as the ripple origin.\n            // FIXME: This fails on IE11, which still sets pageX/Y and screenX/Y on keyboard clicks.\n            var isKeyEvent = (event.screenX === 0 && event.screenY === 0 && event.pageX === 0 && event.pageY === 0);\n            this.end(event.pageX, event.pageY, isKeyEvent);\n        }\n    };\n    /**\n     * Called when the trigger element receives a mouseleave event. Fades out the background.\n     */\n    MdRipple.prototype._mouseLeave = function (event) {\n        // We can always fade out the background here; It's a no-op if it was already inactive.\n        this._rippleRenderer.fadeOutRippleBackground();\n    };\n    __decorate$3([\n        _angular_core.Input('md-ripple-trigger'), \n        __metadata$3('design:type', Object)\n    ], MdRipple.prototype, \"trigger\", void 0);\n    __decorate$3([\n        _angular_core.Input('md-ripple-centered'), \n        __metadata$3('design:type', Boolean)\n    ], MdRipple.prototype, \"centered\", void 0);\n    __decorate$3([\n        _angular_core.Input('md-ripple-disabled'), \n        __metadata$3('design:type', Boolean)\n    ], MdRipple.prototype, \"disabled\", void 0);\n    __decorate$3([\n        _angular_core.Input('md-ripple-max-radius'), \n        __metadata$3('design:type', Number)\n    ], MdRipple.prototype, \"maxRadius\", void 0);\n    __decorate$3([\n        _angular_core.Input('md-ripple-speed-factor'), \n        __metadata$3('design:type', Number)\n    ], MdRipple.prototype, \"speedFactor\", void 0);\n    __decorate$3([\n        _angular_core.Input('md-ripple-color'), \n        __metadata$3('design:type', String)\n    ], MdRipple.prototype, \"color\", void 0);\n    __decorate$3([\n        _angular_core.Input('md-ripple-background-color'), \n        __metadata$3('design:type', String)\n    ], MdRipple.prototype, \"backgroundColor\", void 0);\n    __decorate$3([\n        _angular_core.HostBinding('class.md-ripple-focused'),\n        _angular_core.Input('md-ripple-focused'), \n        __metadata$3('design:type', Boolean)\n    ], MdRipple.prototype, \"focused\", void 0);\n    __decorate$3([\n        _angular_core.HostBinding('class.md-ripple-unbounded'),\n        _angular_core.Input('md-ripple-unbounded'), \n        __metadata$3('design:type', Boolean)\n    ], MdRipple.prototype, \"unbounded\", void 0);\n    MdRipple = __decorate$3([\n        _angular_core.Directive({\n            selector: '[md-ripple]',\n        }), \n        __metadata$3('design:paramtypes', [_angular_core.ElementRef])\n    ], MdRipple);\n    return MdRipple;\n}());\nvar MdRippleModule = (function () {\n    function MdRippleModule() {\n    }\n    MdRippleModule.forRoot = function () {\n        return {\n            ngModule: MdRippleModule,\n            providers: []\n        };\n    };\n    MdRippleModule = __decorate$3([\n        _angular_core.NgModule({\n            exports: [MdRipple],\n            declarations: [MdRipple],\n        }), \n        __metadata$3('design:paramtypes', [])\n    ], MdRippleModule);\n    return MdRippleModule;\n}());\n\n// TODO(kara): Revisit why error messages are not being properly set.\nvar __extends$3 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * Wrapper around Error that sets the error message.\n */\nvar MdError = (function (_super) {\n    __extends$3(MdError, _super);\n    function MdError(value) {\n        _super.call(this);\n        this.message = value;\n    }\n    return MdError;\n}(Error));\n\nvar __extends$2 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/** Exception thrown when attempting to attach a null portal to a host. */\nvar MdNullPortalError = (function (_super) {\n    __extends$2(MdNullPortalError, _super);\n    function MdNullPortalError() {\n        _super.call(this, 'Must provide a portal to attach');\n    }\n    return MdNullPortalError;\n}(MdError));\n/** Exception thrown when attempting to attach a portal to a host that is already attached. */\nvar MdPortalAlreadyAttachedError = (function (_super) {\n    __extends$2(MdPortalAlreadyAttachedError, _super);\n    function MdPortalAlreadyAttachedError() {\n        _super.call(this, 'Host already has a portal attached');\n    }\n    return MdPortalAlreadyAttachedError;\n}(MdError));\n/** Exception thrown when attempting to attach a portal to an already-disposed host. */\nvar MdPortalHostAlreadyDisposedError = (function (_super) {\n    __extends$2(MdPortalHostAlreadyDisposedError, _super);\n    function MdPortalHostAlreadyDisposedError() {\n        _super.call(this, 'This PortalHost has already been disposed');\n    }\n    return MdPortalHostAlreadyDisposedError;\n}(MdError));\n/** Exception thrown when attempting to attach an unknown portal type. */\nvar MdUnknownPortalTypeError = (function (_super) {\n    __extends$2(MdUnknownPortalTypeError, _super);\n    function MdUnknownPortalTypeError() {\n        _super.call(this, 'Attempting to attach an unknown Portal type. ' +\n            'BasePortalHost accepts either a ComponentPortal or a TemplatePortal.');\n    }\n    return MdUnknownPortalTypeError;\n}(MdError));\n/** Exception thrown when attempting to attach a portal to a null host. */\nvar MdNullPortalHostError = (function (_super) {\n    __extends$2(MdNullPortalHostError, _super);\n    function MdNullPortalHostError() {\n        _super.call(this, 'Attempting to attach a portal to a null PortalHost');\n    }\n    return MdNullPortalHostError;\n}(MdError));\n/** Exception thrown when attempting to detach a portal that is not attached. */\nvar MdNoPortalAttachedError = (function (_super) {\n    __extends$2(MdNoPortalAttachedError, _super);\n    function MdNoPortalAttachedError() {\n        _super.call(this, 'Attempting to detach a portal that is not attached to a host');\n    }\n    return MdNoPortalAttachedError;\n}(MdError));\n\nvar __extends$1 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalHost`.\n */\nvar Portal = (function () {\n    function Portal() {\n    }\n    /** Attach this portal to a host. */\n    Portal.prototype.attach = function (host) {\n        if (host == null) {\n            throw new MdNullPortalHostError();\n        }\n        if (host.hasAttached()) {\n            throw new MdPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    };\n    /** Detach this portal from its host */\n    Portal.prototype.detach = function () {\n        var host = this._attachedHost;\n        if (host == null) {\n            throw new MdNoPortalAttachedError();\n        }\n        this._attachedHost = null;\n        return host.detach();\n    };\n    Object.defineProperty(Portal.prototype, \"isAttached\", {\n        /** Whether this portal is attached to a host. */\n        get: function () {\n            return this._attachedHost != null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the PortalHost reference without performing `attach()`. This is used directly by\n     * the PortalHost when it is performing an `attach()` or `detatch()`.\n     */\n    Portal.prototype.setAttachedHost = function (host) {\n        this._attachedHost = host;\n    };\n    return Portal;\n}());\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nvar ComponentPortal = (function (_super) {\n    __extends$1(ComponentPortal, _super);\n    function ComponentPortal(component, viewContainerRef, injector) {\n        if (viewContainerRef === void 0) { viewContainerRef = null; }\n        if (injector === void 0) { injector = null; }\n        _super.call(this);\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n    }\n    return ComponentPortal;\n}(Portal));\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nvar TemplatePortal = (function (_super) {\n    __extends$1(TemplatePortal, _super);\n    function TemplatePortal(template, viewContainerRef) {\n        _super.call(this);\n        /**\n         * Additional locals for the instantiated embedded view.\n         * These locals can be seen as \"exports\" for the template, such as how ngFor has\n         * index / event / odd.\n         * See https://angular.io/docs/ts/latest/api/core/EmbeddedViewRef-class.html\n         */\n        this.locals = new Map();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n    }\n    Object.defineProperty(TemplatePortal.prototype, \"origin\", {\n        get: function () {\n            return this.templateRef.elementRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TemplatePortal.prototype.attach = function (host, locals) {\n        this.locals = locals == null ? new Map() : locals;\n        return _super.prototype.attach.call(this, host);\n    };\n    TemplatePortal.prototype.detach = function () {\n        this.locals = new Map();\n        return _super.prototype.detach.call(this);\n    };\n    return TemplatePortal;\n}(Portal));\n/**\n * Partial implementation of PortalHost that only deals with attaching either a\n * ComponentPortal or a TemplatePortal.\n */\nvar BasePortalHost = (function () {\n    function BasePortalHost() {\n        /** Whether this host has already been permanently disposed. */\n        this._isDisposed = false;\n    }\n    /** Whether this host has an attached portal. */\n    BasePortalHost.prototype.hasAttached = function () {\n        return this._attachedPortal != null;\n    };\n    BasePortalHost.prototype.attach = function (portal) {\n        if (portal == null) {\n            throw new MdNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throw new MdPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throw new MdPortalHostAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n        }\n        throw new MdUnknownPortalTypeError();\n    };\n    BasePortalHost.prototype.detach = function () {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n        }\n        this._attachedPortal = null;\n        if (this._disposeFn != null) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    };\n    BasePortalHost.prototype.dispose = function () {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._isDisposed = true;\n    };\n    BasePortalHost.prototype.setDisposeFn = function (fn) {\n        this._disposeFn = fn;\n    };\n    return BasePortalHost;\n}());\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate$4 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$4 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n *\n * Usage:\n * <template portal #greeting>\n *   <p> Hello {{name}} </p>\n * </template>\n */\nvar TemplatePortalDirective = (function (_super) {\n    __extends(TemplatePortalDirective, _super);\n    function TemplatePortalDirective(templateRef, viewContainerRef) {\n        _super.call(this, templateRef, viewContainerRef);\n    }\n    TemplatePortalDirective = __decorate$4([\n        _angular_core.Directive({\n            selector: '[portal]',\n            exportAs: 'portal',\n        }), \n        __metadata$4('design:paramtypes', [_angular_core.TemplateRef, _angular_core.ViewContainerRef])\n    ], TemplatePortalDirective);\n    return TemplatePortalDirective;\n}(TemplatePortal));\n/**\n * Directive version of a PortalHost. Because the directive *is* a PortalHost, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * <template [portalHost]=\"greeting\"></template>\n */\nvar PortalHostDirective = (function (_super) {\n    __extends(PortalHostDirective, _super);\n    function PortalHostDirective(_componentFactoryResolver, _viewContainerRef) {\n        _super.call(this);\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n    }\n    Object.defineProperty(PortalHostDirective.prototype, \"portal\", {\n        get: function () {\n            return this._portal;\n        },\n        set: function (p) {\n            this._replaceAttachedPortal(p);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PortalHostDirective.prototype.ngOnDestroy = function () {\n        this.dispose();\n    };\n    /** Attach the given ComponentPortal to this PortalHost using the ComponentFactoryResolver. */\n    PortalHostDirective.prototype.attachComponentPortal = function (portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalHost.\n        var viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        var componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n        var ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.parentInjector);\n        this.setDisposeFn(function () { return ref.destroy(); });\n        return ref;\n    };\n    /** Attach the given TemplatePortal to this PortlHost as an embedded View. */\n    PortalHostDirective.prototype.attachTemplatePortal = function (portal) {\n        var _this = this;\n        portal.setAttachedHost(this);\n        this._viewContainerRef.createEmbeddedView(portal.templateRef);\n        this.setDisposeFn(function () { return _this._viewContainerRef.clear(); });\n        // TODO(jelbourn): return locals from view\n        return new Map();\n    };\n    /** Detatches the currently attached Portal (if there is one) and attaches the given Portal. */\n    PortalHostDirective.prototype._replaceAttachedPortal = function (p) {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        if (p) {\n            this.attach(p);\n            this._portal = p;\n        }\n    };\n    PortalHostDirective = __decorate$4([\n        _angular_core.Directive({\n            selector: '[portalHost]',\n            inputs: ['portal: portalHost']\n        }), \n        __metadata$4('design:paramtypes', [_angular_core.ComponentFactoryResolver, _angular_core.ViewContainerRef])\n    ], PortalHostDirective);\n    return PortalHostDirective;\n}(BasePortalHost));\nvar PortalModule = (function () {\n    function PortalModule() {\n    }\n    PortalModule.forRoot = function () {\n        return {\n            ngModule: PortalModule,\n            providers: []\n        };\n    };\n    PortalModule = __decorate$4([\n        _angular_core.NgModule({\n            exports: [TemplatePortalDirective, PortalHostDirective],\n            declarations: [TemplatePortalDirective, PortalHostDirective],\n        }), \n        __metadata$4('design:paramtypes', [])\n    ], PortalModule);\n    return PortalModule;\n}());\n\n/**\n * OverlayState is a bag of values for either the initial configuration or current state of an\n * overlay.\n */\nvar OverlayState = (function () {\n    function OverlayState() {\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop **/\n        this.backdropClass = 'md-overlay-dark-backdrop';\n        /** The direction of the text in the overlay panel. */\n        this.direction = 'ltr';\n    }\n    return OverlayState;\n}());\n\nvar __extends$4 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nvar DomPortalHost = (function (_super) {\n    __extends$4(DomPortalHost, _super);\n    function DomPortalHost(_hostDomElement, _componentFactoryResolver, _appRef, _defaultInjector) {\n        _super.call(this);\n        this._hostDomElement = _hostDomElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n    }\n    /** Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver. */\n    DomPortalHost.prototype.attachComponentPortal = function (portal) {\n        var _this = this;\n        var componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n        var componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the ChangeDetector for that component to the application (which\n        // happens automatically when using a ViewContainer).\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.parentInjector);\n            this.setDisposeFn(function () { return componentRef.destroy(); });\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            // When creating a component outside of a ViewContainer, we need to manually register\n            // its ChangeDetector with the application. This API is unfortunately not yet published\n            // in Angular core. The change detector must also be deregistered when the component\n            // is destroyed to prevent memory leaks.\n            //\n            // See https://github.com/angular/angular/pull/12674\n            var changeDetectorRef_1 = componentRef.changeDetectorRef;\n            this._appRef.registerChangeDetector(changeDetectorRef_1);\n            this.setDisposeFn(function () {\n                _this._appRef.unregisterChangeDetector(changeDetectorRef_1);\n                // Normally the ViewContainer will remove the component's nodes from the DOM.\n                // Without a ViewContainer, we need to manually remove the nodes.\n                var componentRootNode = _this._getComponentRootNode(componentRef);\n                if (componentRootNode.parentNode) {\n                    componentRootNode.parentNode.removeChild(componentRootNode);\n                }\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    };\n    DomPortalHost.prototype.attachTemplatePortal = function (portal) {\n        var _this = this;\n        var viewContainer = portal.viewContainerRef;\n        var viewRef = viewContainer.createEmbeddedView(portal.templateRef);\n        viewRef.rootNodes.forEach(function (rootNode) { return _this._hostDomElement.appendChild(rootNode); });\n        this.setDisposeFn((function () {\n            var index = viewContainer.indexOf(viewRef);\n            if (index != -1) {\n                viewContainer.remove(index);\n            }\n        }));\n        // TODO(jelbourn): Return locals from view.\n        return new Map();\n    };\n    DomPortalHost.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._hostDomElement.parentNode != null) {\n            this._hostDomElement.parentNode.removeChild(this._hostDomElement);\n        }\n    };\n    /** Gets the root HTMLElement for an instantiated component. */\n    DomPortalHost.prototype._getComponentRootNode = function (componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    };\n    return DomPortalHost;\n}(BasePortalHost));\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nvar OverlayRef = (function () {\n    function OverlayRef(_portalHost, _pane, _state) {\n        this._portalHost = _portalHost;\n        this._pane = _pane;\n        this._state = _state;\n        this._backdropElement = null;\n        this._backdropClick = new rxjs_Subject.Subject();\n    }\n    OverlayRef.prototype.attach = function (portal) {\n        if (this._state.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        var attachResult = this._portalHost.attach(portal);\n        this.updateSize();\n        this.updateDirection();\n        this.updatePosition();\n        return attachResult;\n    };\n    OverlayRef.prototype.detach = function () {\n        this._detatchBackdrop();\n        return this._portalHost.detach();\n    };\n    OverlayRef.prototype.dispose = function () {\n        this._detatchBackdrop();\n        this._portalHost.dispose();\n    };\n    OverlayRef.prototype.hasAttached = function () {\n        return this._portalHost.hasAttached();\n    };\n    OverlayRef.prototype.backdropClick = function () {\n        return this._backdropClick.asObservable();\n    };\n    /** Gets the current state config of the overlay. */\n    OverlayRef.prototype.getState = function () {\n        return this._state;\n    };\n    /** Updates the position of the overlay based on the position strategy. */\n    OverlayRef.prototype.updatePosition = function () {\n        if (this._state.positionStrategy) {\n            this._state.positionStrategy.apply(this._pane);\n        }\n    };\n    /** Updates the text direction of the overlay panel. **/\n    OverlayRef.prototype.updateDirection = function () {\n        this._pane.setAttribute('dir', this._state.direction);\n    };\n    /** Updates the size of the overlay based on the overlay config. */\n    OverlayRef.prototype.updateSize = function () {\n        if (this._state.width || this._state.width === 0) {\n            this._pane.style.width = formatCssUnit(this._state.width);\n        }\n        if (this._state.height || this._state.height === 0) {\n            this._pane.style.height = formatCssUnit(this._state.height);\n        }\n    };\n    /** Attaches a backdrop for this overlay. */\n    OverlayRef.prototype._attachBackdrop = function () {\n        var _this = this;\n        this._backdropElement = document.createElement('div');\n        this._backdropElement.classList.add('md-overlay-backdrop');\n        this._backdropElement.classList.add(this._state.backdropClass);\n        this._pane.parentElement.appendChild(this._backdropElement);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', function () {\n            _this._backdropClick.next(null);\n        });\n        // Add class to fade-in the backdrop after one frame.\n        requestAnimationFrame(function () {\n            _this._backdropElement.classList.add('md-overlay-backdrop-showing');\n        });\n    };\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    OverlayRef.prototype._detatchBackdrop = function () {\n        var _this = this;\n        var backdropToDetach = this._backdropElement;\n        if (backdropToDetach) {\n            backdropToDetach.classList.remove('md-overlay-backdrop-showing');\n            backdropToDetach.classList.remove(this._state.backdropClass);\n            backdropToDetach.addEventListener('transitionend', function () {\n                backdropToDetach.parentNode.removeChild(backdropToDetach);\n                // It is possible that a new portal has been attached to this overlay since we started\n                // removing the backdrop. If that is the case, only clear the backdrop reference if it\n                // is still the same instance that we started to remove.\n                if (_this._backdropElement == backdropToDetach) {\n                    _this._backdropElement = null;\n                }\n            });\n        }\n    };\n    return OverlayRef;\n}());\nfunction formatCssUnit(value) {\n    return typeof value === 'string' ? value : value + \"px\";\n}\n\nvar __decorate$8 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$8 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * TODO: internal\n */\nvar ViewportRuler = (function () {\n    function ViewportRuler() {\n    }\n    // TODO(jelbourn): cache the document's bounding rect and only update it when the window\n    // is resized (debounced).\n    /** Gets a ClientRect for the viewport's bounds. */\n    ViewportRuler.prototype.getViewportRect = function () {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        var documentRect = document.documentElement.getBoundingClientRect();\n        var scrollPosition = this.getViewportScrollPosition(documentRect);\n        var height = window.innerHeight;\n        var width = window.innerWidth;\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height: height,\n            width: width,\n        };\n    };\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @param documentRect\n     */\n    ViewportRuler.prototype.getViewportScrollPosition = function (documentRect) {\n        if (documentRect === void 0) { documentRect = document.documentElement.getBoundingClientRect(); }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        var top = documentRect.top < 0 && document.body.scrollTop == 0 ?\n            -documentRect.top :\n            document.body.scrollTop;\n        var left = documentRect.left < 0 && document.body.scrollLeft == 0 ?\n            -documentRect.left :\n            document.body.scrollLeft;\n        return { top: top, left: left };\n    };\n    ViewportRuler = __decorate$8([\n        _angular_core.Injectable(), \n        __metadata$8('design:paramtypes', [])\n    ], ViewportRuler);\n    return ViewportRuler;\n}());\n\n/**\n * Applies a CSS transform to an element, including browser-prefixed properties.\n * @param element\n * @param transformValue\n */\nfunction applyCssTransform(element, transformValue) {\n    // It's important to trim the result, because the browser will ignore the set operation\n    // if the string contains only whitespace.\n    var value = transformValue.trim();\n    element.style.transform = value;\n    element.style.webkitTransform = value;\n}\n\n/** The points of the origin element and the overlay element to connect. */\nvar ConnectionPositionPair = (function () {\n    function ConnectionPositionPair(origin, overlay) {\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n    return ConnectionPositionPair;\n}());\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nvar ConnectedPositionStrategy = (function () {\n    function ConnectedPositionStrategy(_connectedTo, _originPos, _overlayPos, _viewportRuler) {\n        this._connectedTo = _connectedTo;\n        this._originPos = _originPos;\n        this._overlayPos = _overlayPos;\n        this._viewportRuler = _viewportRuler;\n        this._dir = 'ltr';\n        /** The offset in pixels for the overlay connection point on the x-axis */\n        this._offsetX = 0;\n        /** The offset in pixels for the overlay connection point on the y-axis */\n        this._offsetY = 0;\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        this._origin = this._connectedTo.nativeElement;\n        this.withFallbackPosition(_originPos, _overlayPos);\n    }\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"_isRtl\", {\n        /** Whether the we're dealing with an RTL context */\n        get: function () {\n            return this._dir === 'rtl';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"positions\", {\n        get: function () {\n            return this._preferredPositions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * TODO: internal\n     */\n    ConnectedPositionStrategy.prototype.apply = function (element) {\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        var originRect = this._origin.getBoundingClientRect();\n        var overlayRect = element.getBoundingClientRect();\n        // We use the viewport rect to determine whether a position would go off-screen.\n        var viewportRect = this._viewportRuler.getViewportRect();\n        var firstOverlayPoint = null;\n        // We want to place the overlay in the first of the preferred positions such that the\n        // overlay fits on-screen.\n        for (var _i = 0, _a = this._preferredPositions; _i < _a.length; _i++) {\n            var pos = _a[_i];\n            // Get the (x, y) point of connection on the origin, and then use that to get the\n            // (top, left) coordinate for the overlay at `pos`.\n            var originPoint = this._getOriginConnectionPoint(originRect, pos);\n            var overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            firstOverlayPoint = firstOverlayPoint || overlayPoint;\n            // If the overlay in the calculated position fits on-screen, put it there and we're done.\n            if (this._willOverlayFitWithinViewport(overlayPoint, overlayRect, viewportRect)) {\n                this._setElementPosition(element, overlayPoint);\n                return Promise.resolve(null);\n            }\n        }\n        // TODO(jelbourn): fallback behavior for when none of the preferred positions fit on-screen.\n        // For now, just stick it in the first position and let it go off-screen.\n        this._setElementPosition(element, firstOverlayPoint);\n        return Promise.resolve(null);\n    };\n    ConnectedPositionStrategy.prototype.withFallbackPosition = function (originPos, overlayPos) {\n        this._preferredPositions.push(new ConnectionPositionPair(originPos, overlayPos));\n        return this;\n    };\n    /** Sets the layout direction so the overlay's position can be adjusted to match. */\n    ConnectedPositionStrategy.prototype.withDirection = function (dir) {\n        this._dir = dir;\n        return this;\n    };\n    /** Sets an offset for the overlay's connection point on the x-axis */\n    ConnectedPositionStrategy.prototype.withOffsetX = function (offset) {\n        this._offsetX = offset;\n        return this;\n    };\n    /** Sets an offset for the overlay's connection point on the y-axis */\n    ConnectedPositionStrategy.prototype.withOffsetY = function (offset) {\n        this._offsetY = offset;\n        return this;\n    };\n    /**\n     * Gets the horizontal (x) \"start\" dimension based on whether the overlay is in an RTL context.\n     * @param rect\n     */\n    ConnectedPositionStrategy.prototype._getStartX = function (rect) {\n        return this._isRtl ? rect.right : rect.left;\n    };\n    /**\n     * Gets the horizontal (x) \"end\" dimension based on whether the overlay is in an RTL context.\n     * @param rect\n     */\n    ConnectedPositionStrategy.prototype._getEndX = function (rect) {\n        return this._isRtl ? rect.left : rect.right;\n    };\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @param originRect\n     * @param pos\n     */\n    ConnectedPositionStrategy.prototype._getOriginConnectionPoint = function (originRect, pos) {\n        var originStartX = this._getStartX(originRect);\n        var originEndX = this._getEndX(originRect);\n        var x;\n        if (pos.originX == 'center') {\n            x = originStartX + (originRect.width / 2);\n        }\n        else {\n            x = pos.originX == 'start' ? originStartX : originEndX;\n        }\n        var y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @param originPoint\n     * @param overlayRect\n     * @param pos\n     */\n    ConnectedPositionStrategy.prototype._getOverlayPoint = function (originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the potential overlay position\n        // relative to the origin point.\n        var overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl ? 0 : -overlayRect.width;\n        }\n        var overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        return {\n            x: originPoint.x + overlayStartX + this._offsetX,\n            y: originPoint.y + overlayStartY + this._offsetY\n        };\n    };\n    /**\n     * Gets whether the overlay positioned at the given point will fit on-screen.\n     * @param overlayPoint The top-left coordinate of the overlay.\n     * @param overlayRect Bounding rect of the overlay, used to get its size.\n     * @param viewportRect The bounding viewport.\n     */\n    ConnectedPositionStrategy.prototype._willOverlayFitWithinViewport = function (overlayPoint, overlayRect, viewportRect) {\n        // TODO(jelbourn): probably also want some space between overlay edge and viewport edge.\n        return overlayPoint.x >= viewportRect.left &&\n            overlayPoint.x + overlayRect.width <= viewportRect.right &&\n            overlayPoint.y >= viewportRect.top &&\n            overlayPoint.y + overlayRect.height <= viewportRect.bottom;\n    };\n    /**\n     * Physically positions the overlay element to the given coordinate.\n     * @param element\n     * @param overlayPoint\n     */\n    ConnectedPositionStrategy.prototype._setElementPosition = function (element, overlayPoint) {\n        var x = overlayPoint.x;\n        var y = overlayPoint.y;\n        // TODO(jelbourn): we don't want to always overwrite the transform property here,\n        // because it will need to be used for animations.\n        applyCssTransform(element, \"translateX(\" + x + \"px) translateY(\" + y + \"px)\");\n    };\n    return ConnectedPositionStrategy;\n}());\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport.\n */\nvar GlobalPositionStrategy = (function () {\n    function GlobalPositionStrategy() {\n        this._cssPosition = 'absolute';\n        this._top = '';\n        this._bottom = '';\n        this._left = '';\n        this._right = '';\n        /** Array of individual applications of translateX(). Currently only for centering. */\n        this._translateX = [];\n        /** Array of individual applications of translateY(). Currently only for centering. */\n        this._translateY = [];\n    }\n    /** Sets the element to use CSS position: fixed */\n    GlobalPositionStrategy.prototype.fixed = function () {\n        this._cssPosition = 'fixed';\n        return this;\n    };\n    /** Sets the element to use CSS position: absolute. This is the default. */\n    GlobalPositionStrategy.prototype.absolute = function () {\n        this._cssPosition = 'absolute';\n        return this;\n    };\n    /** Sets the top position of the overlay. Clears any previously set vertical position. */\n    GlobalPositionStrategy.prototype.top = function (value) {\n        this._bottom = '';\n        this._translateY = [];\n        this._top = value;\n        return this;\n    };\n    /** Sets the left position of the overlay. Clears any previously set horizontal position. */\n    GlobalPositionStrategy.prototype.left = function (value) {\n        this._right = '';\n        this._translateX = [];\n        this._left = value;\n        return this;\n    };\n    /** Sets the bottom position of the overlay. Clears any previously set vertical position. */\n    GlobalPositionStrategy.prototype.bottom = function (value) {\n        this._top = '';\n        this._translateY = [];\n        this._bottom = value;\n        return this;\n    };\n    /** Sets the right position of the overlay. Clears any previously set horizontal position. */\n    GlobalPositionStrategy.prototype.right = function (value) {\n        this._left = '';\n        this._translateX = [];\n        this._right = value;\n        return this;\n    };\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     */\n    GlobalPositionStrategy.prototype.centerHorizontally = function (offset) {\n        if (offset === void 0) { offset = '0px'; }\n        this._left = '50%';\n        this._right = '';\n        this._translateX = ['-50%', offset];\n        return this;\n    };\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     */\n    GlobalPositionStrategy.prototype.centerVertically = function (offset) {\n        if (offset === void 0) { offset = '0px'; }\n        this._top = '50%';\n        this._bottom = '';\n        this._translateY = ['-50%', offset];\n        return this;\n    };\n    /**\n     * Apply the position to the element.\n     * TODO: internal\n     */\n    GlobalPositionStrategy.prototype.apply = function (element) {\n        element.style.position = this._cssPosition;\n        element.style.top = this._top;\n        element.style.left = this._left;\n        element.style.bottom = this._bottom;\n        element.style.right = this._right;\n        // TODO(jelbourn): we don't want to always overwrite the transform property here,\n        // because it will need to be used for animations.\n        var tranlateX = this._reduceTranslateValues('translateX', this._translateX);\n        var translateY = this._reduceTranslateValues('translateY', this._translateY);\n        applyCssTransform(element, tranlateX + \" \" + translateY);\n        return Promise.resolve(null);\n    };\n    /** Reduce a list of translate values to a string that can be used in the transform property */\n    GlobalPositionStrategy.prototype._reduceTranslateValues = function (translateFn, values) {\n        return values.map(function (t) { return (translateFn + \"(\" + t + \")\"); }).join(' ');\n    };\n    return GlobalPositionStrategy;\n}());\n\nvar __decorate$7 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$7 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/** Builder for overlay position strategy. */\nvar OverlayPositionBuilder = (function () {\n    function OverlayPositionBuilder(_viewportRuler) {\n        this._viewportRuler = _viewportRuler;\n    }\n    /** Creates a global position strategy. */\n    OverlayPositionBuilder.prototype.global = function () {\n        return new GlobalPositionStrategy();\n    };\n    /** Creates a relative position strategy. */\n    OverlayPositionBuilder.prototype.connectedTo = function (elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(elementRef, originPos, overlayPos, this._viewportRuler);\n    };\n    OverlayPositionBuilder = __decorate$7([\n        _angular_core.Injectable(), \n        __metadata$7('design:paramtypes', [ViewportRuler])\n    ], OverlayPositionBuilder);\n    return OverlayPositionBuilder;\n}());\n\n/**\n * The OverlayContainer is the container in which all overlays will load.\n * It should be provided in the root component to ensure it is properly shared.\n */\nvar OverlayContainer = (function () {\n    function OverlayContainer() {\n    }\n    /**\n     * This method returns the overlay container element.  It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns {HTMLElement} the container element\n     */\n    OverlayContainer.prototype.getContainerElement = function () {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    };\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'md-overlay-container' class on the document body.\n     */\n    OverlayContainer.prototype._createContainer = function () {\n        var container = document.createElement('div');\n        container.classList.add('md-overlay-container');\n        document.body.appendChild(container);\n        this._containerElement = container;\n    };\n    return OverlayContainer;\n}());\n\nvar __decorate$6 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$6 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/** Next overlay unique ID. */\nvar nextUniqueId = 0;\n/** The default state for newly created overlays. */\nvar defaultState = new OverlayState();\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\nvar Overlay = (function () {\n    function Overlay(_overlayContainer, _componentFactoryResolver, _positionBuilder, _appRef, _injector) {\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._appRef = _appRef;\n        this._injector = _injector;\n    }\n    /**\n     * Creates an overlay.\n     * @param state State to apply to the overlay.\n     * @returns A reference to the created overlay.\n     */\n    Overlay.prototype.create = function (state) {\n        if (state === void 0) { state = defaultState; }\n        return this._createOverlayRef(this._createPaneElement(), state);\n    };\n    /**\n     * Returns a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     */\n    Overlay.prototype.position = function () {\n        return this._positionBuilder;\n    };\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Promise resolving to the created element.\n     */\n    Overlay.prototype._createPaneElement = function () {\n        var pane = document.createElement('div');\n        pane.id = \"md-overlay-\" + nextUniqueId++;\n        pane.classList.add('md-overlay-pane');\n        this._overlayContainer.getContainerElement().appendChild(pane);\n        return pane;\n    };\n    /**\n     * Create a DomPortalHost into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal host.\n     * @returns A portal host for the given DOM element.\n     */\n    Overlay.prototype._createPortalHost = function (pane) {\n        return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef, this._injector);\n    };\n    /**\n     * Creates an OverlayRef for an overlay in the given DOM element.\n     * @param pane DOM element for the overlay\n     * @param state\n     * @returns {OverlayRef}\n     */\n    Overlay.prototype._createOverlayRef = function (pane, state) {\n        return new OverlayRef(this._createPortalHost(pane), pane, state);\n    };\n    Overlay = __decorate$6([\n        _angular_core.Injectable(), \n        __metadata$6('design:paramtypes', [OverlayContainer, _angular_core.ComponentFactoryResolver, OverlayPositionBuilder, _angular_core.ApplicationRef, _angular_core.Injector])\n    ], Overlay);\n    return Overlay;\n}());\n/** Providers for Overlay and its related injectables. */\nvar OVERLAY_PROVIDERS = [\n    ViewportRuler,\n    OverlayPositionBuilder,\n    Overlay,\n    OverlayContainer,\n];\n\nvar __decorate$5 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$5 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nvar defaultPositionList = [\n    new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n    new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n];\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nvar OverlayOrigin = (function () {\n    function OverlayOrigin(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    Object.defineProperty(OverlayOrigin.prototype, \"elementRef\", {\n        get: function () {\n            return this._elementRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OverlayOrigin = __decorate$5([\n        _angular_core.Directive({\n            selector: '[overlay-origin]',\n            exportAs: 'overlayOrigin',\n        }), \n        __metadata$5('design:paramtypes', [_angular_core.ElementRef])\n    ], OverlayOrigin);\n    return OverlayOrigin;\n}());\n/**\n * Directive to facilitate declarative creation of an Overlay using a ConnectedPositionStrategy.\n */\nvar ConnectedOverlayDirective = (function () {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    function ConnectedOverlayDirective(_overlay, templateRef, viewContainerRef, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._open = false;\n        this._hasBackdrop = false;\n        /** The offset in pixels for the overlay connection point on the x-axis */\n        this.offsetX = 0;\n        /** The offset in pixels for the overlay connection point on the y-axis */\n        this.offsetY = 0;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new _angular_core.EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n    }\n    Object.defineProperty(ConnectedOverlayDirective.prototype, \"hasBackdrop\", {\n        /** Whether or not the overlay should attach a backdrop. */\n        get: function () {\n            return this._hasBackdrop;\n        },\n        // TODO: move the boolean coercion logic to a shared function in core\n        set: function (value) {\n            this._hasBackdrop = value != null && \"\" + value !== 'false';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedOverlayDirective.prototype, \"open\", {\n        get: function () {\n            return this._open;\n        },\n        set: function (value) {\n            value ? this._attachOverlay() : this._detachOverlay();\n            this._open = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedOverlayDirective.prototype, \"overlayRef\", {\n        get: function () {\n            return this._overlayRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedOverlayDirective.prototype, \"dir\", {\n        get: function () {\n            return this._dir ? this._dir.value : 'ltr';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** TODO: internal */\n    ConnectedOverlayDirective.prototype.ngOnDestroy = function () {\n        this._destroyOverlay();\n    };\n    /** Creates an overlay */\n    ConnectedOverlayDirective.prototype._createOverlay = function () {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n    };\n    /** Builds the overlay config based on the directive's inputs */\n    ConnectedOverlayDirective.prototype._buildConfig = function () {\n        var overlayConfig = new OverlayState();\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        overlayConfig.hasBackdrop = this.hasBackdrop;\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        overlayConfig.positionStrategy = this._createPositionStrategy();\n        overlayConfig.direction = this.dir;\n        return overlayConfig;\n    };\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    ConnectedOverlayDirective.prototype._createPositionStrategy = function () {\n        var pos = this.positions[0];\n        var originPoint = { originX: pos.originX, originY: pos.originY };\n        var overlayPoint = { overlayX: pos.overlayX, overlayY: pos.overlayY };\n        return this._overlay.position()\n            .connectedTo(this.origin.elementRef, originPoint, overlayPoint)\n            .withDirection(this.dir)\n            .withOffsetX(this.offsetX)\n            .withOffsetY(this.offsetY);\n    };\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    ConnectedOverlayDirective.prototype._attachOverlay = function () {\n        var _this = this;\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(function () {\n                _this.backdropClick.emit();\n            });\n        }\n    };\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    ConnectedOverlayDirective.prototype._detachOverlay = function () {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        if (this._backdropSubscription) {\n            this._backdropSubscription.unsubscribe();\n            this._backdropSubscription = null;\n        }\n    };\n    /** Destroys the overlay created by this directive. */\n    ConnectedOverlayDirective.prototype._destroyOverlay = function () {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        if (this._backdropSubscription) {\n            this._backdropSubscription.unsubscribe();\n        }\n    };\n    __decorate$5([\n        _angular_core.Input(), \n        __metadata$5('design:type', OverlayOrigin)\n    ], ConnectedOverlayDirective.prototype, \"origin\", void 0);\n    __decorate$5([\n        _angular_core.Input(), \n        __metadata$5('design:type', Array)\n    ], ConnectedOverlayDirective.prototype, \"positions\", void 0);\n    __decorate$5([\n        _angular_core.Input(), \n        __metadata$5('design:type', Number)\n    ], ConnectedOverlayDirective.prototype, \"offsetX\", void 0);\n    __decorate$5([\n        _angular_core.Input(), \n        __metadata$5('design:type', Number)\n    ], ConnectedOverlayDirective.prototype, \"offsetY\", void 0);\n    __decorate$5([\n        _angular_core.Input(), \n        __metadata$5('design:type', Object)\n    ], ConnectedOverlayDirective.prototype, \"width\", void 0);\n    __decorate$5([\n        _angular_core.Input(), \n        __metadata$5('design:type', Object)\n    ], ConnectedOverlayDirective.prototype, \"height\", void 0);\n    __decorate$5([\n        _angular_core.Input(), \n        __metadata$5('design:type', String)\n    ], ConnectedOverlayDirective.prototype, \"backdropClass\", void 0);\n    __decorate$5([\n        _angular_core.Input(), \n        __metadata$5('design:type', Object)\n    ], ConnectedOverlayDirective.prototype, \"hasBackdrop\", null);\n    __decorate$5([\n        _angular_core.Input(), \n        __metadata$5('design:type', Object)\n    ], ConnectedOverlayDirective.prototype, \"open\", null);\n    __decorate$5([\n        _angular_core.Output(), \n        __metadata$5('design:type', Object)\n    ], ConnectedOverlayDirective.prototype, \"backdropClick\", void 0);\n    ConnectedOverlayDirective = __decorate$5([\n        _angular_core.Directive({\n            selector: '[connected-overlay]',\n            exportAs: 'connectedOverlay'\n        }),\n        __param(3, _angular_core.Optional()), \n        __metadata$5('design:paramtypes', [Overlay, _angular_core.TemplateRef, _angular_core.ViewContainerRef, Dir])\n    ], ConnectedOverlayDirective);\n    return ConnectedOverlayDirective;\n}());\nvar OverlayModule = (function () {\n    function OverlayModule() {\n    }\n    OverlayModule.forRoot = function () {\n        return {\n            ngModule: OverlayModule,\n            providers: OVERLAY_PROVIDERS,\n        };\n    };\n    OverlayModule = __decorate$5([\n        _angular_core.NgModule({\n            imports: [PortalModule],\n            exports: [ConnectedOverlayDirective, OverlayOrigin],\n            declarations: [ConnectedOverlayDirective, OverlayOrigin],\n        }), \n        __metadata$5('design:paramtypes', [])\n    ], OverlayModule);\n    return OverlayModule;\n}());\n\nvar __decorate$11 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$11 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n *\n * NOTE: Currently does not capture any special element behaviors, browser quirks, or edge cases.\n * This is a basic/naive starting point onto which further behavior will be added.\n *\n * This class uses instance methods instead of static functions so that alternate implementations\n * can be injected.\n *\n * TODO(jelbourn): explore using ally.js directly for its significantly more robust\n * checks (need to evaluate payload size, performance, and compatibility with tree-shaking).\n */\nvar InteractivityChecker = (function () {\n    function InteractivityChecker() {\n    }\n    /** Gets whether an element is disabled. */\n    InteractivityChecker.prototype.isDisabled = function (element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    };\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     */\n    InteractivityChecker.prototype.isVisible = function (element) {\n        // There are additional special cases that this does not capture, but this will work for\n        // the most common cases.\n        // Use logic from jQuery to check for `display: none`.\n        // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n        if (!(element.offsetWidth || element.offsetHeight || element.getClientRects().length)) {\n            return false;\n        }\n        // Check for css `visibility` property.\n        // TODO(jelbourn): do any browsers we support return an empty string instead of 'visible'?\n        return getComputedStyle(element).getPropertyValue('visibility') == 'visible';\n    };\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     */\n    InteractivityChecker.prototype.isTabbable = function (element) {\n        // Again, naive approach that does not capture many special cases and browser quirks.\n        return element.tabIndex >= 0;\n    };\n    /** Gets whether an element can be focused by the user. */\n    InteractivityChecker.prototype.isFocusable = function (element) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n    };\n    InteractivityChecker = __decorate$11([\n        _angular_core.Injectable(), \n        __metadata$11('design:paramtypes', [])\n    ], InteractivityChecker);\n    return InteractivityChecker;\n}());\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    var nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/** Gets whether an element is an <input type=\"hidden\">. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    var tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n\nvar __decorate$10 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$10 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/**\n * Directive for trapping focus within a region.\n *\n * NOTE: This directive currently uses a very simple (naive) approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like tabIndex > 0, flex `order`, and shadow roots can cause to two to misalign.\n * This will be replaced with a more intelligent solution before the library is considered stable.\n */\nvar FocusTrap = (function () {\n    function FocusTrap(_checker) {\n        this._checker = _checker;\n    }\n    /** Focuses the first tabbable element within the focus trap region. */\n    FocusTrap.prototype.focusFirstTabbableElement = function () {\n        var redirectToElement = this._getFirstTabbableElement(this.trappedContent.nativeElement);\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n    };\n    /** Focuses the last tabbable element within the focus trap region. */\n    FocusTrap.prototype.focusLastTabbableElement = function () {\n        var redirectToElement = this._getLastTabbableElement(this.trappedContent.nativeElement);\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n    };\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    FocusTrap.prototype._getFirstTabbableElement = function (root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order.\n        var childCount = root.children.length;\n        for (var i = 0; i < childCount; i++) {\n            var tabbableChild = this._getFirstTabbableElement(root.children[i]);\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    };\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    FocusTrap.prototype._getLastTabbableElement = function (root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        for (var i = root.children.length - 1; i >= 0; i--) {\n            var tabbableChild = this._getLastTabbableElement(root.children[i]);\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    };\n    __decorate$10([\n        _angular_core.ViewChild('trappedContent'), \n        __metadata$10('design:type', _angular_core.ElementRef)\n    ], FocusTrap.prototype, \"trappedContent\", void 0);\n    FocusTrap = __decorate$10([\n        _angular_core.Component({selector: 'focus-trap',\n            // TODO(jelbourn): move this to a separate file.\n            template: \"\\n  <div tabindex=\\\"0\\\" (focus)=\\\"focusLastTabbableElement()\\\"></div>\\n  <div #trappedContent><ng-content></ng-content></div>\\n  <div tabindex=\\\"0\\\" (focus)=\\\"focusFirstTabbableElement()\\\"></div>\",\n            encapsulation: _angular_core.ViewEncapsulation.None,\n        }), \n        __metadata$10('design:paramtypes', [InteractivityChecker])\n    ], FocusTrap);\n    return FocusTrap;\n}());\n\nvar __decorate$12 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$12 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param$1 = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar LIVE_ANNOUNCER_ELEMENT_TOKEN = new _angular_core.OpaqueToken('mdLiveAnnouncerElement');\nvar MdLiveAnnouncer = (function () {\n    function MdLiveAnnouncer(elementToken) {\n        // We inject the live element as `any` because the constructor signature cannot reference\n        // browser globals (HTMLElement) on non-browser environments, since having a class decorator\n        // causes TypeScript to preserve the constructor signature types.\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    /**\n     * @param message Message to be announced to the screenreader\n     * @param politeness The politeness of the announcer element.\n     */\n    MdLiveAnnouncer.prototype.announce = function (message, politeness) {\n        var _this = this;\n        if (politeness === void 0) { politeness = 'polite'; }\n        this._liveElement.textContent = '';\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        setTimeout(function () { return _this._liveElement.textContent = message; }, 100);\n    };\n    /** Removes the aria-live element from the DOM. */\n    MdLiveAnnouncer.prototype._removeLiveElement = function () {\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n        }\n    };\n    MdLiveAnnouncer.prototype._createLiveElement = function () {\n        var liveEl = document.createElement('div');\n        liveEl.classList.add('md-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        document.body.appendChild(liveEl);\n        return liveEl;\n    };\n    MdLiveAnnouncer = __decorate$12([\n        _angular_core.Injectable(),\n        __param$1(0, _angular_core.Optional()),\n        __param$1(0, _angular_core.Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)), \n        __metadata$12('design:paramtypes', [Object])\n    ], MdLiveAnnouncer);\n    return MdLiveAnnouncer;\n}());\n\nvar __decorate$9 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$9 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar A11Y_PROVIDERS = [MdLiveAnnouncer, InteractivityChecker];\nvar A11yModule = (function () {\n    function A11yModule() {\n    }\n    A11yModule.forRoot = function () {\n        return {\n            ngModule: A11yModule,\n            providers: A11Y_PROVIDERS,\n        };\n    };\n    A11yModule = __decorate$9([\n        _angular_core.NgModule({\n            declarations: [FocusTrap],\n            exports: [FocusTrap],\n        }), \n        __metadata$9('design:paramtypes', [])\n    ], A11yModule);\n    return A11yModule;\n}());\n\nvar __extends$5 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate$13 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$13 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/* Adjusts configuration of our gesture library, Hammer. */\nvar MdGestureConfig = (function (_super) {\n    __extends$5(MdGestureConfig, _super);\n    function MdGestureConfig() {\n        _super.apply(this, arguments);\n        /* List of new event names to add to the gesture support list */\n        this.events = [\n            'longpress',\n            'slide',\n            'slidestart',\n            'slideend',\n            'slideright',\n            'slideleft'\n        ];\n    }\n    /*\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * TODO: Confirm threshold numbers with Material Design UX Team\n     * */\n    MdGestureConfig.prototype.buildHammer = function (element) {\n        var mc = new Hammer(element);\n        // Default Hammer Recognizers.\n        var pan = new Hammer.Pan();\n        var swipe = new Hammer.Swipe();\n        var press = new Hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        var slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        var longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return mc;\n    };\n    /** Creates a new recognizer, without affecting the default recognizers of HammerJS */\n    MdGestureConfig.prototype._createRecognizer = function (base, options) {\n        var inheritances = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            inheritances[_i - 2] = arguments[_i];\n        }\n        var recognizer = new base.constructor(options);\n        inheritances.push(base);\n        inheritances.forEach(function (item) { return recognizer.recognizeWith(item); });\n        return recognizer;\n    };\n    MdGestureConfig = __decorate$13([\n        _angular_core.Injectable(), \n        __metadata$13('design:paramtypes', [])\n    ], MdGestureConfig);\n    return MdGestureConfig;\n}(_angular_platformBrowser.HammerGestureConfig));\n\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n\nvar __decorate$14 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$14 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nvar MdUniqueSelectionDispatcher = (function () {\n    function MdUniqueSelectionDispatcher() {\n        this._listeners = [];\n    }\n    /** Notify other items that selection for the given name has been set. */\n    MdUniqueSelectionDispatcher.prototype.notify = function (id, name) {\n        for (var _i = 0, _a = this._listeners; _i < _a.length; _i++) {\n            var listener = _a[_i];\n            listener(id, name);\n        }\n    };\n    /** Listen for future changes to item selection. */\n    MdUniqueSelectionDispatcher.prototype.listen = function (listener) {\n        this._listeners.push(listener);\n    };\n    MdUniqueSelectionDispatcher = __decorate$14([\n        _angular_core.Injectable(), \n        __metadata$14('design:paramtypes', [])\n    ], MdUniqueSelectionDispatcher);\n    return MdUniqueSelectionDispatcher;\n}());\n\n// Due to a bug in the ChromeDriver, Angular 2 keyboard events are not triggered by `sendKeys`\n// during E2E tests when using dot notation such as `(keydown.rightArrow)`. To get around this,\n// we are temporarily using a single (keydown) handler.\n// See: https://github.com/angular/angular/issues/9419\nvar UP_ARROW = 38;\nvar DOWN_ARROW = 40;\nvar RIGHT_ARROW = 39;\nvar LEFT_ARROW = 37;\nvar ENTER = 13;\nvar SPACE = 32;\nvar TAB = 9;\n\nvar __decorate$15 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$15 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/** Selector that matches all elements that may have style collisions with material1. */\nvar ELEMENTS_SELECTOR = \"\\n  md-card,\\n  md-card-actions,\\n  md-card-content,\\n  md-card-footer,\\n  md-card-header,\\n  md-card-subtitle,\\n  md-card-title,\\n  md-card-title-group,\\n  md-checkbox,\\n  md-dialog-container,\\n  md-divider,\\n  md-grid-list,\\n  md-grid-tile,\\n  md-grid-tile-footer,\\n  md-grid-tile-header,\\n  md-hint,\\n  md-icon,\\n  md-ink-bar,\\n  md-input,\\n  md-list,\\n  md-list-item,\\n  md-menu,\\n  md-nav-list,\\n  md-option,\\n  md-placeholder,\\n  md-progress-bar,\\n  md-progress-circle,\\n  md-radio-button,\\n  md-radio-group,\\n  md-select,\\n  md-sidenav,\\n  md-slider,\\n  md-spinner,\\n  md-tab,\\n  md-toolbar\\n\";\n/**\n * Directive to apply to all material2 components that use the same element name as a\n * component in material2. It does two things:\n * 1) Adds the css class \"md2\" to the host element so that material1 can use this class with a\n *    :not() in order to avoid affecting material2 elements.\n * 2) Adds a css class to the element that is identical to the element's tag. E.g., the element\n *    `<md-card>` would be given a css class `md-card`. This is done so that material2 can style\n *    only these classes instead of defining element rules that would affect material1 components.\n */\nvar StyleCompatibility = (function () {\n    function StyleCompatibility(renderer, elementRef) {\n        var element = elementRef.nativeElement;\n        renderer.setElementClass(element, 'md2', true);\n        renderer.setElementClass(element, element.nodeName.toLowerCase(), true);\n    }\n    StyleCompatibility = __decorate$15([\n        _angular_core.Directive({\n            selector: ELEMENTS_SELECTOR,\n        }), \n        __metadata$15('design:paramtypes', [_angular_core.Renderer, _angular_core.ElementRef])\n    ], StyleCompatibility);\n    return StyleCompatibility;\n}());\nvar StyleCompatibilityModule = (function () {\n    function StyleCompatibilityModule() {\n    }\n    StyleCompatibilityModule.forRoot = function () {\n        return {\n            ngModule: StyleCompatibilityModule,\n            providers: [],\n        };\n    };\n    StyleCompatibilityModule = __decorate$15([\n        _angular_core.NgModule({\n            declarations: [StyleCompatibility],\n            exports: [StyleCompatibility],\n        }), \n        __metadata$15('design:paramtypes', [])\n    ], StyleCompatibilityModule);\n    return StyleCompatibilityModule;\n}());\n\nvar AnimationCurves = (function () {\n    function AnimationCurves() {\n    }\n    AnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n    AnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n    AnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n    AnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n    return AnimationCurves;\n}());\n;\nvar AnimationDurations = (function () {\n    function AnimationDurations() {\n    }\n    AnimationDurations.COMPLEX = '375ms';\n    AnimationDurations.ENTERING = '225ms';\n    AnimationDurations.EXITING = '195ms';\n    return AnimationDurations;\n}());\n;\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && \"\" + value !== 'false';\n}\n\n/** Coerces a data-bound value (typically a string) to a number. */\nfunction coerceNumberProperty(value, fallbackValue) {\n    if (fallbackValue === void 0) { fallbackValue = 0; }\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return isNaN(parseFloat(value)) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar MdCoreModule = (function () {\n    function MdCoreModule() {\n    }\n    MdCoreModule.forRoot = function () {\n        return {\n            ngModule: MdCoreModule,\n            providers: [A11Y_PROVIDERS, OVERLAY_PROVIDERS],\n        };\n    };\n    MdCoreModule = __decorate([\n        _angular_core.NgModule({\n            imports: [MdLineModule, RtlModule, MdRippleModule, PortalModule, OverlayModule, A11yModule],\n            exports: [MdLineModule, RtlModule, MdRippleModule, PortalModule, OverlayModule, A11yModule],\n        }), \n        __metadata('design:paramtypes', [])\n    ], MdCoreModule);\n    return MdCoreModule;\n}());\n\nvar __decorate$17 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$17 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param$2 = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/**\n * Provider Expression that allows md-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n */\nvar MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: _angular_forms.NG_VALUE_ACCESSOR,\n    useExisting: _angular_core.forwardRef(function () { return MdButtonToggleGroup; }),\n    multi: true\n};\nvar _uniqueIdCounter = 0;\n/** A simple change event emitted by either MdButtonToggle or MdButtonToggleGroup. */\nvar MdButtonToggleChange = (function () {\n    function MdButtonToggleChange() {\n    }\n    return MdButtonToggleChange;\n}());\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\nvar MdButtonToggleGroup = (function () {\n    function MdButtonToggleGroup() {\n        /** The value for the button toggle group. Should match currently selected button toggle. */\n        this._value = null;\n        /** The HTML name attribute applied to toggles in this group. */\n        this._name = \"md-radio-group-\" + _uniqueIdCounter++;\n        /** Disables all toggles in the group. */\n        this._disabled = null;\n        /** The currently selected button toggle, should match the value. */\n        this._selected = null;\n        /** Whether the button toggle group is initialized or not. */\n        this._isInitialized = false;\n        /**\n         * The method to be called in order to update ngModel.\n         * Now `ngModel` binding is not supported in multiple selection mode.\n         */\n        this._controlValueAccessorChangeFn = function (value) { };\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = function () { };\n        /** Event emitted when the group's value changes. */\n        this._change = new _angular_core.EventEmitter();\n        /** Child button toggle buttons. */\n        this._buttonToggles = null;\n    }\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"change\", {\n        get: function () {\n            return this._change.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** TODO: internal */\n    MdButtonToggleGroup.prototype.ngAfterViewInit = function () {\n        this._isInitialized = true;\n    };\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"name\", {\n        get: function () {\n            return this._name;\n        },\n        set: function (value) {\n            this._name = value;\n            this._updateButtonToggleNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"disabled\", {\n        get: function () {\n            return this._disabled;\n        },\n        set: function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (newValue) {\n            if (this._value != newValue) {\n                this._value = newValue;\n                this._updateSelectedButtonToggleFromValue();\n                // Only emit a change event if the view is completely initialized.\n                // We don't want to emit a change event for the initial values.\n                if (this._isInitialized) {\n                    this._emitChangeEvent();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"selected\", {\n        get: function () {\n            return this._selected;\n        },\n        set: function (selected) {\n            this._selected = selected;\n            this.value = selected ? selected.value : null;\n            if (selected && !selected.checked) {\n                selected.checked = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdButtonToggleGroup.prototype._updateButtonToggleNames = function () {\n        var _this = this;\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach(function (toggle) {\n                toggle.name = _this._name;\n            });\n        }\n    };\n    // TODO: Refactor into shared code with radio.\n    MdButtonToggleGroup.prototype._updateSelectedButtonToggleFromValue = function () {\n        var _this = this;\n        var isAlreadySelected = this._selected != null && this._selected.value == this._value;\n        if (this._buttonToggles != null && !isAlreadySelected) {\n            var matchingButtonToggle = this._buttonToggles.filter(function (buttonToggle) { return buttonToggle.value == _this._value; })[0];\n            if (matchingButtonToggle) {\n                this.selected = matchingButtonToggle;\n            }\n            else if (this.value == null) {\n                this.selected = null;\n                this._buttonToggles.forEach(function (buttonToggle) {\n                    buttonToggle.checked = false;\n                });\n            }\n        }\n    };\n    /** Dispatch change event with current selection and group value. */\n    MdButtonToggleGroup.prototype._emitChangeEvent = function () {\n        var event = new MdButtonToggleChange();\n        event.source = this._selected;\n        event.value = this._value;\n        this._controlValueAccessorChangeFn(event.value);\n        this._change.emit(event);\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * TODO: internal\n     */\n    MdButtonToggleGroup.prototype.writeValue = function (value) {\n        this.value = value;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * TODO: internal\n     */\n    MdButtonToggleGroup.prototype.registerOnChange = function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * TODO: internal\n     */\n    MdButtonToggleGroup.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    __decorate$17([\n        _angular_core.Output(), \n        __metadata$17('design:type', rxjs_Observable.Observable)\n    ], MdButtonToggleGroup.prototype, \"change\", null);\n    __decorate$17([\n        _angular_core.ContentChildren(_angular_core.forwardRef(function () { return MdButtonToggle; })), \n        __metadata$17('design:type', _angular_core.QueryList)\n    ], MdButtonToggleGroup.prototype, \"_buttonToggles\", void 0);\n    __decorate$17([\n        _angular_core.Input(), \n        __metadata$17('design:type', String)\n    ], MdButtonToggleGroup.prototype, \"name\", null);\n    __decorate$17([\n        _angular_core.Input(), \n        __metadata$17('design:type', Boolean)\n    ], MdButtonToggleGroup.prototype, \"disabled\", null);\n    __decorate$17([\n        _angular_core.Input(), \n        __metadata$17('design:type', Object)\n    ], MdButtonToggleGroup.prototype, \"value\", null);\n    __decorate$17([\n        _angular_core.Input(), \n        __metadata$17('design:type', Object)\n    ], MdButtonToggleGroup.prototype, \"selected\", null);\n    MdButtonToggleGroup = __decorate$17([\n        _angular_core.Directive({\n            selector: 'md-button-toggle-group:not([multiple])',\n            providers: [MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR],\n            host: {\n                'role': 'radiogroup',\n            },\n            exportAs: 'mdButtonToggleGroup',\n        }), \n        __metadata$17('design:paramtypes', [])\n    ], MdButtonToggleGroup);\n    return MdButtonToggleGroup;\n}());\n/** Multiple selection button-toggle group. `ngModel` is not supported in this mode. */\nvar MdButtonToggleGroupMultiple = (function () {\n    function MdButtonToggleGroupMultiple() {\n        /** Disables all toggles in the group. */\n        this._disabled = null;\n    }\n    Object.defineProperty(MdButtonToggleGroupMultiple.prototype, \"disabled\", {\n        get: function () {\n            return this._disabled;\n        },\n        set: function (value) {\n            this._disabled = (value != null && value !== false) ? true : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate$17([\n        _angular_core.Input(), \n        __metadata$17('design:type', Boolean)\n    ], MdButtonToggleGroupMultiple.prototype, \"disabled\", null);\n    MdButtonToggleGroupMultiple = __decorate$17([\n        _angular_core.Directive({\n            selector: 'md-button-toggle-group[multiple]',\n            exportAs: 'mdButtonToggleGroup',\n        }), \n        __metadata$17('design:paramtypes', [])\n    ], MdButtonToggleGroupMultiple);\n    return MdButtonToggleGroupMultiple;\n}());\nvar MdButtonToggle = (function () {\n    function MdButtonToggle(toggleGroup, toggleGroupMultiple, buttonToggleDispatcher) {\n        var _this = this;\n        this.buttonToggleDispatcher = buttonToggleDispatcher;\n        /** Whether or not this button toggle is checked. */\n        this._checked = false;\n        /** Whether or not this button toggle is disabled. */\n        this._disabled = null;\n        /** Value assigned to this button toggle. */\n        this._value = null;\n        /** Whether or not the button toggle is a single selection. */\n        this._isSingleSelector = null;\n        /** Event emitted when the group value changes. */\n        this._change = new _angular_core.EventEmitter();\n        this.buttonToggleGroup = toggleGroup;\n        this.buttonToggleGroupMultiple = toggleGroupMultiple;\n        if (this.buttonToggleGroup) {\n            buttonToggleDispatcher.listen(function (id, name) {\n                if (id != _this.id && name == _this.name) {\n                    _this.checked = false;\n                }\n            });\n            this._type = 'radio';\n            this.name = this.buttonToggleGroup.name;\n            this._isSingleSelector = true;\n        }\n        else {\n            // Even if there is no group at all, treat the button toggle as a checkbox so it can be\n            // toggled on or off.\n            this._type = 'checkbox';\n            this._isSingleSelector = false;\n        }\n    }\n    Object.defineProperty(MdButtonToggle.prototype, \"change\", {\n        get: function () {\n            return this._change.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdButtonToggle.prototype.ngOnInit = function () {\n        if (this.id == null) {\n            this.id = \"md-button-toggle-\" + _uniqueIdCounter++;\n        }\n        if (this.buttonToggleGroup && this._value == this.buttonToggleGroup.value) {\n            this._checked = true;\n        }\n    };\n    Object.defineProperty(MdButtonToggle.prototype, \"inputId\", {\n        get: function () {\n            return this.id + \"-input\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggle.prototype, \"checked\", {\n        get: function () {\n            return this._checked;\n        },\n        set: function (newCheckedState) {\n            if (this._isSingleSelector) {\n                if (newCheckedState) {\n                    // Notify all button toggles with the same name (in the same group) to un-check.\n                    this.buttonToggleDispatcher.notify(this.id, this.name);\n                }\n            }\n            this._checked = newCheckedState;\n            if (newCheckedState && this._isSingleSelector && this.buttonToggleGroup.value != this.value) {\n                this.buttonToggleGroup.selected = this;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggle.prototype, \"value\", {\n        /** MdButtonToggleGroup reads this to assign its own value. */\n        get: function () {\n            return this._value;\n        },\n        set: function (value) {\n            if (this._value != value) {\n                if (this.buttonToggleGroup != null && this.checked) {\n                    this.buttonToggleGroup.value = value;\n                }\n                this._value = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Dispatch change event with current value. */\n    MdButtonToggle.prototype._emitChangeEvent = function () {\n        var event = new MdButtonToggleChange();\n        event.source = this;\n        event.value = this._value;\n        this._change.emit(event);\n    };\n    Object.defineProperty(MdButtonToggle.prototype, \"disabled\", {\n        get: function () {\n            return this._disabled || (this.buttonToggleGroup != null && this.buttonToggleGroup.disabled) ||\n                (this.buttonToggleGroupMultiple != null && this.buttonToggleGroupMultiple.disabled);\n        },\n        set: function (value) {\n            this._disabled = (value != null && value !== false) ? true : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Toggle the state of the current button toggle. */\n    MdButtonToggle.prototype._toggle = function () {\n        this.checked = !this.checked;\n    };\n    /** Checks the button toggle due to an interaction with the underlying native input. */\n    MdButtonToggle.prototype._onInputChange = function (event) {\n        event.stopPropagation();\n        if (this._isSingleSelector) {\n            // Propagate the change one-way via the group, which will in turn mark this\n            // button toggle as checked.\n            this.checked = true;\n            this.buttonToggleGroup.selected = this;\n            this.buttonToggleGroup.onTouched();\n        }\n        else {\n            this._toggle();\n        }\n        // Emit a change event when the native input does.\n        this._emitChangeEvent();\n    };\n    /** TODO: internal */\n    MdButtonToggle.prototype._onInputClick = function (event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    __decorate$17([\n        _angular_core.HostBinding(),\n        _angular_core.Input(), \n        __metadata$17('design:type', String)\n    ], MdButtonToggle.prototype, \"id\", void 0);\n    __decorate$17([\n        _angular_core.Input(), \n        __metadata$17('design:type', String)\n    ], MdButtonToggle.prototype, \"name\", void 0);\n    __decorate$17([\n        _angular_core.Output(), \n        __metadata$17('design:type', rxjs_Observable.Observable)\n    ], MdButtonToggle.prototype, \"change\", null);\n    __decorate$17([\n        _angular_core.HostBinding('class.md-button-toggle-checked'),\n        _angular_core.Input(), \n        __metadata$17('design:type', Boolean)\n    ], MdButtonToggle.prototype, \"checked\", null);\n    __decorate$17([\n        _angular_core.Input(), \n        __metadata$17('design:type', Object)\n    ], MdButtonToggle.prototype, \"value\", null);\n    __decorate$17([\n        _angular_core.HostBinding('class.md-button-toggle-disabled'),\n        _angular_core.Input(), \n        __metadata$17('design:type', Boolean)\n    ], MdButtonToggle.prototype, \"disabled\", null);\n    MdButtonToggle = __decorate$17([\n        _angular_core.Component({selector: 'md-button-toggle',\n            template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"md-button-toggle-label\\\"> <input #input class=\\\"md-button-toggle-input md-visually-hidden\\\" [type]=\\\"_type\\\" [id]=\\\"inputId\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [name]=\\\"name\\\" (change)=\\\"_onInputChange($event)\\\" (click)=\\\"_onInputClick($event)\\\"> <div class=\\\"md-button-toggle-label-content\\\"> <ng-content></ng-content> </div> </label> \",\n            styles: [\"md-button-toggle-group { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); position: relative; display: inline-flex; border-radius: 2px; cursor: pointer; white-space: nowrap; } .md-button-toggle-disabled .md-button-toggle-label-content { cursor: default; } md-button-toggle { white-space: nowrap; } .md-button-toggle-label-content { display: inline-block; line-height: 36px; padding: 0 16px; cursor: pointer; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } .md-button-toggle-label-content > * { vertical-align: middle; } /*# sourceMappingURL=button-toggle.css.map */ \"],\n            encapsulation: _angular_core.ViewEncapsulation.None,\n        }),\n        __param$2(0, _angular_core.Optional()),\n        __param$2(1, _angular_core.Optional()), \n        __metadata$17('design:paramtypes', [MdButtonToggleGroup, MdButtonToggleGroupMultiple, MdUniqueSelectionDispatcher])\n    ], MdButtonToggle);\n    return MdButtonToggle;\n}());\nvar MdButtonToggleModule = (function () {\n    function MdButtonToggleModule() {\n    }\n    MdButtonToggleModule.forRoot = function () {\n        return {\n            ngModule: MdButtonToggleModule,\n            providers: [MdUniqueSelectionDispatcher]\n        };\n    };\n    MdButtonToggleModule = __decorate$17([\n        _angular_core.NgModule({\n            imports: [_angular_forms.FormsModule],\n            exports: [MdButtonToggleGroup, MdButtonToggleGroupMultiple, MdButtonToggle],\n            declarations: [MdButtonToggleGroup, MdButtonToggleGroupMultiple, MdButtonToggle],\n        }), \n        __metadata$17('design:paramtypes', [])\n    ], MdButtonToggleModule);\n    return MdButtonToggleModule;\n}());\n\nvar __extends$6 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate$18 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$18 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n// TODO(jelbourn): Make the `isMouseDown` stuff done with one global listener.\n// TODO(kara): Convert attribute selectors to classes when attr maps become available\nvar MdButton = (function () {\n    function MdButton(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        /** Whether the button has focus from the keyboard (not the mouse). Used for class binding. */\n        this._isKeyboardFocused = false;\n        /** Whether a mousedown has occurred on this element in the last 100ms. */\n        this._isMouseDown = false;\n        /** Whether the ripple effect on click should be disabled. */\n        this._disableRipple = false;\n        this._disabled = false;\n    }\n    Object.defineProperty(MdButton.prototype, \"disableRipple\", {\n        get: function () { return this._disableRipple; },\n        set: function (v) { this._disableRipple = coerceBooleanProperty(v); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButton.prototype, \"disabled\", {\n        get: function () { return this._disabled; },\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButton.prototype, \"color\", {\n        get: function () {\n            return this._color;\n        },\n        set: function (value) {\n            this._updateColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdButton.prototype._setMousedown = function () {\n        var _this = this;\n        // We only *show* the focus style when focus has come to the button via the keyboard.\n        // The Material Design spec is silent on this topic, and without doing this, the\n        // button continues to look :active after clicking.\n        // @see http://marcysutton.com/button-focus-hell/\n        this._isMouseDown = true;\n        setTimeout(function () { _this._isMouseDown = false; }, 100);\n    };\n    MdButton.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    MdButton.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this._renderer.setElementClass(this._elementRef.nativeElement, \"md-\" + color, isAdd);\n        }\n    };\n    MdButton.prototype._setKeyboardFocus = function () {\n        this._isKeyboardFocused = !this._isMouseDown;\n    };\n    MdButton.prototype._removeKeyboardFocus = function () {\n        this._isKeyboardFocused = false;\n    };\n    /** TODO(hansl): e2e test this function. */\n    MdButton.prototype.focus = function () {\n        this._elementRef.nativeElement.focus();\n    };\n    MdButton.prototype.getHostElement = function () {\n        return this._elementRef.nativeElement;\n    };\n    MdButton.prototype.isRoundButton = function () {\n        var el = this._elementRef.nativeElement;\n        return el.hasAttribute('md-icon-button') ||\n            el.hasAttribute('md-fab') ||\n            el.hasAttribute('md-mini-fab');\n    };\n    MdButton.prototype._isRippleDisabled = function () {\n        return this.disableRipple || this.disabled;\n    };\n    __decorate$18([\n        _angular_core.Input(), \n        __metadata$18('design:type', Object)\n    ], MdButton.prototype, \"disableRipple\", null);\n    __decorate$18([\n        _angular_core.Input(), \n        __metadata$18('design:type', Object)\n    ], MdButton.prototype, \"disabled\", null);\n    __decorate$18([\n        _angular_core.Input(), \n        __metadata$18('design:type', String)\n    ], MdButton.prototype, \"color\", null);\n    MdButton = __decorate$18([\n        _angular_core.Component({selector: 'button[md-button], button[md-raised-button], button[md-icon-button], ' +\n                'button[md-fab], button[md-mini-fab]',\n            host: {\n                '[disabled]': 'disabled',\n                '[class.md-button-focus]': '_isKeyboardFocused',\n                '(mousedown)': '_setMousedown()',\n                '(focus)': '_setKeyboardFocus()',\n                '(blur)': '_removeKeyboardFocus()',\n            },\n            template: \"<span class=\\\"md-button-wrapper\\\"><ng-content></ng-content></span> <div md-ripple *ngIf=\\\"!_isRippleDisabled()\\\" class=\\\"md-button-ripple\\\" [class.md-button-ripple-round]=\\\"isRoundButton()\\\" [md-ripple-trigger]=\\\"getHostElement()\\\" [md-ripple-color]=\\\"isRoundButton() ? 'rgba(255, 255, 255, 0.2)' : ''\\\" md-ripple-background-color=\\\"rgba(0, 0, 0, 0)\\\"></div> \",\n            styles: [\"[md-raised-button], [md-fab], [md-mini-fab], [md-button], [md-icon-button] { box-sizing: border-box; position: relative; cursor: pointer; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; outline: none; border: none; display: inline-block; white-space: nowrap; text-decoration: none; vertical-align: baseline; font-size: 14px; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; font-weight: 500; color: currentColor; text-align: center; margin: 0; min-width: 88px; line-height: 36px; padding: 0 16px; border-radius: 2px; } [disabled][md-raised-button], [disabled][md-fab], [disabled][md-mini-fab], [disabled][md-button], [disabled][md-icon-button] { cursor: default; } .md-button-focus[md-raised-button]::after, .md-button-focus[md-fab]::after, .md-button-focus[md-mini-fab]::after, .md-button-focus[md-button]::after, .md-button-focus[md-icon-button]::after { position: absolute; top: 0; left: 0; bottom: 0; right: 0; content: ''; background-color: rgba(0, 0, 0, 0.12); border-radius: inherit; pointer-events: none; } [md-raised-button], [md-fab], [md-mini-fab] { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); transform: translate3d(0, 0, 0); transition: background 400ms cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); } [md-raised-button]:active, [md-fab]:active, [md-mini-fab]:active { box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); } [disabled][md-raised-button], [disabled][md-fab], [disabled][md-mini-fab] { box-shadow: none; } [md-button]:hover::after, [md-icon-button]:hover::after { position: absolute; top: 0; left: 0; bottom: 0; right: 0; content: ''; background-color: rgba(0, 0, 0, 0.12); border-radius: inherit; pointer-events: none; } [md-button][disabled]:hover.md-primary, [md-button][disabled]:hover.md-accent, [md-button][disabled]:hover.md-warn, [md-button][disabled]:hover::after, [md-icon-button][disabled]:hover.md-primary, [md-icon-button][disabled]:hover.md-accent, [md-icon-button][disabled]:hover.md-warn, [md-icon-button][disabled]:hover::after { background-color: transparent; } [md-fab] { min-width: 0; border-radius: 50%; width: 56px; height: 56px; padding: 0; } [md-fab] i, [md-fab] md-icon { padding: 16px 0; line-height: 24px; } [md-mini-fab] { min-width: 0; border-radius: 50%; width: 40px; height: 40px; padding: 0; } [md-mini-fab] i, [md-mini-fab] md-icon { padding: 8px 0; line-height: 24px; } [md-icon-button] { min-width: 0; padding: 0; width: 40px; height: 40px; line-height: 24px; border-radius: 50%; } [md-icon-button] .md-button-wrapper > * { line-height: 24px; vertical-align: middle; } [md-button] .md-button-wrapper > *, [md-raised-button] .md-button-wrapper > * { vertical-align: middle; } .md-button-ripple { position: absolute; top: 0; left: 0; bottom: 0; right: 0; } .md-button-ripple-round { border-radius: 50%; z-index: 1; } @media screen and (-ms-high-contrast: active) { .md-raised-button, .md-fab, .md-mini-fab { border: 1px solid #fff; } } /*# sourceMappingURL=button.css.map */ \"],\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n        }), \n        __metadata$18('design:paramtypes', [_angular_core.ElementRef, _angular_core.Renderer])\n    ], MdButton);\n    return MdButton;\n}());\nvar MdAnchor = (function (_super) {\n    __extends$6(MdAnchor, _super);\n    function MdAnchor(elementRef, renderer) {\n        _super.call(this, elementRef, renderer);\n    }\n    Object.defineProperty(MdAnchor.prototype, \"tabIndex\", {\n        get: function () {\n            return this.disabled ? -1 : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdAnchor.prototype, \"isAriaDisabled\", {\n        get: function () {\n            return this.disabled ? 'true' : 'false';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdAnchor.prototype._haltDisabledEvents = function (event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    };\n    __decorate$18([\n        _angular_core.HostBinding('tabIndex'), \n        __metadata$18('design:type', Number)\n    ], MdAnchor.prototype, \"tabIndex\", null);\n    __decorate$18([\n        _angular_core.HostBinding('attr.aria-disabled'), \n        __metadata$18('design:type', String)\n    ], MdAnchor.prototype, \"isAriaDisabled\", null);\n    MdAnchor = __decorate$18([\n        _angular_core.Component({selector: 'a[md-button], a[md-raised-button], a[md-icon-button], a[md-fab], a[md-mini-fab]',\n            inputs: ['color', 'disabled', 'disableRipple'],\n            host: {\n                '[attr.disabled]': 'disabled',\n                '[class.md-button-focus]': '_isKeyboardFocused',\n                '(mousedown)': '_setMousedown()',\n                '(focus)': '_setKeyboardFocus()',\n                '(blur)': '_removeKeyboardFocus()',\n                '(click)': '_haltDisabledEvents($event)',\n            },\n            template: \"<span class=\\\"md-button-wrapper\\\"><ng-content></ng-content></span> <div md-ripple *ngIf=\\\"!_isRippleDisabled()\\\" class=\\\"md-button-ripple\\\" [class.md-button-ripple-round]=\\\"isRoundButton()\\\" [md-ripple-trigger]=\\\"getHostElement()\\\" [md-ripple-color]=\\\"isRoundButton() ? 'rgba(255, 255, 255, 0.2)' : ''\\\" md-ripple-background-color=\\\"rgba(0, 0, 0, 0)\\\"></div> \",\n            styles: [\"[md-raised-button], [md-fab], [md-mini-fab], [md-button], [md-icon-button] { box-sizing: border-box; position: relative; cursor: pointer; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; outline: none; border: none; display: inline-block; white-space: nowrap; text-decoration: none; vertical-align: baseline; font-size: 14px; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; font-weight: 500; color: currentColor; text-align: center; margin: 0; min-width: 88px; line-height: 36px; padding: 0 16px; border-radius: 2px; } [disabled][md-raised-button], [disabled][md-fab], [disabled][md-mini-fab], [disabled][md-button], [disabled][md-icon-button] { cursor: default; } .md-button-focus[md-raised-button]::after, .md-button-focus[md-fab]::after, .md-button-focus[md-mini-fab]::after, .md-button-focus[md-button]::after, .md-button-focus[md-icon-button]::after { position: absolute; top: 0; left: 0; bottom: 0; right: 0; content: ''; background-color: rgba(0, 0, 0, 0.12); border-radius: inherit; pointer-events: none; } [md-raised-button], [md-fab], [md-mini-fab] { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); transform: translate3d(0, 0, 0); transition: background 400ms cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); } [md-raised-button]:active, [md-fab]:active, [md-mini-fab]:active { box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); } [disabled][md-raised-button], [disabled][md-fab], [disabled][md-mini-fab] { box-shadow: none; } [md-button]:hover::after, [md-icon-button]:hover::after { position: absolute; top: 0; left: 0; bottom: 0; right: 0; content: ''; background-color: rgba(0, 0, 0, 0.12); border-radius: inherit; pointer-events: none; } [md-button][disabled]:hover.md-primary, [md-button][disabled]:hover.md-accent, [md-button][disabled]:hover.md-warn, [md-button][disabled]:hover::after, [md-icon-button][disabled]:hover.md-primary, [md-icon-button][disabled]:hover.md-accent, [md-icon-button][disabled]:hover.md-warn, [md-icon-button][disabled]:hover::after { background-color: transparent; } [md-fab] { min-width: 0; border-radius: 50%; width: 56px; height: 56px; padding: 0; } [md-fab] i, [md-fab] md-icon { padding: 16px 0; line-height: 24px; } [md-mini-fab] { min-width: 0; border-radius: 50%; width: 40px; height: 40px; padding: 0; } [md-mini-fab] i, [md-mini-fab] md-icon { padding: 8px 0; line-height: 24px; } [md-icon-button] { min-width: 0; padding: 0; width: 40px; height: 40px; line-height: 24px; border-radius: 50%; } [md-icon-button] .md-button-wrapper > * { line-height: 24px; vertical-align: middle; } [md-button] .md-button-wrapper > *, [md-raised-button] .md-button-wrapper > * { vertical-align: middle; } .md-button-ripple { position: absolute; top: 0; left: 0; bottom: 0; right: 0; } .md-button-ripple-round { border-radius: 50%; z-index: 1; } @media screen and (-ms-high-contrast: active) { .md-raised-button, .md-fab, .md-mini-fab { border: 1px solid #fff; } } /*# sourceMappingURL=button.css.map */ \"],\n            encapsulation: _angular_core.ViewEncapsulation.None\n        }), \n        __metadata$18('design:paramtypes', [_angular_core.ElementRef, _angular_core.Renderer])\n    ], MdAnchor);\n    return MdAnchor;\n}(MdButton));\nvar MdButtonModule = (function () {\n    function MdButtonModule() {\n    }\n    MdButtonModule.forRoot = function () {\n        return {\n            ngModule: MdButtonModule,\n            providers: []\n        };\n    };\n    MdButtonModule = __decorate$18([\n        _angular_core.NgModule({\n            imports: [_angular_common.CommonModule, MdRippleModule],\n            exports: [MdButton, MdAnchor],\n            declarations: [MdButton, MdAnchor],\n        }), \n        __metadata$18('design:paramtypes', [])\n    ], MdButtonModule);\n    return MdButtonModule;\n}());\n\nvar __decorate$19 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$19 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/**\n * Monotonically increasing integer used to auto-generate unique ids for checkbox components.\n */\nvar nextId = 0;\n/**\n * Provider Expression that allows md-checkbox to register as a ControlValueAccessor. This allows it\n * to support [(ngModel)].\n */\nvar MD_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: _angular_forms.NG_VALUE_ACCESSOR,\n    useExisting: _angular_core.forwardRef(function () { return MdCheckbox; }),\n    multi: true\n};\n/**\n * Represents the different states that require custom transitions between them.\n */\n(function (TransitionCheckState) {\n    /** The initial state of the component before any user interaction. */\n    TransitionCheckState[TransitionCheckState[\"Init\"] = 0] = \"Init\";\n    /** The state representing the component when it's becoming checked. */\n    TransitionCheckState[TransitionCheckState[\"Checked\"] = 1] = \"Checked\";\n    /** The state representing the component when it's becoming unchecked. */\n    TransitionCheckState[TransitionCheckState[\"Unchecked\"] = 2] = \"Unchecked\";\n    /** The state representing the component when it's becoming indeterminate. */\n    TransitionCheckState[TransitionCheckState[\"Indeterminate\"] = 3] = \"Indeterminate\";\n})(exports.TransitionCheckState || (exports.TransitionCheckState = {}));\n// A simple change event emitted by the MdCheckbox component.\nvar MdCheckboxChange = (function () {\n    function MdCheckboxChange() {\n    }\n    return MdCheckboxChange;\n}());\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. An MdCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://www.google.com/design/spec/components/selection-controls.html\n */\nvar MdCheckbox = (function () {\n    function MdCheckbox(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        /** A unique id for the checkbox. If one is not supplied, it is auto-generated. */\n        this.id = \"md-checkbox-\" + ++nextId;\n        /** Whether or not the checkbox should come before or after the label. */\n        this.align = 'start';\n        /**\n         * The tabindex attribute for the checkbox. Note that when the checkbox is disabled, the attribute\n         * on the host element will be removed. It will be placed back when the checkbox is re-enabled.\n         */\n        this.tabindex = 0;\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new _angular_core.EventEmitter();\n        /** Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor. */\n        this.onTouched = function () { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = exports.TransitionCheckState.Init;\n        this._checked = false;\n        this._indeterminate = false;\n        this._controlValueAccessorChangeFn = function (value) { };\n        this.hasFocus = false;\n        this.color = 'accent';\n    }\n    Object.defineProperty(MdCheckbox.prototype, \"disableRipple\", {\n        get: function () { return this._disableRipple; },\n        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"inputId\", {\n        /** ID to be applied to the `input` element */\n        get: function () {\n            return \"input-\" + this.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"required\", {\n        /** Whether the checkbox is required or not. */\n        get: function () { return this._required; },\n        set: function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"disabled\", {\n        /**\n         * Whether the checkbox is disabled. When the checkbox is disabled it cannot be interacted with.\n         * The correct ARIA attributes are applied to denote this to assistive technology.\n         */\n        get: function () { return this._disabled; },\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"checked\", {\n        /**\n         * Whether the checkbox is checked. Note that setting `checked` will immediately set\n         * `indeterminate` to false.\n         */\n        get: function () {\n            return this._checked;\n        },\n        set: function (checked) {\n            if (checked != this.checked) {\n                this._indeterminate = false;\n                this._checked = checked;\n                this._transitionCheckState(this._checked ? exports.TransitionCheckState.Checked : exports.TransitionCheckState.Unchecked);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"indeterminate\", {\n        /**\n         * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n         * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n         * checkable items. Note that whenever `checked` is set, indeterminate is immediately set to\n         * false. This differs from the web platform in that indeterminate state on native\n         * checkboxes is only remove when the user manually checks the checkbox (rather than setting the\n         * `checked` property programmatically). However, we feel that this behavior is more accommodating\n         * to the way consumers would envision using this component.\n         */\n        get: function () {\n            return this._indeterminate;\n        },\n        set: function (indeterminate) {\n            this._indeterminate = indeterminate;\n            if (this._indeterminate) {\n                this._transitionCheckState(exports.TransitionCheckState.Indeterminate);\n            }\n            else {\n                this._transitionCheckState(this.checked ? exports.TransitionCheckState.Checked : exports.TransitionCheckState.Unchecked);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"color\", {\n        /** Sets the color of the checkbox */\n        get: function () {\n            return this._color;\n        },\n        set: function (value) {\n            this._updateColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdCheckbox.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    MdCheckbox.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this._renderer.setElementClass(this._elementRef.nativeElement, \"md-\" + color, isAdd);\n        }\n    };\n    MdCheckbox.prototype._isRippleDisabled = function () {\n        return this.disableRipple || this.disabled;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * TODO: internal\n     */\n    MdCheckbox.prototype.writeValue = function (value) {\n        this.checked = !!value;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * TODO: internal\n     */\n    MdCheckbox.prototype.registerOnChange = function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * TODO: internal\n     */\n    MdCheckbox.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    MdCheckbox.prototype._transitionCheckState = function (newState) {\n        var oldState = this._currentCheckState;\n        var renderer = this._renderer;\n        var elementRef = this._elementRef;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            renderer.setElementClass(elementRef.nativeElement, this._currentAnimationClass, false);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            renderer.setElementClass(elementRef.nativeElement, this._currentAnimationClass, true);\n        }\n    };\n    MdCheckbox.prototype._emitChangeEvent = function () {\n        var event = new MdCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    };\n    /** Informs the component when the input has focus so that we can style accordingly */\n    MdCheckbox.prototype._onInputFocus = function () {\n        this.hasFocus = true;\n    };\n    /** Informs the component when we lose focus in order to style accordingly */\n    MdCheckbox.prototype._onInputBlur = function () {\n        this.hasFocus = false;\n        this.onTouched();\n    };\n    /**\n     * Toggles the `checked` value between true and false\n     */\n    MdCheckbox.prototype.toggle = function () {\n        this.checked = !this.checked;\n    };\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * @param event\n     */\n    MdCheckbox.prototype._onInteractionEvent = function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        if (!this.disabled) {\n            this.toggle();\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n    };\n    MdCheckbox.prototype._onInputClick = function (event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    MdCheckbox.prototype._getAnimationClassForCheckStateTransition = function (oldState, newState) {\n        var animSuffix;\n        switch (oldState) {\n            case exports.TransitionCheckState.Init:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === exports.TransitionCheckState.Checked) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case exports.TransitionCheckState.Unchecked:\n                animSuffix = newState === exports.TransitionCheckState.Checked ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case exports.TransitionCheckState.Checked:\n                animSuffix = newState === exports.TransitionCheckState.Unchecked ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case exports.TransitionCheckState.Indeterminate:\n                animSuffix = newState === exports.TransitionCheckState.Checked ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n        }\n        return \"md-checkbox-anim-\" + animSuffix;\n    };\n    MdCheckbox.prototype.getHostElement = function () {\n        return this._elementRef.nativeElement;\n    };\n    __decorate$19([\n        _angular_core.Input('aria-label'), \n        __metadata$19('design:type', String)\n    ], MdCheckbox.prototype, \"ariaLabel\", void 0);\n    __decorate$19([\n        _angular_core.Input('aria-labelledby'), \n        __metadata$19('design:type', String)\n    ], MdCheckbox.prototype, \"ariaLabelledby\", void 0);\n    __decorate$19([\n        _angular_core.Input(), \n        __metadata$19('design:type', String)\n    ], MdCheckbox.prototype, \"id\", void 0);\n    __decorate$19([\n        _angular_core.Input(), \n        __metadata$19('design:type', Boolean)\n    ], MdCheckbox.prototype, \"disableRipple\", null);\n    __decorate$19([\n        _angular_core.Input(), \n        __metadata$19('design:type', Boolean)\n    ], MdCheckbox.prototype, \"required\", null);\n    __decorate$19([\n        _angular_core.Input(), \n        __metadata$19('design:type', Object)\n    ], MdCheckbox.prototype, \"align\", void 0);\n    __decorate$19([\n        _angular_core.Input(), \n        __metadata$19('design:type', Boolean)\n    ], MdCheckbox.prototype, \"disabled\", null);\n    __decorate$19([\n        _angular_core.Input(), \n        __metadata$19('design:type', Number)\n    ], MdCheckbox.prototype, \"tabindex\", void 0);\n    __decorate$19([\n        _angular_core.Input(), \n        __metadata$19('design:type', String)\n    ], MdCheckbox.prototype, \"name\", void 0);\n    __decorate$19([\n        _angular_core.Output(), \n        __metadata$19('design:type', _angular_core.EventEmitter)\n    ], MdCheckbox.prototype, \"change\", void 0);\n    __decorate$19([\n        _angular_core.Input(), \n        __metadata$19('design:type', Object)\n    ], MdCheckbox.prototype, \"checked\", null);\n    __decorate$19([\n        _angular_core.Input(), \n        __metadata$19('design:type', Object)\n    ], MdCheckbox.prototype, \"indeterminate\", null);\n    __decorate$19([\n        _angular_core.Input(), \n        __metadata$19('design:type', String)\n    ], MdCheckbox.prototype, \"color\", null);\n    MdCheckbox = __decorate$19([\n        _angular_core.Component({selector: 'md-checkbox',\n            template: \"<label class=\\\"md-checkbox-layout\\\"> <div class=\\\"md-checkbox-inner-container\\\"> <input class=\\\"md-checkbox-input md-visually-hidden\\\" type=\\\"checkbox\\\" [id]=\\\"inputId\\\" [required]=\\\"required\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [name]=\\\"name\\\" [tabIndex]=\\\"tabindex\\\" [indeterminate]=\\\"indeterminate\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledby\\\" (focus)=\\\"_onInputFocus()\\\" (blur)=\\\"_onInputBlur()\\\" (change)=\\\"_onInteractionEvent($event)\\\" (click)=\\\"_onInputClick($event)\\\"> <div md-ripple *ngIf=\\\"!_isRippleDisabled()\\\" class=\\\"md-checkbox-ripple\\\" [md-ripple-trigger]=\\\"getHostElement()\\\" [md-ripple-centered]=\\\"true\\\" [md-ripple-speed-factor]=\\\"0.3\\\" md-ripple-background-color=\\\"rgba(0, 0, 0, 0)\\\"></div> <div class=\\\"md-checkbox-frame\\\"></div> <div class=\\\"md-checkbox-background\\\"> <svg version=\\\"1.1\\\" class=\\\"md-checkbox-checkmark\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" xml:space=\\\"preserve\\\"> <path class=\\\"md-checkbox-checkmark-path\\\" fill=\\\"none\\\" stroke=\\\"white\\\" d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/> </svg> <!-- Element for rendering the indeterminate state checkbox. --> <div class=\\\"md-checkbox-mixedmark\\\"></div> </div> </div> <span class=\\\"md-checkbox-label\\\"> <ng-content></ng-content> </span> </label> \",\n            styles: [\"@keyframes md-checkbox-fade-in-background { 0% { opacity: 0; } 50% { opacity: 1; } } @keyframes md-checkbox-fade-out-background { 0%, 50% { opacity: 1; } 100% { opacity: 0; } } @keyframes md-checkbox-unchecked-checked-checkmark-path { 0%, 50% { stroke-dashoffset: 22.91026; } 50% { animation-timing-function: cubic-bezier(0, 0, 0.2, 0.1); } 100% { stroke-dashoffset: 0; } } @keyframes md-checkbox-unchecked-indeterminate-mixedmark { 0%, 68.2% { transform: scaleX(0); } 68.2% { animation-timing-function: cubic-bezier(0, 0, 0, 1); } 100% { transform: scaleX(1); } } @keyframes md-checkbox-checked-unchecked-checkmark-path { from { animation-timing-function: cubic-bezier(0.4, 0, 1, 1); stroke-dashoffset: 0; } to { stroke-dashoffset: -22.91026; } } @keyframes md-checkbox-checked-indeterminate-checkmark { from { animation-timing-function: cubic-bezier(0, 0, 0.2, 0.1); opacity: 1; transform: rotate(0deg); } to { opacity: 0; transform: rotate(45deg); } } @keyframes md-checkbox-indeterminate-checked-checkmark { from { animation-timing-function: cubic-bezier(0.14, 0, 0, 1); opacity: 0; transform: rotate(45deg); } to { opacity: 1; transform: rotate(360deg); } } @keyframes md-checkbox-checked-indeterminate-mixedmark { from { animation-timing-function: cubic-bezier(0, 0, 0.2, 0.1); opacity: 0; transform: rotate(-45deg); } to { opacity: 1; transform: rotate(0deg); } } @keyframes md-checkbox-indeterminate-checked-mixedmark { from { animation-timing-function: cubic-bezier(0.14, 0, 0, 1); opacity: 1; transform: rotate(0deg); } to { opacity: 0; transform: rotate(315deg); } } @keyframes md-checkbox-indeterminate-unchecked-mixedmark { 0% { animation-timing-function: linear; opacity: 1; transform: scaleX(1); } 32.8%, 100% { opacity: 0; transform: scaleX(0); } } .md-checkbox-frame, .md-checkbox-background, .md-checkbox-checkmark { bottom: 0; left: 0; position: absolute; right: 0; top: 0; } .md-checkbox-checkmark, .md-checkbox-mixedmark { width: calc(100% - 4px); } .md-checkbox-frame, .md-checkbox-background { border-radius: 2px; box-sizing: border-box; pointer-events: none; } md-checkbox { cursor: pointer; transition: background 400ms cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); } .md-checkbox-layout { cursor: inherit; align-items: baseline; vertical-align: middle; display: inline-flex; } .md-checkbox-inner-container { display: inline-block; height: 20px; line-height: 0; margin: auto; margin-right: 8px; order: 0; position: relative; vertical-align: middle; white-space: nowrap; width: 20px; flex-shrink: 0; } [dir='rtl'] .md-checkbox-inner-container { margin-left: 8px; margin-right: auto; } .md-checkbox-layout .md-checkbox-label { line-height: 24px; } .md-checkbox-frame { background-color: transparent; border: 2px solid; transition: border-color 90ms cubic-bezier(0, 0, 0.2, 0.1); will-change: border-color; } .md-checkbox-background { align-items: center; display: inline-flex; justify-content: center; transition: background-color 90ms cubic-bezier(0, 0, 0.2, 0.1), opacity 90ms cubic-bezier(0, 0, 0.2, 0.1); will-change: background-color, opacity; } .md-checkbox-checkmark { width: 100%; } .md-checkbox-checkmark-path { stroke-dashoffset: 22.91026; stroke-dasharray: 22.91026; stroke-width: 2.66667px; } .md-checkbox-mixedmark { height: 2px; opacity: 0; transform: scaleX(0) rotate(0deg); } .md-checkbox-align-end .md-checkbox-inner-container { order: 1; margin-left: 8px; margin-right: auto; } [dir='rtl'] .md-checkbox-align-end .md-checkbox-inner-container { margin-left: auto; margin-right: 8px; } .md-checkbox-checked .md-checkbox-checkmark { opacity: 1; } .md-checkbox-checked .md-checkbox-checkmark-path { stroke-dashoffset: 0; } .md-checkbox-checked .md-checkbox-mixedmark { transform: scaleX(1) rotate(-45deg); } .md-checkbox-indeterminate .md-checkbox-checkmark { opacity: 0; transform: rotate(45deg); } .md-checkbox-indeterminate .md-checkbox-checkmark-path { stroke-dashoffset: 0; } .md-checkbox-indeterminate .md-checkbox-mixedmark { opacity: 1; transform: scaleX(1) rotate(0deg); } .md-checkbox-unchecked .md-checkbox-background { background-color: transparent; } .md-checkbox-disabled { cursor: default; } .md-checkbox-anim-unchecked-checked .md-checkbox-background { animation: 180ms linear 0ms md-checkbox-fade-in-background; } .md-checkbox-anim-unchecked-checked .md-checkbox-checkmark-path { animation: 180ms linear 0ms md-checkbox-unchecked-checked-checkmark-path; } .md-checkbox-anim-unchecked-indeterminate .md-checkbox-background { animation: 180ms linear 0ms md-checkbox-fade-in-background; } .md-checkbox-anim-unchecked-indeterminate .md-checkbox-mixedmark { animation: 90ms linear 0ms md-checkbox-unchecked-indeterminate-mixedmark; } .md-checkbox-anim-checked-unchecked .md-checkbox-background { animation: 180ms linear 0ms md-checkbox-fade-out-background; } .md-checkbox-anim-checked-unchecked .md-checkbox-checkmark-path { animation: 90ms linear 0ms md-checkbox-checked-unchecked-checkmark-path; } .md-checkbox-anim-checked-indeterminate .md-checkbox-checkmark { animation: 90ms linear 0ms md-checkbox-checked-indeterminate-checkmark; } .md-checkbox-anim-checked-indeterminate .md-checkbox-mixedmark { animation: 90ms linear 0ms md-checkbox-checked-indeterminate-mixedmark; } .md-checkbox-anim-indeterminate-checked .md-checkbox-checkmark { animation: 500ms linear 0ms md-checkbox-indeterminate-checked-checkmark; } .md-checkbox-anim-indeterminate-checked .md-checkbox-mixedmark { animation: 500ms linear 0ms md-checkbox-indeterminate-checked-mixedmark; } .md-checkbox-anim-indeterminate-unchecked .md-checkbox-background { animation: 180ms linear 0ms md-checkbox-fade-out-background; } .md-checkbox-anim-indeterminate-unchecked .md-checkbox-mixedmark { animation: 300ms linear 0ms md-checkbox-indeterminate-unchecked-mixedmark; } .md-checkbox-input { bottom: 0; left: 50%; } .md-checkbox-ripple { position: absolute; left: -15px; top: -15px; right: -15px; bottom: -15px; border-radius: 50%; z-index: 1; pointer-events: none; } /*# sourceMappingURL=checkbox.css.map */ \"],\n            host: {\n                '[class.md-checkbox-indeterminate]': 'indeterminate',\n                '[class.md-checkbox-checked]': 'checked',\n                '[class.md-checkbox-disabled]': 'disabled',\n                '[class.md-checkbox-align-end]': 'align == \"end\"',\n                '[class.md-checkbox-focused]': 'hasFocus',\n            },\n            providers: [MD_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush\n        }), \n        __metadata$19('design:paramtypes', [_angular_core.Renderer, _angular_core.ElementRef])\n    ], MdCheckbox);\n    return MdCheckbox;\n}());\nvar MdCheckboxModule = (function () {\n    function MdCheckboxModule() {\n    }\n    MdCheckboxModule.forRoot = function () {\n        return {\n            ngModule: MdCheckboxModule,\n            providers: []\n        };\n    };\n    MdCheckboxModule = __decorate$19([\n        _angular_core.NgModule({\n            imports: [_angular_common.CommonModule, MdRippleModule],\n            exports: [MdCheckbox],\n            declarations: [MdCheckbox],\n        }), \n        __metadata$19('design:paramtypes', [])\n    ], MdCheckboxModule);\n    return MdCheckboxModule;\n}());\n\nvar __decorate$20 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$20 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param$3 = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/**\n * Provider Expression that allows md-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n */\nvar MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: _angular_forms.NG_VALUE_ACCESSOR,\n    useExisting: _angular_core.forwardRef(function () { return MdRadioGroup; }),\n    multi: true\n};\n// TODO(mtlin):\n// Ink ripple is currently placeholder.\n// Determine motion spec for button transitions.\n// Design review.\n// RTL\n// Support forms API.\n// Use ChangeDetectionStrategy.OnPush\nvar _uniqueIdCounter$1 = 0;\n/** A simple change event emitted by either MdRadioButton or MdRadioGroup. */\nvar MdRadioChange = (function () {\n    function MdRadioChange() {\n    }\n    return MdRadioChange;\n}());\nvar MdRadioGroup = (function () {\n    function MdRadioGroup() {\n        /**\n         * Selected value for group. Should equal the value of the selected radio button if there *is*\n         * a corresponding radio button with a matching value. If there is *not* such a corresponding\n         * radio button, this value persists to be applied in case a new radio button is added with a\n         * matching value.\n         */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = \"md-radio-group-\" + _uniqueIdCounter$1++;\n        /** Disables all individual radio buttons assigned to this group. */\n        this._disabled = false;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = function (value) { };\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = function () { };\n        /** Event emitted when the group value changes. */\n        this.change = new _angular_core.EventEmitter();\n        /** Child radio buttons. */\n        this._radios = null;\n    }\n    Object.defineProperty(MdRadioGroup.prototype, \"name\", {\n        get: function () {\n            return this._name;\n        },\n        set: function (value) {\n            this._name = value;\n            this._updateRadioButtonNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioGroup.prototype, \"disabled\", {\n        get: function () {\n            return this._disabled;\n        },\n        set: function (value) {\n            // The presence of *any* disabled value makes the component disabled, *except* for false.\n            this._disabled = (value != null && value !== false) ? true : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioGroup.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (newValue) {\n            if (this._value != newValue) {\n                // Set this before proceeding to ensure no circular loop occurs with selection.\n                this._value = newValue;\n                this._updateSelectedRadioFromValue();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioGroup.prototype, \"selected\", {\n        get: function () {\n            return this._selected;\n        },\n        set: function (selected) {\n            this._selected = selected;\n            this.value = selected ? selected.value : null;\n            if (selected && !selected.checked) {\n                selected.checked = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     * TODO: internal\n     */\n    MdRadioGroup.prototype.ngAfterContentInit = function () {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MdRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MdRadioGroup.\n        this._isInitialized = true;\n    };\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    MdRadioGroup.prototype._touch = function () {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    };\n    MdRadioGroup.prototype._updateRadioButtonNames = function () {\n        var _this = this;\n        if (this._radios) {\n            this._radios.forEach(function (radio) {\n                radio.name = _this.name;\n            });\n        }\n    };\n    /** Updates the `selected` radio button from the internal _value state. */\n    MdRadioGroup.prototype._updateSelectedRadioFromValue = function () {\n        var _this = this;\n        // If the value already matches the selected radio, do nothing.\n        var isAlreadySelected = this._selected != null && this._selected.value == this._value;\n        if (this._radios != null && !isAlreadySelected) {\n            var matchingRadio = this._radios.filter(function (radio) { return radio.value == _this._value; })[0];\n            if (matchingRadio) {\n                this.selected = matchingRadio;\n            }\n            else if (this.value == null) {\n                this.selected = null;\n                this._radios.forEach(function (radio) { radio.checked = false; });\n            }\n        }\n    };\n    /** Dispatch change event with current selection and group value. */\n    MdRadioGroup.prototype._emitChangeEvent = function () {\n        if (this._isInitialized) {\n            var event_1 = new MdRadioChange();\n            event_1.source = this._selected;\n            event_1.value = this._value;\n            this.change.emit(event_1);\n        }\n    };\n    /**\n      * Implemented as part of ControlValueAccessor.\n      * TODO: internal\n      */\n    MdRadioGroup.prototype.writeValue = function (value) {\n        this.value = value;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * TODO: internal\n     */\n    MdRadioGroup.prototype.registerOnChange = function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * TODO: internal\n     */\n    MdRadioGroup.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    __decorate$20([\n        _angular_core.Output(), \n        __metadata$20('design:type', _angular_core.EventEmitter)\n    ], MdRadioGroup.prototype, \"change\", void 0);\n    __decorate$20([\n        _angular_core.ContentChildren(_angular_core.forwardRef(function () { return MdRadioButton; })), \n        __metadata$20('design:type', _angular_core.QueryList)\n    ], MdRadioGroup.prototype, \"_radios\", void 0);\n    __decorate$20([\n        _angular_core.Input(), \n        __metadata$20('design:type', String)\n    ], MdRadioGroup.prototype, \"name\", null);\n    __decorate$20([\n        _angular_core.Input(), \n        __metadata$20('design:type', Object)\n    ], MdRadioGroup.prototype, \"align\", void 0);\n    __decorate$20([\n        _angular_core.Input(), \n        __metadata$20('design:type', Boolean)\n    ], MdRadioGroup.prototype, \"disabled\", null);\n    __decorate$20([\n        _angular_core.Input(), \n        __metadata$20('design:type', Object)\n    ], MdRadioGroup.prototype, \"value\", null);\n    __decorate$20([\n        _angular_core.Input(), \n        __metadata$20('design:type', Object)\n    ], MdRadioGroup.prototype, \"selected\", null);\n    MdRadioGroup = __decorate$20([\n        _angular_core.Directive({\n            selector: 'md-radio-group',\n            providers: [MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n            host: {\n                'role': 'radiogroup',\n            },\n        }), \n        __metadata$20('design:paramtypes', [])\n    ], MdRadioGroup);\n    return MdRadioGroup;\n}());\nvar MdRadioButton = (function () {\n    function MdRadioButton(radioGroup, _elementRef, radioDispatcher) {\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        var _this = this;\n        this._elementRef = _elementRef;\n        this.radioDispatcher = radioDispatcher;\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** The unique ID for the radio button. */\n        this.id = \"md-radio-\" + _uniqueIdCounter$1++;\n        /** Value assigned to this radio.*/\n        this._value = null;\n        /** Event emitted when the group value changes. */\n        this.change = new _angular_core.EventEmitter();\n        this.radioGroup = radioGroup;\n        radioDispatcher.listen(function (id, name) {\n            if (id != _this.id && name == _this.name) {\n                _this.checked = false;\n            }\n        });\n    }\n    Object.defineProperty(MdRadioButton.prototype, \"disableRipple\", {\n        get: function () { return this._disableRipple; },\n        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"inputId\", {\n        get: function () {\n            return this.id + \"-input\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"checked\", {\n        get: function () {\n            return this._checked;\n        },\n        set: function (newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value != this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value == this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this.radioDispatcher.notify(this.id, this.name);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"value\", {\n        /** MdRadioGroup reads this to assign its own value. */\n        get: function () {\n            return this._value;\n        },\n        set: function (value) {\n            if (this._value != value) {\n                if (this.radioGroup != null && this.checked) {\n                    this.radioGroup.value = value;\n                }\n                this._value = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"align\", {\n        get: function () {\n            return this._align || (this.radioGroup != null && this.radioGroup.align) || 'start';\n        },\n        set: function (value) {\n            this._align = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"disabled\", {\n        get: function () {\n            return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n        },\n        set: function (value) {\n            // The presence of *any* disabled value makes the component disabled, *except* for false.\n            this._disabled = (value != null && value !== false) ? true : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** TODO: internal */\n    MdRadioButton.prototype.ngOnInit = function () {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    };\n    /** Dispatch change event with current value. */\n    MdRadioButton.prototype._emitChangeEvent = function () {\n        var event = new MdRadioChange();\n        event.source = this;\n        event.value = this._value;\n        this.change.emit(event);\n    };\n    MdRadioButton.prototype._isRippleDisabled = function () {\n        return this.disableRipple || this.disabled;\n    };\n    /**\n     * We use a hidden native input field to handle changes to focus state via keyboard navigation,\n     * with visual rendering done separately. The native element is kept in sync with the overall\n     * state of the component.\n     */\n    MdRadioButton.prototype._onInputFocus = function () {\n        this._isFocused = true;\n    };\n    /** TODO: internal */\n    MdRadioButton.prototype._onInputBlur = function () {\n        this._isFocused = false;\n        if (this.radioGroup) {\n            this.radioGroup._touch();\n        }\n    };\n    /** TODO: internal */\n    MdRadioButton.prototype._onInputClick = function (event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     * TODO: internal\n     */\n    MdRadioButton.prototype._onInputChange = function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        var groupValueChanged = this.radioGroup && this.value != this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            this.radioGroup._touch();\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    };\n    MdRadioButton.prototype.getHostElement = function () {\n        return this._elementRef.nativeElement;\n    };\n    __decorate$20([\n        _angular_core.HostBinding('class.md-radio-focused'), \n        __metadata$20('design:type', Boolean)\n    ], MdRadioButton.prototype, \"_isFocused\", void 0);\n    __decorate$20([\n        _angular_core.HostBinding('id'),\n        _angular_core.Input(), \n        __metadata$20('design:type', String)\n    ], MdRadioButton.prototype, \"id\", void 0);\n    __decorate$20([\n        _angular_core.Input(), \n        __metadata$20('design:type', String)\n    ], MdRadioButton.prototype, \"name\", void 0);\n    __decorate$20([\n        _angular_core.Input('aria-label'), \n        __metadata$20('design:type', String)\n    ], MdRadioButton.prototype, \"ariaLabel\", void 0);\n    __decorate$20([\n        _angular_core.Input('aria-labelledby'), \n        __metadata$20('design:type', String)\n    ], MdRadioButton.prototype, \"ariaLabelledby\", void 0);\n    __decorate$20([\n        _angular_core.Input(), \n        __metadata$20('design:type', Boolean)\n    ], MdRadioButton.prototype, \"disableRipple\", null);\n    __decorate$20([\n        _angular_core.Output(), \n        __metadata$20('design:type', _angular_core.EventEmitter)\n    ], MdRadioButton.prototype, \"change\", void 0);\n    __decorate$20([\n        _angular_core.HostBinding('class.md-radio-checked'),\n        _angular_core.Input(), \n        __metadata$20('design:type', Boolean)\n    ], MdRadioButton.prototype, \"checked\", null);\n    __decorate$20([\n        _angular_core.Input(), \n        __metadata$20('design:type', Object)\n    ], MdRadioButton.prototype, \"value\", null);\n    __decorate$20([\n        _angular_core.Input(), \n        __metadata$20('design:type', Object)\n    ], MdRadioButton.prototype, \"align\", null);\n    __decorate$20([\n        _angular_core.HostBinding('class.md-radio-disabled'),\n        _angular_core.Input(), \n        __metadata$20('design:type', Boolean)\n    ], MdRadioButton.prototype, \"disabled\", null);\n    MdRadioButton = __decorate$20([\n        _angular_core.Component({selector: 'md-radio-button',\n            template: \"<!-- TODO(jelbourn): render the radio on either side of the content --> <!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. --> <label [attr.for]=\\\"inputId\\\" class=\\\"md-radio-label\\\"> <!-- The actual 'radio' part of the control. --> <div class=\\\"md-radio-container\\\"> <div class=\\\"md-radio-outer-circle\\\"></div> <div class=\\\"md-radio-inner-circle\\\"></div> <div md-ripple *ngIf=\\\"!_isRippleDisabled()\\\" class=\\\"md-radio-ripple\\\" [md-ripple-trigger]=\\\"getHostElement()\\\" [md-ripple-centered]=\\\"true\\\" [md-ripple-speed-factor]=\\\"0.3\\\" md-ripple-background-color=\\\"rgba(0, 0, 0, 0)\\\"></div> </div> <input #input class=\\\"md-radio-input md-visually-hidden\\\" type=\\\"radio\\\" [id]=\\\"inputId\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [name]=\\\"name\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledby\\\" (change)=\\\"_onInputChange($event)\\\" (focus)=\\\"_onInputFocus()\\\" (blur)=\\\"_onInputBlur()\\\" (click)=\\\"_onInputClick($event)\\\"> <!-- The label content for radio control. --> <div class=\\\"md-radio-label-content\\\" [class.md-radio-align-end]=\\\"align == 'end'\\\"> <ng-content></ng-content> </div> </label> \",\n            styles: [\"md-radio-button { display: inline-block; } .md-radio-label { cursor: pointer; display: inline-flex; align-items: baseline; white-space: nowrap; } .md-radio-container { box-sizing: border-box; display: inline-block; height: 20px; position: relative; width: 20px; top: 2px; } .md-radio-outer-circle { border: solid 2px; border-radius: 50%; box-sizing: border-box; height: 20px; left: 0; position: absolute; top: 0; transition: border-color ease 280ms; width: 20px; } .md-radio-inner-circle { border-radius: 50%; box-sizing: border-box; height: 20px; left: 0; position: absolute; top: 0; transition: transform ease 280ms, background-color ease 280ms; transform: scale(0); width: 20px; } .md-radio-checked .md-radio-inner-circle { transform: scale(0.5); } .md-radio-label-content { display: inline-block; order: 0; line-height: inherit; padding-left: 8px; padding-right: 0; } [dir='rtl'] .md-radio-label-content { padding-right: 8px; padding-left: 0; } .md-radio-label-content.md-radio-align-end { order: -1; padding-left: 0; padding-right: 8px; } [dir='rtl'] .md-radio-label-content.md-radio-align-end { padding-right: 0; padding-left: 8px; } .md-radio-disabled, .md-radio-disabled .md-radio-label { cursor: default; } .md-radio-ripple { position: absolute; left: -15px; top: -15px; right: -15px; bottom: -15px; border-radius: 50%; z-index: 1; pointer-events: none; } /*# sourceMappingURL=radio.css.map */ \"],\n            encapsulation: _angular_core.ViewEncapsulation.None\n        }),\n        __param$3(0, _angular_core.Optional()), \n        __metadata$20('design:paramtypes', [MdRadioGroup, _angular_core.ElementRef, MdUniqueSelectionDispatcher])\n    ], MdRadioButton);\n    return MdRadioButton;\n}());\nvar MdRadioModule = (function () {\n    function MdRadioModule() {\n    }\n    MdRadioModule.forRoot = function () {\n        return {\n            ngModule: MdRadioModule,\n            providers: [MdUniqueSelectionDispatcher],\n        };\n    };\n    MdRadioModule = __decorate$20([\n        _angular_core.NgModule({\n            imports: [_angular_common.CommonModule, MdRippleModule],\n            exports: [MdRadioGroup, MdRadioButton],\n            declarations: [MdRadioGroup, MdRadioButton],\n        }), \n        __metadata$20('design:paramtypes', [])\n    ], MdRadioModule);\n    return MdRadioModule;\n}());\n\nvar __decorate$21 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$21 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar MD_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: _angular_forms.NG_VALUE_ACCESSOR,\n    useExisting: _angular_core.forwardRef(function () { return MdSlideToggle; }),\n    multi: true\n};\n// A simple change event emitted by the MdSlideToggle component.\nvar MdSlideToggleChange = (function () {\n    function MdSlideToggleChange() {\n    }\n    return MdSlideToggleChange;\n}());\n// Increasing integer for generating unique ids for slide-toggle components.\nvar nextId$1 = 0;\nvar MdSlideToggle = (function () {\n    function MdSlideToggle(_elementRef, _renderer) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        // A unique id for the slide-toggle. By default the id is auto-generated.\n        this._uniqueId = \"md-slide-toggle-\" + ++nextId$1;\n        this._checked = false;\n        this._isMousedown = false;\n        this._slideRenderer = null;\n        this._disabled = false;\n        this._required = false;\n        // Needs to be public to support AOT compilation (as host binding).\n        this._hasFocus = false;\n        this.name = null;\n        this.id = this._uniqueId;\n        this.tabIndex = 0;\n        this.ariaLabel = null;\n        this.ariaLabelledby = null;\n        this._change = new _angular_core.EventEmitter();\n        this.change = this._change.asObservable();\n        // Returns the unique id for the visual hidden input.\n        this.getInputId = function () { return ((_this.id || _this._uniqueId) + \"-input\"); };\n    }\n    Object.defineProperty(MdSlideToggle.prototype, \"disabled\", {\n        get: function () { return this._disabled; },\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlideToggle.prototype, \"required\", {\n        get: function () { return this._required; },\n        set: function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /** TODO: internal */\n    MdSlideToggle.prototype.ngAfterContentInit = function () {\n        this._slideRenderer = new SlideToggleRenderer(this._elementRef);\n    };\n    /**\n     * The onChangeEvent method will be also called on click.\n     * This is because everything for the slide-toggle is wrapped inside of a label,\n     * which triggers a onChange event on click.\n     */\n    MdSlideToggle.prototype._onChangeEvent = function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        // Once a drag is currently in progress, we do not want to toggle the slide-toggle on a click.\n        if (!this.disabled && !this._slideRenderer.isDragging()) {\n            this.toggle();\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n    };\n    MdSlideToggle.prototype._onInputClick = function (event) {\n        this.onTouched();\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    MdSlideToggle.prototype._setMousedown = function () {\n        var _this = this;\n        // We only *show* the focus style when focus has come to the button via the keyboard.\n        // The Material Design spec is silent on this topic, and without doing this, the\n        // button continues to look :active after clicking.\n        // @see http://marcysutton.com/button-focus-hell/\n        this._isMousedown = true;\n        setTimeout(function () { return _this._isMousedown = false; }, 100);\n    };\n    MdSlideToggle.prototype._onInputFocus = function () {\n        // Only show the focus / ripple indicator when the focus was not triggered by a mouse\n        // interaction on the component.\n        if (!this._isMousedown) {\n            this._hasFocus = true;\n        }\n    };\n    MdSlideToggle.prototype._onInputBlur = function () {\n        this._hasFocus = false;\n        this.onTouched();\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * TODO: internal\n     */\n    MdSlideToggle.prototype.writeValue = function (value) {\n        this.checked = value;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * TODO: internal\n     */\n    MdSlideToggle.prototype.registerOnChange = function (fn) {\n        this.onChange = fn;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * TODO: internal\n     */\n    MdSlideToggle.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    Object.defineProperty(MdSlideToggle.prototype, \"checked\", {\n        get: function () {\n            return !!this._checked;\n        },\n        set: function (value) {\n            if (this.checked !== !!value) {\n                this._checked = value;\n                this.onChange(this._checked);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlideToggle.prototype, \"color\", {\n        get: function () {\n            return this._color;\n        },\n        set: function (value) {\n            this._updateColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdSlideToggle.prototype.toggle = function () {\n        this.checked = !this.checked;\n    };\n    MdSlideToggle.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    MdSlideToggle.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this._renderer.setElementClass(this._elementRef.nativeElement, \"md-\" + color, isAdd);\n        }\n    };\n    /** Emits the change event to the `change` output EventEmitter */\n    MdSlideToggle.prototype._emitChangeEvent = function () {\n        var event = new MdSlideToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._change.emit(event);\n    };\n    /** TODO: internal */\n    MdSlideToggle.prototype._onDragStart = function () {\n        if (!this.disabled) {\n            this._slideRenderer.startThumbDrag(this.checked);\n        }\n    };\n    /** TODO: internal */\n    MdSlideToggle.prototype._onDrag = function (event) {\n        if (this._slideRenderer.isDragging()) {\n            this._slideRenderer.updateThumbPosition(event.deltaX);\n        }\n    };\n    /** TODO: internal */\n    MdSlideToggle.prototype._onDragEnd = function () {\n        var _this = this;\n        if (!this._slideRenderer.isDragging()) {\n            return;\n        }\n        // Notice that we have to stop outside of the current event handler,\n        // because otherwise the click event will be fired and will reset the new checked variable.\n        setTimeout(function () {\n            _this.checked = _this._slideRenderer.stopThumbDrag();\n            _this._emitChangeEvent();\n        }, 0);\n    };\n    __decorate$21([\n        _angular_core.Input(), \n        __metadata$21('design:type', String)\n    ], MdSlideToggle.prototype, \"name\", void 0);\n    __decorate$21([\n        _angular_core.Input(), \n        __metadata$21('design:type', String)\n    ], MdSlideToggle.prototype, \"id\", void 0);\n    __decorate$21([\n        _angular_core.Input(), \n        __metadata$21('design:type', Number)\n    ], MdSlideToggle.prototype, \"tabIndex\", void 0);\n    __decorate$21([\n        _angular_core.Input(), \n        __metadata$21('design:type', String)\n    ], MdSlideToggle.prototype, \"ariaLabel\", void 0);\n    __decorate$21([\n        _angular_core.Input(), \n        __metadata$21('design:type', String)\n    ], MdSlideToggle.prototype, \"ariaLabelledby\", void 0);\n    __decorate$21([\n        _angular_core.Input(), \n        __metadata$21('design:type', Boolean)\n    ], MdSlideToggle.prototype, \"disabled\", null);\n    __decorate$21([\n        _angular_core.Input(), \n        __metadata$21('design:type', Boolean)\n    ], MdSlideToggle.prototype, \"required\", null);\n    __decorate$21([\n        _angular_core.Output(), \n        __metadata$21('design:type', rxjs_Observable.Observable)\n    ], MdSlideToggle.prototype, \"change\", void 0);\n    __decorate$21([\n        _angular_core.Input(), \n        __metadata$21('design:type', Object)\n    ], MdSlideToggle.prototype, \"checked\", null);\n    __decorate$21([\n        _angular_core.Input(), \n        __metadata$21('design:type', String)\n    ], MdSlideToggle.prototype, \"color\", null);\n    MdSlideToggle = __decorate$21([\n        _angular_core.Component({selector: 'md-slide-toggle',\n            host: {\n                '[class.md-checked]': 'checked',\n                '[class.md-disabled]': 'disabled',\n                // This md-slide-toggle prefix will change, once the temporary ripple is removed.\n                '[class.md-slide-toggle-focused]': '_hasFocus',\n                '(mousedown)': '_setMousedown()'\n            },\n            template: \"<label class=\\\"md-slide-toggle-label\\\"> <div class=\\\"md-slide-toggle-container\\\"> <div class=\\\"md-slide-toggle-bar\\\"></div> <div class=\\\"md-slide-toggle-thumb-container\\\" (slidestart)=\\\"_onDragStart()\\\" (slide)=\\\"_onDrag($event)\\\" (slideend)=\\\"_onDragEnd()\\\"> <div class=\\\"md-slide-toggle-thumb\\\"> <div class=\\\"md-ink-ripple\\\"></div> </div> </div> <input #input class=\\\"md-slide-toggle-input md-visually-hidden\\\" type=\\\"checkbox\\\" [id]=\\\"getInputId()\\\" [required]=\\\"required\\\" [tabIndex]=\\\"tabIndex\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [attr.name]=\\\"name\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledby\\\" (blur)=\\\"_onInputBlur()\\\" (focus)=\\\"_onInputFocus()\\\" (change)=\\\"_onChangeEvent($event)\\\" (click)=\\\"_onInputClick($event)\\\"> </div> <span class=\\\"md-slide-toggle-content\\\"> <ng-content></ng-content> </span> </label> \",\n            styles: [\"md-slide-toggle { display: flex; height: 24px; margin: 16px 0; line-height: 24px; white-space: nowrap; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; outline: none; } md-slide-toggle.md-checked .md-slide-toggle-thumb-container { transform: translate3d(100%, 0, 0); } md-slide-toggle .md-ink-ripple { border-radius: 50%; opacity: 0; height: 48px; left: 50%; overflow: hidden; pointer-events: none; position: absolute; top: 50%; transform: translate(-50%, -50%); transition: opacity ease 280ms, background-color ease 280ms; width: 48px; } md-slide-toggle.md-slide-toggle-focused .md-ink-ripple { opacity: 1; } md-slide-toggle.md-slide-toggle-disabled .md-ink-ripple { background-color: #000; } md-slide-toggle.md-disabled .md-slide-toggle-label, md-slide-toggle.md-disabled .md-slide-toggle-container { cursor: default; } .md-slide-toggle-content { font-size: 14px; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; font-weight: 500; } .md-slide-toggle-label { display: flex; flex: 1; cursor: pointer; } .md-slide-toggle-container { cursor: -webkit-grab; cursor: grab; width: 36px; height: 24px; position: relative; margin-right: 8px; } [dir='rtl'] .md-slide-toggle-container { margin-left: 8px; margin-right: 0; } .md-slide-toggle-thumb-container { position: absolute; top: 2px; left: 0; z-index: 1; width: 16px; transform: translate3d(0, 0, 0); transition: all 80ms linear; transition-property: transform; } .md-slide-toggle-thumb-container.md-dragging { transition-duration: 0ms; } .md-slide-toggle-thumb { position: absolute; margin: 0; left: 0; top: 0; height: 20px; width: 20px; border-radius: 50%; box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); } .md-slide-toggle-bar { position: absolute; left: 1px; top: 5px; width: 34px; height: 14px; border-radius: 8px; } .md-slide-toggle-input { bottom: 0; left: 10px; } .md-slide-toggle-bar, .md-slide-toggle-thumb { transition: all 80ms linear; transition-property: background-color; transition-delay: 50ms; } /*# sourceMappingURL=slide-toggle.css.map */ \"],\n            providers: [MD_SLIDE_TOGGLE_VALUE_ACCESSOR],\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush\n        }), \n        __metadata$21('design:paramtypes', [_angular_core.ElementRef, _angular_core.Renderer])\n    ], MdSlideToggle);\n    return MdSlideToggle;\n}());\n/**\n * Renderer for the Slide Toggle component, which separates DOM modification in its own class\n */\nvar SlideToggleRenderer = (function () {\n    function SlideToggleRenderer(_elementRef) {\n        this._elementRef = _elementRef;\n        this._thumbEl = _elementRef.nativeElement.querySelector('.md-slide-toggle-thumb-container');\n        this._thumbBarEl = _elementRef.nativeElement.querySelector('.md-slide-toggle-bar');\n    }\n    /** Whether the slide-toggle is currently dragging. */\n    SlideToggleRenderer.prototype.isDragging = function () {\n        return !!this._thumbBarWidth;\n    };\n    /** Initializes the drag of the slide-toggle. */\n    SlideToggleRenderer.prototype.startThumbDrag = function (checked) {\n        if (!this.isDragging()) {\n            this._thumbBarWidth = this._thumbBarEl.clientWidth - this._thumbEl.clientWidth;\n            this._checked = checked;\n            this._thumbEl.classList.add('md-dragging');\n        }\n    };\n    /** Stops the current drag and returns the new checked value. */\n    SlideToggleRenderer.prototype.stopThumbDrag = function () {\n        if (this.isDragging()) {\n            this._thumbBarWidth = null;\n            this._thumbEl.classList.remove('md-dragging');\n            applyCssTransform(this._thumbEl, '');\n            return this._percentage > 50;\n        }\n    };\n    /** Updates the thumb containers position from the specified distance. */\n    SlideToggleRenderer.prototype.updateThumbPosition = function (distance) {\n        this._percentage = this._getThumbPercentage(distance);\n        applyCssTransform(this._thumbEl, \"translate3d(\" + this._percentage + \"%, 0, 0)\");\n    };\n    /** Retrieves the percentage of thumb from the moved distance. */\n    SlideToggleRenderer.prototype._getThumbPercentage = function (distance) {\n        var percentage = (distance / this._thumbBarWidth) * 100;\n        // When the toggle was initially checked, then we have to start the drag at the end.\n        if (this._checked) {\n            percentage += 100;\n        }\n        return Math.max(0, Math.min(percentage, 100));\n    };\n    return SlideToggleRenderer;\n}());\nvar MdSlideToggleModule = (function () {\n    function MdSlideToggleModule() {\n    }\n    MdSlideToggleModule.forRoot = function () {\n        return {\n            ngModule: MdSlideToggleModule,\n            providers: [{ provide: _angular_platformBrowser.HAMMER_GESTURE_CONFIG, useClass: MdGestureConfig }]\n        };\n    };\n    MdSlideToggleModule = __decorate$21([\n        _angular_core.NgModule({\n            imports: [_angular_forms.FormsModule],\n            exports: [MdSlideToggle],\n            declarations: [MdSlideToggle],\n        }), \n        __metadata$21('design:paramtypes', [])\n    ], MdSlideToggleModule);\n    return MdSlideToggleModule;\n}());\n\nvar __decorate$22 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$22 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nvar MIN_AUTO_TICK_SEPARATION = 30;\n/**\n * Provider Expression that allows md-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n */\nvar MD_SLIDER_VALUE_ACCESSOR = {\n    provide: _angular_forms.NG_VALUE_ACCESSOR,\n    useExisting: _angular_core.forwardRef(function () { return MdSlider; }),\n    multi: true\n};\n/** A simple change event emitted by the MdSlider component. */\nvar MdSliderChange = (function () {\n    function MdSliderChange() {\n    }\n    return MdSliderChange;\n}());\nvar MdSlider = (function () {\n    function MdSlider(elementRef) {\n        /** A renderer to handle updating the slider's thumb and fill track. */\n        this._renderer = null;\n        /** The dimensions of the slider. */\n        this._sliderDimensions = null;\n        /** Whether or not the slider is disabled. */\n        this._disabled = false;\n        /** Whether or not to show the thumb label. */\n        this._thumbLabel = false;\n        this._controlValueAccessorChangeFn = function () { };\n        /** The last value for which a change event was emitted. */\n        this._lastEmittedValue = null;\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = function () { };\n        /**\n         * Whether or not the thumb is sliding.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = false;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /** The values at which the thumb will snap. */\n        this._step = 1;\n        /**\n         * How often to show ticks. Relative to the step so that a tick always appears on a step.\n         * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n         */\n        this._tickInterval = 0;\n        /** The size of a tick interval as a percentage of the size of the track. */\n        this._tickIntervalPercent = 0;\n        /** The percentage of the slider that coincides with the value. */\n        this._percent = 0;\n        /** Value of the slider. */\n        this._value = null;\n        /** The miniumum value that the slider can have. */\n        this._min = 0;\n        /** The maximum value that the slider can have. */\n        this._max = 100;\n        this.change = new _angular_core.EventEmitter();\n        this._renderer = new SliderRenderer(elementRef);\n    }\n    Object.defineProperty(MdSlider.prototype, \"disabled\", {\n        get: function () { return this._disabled; },\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"thumbLabel\", {\n        get: function () { return this._thumbLabel; },\n        set: function (value) { this._thumbLabel = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"step\", {\n        get: function () { return this._step; },\n        set: function (v) { this._step = coerceNumberProperty(v, this._step); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"tickInterval\", {\n        get: function () { return this._tickInterval; },\n        set: function (v) {\n            this._tickInterval = (v == 'auto') ? v : coerceNumberProperty(v, this._tickInterval);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"tickIntervalPercent\", {\n        get: function () { return this._tickIntervalPercent; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"percent\", {\n        get: function () { return this._clamp(this._percent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"value\", {\n        get: function () {\n            // If the value needs to be read and it is still uninitialized, initialize it to the min.\n            if (this._value === null) {\n                this.value = this._min;\n            }\n            return this._value;\n        },\n        set: function (v) {\n            this._value = coerceNumberProperty(v, this._value);\n            this._percent = this._calculatePercentage(this._value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"min\", {\n        get: function () {\n            return this._min;\n        },\n        set: function (v) {\n            this._min = coerceNumberProperty(v, this._min);\n            // If the value wasn't explicitly set by the user, set it to the min.\n            if (this._value === null) {\n                this.value = this._min;\n            }\n            this._percent = this._calculatePercentage(this.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"max\", {\n        get: function () {\n            return this._max;\n        },\n        set: function (v) {\n            this._max = coerceNumberProperty(v, this._max);\n            this._percent = this._calculatePercentage(this.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"trackFillFlexBasis\", {\n        get: function () {\n            return this.percent * 100 + '%';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"ticksMarginLeft\", {\n        get: function () {\n            return this.tickIntervalPercent / 2 * 100 + '%';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"ticksContainerMarginLeft\", {\n        get: function () {\n            return '-' + this.ticksMarginLeft;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"ticksBackgroundSize\", {\n        get: function () {\n            return this.tickIntervalPercent * 100 + '% 2px';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdSlider.prototype._onMouseenter = function () {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._renderer.getSliderDimensions();\n        this._updateTickIntervalPercent();\n    };\n    MdSlider.prototype._onClick = function (event) {\n        if (this.disabled) {\n            return;\n        }\n        this._isActive = true;\n        this._isSliding = false;\n        this._renderer.addFocus();\n        this._updateValueFromPosition(event.clientX);\n        this._emitValueIfChanged();\n    };\n    MdSlider.prototype._onSlide = function (event) {\n        if (this.disabled) {\n            return;\n        }\n        // Prevent the slide from selecting anything else.\n        event.preventDefault();\n        this._updateValueFromPosition(event.center.x);\n    };\n    MdSlider.prototype._onSlideStart = function (event) {\n        if (this.disabled) {\n            return;\n        }\n        event.preventDefault();\n        this._isSliding = true;\n        this._isActive = true;\n        this._renderer.addFocus();\n        this._updateValueFromPosition(event.center.x);\n    };\n    MdSlider.prototype._onSlideEnd = function () {\n        this._isSliding = false;\n        this._emitValueIfChanged();\n    };\n    MdSlider.prototype._onBlur = function () {\n        this._isActive = false;\n        this.onTouched();\n    };\n    /**\n     * Calculate the new value from the new physical location. The value will always be snapped.\n     */\n    MdSlider.prototype._updateValueFromPosition = function (pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        var offset = this._sliderDimensions.left;\n        var size = this._sliderDimensions.width;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        var percent = this._clamp((pos - offset) / size);\n        var exactValue = this._calculateValue(percent);\n        // This calculation finds the closest step by finding the closest whole number divisible by the\n        // step relative to the min.\n        var closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n        // The value needs to snap to the min and max.\n        this.value = this._clamp(closestValue, this.min, this.max);\n    };\n    /** Emits a change event if the current value is different from the last emitted value. */\n    MdSlider.prototype._emitValueIfChanged = function () {\n        if (this.value != this._lastEmittedValue) {\n            var event_1 = new MdSliderChange();\n            event_1.source = this;\n            event_1.value = this.value;\n            this.change.emit(event_1);\n            this._controlValueAccessorChangeFn(this.value);\n            this._lastEmittedValue = this.value;\n        }\n    };\n    /**\n     * Updates the amount of space between ticks as a percentage of the width of the slider.\n     */\n    MdSlider.prototype._updateTickIntervalPercent = function () {\n        if (!this.tickInterval) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            var pixelsPerStep = this._sliderDimensions.width * this.step / (this.max - this.min);\n            var stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            var pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / (this._sliderDimensions.width);\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    };\n    /**\n     * Calculates the percentage of the slider that a value is.\n     */\n    MdSlider.prototype._calculatePercentage = function (value) {\n        return (value - this.min) / (this.max - this.min);\n    };\n    /**\n     * Calculates the value a percentage of the slider corresponds to.\n     */\n    MdSlider.prototype._calculateValue = function (percentage) {\n        return this.min + percentage * (this.max - this.min);\n    };\n    /**\n     * Return a number between two numbers.\n     */\n    MdSlider.prototype._clamp = function (value, min, max) {\n        if (min === void 0) { min = 0; }\n        if (max === void 0) { max = 1; }\n        return Math.max(min, Math.min(value, max));\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     */\n    MdSlider.prototype.writeValue = function (value) {\n        this.value = value;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     */\n    MdSlider.prototype.registerOnChange = function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     */\n    MdSlider.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     */\n    MdSlider.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    __decorate$22([\n        _angular_core.Input(), \n        __metadata$22('design:type', Boolean)\n    ], MdSlider.prototype, \"disabled\", null);\n    __decorate$22([\n        _angular_core.Input('thumb-label'), \n        __metadata$22('design:type', Boolean)\n    ], MdSlider.prototype, \"thumbLabel\", null);\n    __decorate$22([\n        _angular_core.Input(), \n        __metadata$22('design:type', Object)\n    ], MdSlider.prototype, \"step\", null);\n    __decorate$22([\n        _angular_core.Input('tick-interval'), \n        __metadata$22('design:type', Object)\n    ], MdSlider.prototype, \"tickInterval\", null);\n    __decorate$22([\n        _angular_core.Input(), \n        __metadata$22('design:type', Object)\n    ], MdSlider.prototype, \"value\", null);\n    __decorate$22([\n        _angular_core.Input(), \n        __metadata$22('design:type', Object)\n    ], MdSlider.prototype, \"min\", null);\n    __decorate$22([\n        _angular_core.Input(), \n        __metadata$22('design:type', Object)\n    ], MdSlider.prototype, \"max\", null);\n    __decorate$22([\n        _angular_core.Output(), \n        __metadata$22('design:type', Object)\n    ], MdSlider.prototype, \"change\", void 0);\n    MdSlider = __decorate$22([\n        _angular_core.Component({selector: 'md-slider',\n            providers: [MD_SLIDER_VALUE_ACCESSOR],\n            host: {\n                '(blur)': '_onBlur()',\n                '(click)': '_onClick($event)',\n                '(mouseenter)': '_onMouseenter()',\n                '(slide)': '_onSlide($event)',\n                '(slideend)': '_onSlideEnd()',\n                '(slidestart)': '_onSlideStart($event)',\n                'tabindex': '0',\n                '[attr.aria-disabled]': 'disabled',\n                '[attr.aria-valuemax]': 'max',\n                '[attr.aria-valuemin]': 'min',\n                '[attr.aria-valuenow]': 'value',\n                '[class.md-slider-active]': '_isActive',\n                '[class.md-slider-disabled]': 'disabled',\n                '[class.md-slider-has-ticks]': 'tickInterval',\n                '[class.md-slider-sliding]': '_isSliding',\n                '[class.md-slider-thumb-label-showing]': 'thumbLabel',\n            },\n            template: \"<div class=\\\"md-slider-track\\\"> <div class=\\\"md-slider-track-fill\\\" [style.flexBasis]=\\\"trackFillFlexBasis\\\"></div> <div class=\\\"md-slider-ticks-container\\\" [style.marginLeft]=\\\"ticksContainerMarginLeft\\\"> <div class=\\\"md-slider-ticks\\\" [style.marginLeft]=\\\"ticksMarginLeft\\\" [style.backgroundSize]=\\\"ticksBackgroundSize\\\"></div> </div> <div class=\\\"md-slider-thumb-container\\\"> <div class=\\\"md-slider-thumb\\\"></div> <div class=\\\"md-slider-thumb-label\\\"> <span class=\\\"md-slider-thumb-label-text\\\">{{value}}</span> </div> </div> </div>\",\n            styles: [\"md-slider { display: inline-block; box-sizing: border-box; position: relative; height: 48px; min-width: 128px; padding: 8px; outline: none; vertical-align: middle; } .md-slider-track { display: flex; flex-grow: 1; align-items: center; position: relative; top: 15px; height: 2px; transition: box-shadow 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } .md-slider-has-ticks.md-slider-active .md-slider-track, .md-slider-has-ticks:hover .md-slider-track { box-shadow: inset -4px 0 0 -2px rgba(0, 0, 0, 0.6); } .md-slider-track-fill { flex: 0 0 50%; height: 2px; transition: flex-basis 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } .md-slider-sliding .md-slider-track-fill { transition: none; } .md-slider-ticks-container { position: absolute; left: 0; top: 0; height: 2px; width: 100%; overflow: hidden; } .md-slider-ticks { background: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6) 2px, transparent 0, transparent) repeat; background: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6) 2px, transparent 0, transparent) repeat; height: 2px; width: 100%; opacity: 0; transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } .md-slider-has-ticks.md-slider-active .md-slider-ticks, .md-slider-has-ticks:hover .md-slider-ticks { opacity: 1; } .md-slider-thumb-container { flex: 0 0 auto; position: relative; width: 0; height: 0; } .md-slider-thumb { position: absolute; left: -10px; top: -10px; width: 20px; height: 20px; border-radius: 50%; transform-origin: 50% 50%; transform: scale(0.7); transition: transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } .md-slider-active .md-slider-thumb { transform: scale(1); } .md-slider-active.md-slider-thumb-label-showing .md-slider-thumb { transform: scale(0); } .md-slider-thumb-label { display: flex; align-items: center; justify-content: center; position: absolute; left: -14px; top: -40px; width: 28px; height: 28px; border-radius: 50%; transform: translateY(26px) scale(0.4) rotate(45deg); transition: 300ms cubic-bezier(0.35, 0, 0.25, 1); transition-property: transform, border-radius; } .md-slider-active .md-slider-thumb-label { border-radius: 50% 50% 0; transform: rotate(45deg); } md-slider:not(.md-slider-thumb-label-showing) .md-slider-thumb-label { display: none; } .md-slider-thumb-label-text { z-index: 1; font-size: 12px; font-weight: bold; opacity: 0; transform: rotate(-45deg); transition: opacity 300ms cubic-bezier(0.35, 0, 0.25, 1); } .md-slider-active .md-slider-thumb-label-text { opacity: 1; } /*# sourceMappingURL=slider.css.map */ \"],\n            encapsulation: _angular_core.ViewEncapsulation.None,\n        }), \n        __metadata$22('design:paramtypes', [_angular_core.ElementRef])\n    ], MdSlider);\n    return MdSlider;\n}());\n/**\n * Renderer class in order to keep all dom manipulation in one place and outside of the main class.\n */\nvar SliderRenderer = (function () {\n    function SliderRenderer(elementRef) {\n        this._sliderElement = elementRef.nativeElement;\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     */\n    SliderRenderer.prototype.getSliderDimensions = function () {\n        var trackElement = this._sliderElement.querySelector('.md-slider-track');\n        return trackElement.getBoundingClientRect();\n    };\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     */\n    SliderRenderer.prototype.addFocus = function () {\n        this._sliderElement.focus();\n    };\n    return SliderRenderer;\n}());\nvar MdSliderModule = (function () {\n    function MdSliderModule() {\n    }\n    MdSliderModule.forRoot = function () {\n        return {\n            ngModule: MdSliderModule,\n            providers: [{ provide: _angular_platformBrowser.HAMMER_GESTURE_CONFIG, useClass: MdGestureConfig }]\n        };\n    };\n    MdSliderModule = __decorate$22([\n        _angular_core.NgModule({\n            imports: [_angular_forms.FormsModule],\n            exports: [MdSlider],\n            declarations: [MdSlider],\n            providers: [\n                { provide: _angular_platformBrowser.HAMMER_GESTURE_CONFIG, useClass: MdGestureConfig },\n            ],\n        }), \n        __metadata$22('design:paramtypes', [])\n    ], MdSliderModule);\n    return MdSliderModule;\n}());\n\nvar __extends$7 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate$23 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$23 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param$4 = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/** Exception thrown when two MdSidenav are matching the same side. */\nvar MdDuplicatedSidenavError = (function (_super) {\n    __extends$7(MdDuplicatedSidenavError, _super);\n    function MdDuplicatedSidenavError(align) {\n        _super.call(this, \"A sidenav was already declared for 'align=\\\"\" + align + \"\\\"'\");\n    }\n    return MdDuplicatedSidenavError;\n}(MdError));\n/**\n * <md-sidenav> component.\n *\n * This component corresponds to the drawer of the sidenav.\n *\n * Please refer to README.md for examples on how to use it.\n */\nvar MdSidenav = (function () {\n    /**\n     * @param _elementRef The DOM element reference. Used for transition and width calculation.\n     *     If not available we do not hook on transitions.\n     */\n    function MdSidenav(_elementRef) {\n        this._elementRef = _elementRef;\n        /** Alignment of the sidenav (direction neutral); whether 'start' or 'end'. */\n        this._align = 'start';\n        this._valid = true;\n        /** Mode of the sidenav; whether 'over' or 'side'. */\n        this.mode = 'over';\n        /** Whether the sidenav is opened. */\n        this._opened = false;\n        /** Event emitted when the sidenav is being opened. Use this to synchronize animations. */\n        this.onOpenStart = new _angular_core.EventEmitter();\n        /** Event emitted when the sidenav is fully opened. */\n        this.onOpen = new _angular_core.EventEmitter();\n        /** Event emitted when the sidenav is being closed. Use this to synchronize animations. */\n        this.onCloseStart = new _angular_core.EventEmitter();\n        /** Event emitted when the sidenav is fully closed. */\n        this.onClose = new _angular_core.EventEmitter();\n        /** Event emitted when the sidenav alignment changes. */\n        this.onAlignChanged = new _angular_core.EventEmitter();\n        this._transition = false;\n    }\n    Object.defineProperty(MdSidenav.prototype, \"valid\", {\n        /** Whether this md-sidenav is part of a valid md-sidenav-layout configuration. */\n        get: function () {\n            return this._valid;\n        },\n        set: function (value) {\n            value = coerceBooleanProperty(value);\n            // When the drawers are not in a valid configuration we close them all until they are in a valid\n            // configuration again.\n            if (!value) {\n                this.close();\n            }\n            this._valid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"align\", {\n        get: function () {\n            return this._align;\n        },\n        set: function (value) {\n            // Make sure we have a valid value.\n            value = (value == 'end') ? 'end' : 'start';\n            if (value != this._align) {\n                this._align = value;\n                this.onAlignChanged.emit();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdSidenav.prototype.ngAfterContentInit = function () {\n        // This can happen when the sidenav is set to opened in the template and the transition\n        // isn't ended.\n        if (this._openPromise) {\n            this._openPromiseResolve();\n            this._openPromise = null;\n        }\n    };\n    Object.defineProperty(MdSidenav.prototype, \"opened\", {\n        /**\n         * Whether the sidenav is opened. We overload this because we trigger an event when it\n         * starts or end.\n         */\n        get: function () { return this._opened; },\n        set: function (v) {\n            this.toggle(coerceBooleanProperty(v));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Open this sidenav, and return a Promise that will resolve when it's fully opened (or get\n     * rejected if it didn't). */\n    MdSidenav.prototype.open = function () {\n        return this.toggle(true);\n    };\n    /**\n     * Close this sidenav, and return a Promise that will resolve when it's fully closed (or get\n     * rejected if it didn't).\n     */\n    MdSidenav.prototype.close = function () {\n        return this.toggle(false);\n    };\n    /**\n     * Toggle this sidenav. This is equivalent to calling open() when it's already opened, or\n     * close() when it's closed.\n     * @param isOpen\n     */\n    MdSidenav.prototype.toggle = function (isOpen) {\n        var _this = this;\n        if (isOpen === void 0) { isOpen = !this.opened; }\n        if (!this.valid) {\n            return Promise.resolve(null);\n        }\n        // Shortcut it if we're already opened.\n        if (isOpen === this.opened) {\n            if (!this._transition) {\n                return Promise.resolve(null);\n            }\n            else {\n                return isOpen ? this._openPromise : this._closePromise;\n            }\n        }\n        this._opened = isOpen;\n        this._transition = true;\n        if (isOpen) {\n            this.onOpenStart.emit();\n        }\n        else {\n            this.onCloseStart.emit();\n        }\n        if (isOpen) {\n            if (this._openPromise == null) {\n                this._openPromise = new Promise(function (resolve, reject) {\n                    _this._openPromiseResolve = resolve;\n                    _this._openPromiseReject = reject;\n                });\n            }\n            return this._openPromise;\n        }\n        else {\n            if (this._closePromise == null) {\n                this._closePromise = new Promise(function (resolve, reject) {\n                    _this._closePromiseResolve = resolve;\n                    _this._closePromiseReject = reject;\n                });\n            }\n            return this._closePromise;\n        }\n    };\n    /**\n     * When transition has finished, set the internal state for classes and emit the proper event.\n     * The event passed is actually of type TransitionEvent, but that type is not available in\n     * Android so we use any.\n     */\n    MdSidenav.prototype._onTransitionEnd = function (transitionEvent) {\n        if (transitionEvent.target == this._elementRef.nativeElement\n            && transitionEvent.propertyName.endsWith('transform')) {\n            this._transition = false;\n            if (this._opened) {\n                if (this._openPromise != null) {\n                    this._openPromiseResolve();\n                }\n                if (this._closePromise != null) {\n                    this._closePromiseReject();\n                }\n                this.onOpen.emit();\n            }\n            else {\n                if (this._closePromise != null) {\n                    this._closePromiseResolve();\n                }\n                if (this._openPromise != null) {\n                    this._openPromiseReject();\n                }\n                this.onClose.emit();\n            }\n            this._openPromise = null;\n            this._closePromise = null;\n        }\n    };\n    Object.defineProperty(MdSidenav.prototype, \"_isClosing\", {\n        get: function () {\n            return !this._opened && this._transition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_isOpening\", {\n        get: function () {\n            return this._opened && this._transition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_isClosed\", {\n        get: function () {\n            return !this._opened && !this._transition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_isOpened\", {\n        get: function () {\n            return this._opened && !this._transition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_isEnd\", {\n        get: function () {\n            return this.align == 'end';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_modeSide\", {\n        get: function () {\n            return this.mode == 'side';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_modeOver\", {\n        get: function () {\n            return this.mode == 'over';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_modePush\", {\n        get: function () {\n            return this.mode == 'push';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_width\", {\n        get: function () {\n            if (this._elementRef.nativeElement) {\n                return this._elementRef.nativeElement.offsetWidth;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate$23([\n        _angular_core.Input(), \n        __metadata$23('design:type', Object)\n    ], MdSidenav.prototype, \"align\", null);\n    __decorate$23([\n        _angular_core.Input(), \n        __metadata$23('design:type', Object)\n    ], MdSidenav.prototype, \"mode\", void 0);\n    __decorate$23([\n        _angular_core.Output('open-start'), \n        __metadata$23('design:type', Object)\n    ], MdSidenav.prototype, \"onOpenStart\", void 0);\n    __decorate$23([\n        _angular_core.Output('open'), \n        __metadata$23('design:type', Object)\n    ], MdSidenav.prototype, \"onOpen\", void 0);\n    __decorate$23([\n        _angular_core.Output('close-start'), \n        __metadata$23('design:type', Object)\n    ], MdSidenav.prototype, \"onCloseStart\", void 0);\n    __decorate$23([\n        _angular_core.Output('close'), \n        __metadata$23('design:type', Object)\n    ], MdSidenav.prototype, \"onClose\", void 0);\n    __decorate$23([\n        _angular_core.Output('align-changed'), \n        __metadata$23('design:type', Object)\n    ], MdSidenav.prototype, \"onAlignChanged\", void 0);\n    __decorate$23([\n        _angular_core.Input(), \n        __metadata$23('design:type', Boolean)\n    ], MdSidenav.prototype, \"opened\", null);\n    MdSidenav = __decorate$23([\n        _angular_core.Component({selector: 'md-sidenav',\n            template: '<ng-content></ng-content>',\n            host: {\n                '(transitionend)': '_onTransitionEnd($event)',\n                // must prevent the browser from aligning text based on value\n                '[attr.align]': 'null',\n                '[class.md-sidenav-closed]': '_isClosed',\n                '[class.md-sidenav-closing]': '_isClosing',\n                '[class.md-sidenav-end]': '_isEnd',\n                '[class.md-sidenav-opened]': '_isOpened',\n                '[class.md-sidenav-opening]': '_isOpening',\n                '[class.md-sidenav-over]': '_modeOver',\n                '[class.md-sidenav-push]': '_modePush',\n                '[class.md-sidenav-side]': '_modeSide',\n                '[class.md-sidenav-invalid]': '!valid',\n            },\n            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n            encapsulation: _angular_core.ViewEncapsulation.None,\n        }), \n        __metadata$23('design:paramtypes', [_angular_core.ElementRef])\n    ], MdSidenav);\n    return MdSidenav;\n}());\n/**\n * <md-sidenav-layout> component.\n *\n * This is the parent component to one or two <md-sidenav>s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nvar MdSidenavLayout = (function () {\n    function MdSidenavLayout(_dir, _element, _renderer) {\n        var _this = this;\n        this._dir = _dir;\n        this._element = _element;\n        this._renderer = _renderer;\n        // If a `Dir` directive exists up the tree, listen direction changes and update the left/right\n        // properties to point to the proper start/end.\n        if (_dir != null) {\n            _dir.dirChange.subscribe(function () { return _this._validateDrawers(); });\n        }\n    }\n    Object.defineProperty(MdSidenavLayout.prototype, \"start\", {\n        get: function () { return this._start; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenavLayout.prototype, \"end\", {\n        get: function () { return this._end; },\n        enumerable: true,\n        configurable: true\n    });\n    MdSidenavLayout.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        // On changes, assert on consistency.\n        this._sidenavs.changes.subscribe(function () { return _this._validateDrawers(); });\n        this._sidenavs.forEach(function (sidenav) {\n            _this._watchSidenavToggle(sidenav);\n            _this._watchSidenavAlign(sidenav);\n        });\n        this._validateDrawers();\n    };\n    /**\n     * Subscribes to sidenav events in order to set a class on the main layout element when the\n     * sidenav is open and the backdrop is visible. This ensures any overflow on the layout element is\n     * properly hidden.\n     */\n    MdSidenavLayout.prototype._watchSidenavToggle = function (sidenav) {\n        var _this = this;\n        if (!sidenav || sidenav.mode === 'side') {\n            return;\n        }\n        sidenav.onOpen.subscribe(function () { return _this._setLayoutClass(sidenav, true); });\n        sidenav.onClose.subscribe(function () { return _this._setLayoutClass(sidenav, false); });\n    };\n    /**\n     * Subscribes to sidenav onAlignChanged event in order to re-validate drawers when the align\n     * changes.\n     */\n    MdSidenavLayout.prototype._watchSidenavAlign = function (sidenav) {\n        var _this = this;\n        if (!sidenav) {\n            return;\n        }\n        sidenav.onAlignChanged.subscribe(function () { return _this._validateDrawers(); });\n    };\n    /** Toggles the 'md-sidenav-opened' class on the main 'md-sidenav-layout' element. */\n    MdSidenavLayout.prototype._setLayoutClass = function (sidenav, bool) {\n        this._renderer.setElementClass(this._element.nativeElement, 'md-sidenav-opened', bool);\n    };\n    /** Sets the valid state of the drawers. */\n    MdSidenavLayout.prototype._setDrawersValid = function (valid) {\n        this._sidenavs.forEach(function (sidenav) {\n            sidenav.valid = valid;\n        });\n        if (!valid) {\n            this._start = this._end = this._left = this._right = null;\n        }\n    };\n    /** Validate the state of the sidenav children components. */\n    MdSidenavLayout.prototype._validateDrawers = function () {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end sidenav.\n        // NOTE: We must call toArray on _sidenavs even though it's iterable\n        // (see https://github.com/Microsoft/TypeScript/issues/3164).\n        for (var _i = 0, _a = this._sidenavs.toArray(); _i < _a.length; _i++) {\n            var sidenav = _a[_i];\n            if (sidenav.align == 'end') {\n                if (this._end != null) {\n                    this._setDrawersValid(false);\n                    return;\n                }\n                this._end = sidenav;\n            }\n            else {\n                if (this._start != null) {\n                    this._setDrawersValid(false);\n                    return;\n                }\n                this._start = sidenav;\n            }\n        }\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir == null || this._dir.value == 'ltr') {\n            this._left = this._start;\n            this._right = this._end;\n        }\n        else {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        this._setDrawersValid(true);\n    };\n    MdSidenavLayout.prototype._closeModalSidenav = function () {\n        if (this._start != null && this._start.mode != 'side') {\n            this._start.close();\n        }\n        if (this._end != null && this._end.mode != 'side') {\n            this._end.close();\n        }\n    };\n    MdSidenavLayout.prototype._isShowingBackdrop = function () {\n        return (this._isSidenavOpen(this._start) && this._start.mode != 'side')\n            || (this._isSidenavOpen(this._end) && this._end.mode != 'side');\n    };\n    MdSidenavLayout.prototype._isSidenavOpen = function (side) {\n        return side != null && side.opened;\n    };\n    /**\n     * Return the width of the sidenav, if it's in the proper mode and opened.\n     * This may relayout the view, so do not call this often.\n     * @param sidenav\n     * @param mode\n     */\n    MdSidenavLayout.prototype._getSidenavEffectiveWidth = function (sidenav, mode) {\n        return (this._isSidenavOpen(sidenav) && sidenav.mode == mode) ? sidenav._width : 0;\n    };\n    MdSidenavLayout.prototype._getMarginLeft = function () {\n        return this._getSidenavEffectiveWidth(this._left, 'side');\n    };\n    MdSidenavLayout.prototype._getMarginRight = function () {\n        return this._getSidenavEffectiveWidth(this._right, 'side');\n    };\n    MdSidenavLayout.prototype._getPositionLeft = function () {\n        return this._getSidenavEffectiveWidth(this._left, 'push');\n    };\n    MdSidenavLayout.prototype._getPositionRight = function () {\n        return this._getSidenavEffectiveWidth(this._right, 'push');\n    };\n    /**\n     * Returns the horizontal offset for the content area.  There should never be a value for both\n     * left and right, so by subtracting the right value from the left value, we should always get\n     * the appropriate offset.\n     */\n    MdSidenavLayout.prototype._getPositionOffset = function () {\n        return this._getPositionLeft() - this._getPositionRight();\n    };\n    /**\n     * This is using [ngStyle] rather than separate [style...] properties because [style.transform]\n     * doesn't seem to work right now.\n     */\n    MdSidenavLayout.prototype._getStyles = function () {\n        return {\n            marginLeft: this._getMarginLeft() + \"px\",\n            marginRight: this._getMarginRight() + \"px\",\n            transform: \"translate3d(\" + this._getPositionOffset() + \"px, 0, 0)\"\n        };\n    };\n    __decorate$23([\n        _angular_core.ContentChildren(MdSidenav), \n        __metadata$23('design:type', _angular_core.QueryList)\n    ], MdSidenavLayout.prototype, \"_sidenavs\", void 0);\n    MdSidenavLayout = __decorate$23([\n        _angular_core.Component({selector: 'md-sidenav-layout',\n            // Do not use ChangeDetectionStrategy.OnPush. It does not work for this component because\n            // technically it is a sibling of MdSidenav (on the content tree) and isn't updated when MdSidenav\n            // changes its state.\n            template: \"<div class=\\\"md-sidenav-backdrop\\\" (click)=\\\"_closeModalSidenav()\\\" [class.md-sidenav-shown]=\\\"_isShowingBackdrop()\\\"></div> <ng-content select=\\\"md-sidenav\\\"></ng-content> <div class=\\\"md-sidenav-content\\\" [ngStyle]=\\\"_getStyles()\\\"> <ng-content></ng-content> </div> \",\n            styles: [\"md-sidenav-layout { position: relative; transform: translate3d(0, 0, 0); box-sizing: border-box; -webkit-overflow-scrolling: touch; display: block; overflow: hidden; } md-sidenav-layout[fullscreen] { position: fixed; top: 0; left: 0; right: 0; bottom: 0; } md-sidenav-layout[fullscreen].md-sidenav-opened { overflow: hidden; } .md-sidenav-backdrop { position: fixed; top: 0; left: 0; right: 0; bottom: 0; display: block; z-index: 2; visibility: hidden; } .md-sidenav-backdrop.md-sidenav-shown { visibility: visible; } .md-sidenav-content { position: relative; transform: translate3d(0, 0, 0); display: block; height: 100%; overflow: auto; } md-sidenav { position: relative; transform: translate3d(0, 0, 0); display: block; position: absolute; top: 0; bottom: 0; z-index: 3; min-width: 5%; overflow-y: auto; transform: translate3d(-100%, 0, 0); } md-sidenav.md-sidenav-closed { visibility: hidden; } md-sidenav.md-sidenav-closing { transform: translate3d(-100%, 0, 0); } md-sidenav.md-sidenav-opening { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); visibility: visible; transform: translate3d(0, 0, 0); } md-sidenav.md-sidenav-opened { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); transform: translate3d(0, 0, 0); } md-sidenav.md-sidenav-side { z-index: 1; } md-sidenav.md-sidenav-end { right: 0; transform: translate3d(100%, 0, 0); } md-sidenav.md-sidenav-end.md-sidenav-closed { visibility: hidden; } md-sidenav.md-sidenav-end.md-sidenav-closing { transform: translate3d(100%, 0, 0); } md-sidenav.md-sidenav-end.md-sidenav-opening { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); visibility: visible; transform: translate3d(0, 0, 0); } md-sidenav.md-sidenav-end.md-sidenav-opened { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); transform: translate3d(0, 0, 0); } [dir='rtl'] md-sidenav { transform: translate3d(100%, 0, 0); } [dir='rtl'] md-sidenav.md-sidenav-closed { visibility: hidden; } [dir='rtl'] md-sidenav.md-sidenav-closing { transform: translate3d(100%, 0, 0); } [dir='rtl'] md-sidenav.md-sidenav-opening { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); visibility: visible; transform: translate3d(0, 0, 0); } [dir='rtl'] md-sidenav.md-sidenav-opened { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); transform: translate3d(0, 0, 0); } [dir='rtl'] md-sidenav.md-sidenav-end { left: 0; right: auto; transform: translate3d(-100%, 0, 0); } [dir='rtl'] md-sidenav.md-sidenav-end.md-sidenav-closed { visibility: hidden; } [dir='rtl'] md-sidenav.md-sidenav-end.md-sidenav-closing { transform: translate3d(-100%, 0, 0); } [dir='rtl'] md-sidenav.md-sidenav-end.md-sidenav-opening { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); visibility: visible; transform: translate3d(0, 0, 0); } [dir='rtl'] md-sidenav.md-sidenav-end.md-sidenav-opened { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); transform: translate3d(0, 0, 0); } .md-sidenav-invalid { display: none; } /*# sourceMappingURL=sidenav.css.map */ \",\n\"md-sidenav { transition: transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } .md-sidenav-content { transition: transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } .md-sidenav-backdrop.md-sidenav-shown { transition: background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } /*# sourceMappingURL=sidenav-transitions.css.map */ \"],\n            encapsulation: _angular_core.ViewEncapsulation.None,\n        }),\n        __param$4(0, _angular_core.Optional()), \n        __metadata$23('design:paramtypes', [Dir, _angular_core.ElementRef, _angular_core.Renderer])\n    ], MdSidenavLayout);\n    return MdSidenavLayout;\n}());\nvar MdSidenavModule = (function () {\n    function MdSidenavModule() {\n    }\n    MdSidenavModule.forRoot = function () {\n        return {\n            ngModule: MdSidenavModule,\n            providers: []\n        };\n    };\n    MdSidenavModule = __decorate$23([\n        _angular_core.NgModule({\n            imports: [_angular_common.CommonModule],\n            exports: [MdSidenavLayout, MdSidenav],\n            declarations: [MdSidenavLayout, MdSidenav],\n        }), \n        __metadata$23('design:paramtypes', [])\n    ], MdSidenavModule);\n    return MdSidenavModule;\n}());\n\nvar __decorate$24 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$24 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar MdListDivider = (function () {\n    function MdListDivider() {\n    }\n    MdListDivider = __decorate$24([\n        _angular_core.Directive({\n            selector: 'md-divider'\n        }), \n        __metadata$24('design:paramtypes', [])\n    ], MdListDivider);\n    return MdListDivider;\n}());\nvar MdList = (function () {\n    function MdList() {\n    }\n    MdList = __decorate$24([\n        _angular_core.Component({selector: 'md-list, md-nav-list',\n            host: { 'role': 'list' },\n            template: '<ng-content></ng-content>',\n            styles: [\"md-list, md-nav-list { padding-top: 8px; display: block; } md-list [md-subheader], md-nav-list [md-subheader] { display: block; box-sizing: border-box; height: 48px; padding: 16px; margin: 0; font-size: 14px; font-weight: 500; } md-list [md-subheader]:first-child, md-nav-list [md-subheader]:first-child { margin-top: -8px; } md-list md-list-item .md-list-item, md-list a[md-list-item] .md-list-item, md-nav-list md-list-item .md-list-item, md-nav-list a[md-list-item] .md-list-item { display: flex; flex-direction: row; align-items: center; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; box-sizing: border-box; font-size: 16px; height: 48px; padding: 0 16px; } md-list md-list-item.md-list-avatar .md-list-item, md-list a[md-list-item].md-list-avatar .md-list-item, md-nav-list md-list-item.md-list-avatar .md-list-item, md-nav-list a[md-list-item].md-list-avatar .md-list-item { height: 56px; } md-list md-list-item.md-2-line .md-list-item, md-list a[md-list-item].md-2-line .md-list-item, md-nav-list md-list-item.md-2-line .md-list-item, md-nav-list a[md-list-item].md-2-line .md-list-item { height: 72px; } md-list md-list-item.md-3-line .md-list-item, md-list a[md-list-item].md-3-line .md-list-item, md-nav-list md-list-item.md-3-line .md-list-item, md-nav-list a[md-list-item].md-3-line .md-list-item { height: 88px; } md-list md-list-item.md-multi-line .md-list-item, md-list a[md-list-item].md-multi-line .md-list-item, md-nav-list md-list-item.md-multi-line .md-list-item, md-nav-list a[md-list-item].md-multi-line .md-list-item { height: 100%; padding: 8px 16px; } md-list md-list-item .md-list-text, md-list a[md-list-item] .md-list-text, md-nav-list md-list-item .md-list-text, md-nav-list a[md-list-item] .md-list-text { display: flex; flex-direction: column; width: 100%; box-sizing: border-box; overflow: hidden; padding: 0 16px; } md-list md-list-item .md-list-text > *, md-list a[md-list-item] .md-list-text > *, md-nav-list md-list-item .md-list-text > *, md-nav-list a[md-list-item] .md-list-text > * { margin: 0; padding: 0; font-weight: normal; font-size: inherit; } md-list md-list-item .md-list-text:empty, md-list a[md-list-item] .md-list-text:empty, md-nav-list md-list-item .md-list-text:empty, md-nav-list a[md-list-item] .md-list-text:empty { display: none; } md-list md-list-item .md-list-text:first-child, md-list a[md-list-item] .md-list-text:first-child, md-nav-list md-list-item .md-list-text:first-child, md-nav-list a[md-list-item] .md-list-text:first-child { padding: 0; } md-list md-list-item [md-list-avatar], md-list a[md-list-item] [md-list-avatar], md-nav-list md-list-item [md-list-avatar], md-nav-list a[md-list-item] [md-list-avatar] { flex-shrink: 0; width: 40px; height: 40px; border-radius: 50%; } md-list md-list-item [md-list-icon], md-list a[md-list-item] [md-list-icon], md-nav-list md-list-item [md-list-icon], md-nav-list a[md-list-item] [md-list-icon] { width: 24px; height: 24px; border-radius: 50%; padding: 4px; } md-list md-list-item [md-line], md-list a[md-list-item] [md-line], md-nav-list md-list-item [md-line], md-nav-list a[md-list-item] [md-line] { white-space: nowrap; overflow-x: hidden; text-overflow: ellipsis; display: block; box-sizing: border-box; } md-list md-list-item [md-line]:nth-child(n+2), md-list a[md-list-item] [md-line]:nth-child(n+2), md-nav-list md-list-item [md-line]:nth-child(n+2), md-nav-list a[md-list-item] [md-line]:nth-child(n+2) { font-size: 14px; } md-list[dense], md-nav-list[dense] { padding-top: 4px; display: block; } md-list[dense] [md-subheader], md-nav-list[dense] [md-subheader] { display: block; box-sizing: border-box; height: 40px; padding: 16px; margin: 0; font-size: 13px; font-weight: 500; } md-list[dense] [md-subheader]:first-child, md-nav-list[dense] [md-subheader]:first-child { margin-top: -4px; } md-list[dense] md-list-item .md-list-item, md-list[dense] a[md-list-item] .md-list-item, md-nav-list[dense] md-list-item .md-list-item, md-nav-list[dense] a[md-list-item] .md-list-item { display: flex; flex-direction: row; align-items: center; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; box-sizing: border-box; font-size: 13px; height: 40px; padding: 0 16px; } md-list[dense] md-list-item.md-list-avatar .md-list-item, md-list[dense] a[md-list-item].md-list-avatar .md-list-item, md-nav-list[dense] md-list-item.md-list-avatar .md-list-item, md-nav-list[dense] a[md-list-item].md-list-avatar .md-list-item { height: 48px; } md-list[dense] md-list-item.md-2-line .md-list-item, md-list[dense] a[md-list-item].md-2-line .md-list-item, md-nav-list[dense] md-list-item.md-2-line .md-list-item, md-nav-list[dense] a[md-list-item].md-2-line .md-list-item { height: 60px; } md-list[dense] md-list-item.md-3-line .md-list-item, md-list[dense] a[md-list-item].md-3-line .md-list-item, md-nav-list[dense] md-list-item.md-3-line .md-list-item, md-nav-list[dense] a[md-list-item].md-3-line .md-list-item { height: 76px; } md-list[dense] md-list-item.md-multi-line .md-list-item, md-list[dense] a[md-list-item].md-multi-line .md-list-item, md-nav-list[dense] md-list-item.md-multi-line .md-list-item, md-nav-list[dense] a[md-list-item].md-multi-line .md-list-item { height: 100%; padding: 8px 16px; } md-list[dense] md-list-item .md-list-text, md-list[dense] a[md-list-item] .md-list-text, md-nav-list[dense] md-list-item .md-list-text, md-nav-list[dense] a[md-list-item] .md-list-text { display: flex; flex-direction: column; width: 100%; box-sizing: border-box; overflow: hidden; padding: 0 16px; } md-list[dense] md-list-item .md-list-text > *, md-list[dense] a[md-list-item] .md-list-text > *, md-nav-list[dense] md-list-item .md-list-text > *, md-nav-list[dense] a[md-list-item] .md-list-text > * { margin: 0; padding: 0; font-weight: normal; font-size: inherit; } md-list[dense] md-list-item .md-list-text:empty, md-list[dense] a[md-list-item] .md-list-text:empty, md-nav-list[dense] md-list-item .md-list-text:empty, md-nav-list[dense] a[md-list-item] .md-list-text:empty { display: none; } md-list[dense] md-list-item .md-list-text:first-child, md-list[dense] a[md-list-item] .md-list-text:first-child, md-nav-list[dense] md-list-item .md-list-text:first-child, md-nav-list[dense] a[md-list-item] .md-list-text:first-child { padding: 0; } md-list[dense] md-list-item [md-list-avatar], md-list[dense] a[md-list-item] [md-list-avatar], md-nav-list[dense] md-list-item [md-list-avatar], md-nav-list[dense] a[md-list-item] [md-list-avatar] { flex-shrink: 0; width: 40px; height: 40px; border-radius: 50%; } md-list[dense] md-list-item [md-list-icon], md-list[dense] a[md-list-item] [md-list-icon], md-nav-list[dense] md-list-item [md-list-icon], md-nav-list[dense] a[md-list-item] [md-list-icon] { width: 24px; height: 24px; border-radius: 50%; padding: 4px; } md-list[dense] md-list-item [md-line], md-list[dense] a[md-list-item] [md-line], md-nav-list[dense] md-list-item [md-line], md-nav-list[dense] a[md-list-item] [md-line] { white-space: nowrap; overflow-x: hidden; text-overflow: ellipsis; display: block; box-sizing: border-box; } md-list[dense] md-list-item [md-line]:nth-child(n+2), md-list[dense] a[md-list-item] [md-line]:nth-child(n+2), md-nav-list[dense] md-list-item [md-line]:nth-child(n+2), md-nav-list[dense] a[md-list-item] [md-line]:nth-child(n+2) { font-size: 13px; } md-divider { display: block; border-top-style: solid; border-top-width: 1px; margin: 0; } md-nav-list a { text-decoration: none; color: inherit; } md-nav-list .md-list-item { cursor: pointer; } md-nav-list .md-list-item:hover, md-nav-list .md-list-item.md-list-item-focus { outline: none; } /*# sourceMappingURL=list.css.map */ \"],\n            encapsulation: _angular_core.ViewEncapsulation.None\n        }), \n        __metadata$24('design:paramtypes', [])\n    ], MdList);\n    return MdList;\n}());\n/* Need directive for a ContentChild query in list-item */\nvar MdListAvatar = (function () {\n    function MdListAvatar() {\n    }\n    MdListAvatar = __decorate$24([\n        _angular_core.Directive({ selector: '[md-list-avatar]' }), \n        __metadata$24('design:paramtypes', [])\n    ], MdListAvatar);\n    return MdListAvatar;\n}());\nvar MdListItem = (function () {\n    function MdListItem(_renderer, _element) {\n        this._renderer = _renderer;\n        this._element = _element;\n        this._hasFocus = false;\n    }\n    Object.defineProperty(MdListItem.prototype, \"_hasAvatar\", {\n        set: function (avatar) {\n            this._renderer.setElementClass(this._element.nativeElement, 'md-list-avatar', avatar != null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** TODO: internal */\n    MdListItem.prototype.ngAfterContentInit = function () {\n        this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\n    };\n    MdListItem.prototype._handleFocus = function () {\n        this._hasFocus = true;\n    };\n    MdListItem.prototype._handleBlur = function () {\n        this._hasFocus = false;\n    };\n    __decorate$24([\n        _angular_core.ContentChildren(MdLine), \n        __metadata$24('design:type', _angular_core.QueryList)\n    ], MdListItem.prototype, \"_lines\", void 0);\n    __decorate$24([\n        _angular_core.ContentChild(MdListAvatar), \n        __metadata$24('design:type', MdListAvatar), \n        __metadata$24('design:paramtypes', [MdListAvatar])\n    ], MdListItem.prototype, \"_hasAvatar\", null);\n    MdListItem = __decorate$24([\n        _angular_core.Component({selector: 'md-list-item, a[md-list-item]',\n            host: {\n                'role': 'listitem',\n                '(focus)': '_handleFocus()',\n                '(blur)': '_handleBlur()',\n            },\n            template: \"<div class=\\\"md-list-item\\\" [class.md-list-item-focus]=\\\"_hasFocus\\\"> <ng-content select=\\\"[md-list-avatar],[md-list-icon]\\\"></ng-content> <div class=\\\"md-list-text\\\"><ng-content select=\\\"[md-line]\\\"></ng-content></div> <ng-content></ng-content> </div> \",\n            encapsulation: _angular_core.ViewEncapsulation.None\n        }), \n        __metadata$24('design:paramtypes', [_angular_core.Renderer, _angular_core.ElementRef])\n    ], MdListItem);\n    return MdListItem;\n}());\nvar MdListModule = (function () {\n    function MdListModule() {\n    }\n    MdListModule.forRoot = function () {\n        return {\n            ngModule: MdListModule,\n            providers: []\n        };\n    };\n    MdListModule = __decorate$24([\n        _angular_core.NgModule({\n            imports: [MdLineModule],\n            exports: [MdList, MdListItem, MdListDivider, MdListAvatar, MdLineModule],\n            declarations: [MdList, MdListItem, MdListDivider, MdListAvatar],\n        }), \n        __metadata$24('design:paramtypes', [])\n    ], MdListModule);\n    return MdListModule;\n}());\n\n/**\n * Converts values into strings. Falsy values become empty strings.\n * TODO: internal\n */\nfunction coerceToString(value) {\n    return \"\" + (value || '');\n}\n/**\n * Converts a value that might be a string into a number.\n * TODO: internal\n */\nfunction coerceToNumber(value) {\n    return typeof value === 'string' ? parseInt(value, 10) : value;\n}\n\nvar __decorate$26 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$26 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar MdGridTile = (function () {\n    function MdGridTile(_renderer, _element) {\n        this._renderer = _renderer;\n        this._element = _element;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    Object.defineProperty(MdGridTile.prototype, \"rowspan\", {\n        get: function () {\n            return this._rowspan;\n        },\n        set: function (value) {\n            this._rowspan = coerceToNumber(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdGridTile.prototype, \"colspan\", {\n        get: function () {\n            return this._colspan;\n        },\n        set: function (value) {\n            this._colspan = coerceToNumber(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     */\n    MdGridTile.prototype._setStyle = function (property, value) {\n        this._renderer.setElementStyle(this._element.nativeElement, property, value);\n    };\n    __decorate$26([\n        _angular_core.Input(), \n        __metadata$26('design:type', Object)\n    ], MdGridTile.prototype, \"rowspan\", null);\n    __decorate$26([\n        _angular_core.Input(), \n        __metadata$26('design:type', Object)\n    ], MdGridTile.prototype, \"colspan\", null);\n    MdGridTile = __decorate$26([\n        _angular_core.Component({selector: 'md-grid-tile',\n            host: { 'role': 'listitem' },\n            template: \"<!-- TODO(kara): Revisit why this is a figure.--> <figure> <ng-content></ng-content> </figure>\",\n            styles: [\"md-grid-list { display: block; position: relative; } md-grid-tile { display: block; position: absolute; overflow: hidden; } md-grid-tile figure { display: flex; position: absolute; align-items: center; justify-content: center; height: 100%; top: 0; right: 0; bottom: 0; left: 0; padding: 0; margin: 0; } md-grid-tile md-grid-tile-header, md-grid-tile md-grid-tile-footer { display: flex; align-items: center; height: 48px; color: #fff; background: rgba(0, 0, 0, 0.38); overflow: hidden; padding: 0 16px; font-size: 16px; position: absolute; left: 0; right: 0; } md-grid-tile md-grid-tile-header [md-line], md-grid-tile md-grid-tile-footer [md-line] { white-space: nowrap; overflow-x: hidden; text-overflow: ellipsis; display: block; box-sizing: border-box; } md-grid-tile md-grid-tile-header [md-line]:nth-child(n+2), md-grid-tile md-grid-tile-footer [md-line]:nth-child(n+2) { font-size: 12px; } md-grid-tile md-grid-tile-header > *, md-grid-tile md-grid-tile-footer > * { margin: 0; padding: 0; font-weight: normal; font-size: inherit; } md-grid-tile md-grid-tile-header.md-2-line, md-grid-tile md-grid-tile-footer.md-2-line { height: 68px; } md-grid-tile .md-grid-list-text { display: flex; flex-direction: column; width: 100%; box-sizing: border-box; overflow: hidden; } md-grid-tile .md-grid-list-text > * { margin: 0; padding: 0; font-weight: normal; font-size: inherit; } md-grid-tile .md-grid-list-text:empty { display: none; } md-grid-tile md-grid-tile-header { top: 0; } md-grid-tile md-grid-tile-footer { bottom: 0; } md-grid-tile [md-grid-avatar] { padding-right: 16px; } [dir='rtl'] md-grid-tile [md-grid-avatar] { padding-right: 0; padding-left: 16px; } md-grid-tile [md-grid-avatar]:empty { display: none; } /*# sourceMappingURL=grid-list.css.map */ \"],\n            encapsulation: _angular_core.ViewEncapsulation.None,\n        }), \n        __metadata$26('design:paramtypes', [_angular_core.Renderer, _angular_core.ElementRef])\n    ], MdGridTile);\n    return MdGridTile;\n}());\nvar MdGridTileText = (function () {\n    function MdGridTileText(_renderer, _element) {\n        this._renderer = _renderer;\n        this._element = _element;\n    }\n    MdGridTileText.prototype.ngAfterContentInit = function () {\n        this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\n    };\n    __decorate$26([\n        _angular_core.ContentChildren(MdLine), \n        __metadata$26('design:type', _angular_core.QueryList)\n    ], MdGridTileText.prototype, \"_lines\", void 0);\n    MdGridTileText = __decorate$26([\n        _angular_core.Component({selector: 'md-grid-tile-header, md-grid-tile-footer',\n            template: \"<ng-content select=\\\"[md-grid-avatar]\\\"></ng-content> <div class=\\\"md-grid-list-text\\\"><ng-content select=\\\"[md-line]\\\"></ng-content></div> <ng-content></ng-content>\"\n        }), \n        __metadata$26('design:paramtypes', [_angular_core.Renderer, _angular_core.ElementRef])\n    ], MdGridTileText);\n    return MdGridTileText;\n}());\n\nvar __extends$8 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * Exception thrown when cols property is missing from grid-list\n */\nvar MdGridListColsError = (function (_super) {\n    __extends$8(MdGridListColsError, _super);\n    function MdGridListColsError() {\n        _super.call(this, \"md-grid-list: must pass in number of columns. Example: <md-grid-list cols=\\\"3\\\">\");\n    }\n    return MdGridListColsError;\n}(MdError));\n/**\n * Exception thrown when a tile's colspan is longer than the number of cols in list\n */\nvar MdGridTileTooWideError = (function (_super) {\n    __extends$8(MdGridTileTooWideError, _super);\n    function MdGridTileTooWideError(cols, listLength) {\n        _super.call(this, \"md-grid-list: tile with colspan \" + cols + \" is wider than grid with cols=\\\"\" + listLength + \"\\\".\");\n    }\n    return MdGridTileTooWideError;\n}(MdError));\n/**\n * Exception thrown when an invalid ratio is passed in as a rowHeight\n */\nvar MdGridListBadRatioError = (function (_super) {\n    __extends$8(MdGridListBadRatioError, _super);\n    function MdGridListBadRatioError(value) {\n        _super.call(this, \"md-grid-list: invalid ratio given for row-height: \\\"\" + value + \"\\\"\");\n    }\n    return MdGridListBadRatioError;\n}(MdError));\n\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n */\nvar TileCoordinator = (function () {\n    function TileCoordinator(numColumns, tiles) {\n        var _this = this;\n        /** Index at which the search for the next gap will start. */\n        this.columnIndex = 0;\n        /** The current row index. */\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map(function (tile) { return _this._trackTile(tile); });\n    }\n    Object.defineProperty(TileCoordinator.prototype, \"rowCount\", {\n        /** Gets the total number of rows occupied by tiles */\n        get: function () { return this.rowIndex + 1; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TileCoordinator.prototype, \"rowspan\", {\n        /** Gets the total span of rows occupied by tiles.\n         * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2. */\n        get: function () {\n            var lastRowMax = Math.max.apply(Math, this.tracker);\n            // if any of the tiles has a rowspan that pushes it beyond the total row count,\n            // add the difference to the rowcount\n            return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Calculates the row and col position of a tile. */\n    TileCoordinator.prototype._trackTile = function (tile) {\n        // Find a gap large enough for this tile.\n        var gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    };\n    /** Finds the next available space large enough to fit the tile. */\n    TileCoordinator.prototype._findMatchingGap = function (tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw new MdGridTileTooWideError(tileCols, this.tracker.length);\n        }\n        // Start index is inclusive, end index is exclusive.\n        var gapStartIndex = -1;\n        var gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n        } while (gapEndIndex - gapStartIndex < tileCols);\n        return gapStartIndex;\n    };\n    /** Move \"down\" to the next row. */\n    TileCoordinator.prototype._nextRow = function () {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (var i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    };\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     */\n    TileCoordinator.prototype._findGapEndIndex = function (gapStartIndex) {\n        for (var i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    };\n    /** Update the tile tracker to account for the given tile in the given space. */\n    TileCoordinator.prototype._markTilePosition = function (start, tile) {\n        for (var i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    };\n    return TileCoordinator;\n}());\n/** Simple data structure for tile position (row, col). */\nvar TilePosition = (function () {\n    function TilePosition(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n    return TilePosition;\n}());\n\nvar __extends$9 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * TODO: internal\n */\nvar TileStyler = (function () {\n    function TileStyler() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     */\n    TileStyler.prototype.init = function (_gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(_gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    };\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    TileStyler.prototype.getBaseTileSize = function (sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return \"(\" + sizePercent + \"% - ( \" + this._gutterSize + \" * \" + gutterFraction + \" ))\";\n    };\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param offset Number of tiles that have already been rendered in the row/column.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @return Position of the tile as a CSS calc() expression.\n     */\n    TileStyler.prototype.getTilePosition = function (baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return calc(\"(\" + baseSize + \" + \" + this._gutterSize + \") * \" + offset);\n    };\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param span The tile's rowspan or colspan.\n     * @return Size of the tile as a CSS calc() expression.\n     */\n    TileStyler.prototype.getTileSize = function (baseSize, span) {\n        return \"(\" + baseSize + \" * \" + span + \") + (\" + (span - 1) + \" * \" + this._gutterSize + \")\";\n    };\n    /** Gets the style properties to be applied to a tile for the given row and column index. */\n    TileStyler.prototype.setStyle = function (tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        var percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        var gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    };\n    /** Sets the horizontal placement of the tile in the list. */\n    TileStyler.prototype.setColStyles = function (tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        var baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        var side = this._direction === 'ltr' ? 'left' : 'right';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    };\n    /** Calculates the total size taken up by gutters across one axis of a list. */\n    TileStyler.prototype.getGutterSpan = function () {\n        return this._gutterSize + \" * (\" + this._rowspan + \" - 1)\";\n    };\n    /** Calculates the total size taken up by tiles across one axis of a list. */\n    TileStyler.prototype.getTileSpan = function (tileHeight) {\n        return this._rowspan + \" * \" + this.getTileSize(tileHeight, 1);\n    };\n    /**\n     * Sets the vertical placement of the tile in the list.\n     * This method will be implemented by each type of TileStyler.\n     */\n    TileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) { };\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method will be implemented by each type of TileStyler.\n     */\n    TileStyler.prototype.getComputedHeight = function () { return null; };\n    return TileStyler;\n}());\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example <md-grid-list cols=\"3\" rowHeight=\"100px\">\n * TODO: internal\n */\nvar FixedTileStyler = (function (_super) {\n    __extends$9(FixedTileStyler, _super);\n    function FixedTileStyler(fixedRowHeight) {\n        _super.call(this);\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    FixedTileStyler.prototype.init = function (gutterSize, tracker, cols, direction) {\n        _super.prototype.init.call(this, gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n    };\n    FixedTileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    };\n    FixedTileStyler.prototype.getComputedHeight = function () {\n        return [\n            'height', calc(this.getTileSpan(this.fixedRowHeight) + \" + \" + this.getGutterSpan())\n        ];\n    };\n    return FixedTileStyler;\n}(TileStyler));\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example <md-grid-list cols=\"3\" rowHeight=\"3:1\">\n * TODO: internal\n */\nvar RatioTileStyler = (function (_super) {\n    __extends$9(RatioTileStyler, _super);\n    function RatioTileStyler(value) {\n        _super.call(this);\n        this._parseRatio(value);\n    }\n    RatioTileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) {\n        var percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use paddingTop and marginTop to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    };\n    RatioTileStyler.prototype.getComputedHeight = function () {\n        return [\n            'paddingBottom', calc(this.getTileSpan(this.baseTileHeight) + \" + \" + this.getGutterSpan())\n        ];\n    };\n    RatioTileStyler.prototype._parseRatio = function (value) {\n        var ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw new MdGridListBadRatioError(value);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    };\n    return RatioTileStyler;\n}(TileStyler));\n/*  This type of styler is instantiated when the user selects a \"fit\" row height mode.\n *  In other words, the row height will reflect the total height of the container divided\n *  by the number of rows.  Example <md-grid-list cols=\"3\" rowHeight=\"fit\"> */\nvar FitTileStyler = (function (_super) {\n    __extends$9(FitTileStyler, _super);\n    function FitTileStyler() {\n        _super.apply(this, arguments);\n    }\n    FitTileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) {\n        // Percent of the available vertical space that one row takes up.\n        var percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        var gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        var baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    };\n    return FitTileStyler;\n}(TileStyler));\n/** Wraps a CSS string in a calc function */\nfunction calc(exp) { return \"calc(\" + exp + \")\"; }\n/** Appends pixels to a CSS string if no units are given. */\nfunction normalizeUnits(value) {\n    return (value.match(/px|em|rem/)) ? value : value + 'px';\n}\n\nvar __decorate$25 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$25 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param$5 = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\nvar MD_FIT_MODE = 'fit';\nvar MdGridList = (function () {\n    function MdGridList(_renderer, _element, _dir) {\n        this._renderer = _renderer;\n        this._element = _element;\n        this._dir = _dir;\n        /** The amount of space between tiles. This will be something like '5px' or '2em'. */\n        this._gutter = '1px';\n    }\n    Object.defineProperty(MdGridList.prototype, \"cols\", {\n        get: function () {\n            return this._cols;\n        },\n        set: function (value) {\n            this._cols = coerceToNumber(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdGridList.prototype, \"gutterSize\", {\n        get: function () {\n            return this._gutter;\n        },\n        set: function (value) {\n            this._gutter = coerceToString(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdGridList.prototype, \"rowHeight\", {\n        /** Set internal representation of row height from the user-provided value. */\n        set: function (value) {\n            this._rowHeight = coerceToString(value);\n            this._setTileStyler();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** TODO: internal */\n    MdGridList.prototype.ngOnInit = function () {\n        this._checkCols();\n        this._checkRowHeight();\n    };\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     * TODO: internal\n     */\n    MdGridList.prototype.ngAfterContentChecked = function () {\n        this._layoutTiles();\n    };\n    /** Throw a friendly error if cols property is missing */\n    MdGridList.prototype._checkCols = function () {\n        if (!this.cols) {\n            throw new MdGridListColsError();\n        }\n    };\n    /** Default to equal width:height if rowHeight property is missing */\n    MdGridList.prototype._checkRowHeight = function () {\n        if (!this._rowHeight) {\n            this._tileStyler = new RatioTileStyler('1:1');\n        }\n    };\n    /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\n    MdGridList.prototype._setTileStyler = function () {\n        if (this._rowHeight === MD_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (this._rowHeight && this._rowHeight.match(/:/g)) {\n            this._tileStyler = new RatioTileStyler(this._rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(this._rowHeight);\n        }\n    };\n    /** Computes and applies the size and position for all children grid tiles. */\n    MdGridList.prototype._layoutTiles = function () {\n        var tiles = this._tiles.toArray();\n        var tracker = new TileCoordinator(this.cols, tiles);\n        var direction = this._dir ? this._dir.value : 'ltr';\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        for (var i = 0; i < tiles.length; i++) {\n            var pos = tracker.positions[i];\n            var tile = tiles[i];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        }\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    };\n    /** Sets style on the main grid-list element, given the style name and value. */\n    MdGridList.prototype._setListStyle = function (style) {\n        if (style) {\n            this._renderer.setElementStyle(this._element.nativeElement, style[0], style[1]);\n        }\n    };\n    __decorate$25([\n        _angular_core.ContentChildren(MdGridTile), \n        __metadata$25('design:type', _angular_core.QueryList)\n    ], MdGridList.prototype, \"_tiles\", void 0);\n    __decorate$25([\n        _angular_core.Input(), \n        __metadata$25('design:type', Object)\n    ], MdGridList.prototype, \"cols\", null);\n    __decorate$25([\n        _angular_core.Input('gutterSize'), \n        __metadata$25('design:type', Object)\n    ], MdGridList.prototype, \"gutterSize\", null);\n    __decorate$25([\n        _angular_core.Input(), \n        __metadata$25('design:type', Object), \n        __metadata$25('design:paramtypes', [Object])\n    ], MdGridList.prototype, \"rowHeight\", null);\n    MdGridList = __decorate$25([\n        _angular_core.Component({selector: 'md-grid-list',\n            template: \"<div class=\\\"md-grid-list\\\"> <ng-content></ng-content> </div>\",\n            styles: [\"md-grid-list { display: block; position: relative; } md-grid-tile { display: block; position: absolute; overflow: hidden; } md-grid-tile figure { display: flex; position: absolute; align-items: center; justify-content: center; height: 100%; top: 0; right: 0; bottom: 0; left: 0; padding: 0; margin: 0; } md-grid-tile md-grid-tile-header, md-grid-tile md-grid-tile-footer { display: flex; align-items: center; height: 48px; color: #fff; background: rgba(0, 0, 0, 0.38); overflow: hidden; padding: 0 16px; font-size: 16px; position: absolute; left: 0; right: 0; } md-grid-tile md-grid-tile-header [md-line], md-grid-tile md-grid-tile-footer [md-line] { white-space: nowrap; overflow-x: hidden; text-overflow: ellipsis; display: block; box-sizing: border-box; } md-grid-tile md-grid-tile-header [md-line]:nth-child(n+2), md-grid-tile md-grid-tile-footer [md-line]:nth-child(n+2) { font-size: 12px; } md-grid-tile md-grid-tile-header > *, md-grid-tile md-grid-tile-footer > * { margin: 0; padding: 0; font-weight: normal; font-size: inherit; } md-grid-tile md-grid-tile-header.md-2-line, md-grid-tile md-grid-tile-footer.md-2-line { height: 68px; } md-grid-tile .md-grid-list-text { display: flex; flex-direction: column; width: 100%; box-sizing: border-box; overflow: hidden; } md-grid-tile .md-grid-list-text > * { margin: 0; padding: 0; font-weight: normal; font-size: inherit; } md-grid-tile .md-grid-list-text:empty { display: none; } md-grid-tile md-grid-tile-header { top: 0; } md-grid-tile md-grid-tile-footer { bottom: 0; } md-grid-tile [md-grid-avatar] { padding-right: 16px; } [dir='rtl'] md-grid-tile [md-grid-avatar] { padding-right: 0; padding-left: 16px; } md-grid-tile [md-grid-avatar]:empty { display: none; } /*# sourceMappingURL=grid-list.css.map */ \"],\n            encapsulation: _angular_core.ViewEncapsulation.None,\n        }),\n        __param$5(2, _angular_core.Optional()), \n        __metadata$25('design:paramtypes', [_angular_core.Renderer, _angular_core.ElementRef, Dir])\n    ], MdGridList);\n    return MdGridList;\n}());\nvar MdGridListModule = (function () {\n    function MdGridListModule() {\n    }\n    MdGridListModule.forRoot = function () {\n        return {\n            ngModule: MdGridListModule,\n            providers: []\n        };\n    };\n    MdGridListModule = __decorate$25([\n        _angular_core.NgModule({\n            imports: [MdLineModule],\n            exports: [MdGridList, MdGridTile, MdGridTileText, MdLineModule],\n            declarations: [MdGridList, MdGridTile, MdGridTileText],\n        }), \n        __metadata$25('design:paramtypes', [])\n    ], MdGridListModule);\n    return MdGridListModule;\n}());\n\nvar __decorate$27 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$27 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/**\n * Content of a card, needed as it's used as a selector in the API.\n */\nvar MdCardContent = (function () {\n    function MdCardContent() {\n    }\n    MdCardContent = __decorate$27([\n        _angular_core.Directive({\n            selector: 'md-card-content'\n        }), \n        __metadata$27('design:paramtypes', [])\n    ], MdCardContent);\n    return MdCardContent;\n}());\n/**\n * Title of a card, needed as it's used as a selector in the API.\n */\nvar MdCardTitle = (function () {\n    function MdCardTitle() {\n    }\n    MdCardTitle = __decorate$27([\n        _angular_core.Directive({\n            selector: 'md-card-title'\n        }), \n        __metadata$27('design:paramtypes', [])\n    ], MdCardTitle);\n    return MdCardTitle;\n}());\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n */\nvar MdCardSubtitle = (function () {\n    function MdCardSubtitle() {\n    }\n    MdCardSubtitle = __decorate$27([\n        _angular_core.Directive({\n            selector: 'md-card-subtitle'\n        }), \n        __metadata$27('design:paramtypes', [])\n    ], MdCardSubtitle);\n    return MdCardSubtitle;\n}());\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n */\nvar MdCardActions = (function () {\n    function MdCardActions() {\n    }\n    MdCardActions = __decorate$27([\n        _angular_core.Directive({\n            selector: 'md-card-actions'\n        }), \n        __metadata$27('design:paramtypes', [])\n    ], MdCardActions);\n    return MdCardActions;\n}());\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n */\nvar MdCardFooter = (function () {\n    function MdCardFooter() {\n    }\n    MdCardFooter = __decorate$27([\n        _angular_core.Directive({\n            selector: 'md-card-footer'\n        }), \n        __metadata$27('design:paramtypes', [])\n    ], MdCardFooter);\n    return MdCardFooter;\n}());\n/*\n\n<md-card> is a basic content container component that adds the styles of a material design card.\n\nWhile you can use this component alone,\nit also provides a number of preset styles for common card sections, including:\n - md-card-title\n - md-card-subtitle\n - md-card-content\n - md-card-actions\n - md-card-footer\n\n You can see some examples of cards here:\n http://embed.plnkr.co/s5O4YcyvbLhIApSrIhtj/\n\n TODO(kara): update link to demo site when it exists\n\n*/\nvar MdCard = (function () {\n    function MdCard() {\n    }\n    MdCard = __decorate$27([\n        _angular_core.Component({selector: 'md-card',\n            template: \"<ng-content></ng-content> \",\n            styles: [\"md-card { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); will-change: box-shadow; display: block; position: relative; padding: 24px; border-radius: 2px; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; } md-card:hover { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); } .md-card-flat { box-shadow: none; } md-card-title, md-card-subtitle, md-card-content, md-card-actions { display: block; margin-bottom: 16px; } md-card-title { font-size: 24px; font-weight: 400; } md-card-subtitle { font-size: 14px; } md-card-content { font-size: 14px; } md-card-actions { margin-left: -16px; margin-right: -16px; padding: 8px 0; } md-card-actions[align='end'] { display: flex; justify-content: flex-end; } [md-card-image] { width: calc(100% + 48px); margin: 0 -24px 16px -24px; } [md-card-xl-image] { width: 240px; height: 240px; margin: -8px; } md-card-footer { position: absolute; width: 100%; min-height: 5px; bottom: 0; left: 0; } md-card-actions [md-button], md-card-actions [md-raised-button] { margin: 0 4px; } md-card-header { display: flex; flex-direction: row; height: 40px; margin: -8px 0 16px 0; } .md-card-header-text { height: 40px; margin: 0 8px; } [md-card-avatar] { height: 40px; width: 40px; border-radius: 50%; } md-card-header md-card-title { font-size: 14px; } [md-card-sm-image], [md-card-md-image], [md-card-lg-image] { margin: -8px 0; } md-card-title-group { display: flex; justify-content: space-between; margin: 0 -8px; } [md-card-sm-image] { width: 80px; height: 80px; } [md-card-md-image] { width: 112px; height: 112px; } [md-card-lg-image] { width: 152px; height: 152px; } @media (max-width: 600px) { md-card { padding: 24px 16px; } [md-card-image] { width: calc(100% + 32px); margin: 16px -16px; } md-card-title-group { margin: 0; } [md-card-xl-image] { margin-left: 0; margin-right: 0; } md-card-header { margin: -8px 0 0 0; } } md-card > :first-child, md-card-content > :first-child { margin-top: 0; } md-card > :last-child, md-card-content > :last-child { margin-bottom: 0; } [md-card-image]:first-child { margin-top: -24px; } md-card > md-card-actions:last-child { margin-bottom: -16px; padding-bottom: 0; } md-card-actions [md-button]:first-child, md-card-actions [md-raised-button]:first-child { margin-left: 0; margin-right: 0; } md-card-title:not(:first-child), md-card-subtitle:not(:first-child) { margin-top: -4px; } md-card-header md-card-subtitle:not(:first-child) { margin-top: -8px; } md-card > [md-card-xl-image]:first-child { margin-top: -8px; } md-card > [md-card-xl-image]:last-child { margin-bottom: -8px; } /*# sourceMappingURL=card.css.map */ \"],\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n        }), \n        __metadata$27('design:paramtypes', [])\n    ], MdCard);\n    return MdCard;\n}());\n/*  The following components don't have any behavior.\n They simply use content projection to wrap user content\n for flex layout purposes in <md-card> (and thus allow a cleaner, boilerplate-free API).\n\n\n<md-card-header> is a component intended to be used within the <md-card> component.\nIt adds styles for a preset header section (i.e. a title, subtitle, and avatar layout).\n\nYou can see an example of a card with a header here:\nhttp://embed.plnkr.co/tvJl19z3gZTQd6WmwkIa/\n\nTODO(kara): update link to demo site when it exists\n*/\nvar MdCardHeader = (function () {\n    function MdCardHeader() {\n    }\n    MdCardHeader = __decorate$27([\n        _angular_core.Component({selector: 'md-card-header',\n            template: \"<ng-content select=\\\"[md-card-avatar]\\\"></ng-content> <div class=\\\"md-card-header-text\\\"> <ng-content select=\\\"md-card-title, md-card-subtitle\\\"></ng-content> </div> <ng-content></ng-content> \",\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n        }), \n        __metadata$27('design:paramtypes', [])\n    ], MdCardHeader);\n    return MdCardHeader;\n}());\n/*\n\n<md-card-title-group> is a component intended to be used within the <md-card> component.\nIt adds styles for a preset layout that groups an image with a title section.\n\nYou can see an example of a card with a title-group section here:\nhttp://embed.plnkr.co/EDfgCF9eKcXjini1WODm/\n\nTODO(kara): update link to demo site when it exists\n*/\nvar MdCardTitleGroup = (function () {\n    function MdCardTitleGroup() {\n    }\n    MdCardTitleGroup = __decorate$27([\n        _angular_core.Component({selector: 'md-card-title-group',\n            template: \"<div> <ng-content select=\\\"md-card-title, md-card-subtitle\\\"></ng-content> </div> <ng-content select=\\\"img\\\"></ng-content> <ng-content></ng-content> \",\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n        }), \n        __metadata$27('design:paramtypes', [])\n    ], MdCardTitleGroup);\n    return MdCardTitleGroup;\n}());\nvar MdCardModule = (function () {\n    function MdCardModule() {\n    }\n    MdCardModule.forRoot = function () {\n        return {\n            ngModule: MdCardModule,\n            providers: []\n        };\n    };\n    MdCardModule = __decorate$27([\n        _angular_core.NgModule({\n            exports: [\n                MdCard, MdCardHeader, MdCardTitleGroup, MdCardContent, MdCardTitle, MdCardSubtitle,\n                MdCardActions, MdCardFooter\n            ],\n            declarations: [\n                MdCard, MdCardHeader, MdCardTitleGroup, MdCardContent, MdCardTitle, MdCardSubtitle,\n                MdCardActions, MdCardFooter\n            ],\n        }), \n        __metadata$27('design:paramtypes', [])\n    ], MdCardModule);\n    return MdCardModule;\n}());\n\nvar __extends$11 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate$29 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$29 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/** Exception thrown when attempting to load an icon with a name that cannot be found. */\nvar MdIconNameNotFoundError = (function (_super) {\n    __extends$11(MdIconNameNotFoundError, _super);\n    function MdIconNameNotFoundError(iconName) {\n        _super.call(this, \"Unable to find icon with the name \\\"\" + iconName + \"\\\"\");\n    }\n    return MdIconNameNotFoundError;\n}(MdError));\n/**\n * Exception thrown when attempting to load SVG content that does not contain the expected\n * <svg> tag.\n */\nvar MdIconSvgTagNotFoundError = (function (_super) {\n    __extends$11(MdIconSvgTagNotFoundError, _super);\n    function MdIconSvgTagNotFoundError() {\n        _super.call(this, '<svg> tag not found');\n    }\n    return MdIconSvgTagNotFoundError;\n}(MdError));\n/** Configuration for an icon, including the URL and possibly the cached SVG element. */\nvar SvgIconConfig = (function () {\n    function SvgIconConfig(url) {\n        this.url = url;\n        this.svgElement = null;\n    }\n    return SvgIconConfig;\n}());\n/** Returns the cache key to use for an icon namespace and name. */\nvar iconKey = function (namespace, name) { return namespace + ':' + name; };\n/**\n * Service to register and display icons used by the <md-icon> component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nvar MdIconRegistry = (function () {\n    function MdIconRegistry(_http) {\n        this._http = _http;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /**\n         * The CSS class to apply when an <md-icon> component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n    }\n    /** Registers an icon by URL in the default namespace. */\n    MdIconRegistry.prototype.addSvgIcon = function (iconName, url) {\n        return this.addSvgIconInNamespace('', iconName, url);\n    };\n    /** Registers an icon by URL in the specified namespace. */\n    MdIconRegistry.prototype.addSvgIconInNamespace = function (namespace, iconName, url) {\n        var key = iconKey(namespace, iconName);\n        this._svgIconConfigs.set(key, new SvgIconConfig(url));\n        return this;\n    };\n    /** Registers an icon set by URL in the default namespace. */\n    MdIconRegistry.prototype.addSvgIconSet = function (url) {\n        return this.addSvgIconSetInNamespace('', url);\n    };\n    /** Registers an icon set by URL in the specified namespace. */\n    MdIconRegistry.prototype.addSvgIconSetInNamespace = function (namespace, url) {\n        var config = new SvgIconConfig(url);\n        if (this._iconSetConfigs.has(namespace)) {\n            this._iconSetConfigs.get(namespace).push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    };\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an mdIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the <md-icon> element.\n     */\n    MdIconRegistry.prototype.registerFontClassAlias = function (alias, className) {\n        if (className === void 0) { className = alias; }\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    };\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    MdIconRegistry.prototype.classNameForFontAlias = function (alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    };\n    /**\n     * Sets the CSS class name to be used for icon fonts when an <md-icon> component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    MdIconRegistry.prototype.setDefaultFontSetClass = function (className) {\n        this._defaultFontSetClass = className;\n        return this;\n    };\n    /**\n     * Returns the CSS class name to be used for icon fonts when an <md-icon> component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    MdIconRegistry.prototype.getDefaultFontSetClass = function () {\n        return this._defaultFontSetClass;\n    };\n    /**\n     * Returns an Observable that produces the icon (as an <svg> DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     */\n    MdIconRegistry.prototype.getSvgIconFromUrl = function (url) {\n        var _this = this;\n        if (this._cachedIconsByUrl.has(url)) {\n            return rxjs_Observable.Observable.of(cloneSvg(this._cachedIconsByUrl.get(url)));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(url))\n            .do(function (svg) { return _this._cachedIconsByUrl.set(url, svg); })\n            .map(function (svg) { return cloneSvg(svg); });\n    };\n    /**\n     * Returns an Observable that produces the icon (as an <svg> DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an MdIconNameNotFoundError.\n     */\n    MdIconRegistry.prototype.getNamedSvgIcon = function (name, namespace) {\n        if (namespace === void 0) { namespace = ''; }\n        // Return (copy of) cached icon if possible.\n        var key = iconKey(namespace, name);\n        if (this._svgIconConfigs.has(key)) {\n            return this._getSvgFromConfig(this._svgIconConfigs.get(key));\n        }\n        // See if we have any icon sets registered for the namespace.\n        var iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return rxjs_Observable.Observable.throw(new MdIconNameNotFoundError(key));\n    };\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    MdIconRegistry.prototype._getSvgFromConfig = function (config) {\n        if (config.svgElement) {\n            // We already have the SVG element for this icon, return a copy.\n            return rxjs_Observable.Observable.of(cloneSvg(config.svgElement));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config)\n                .do(function (svg) { return config.svgElement = svg; })\n                .map(function (svg) { return cloneSvg(svg); });\n        }\n    };\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new <svg> element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * MdIconNameNotFoundError if no icon with the specified name can be found.\n     */\n    MdIconRegistry.prototype._getSvgFromIconSetConfigs = function (name, iconSetConfigs) {\n        var _this = this;\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        var namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return rxjs_Observable.Observable.of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        var iconSetFetchRequests = iconSetConfigs\n            .filter(function (iconSetConfig) { return !iconSetConfig.svgElement; })\n            .map(function (iconSetConfig) {\n            return _this._loadSvgIconSetFromConfig(iconSetConfig)\n                .catch(function (err, caught) {\n                // Swallow errors fetching individual URLs so the combined Observable won't\n                // necessarily fail.\n                console.log(\"Loading icon set URL: \" + iconSetConfig.url + \" failed: \" + err);\n                return rxjs_Observable.Observable.of(null);\n            })\n                .do(function (svg) {\n                // Cache SVG element.\n                if (svg) {\n                    iconSetConfig.svgElement = svg;\n                }\n            });\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return rxjs_Observable.Observable.forkJoin(iconSetFetchRequests)\n            .map(function (ignoredResults) {\n            var foundIcon = _this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (!foundIcon) {\n                throw new MdIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        });\n    };\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    MdIconRegistry.prototype._extractIconWithNameFromAnySet = function (iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (var i = iconSetConfigs.length - 1; i >= 0; i--) {\n            var config = iconSetConfigs[i];\n            if (config.svgElement) {\n                var foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName, config);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    MdIconRegistry.prototype._loadSvgIconFromConfig = function (config) {\n        var _this = this;\n        return this._fetchUrl(config.url)\n            .map(function (svgText) { return _this._createSvgElementForSingleIcon(svgText, config); });\n    };\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    MdIconRegistry.prototype._loadSvgIconSetFromConfig = function (config) {\n        var _this = this;\n        // TODO: Document that icons should only be loaded from trusted sources.\n        return this._fetchUrl(config.url)\n            .map(function (svgText) { return _this._svgElementFromString(svgText); });\n    };\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     */\n    MdIconRegistry.prototype._createSvgElementForSingleIcon = function (responseText, config) {\n        var svg = this._svgElementFromString(responseText);\n        this._setSvgAttributes(svg, config);\n        return svg;\n    };\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    MdIconRegistry.prototype._extractSvgIconFromSet = function (iconSet, iconName, config) {\n        var iconNode = iconSet.querySelector('#' + iconName);\n        if (!iconNode) {\n            return null;\n        }\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconNode.tagName.toLowerCase() == 'svg') {\n            return this._setSvgAttributes(iconNode.cloneNode(true), config);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        var svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconNode.cloneNode(true));\n        return this._setSvgAttributes(svg, config);\n    };\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    MdIconRegistry.prototype._svgElementFromString = function (str) {\n        // TODO: Is there a better way than innerHTML? Renderer doesn't appear to have a method for\n        // creating an element from an HTML string.\n        var div = document.createElement('DIV');\n        div.innerHTML = str;\n        var svg = div.querySelector('svg');\n        if (!svg) {\n            throw new MdIconSvgTagNotFoundError();\n        }\n        return svg;\n    };\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    MdIconRegistry.prototype._setSvgAttributes = function (svg, config) {\n        if (!svg.getAttribute('xmlns')) {\n            svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        }\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        return svg;\n    };\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    MdIconRegistry.prototype._fetchUrl = function (url) {\n        var _this = this;\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        if (this._inProgressUrlFetches.has(url)) {\n            return this._inProgressUrlFetches.get(url);\n        }\n        // TODO(jelbourn): for some reason, the `finally` operator \"loses\" the generic type on the\n        // Observable. Figure out why and fix it.\n        var req = this._http.get(url)\n            .map(function (response) { return response.text(); })\n            .finally(function () {\n            _this._inProgressUrlFetches.delete(url);\n        })\n            .share();\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    };\n    MdIconRegistry = __decorate$29([\n        _angular_core.Injectable(), \n        __metadata$29('design:paramtypes', [_angular_http.Http])\n    ], MdIconRegistry);\n    return MdIconRegistry;\n}());\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n\nvar __extends$10 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate$28 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$28 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/** Exception thrown when an invalid icon name is passed to an md-icon component. */\nvar MdIconInvalidNameError = (function (_super) {\n    __extends$10(MdIconInvalidNameError, _super);\n    function MdIconInvalidNameError(iconName) {\n        _super.call(this, \"Invalid icon name: \\\"\" + iconName + \"\\\"\");\n    }\n    return MdIconInvalidNameError;\n}(MdError));\n/**\n * Component to display an icon. It can be used in the following ways:\n * - Specify the svgSrc input to load an SVG icon from a URL. The SVG content is directly inlined\n *   as a child of the <md-icon> component, so that CSS styles can easily be applied to it.\n *   The URL is loaded via an XMLHttpRequest, so it must be on the same domain as the page or its\n *   server must be configured to allow cross-domain requests.\n *   Example:\n *     <md-icon svgSrc=\"assets/arrow.svg\"></md-icon>\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MdIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     <md-icon svgIcon=\"left-arrow\"></md-icon>\n *     <md-icon svgIcon=\"animals:cat\"></md-icon>\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the <md-icon>\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MdIconRegistry.registerFontClassAlias.\n *   Examples:\n *     <md-icon>home</md-icon>\n *     <md-icon fontSet=\"myfont\">sun</md-icon>\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     <md-icon fontSet=\"fa\" fontIcon=\"alarm\"></md-icon>\n */\nvar MdIcon = (function () {\n    function MdIcon(_element, _renderer, _mdIconRegistry) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._mdIconRegistry = _mdIconRegistry;\n        this.hostAriaLabel = '';\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws a MdIconInvalidNameError if the name contains two or more ':' separators.\n     * Examples:\n     *   'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws MdIconInvalidNameError)\n     */\n    MdIcon.prototype._splitIconName = function (iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        var parts = iconName.split(':');\n        switch (parts.length) {\n            case 1:\n                // Use default namespace.\n                return ['', parts[0]];\n            case 2:\n                return parts;\n            default:\n                throw new MdIconInvalidNameError(iconName);\n        }\n    };\n    /** TODO: internal */\n    MdIcon.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        var changedInputs = Object.keys(changes);\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        if (changedInputs.indexOf('svgIcon') != -1 || changedInputs.indexOf('svgSrc') != -1) {\n            if (this.svgIcon) {\n                var _a = this._splitIconName(this.svgIcon), namespace = _a[0], iconName = _a[1];\n                this._mdIconRegistry.getNamedSvgIcon(iconName, namespace).first().subscribe(function (svg) { return _this._setSvgElement(svg); }, function (err) { return console.log(\"Error retrieving icon: \" + err); });\n            }\n            else if (this.svgSrc) {\n                this._mdIconRegistry.getSvgIconFromUrl(this.svgSrc).first().subscribe(function (svg) { return _this._setSvgElement(svg); }, function (err) { return console.log(\"Error retrieving icon: \" + err); });\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n        this._updateAriaLabel();\n    };\n    /** TODO: internal */\n    MdIcon.prototype.ngOnInit = function () {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <md-icon>arrow</md-icon>. In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    };\n    /** TODO: internal */\n    MdIcon.prototype.ngAfterViewChecked = function () {\n        // Update aria label here because it may depend on the projected text content.\n        // (e.g. <md-icon>home</md-icon> should use 'home').\n        this._updateAriaLabel();\n    };\n    MdIcon.prototype._updateAriaLabel = function () {\n        var ariaLabel = this._getAriaLabel();\n        if (ariaLabel) {\n            this._renderer.setElementAttribute(this._element.nativeElement, 'aria-label', ariaLabel);\n        }\n    };\n    MdIcon.prototype._getAriaLabel = function () {\n        // If the parent provided an aria-label attribute value, use it as-is. Otherwise look for a\n        // reasonable value from the alt attribute, font icon name, SVG icon name, or (for ligatures)\n        // the text content of the directive.\n        var label = this.hostAriaLabel ||\n            this.alt ||\n            this.fontIcon ||\n            this._splitIconName(this.svgIcon)[1];\n        if (label) {\n            return label;\n        }\n        // The \"content\" of an SVG icon is not a useful label.\n        if (this._usingFontIcon()) {\n            var text = this._element.nativeElement.textContent;\n            if (text) {\n                return text;\n            }\n        }\n        // TODO: Warn here in dev mode.\n        return null;\n    };\n    MdIcon.prototype._usingFontIcon = function () {\n        return !(this.svgIcon || this.svgSrc);\n    };\n    MdIcon.prototype._setSvgElement = function (svg) {\n        var layoutElement = this._element.nativeElement;\n        // Remove existing child nodes and add the new SVG element.\n        // We would use renderer.detachView(Array.from(layoutElement.childNodes)) here,\n        // but it fails in IE11: https://github.com/angular/angular/issues/6327\n        layoutElement.innerHTML = '';\n        this._renderer.projectNodes(layoutElement, [svg]);\n    };\n    MdIcon.prototype._updateFontIconClasses = function () {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        var elem = this._element.nativeElement;\n        var fontSetClass = this.fontSet ?\n            this._mdIconRegistry.classNameForFontAlias(this.fontSet) :\n            this._mdIconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                this._renderer.setElementClass(elem, this._previousFontSetClass, false);\n            }\n            if (fontSetClass) {\n                this._renderer.setElementClass(elem, fontSetClass, true);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                this._renderer.setElementClass(elem, this._previousFontIconClass, false);\n            }\n            if (this.fontIcon) {\n                this._renderer.setElementClass(elem, this.fontIcon, true);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    };\n    __decorate$28([\n        _angular_core.Input(), \n        __metadata$28('design:type', String)\n    ], MdIcon.prototype, \"svgSrc\", void 0);\n    __decorate$28([\n        _angular_core.Input(), \n        __metadata$28('design:type', String)\n    ], MdIcon.prototype, \"svgIcon\", void 0);\n    __decorate$28([\n        _angular_core.Input(), \n        __metadata$28('design:type', String)\n    ], MdIcon.prototype, \"fontSet\", void 0);\n    __decorate$28([\n        _angular_core.Input(), \n        __metadata$28('design:type', String)\n    ], MdIcon.prototype, \"fontIcon\", void 0);\n    __decorate$28([\n        _angular_core.Input(), \n        __metadata$28('design:type', String)\n    ], MdIcon.prototype, \"alt\", void 0);\n    __decorate$28([\n        _angular_core.Input('aria-label'), \n        __metadata$28('design:type', String)\n    ], MdIcon.prototype, \"hostAriaLabel\", void 0);\n    MdIcon = __decorate$28([\n        _angular_core.Component({template: '<ng-content></ng-content>',\n            selector: 'md-icon',\n            styles: [\"md-icon { background-repeat: no-repeat; display: inline-block; fill: currentColor; height: 24px; width: 24px; } /*# sourceMappingURL=icon.css.map */ \"],\n            host: {\n                'role': 'img',\n            },\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n        }), \n        __metadata$28('design:paramtypes', [_angular_core.ElementRef, _angular_core.Renderer, MdIconRegistry])\n    ], MdIcon);\n    return MdIcon;\n}());\nvar MdIconModule = (function () {\n    function MdIconModule() {\n    }\n    MdIconModule.forRoot = function () {\n        return {\n            ngModule: MdIconModule,\n            providers: [MdIconRegistry],\n        };\n    };\n    MdIconModule = __decorate$28([\n        _angular_core.NgModule({\n            imports: [_angular_http.HttpModule],\n            exports: [MdIcon],\n            declarations: [MdIcon],\n        }), \n        __metadata$28('design:paramtypes', [])\n    ], MdIconModule);\n    return MdIconModule;\n}());\n\nvar __extends$12 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate$30 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$30 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n// TODO(josephperrott): Benchpress tests.\n/** A single degree in radians. */\nvar DEGREE_IN_RADIANS = Math.PI / 180;\n/** Duration of the indeterminate animation. */\nvar DURATION_INDETERMINATE = 667;\n/** Duration of the indeterminate animation. */\nvar DURATION_DETERMINATE = 225;\n/** Start animation value of the indeterminate animation */\nvar startIndeterminate = 3;\n/** End animation value of the indeterminate animation */\nvar endIndeterminate = 80;\n/* Maximum angle for the arc. The angle can't be exactly 360, because the arc becomes hidden. */\nvar MAX_ANGLE = 359.99 / 100;\n/**\n * <md-progress-circle> component.\n */\nvar MdProgressCircle = (function () {\n    function MdProgressCircle(_changeDetectorRef, _ngZone, _elementRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        /** The id of the last requested animation. */\n        this._lastAnimationId = 0;\n        this._mode = 'determinate';\n    }\n    Object.defineProperty(MdProgressCircle.prototype, \"_ariaValueMin\", {\n        /**\n         * Values for aria max and min are only defined as numbers when in a determinate mode.  We do this\n         * because voiceover does not report the progress indicator as indeterminate if the aria min\n         * and/or max value are number values.\n         */\n        get: function () {\n            return this.mode == 'determinate' ? 0 : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdProgressCircle.prototype, \"_ariaValueMax\", {\n        get: function () {\n            return this.mode == 'determinate' ? 100 : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdProgressCircle.prototype, \"interdeterminateInterval\", {\n        /** TODO: internal */\n        get: function () {\n            return this._interdeterminateInterval;\n        },\n        /** TODO: internal */\n        set: function (interval) {\n            clearInterval(this._interdeterminateInterval);\n            this._interdeterminateInterval = interval;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Clean up any animations that were running. */\n    MdProgressCircle.prototype.ngOnDestroy = function () {\n        this._cleanupIndeterminateAnimation();\n    };\n    Object.defineProperty(MdProgressCircle.prototype, \"value\", {\n        get: function () {\n            if (this.mode == 'determinate') {\n                return this._value;\n            }\n        },\n        set: function (v) {\n            if (v != null && this.mode == 'determinate') {\n                var newValue = clamp(v);\n                this._animateCircle((this.value || 0), newValue, linearEase, DURATION_DETERMINATE, 0);\n                this._value = newValue;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdProgressCircle.prototype, \"mode\", {\n        /**\n         * Mode of the progress circle\n         *\n         * Input must be one of the values from ProgressMode, defaults to 'determinate'.\n         * mode is bound to the host as the attribute host.\n         */\n        get: function () {\n            return this._mode;\n        },\n        set: function (m) {\n            if (m == 'indeterminate') {\n                this._startIndeterminateAnimation();\n            }\n            else {\n                this._cleanupIndeterminateAnimation();\n            }\n            this._mode = m;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Animates the circle from one percentage value to another.\n     *\n     * @param animateFrom The percentage of the circle filled starting the animation.\n     * @param animateTo The percentage of the circle filled ending the animation.\n     * @param ease The easing function to manage the pace of change in the animation.\n     * @param duration The length of time to show the animation, in milliseconds.\n     * @param rotation The starting angle of the circle fill, with 0° represented at the top center\n     *    of the circle.\n     */\n    MdProgressCircle.prototype._animateCircle = function (animateFrom, animateTo, ease, duration, rotation) {\n        var _this = this;\n        var id = ++this._lastAnimationId;\n        var startTime = Date.now();\n        var changeInValue = animateTo - animateFrom;\n        // No need to animate it if the values are the same\n        if (animateTo === animateFrom) {\n            this._renderArc(animateTo, rotation);\n        }\n        else {\n            var animation_1 = function () {\n                var elapsedTime = Math.max(0, Math.min(Date.now() - startTime, duration));\n                _this._renderArc(ease(elapsedTime, animateFrom, changeInValue, duration), rotation);\n                // Prevent overlapping animations by checking if a new animation has been called for and\n                // if the animation has lasted longer than the animation duration.\n                if (id === _this._lastAnimationId && elapsedTime < duration) {\n                    requestAnimationFrame(animation_1);\n                }\n            };\n            // Run the animation outside of Angular's zone, in order to avoid\n            // hitting ZoneJS and change detection on each frame.\n            this._ngZone.runOutsideAngular(animation_1);\n        }\n    };\n    /**\n     * Starts the indeterminate animation interval, if it is not already running.\n     */\n    MdProgressCircle.prototype._startIndeterminateAnimation = function () {\n        var _this = this;\n        var rotationStartPoint = 0;\n        var start = startIndeterminate;\n        var end = endIndeterminate;\n        var duration = DURATION_INDETERMINATE;\n        var animate = function () {\n            _this._animateCircle(start, end, materialEase, duration, rotationStartPoint);\n            // Prevent rotation from reaching Number.MAX_SAFE_INTEGER.\n            rotationStartPoint = (rotationStartPoint + end) % 100;\n            var temp = start;\n            start = -end;\n            end = -temp;\n        };\n        if (!this.interdeterminateInterval) {\n            this._ngZone.runOutsideAngular(function () {\n                _this.interdeterminateInterval = setInterval(animate, duration + 50, 0, false);\n                animate();\n            });\n        }\n    };\n    /**\n     * Removes interval, ending the animation.\n     */\n    MdProgressCircle.prototype._cleanupIndeterminateAnimation = function () {\n        this.interdeterminateInterval = null;\n    };\n    /**\n     * Renders the arc onto the SVG element. Proxies `getArc` while setting the proper\n     * DOM attribute on the `<path>`.\n     */\n    MdProgressCircle.prototype._renderArc = function (currentValue, rotation) {\n        // Caches the path reference so it doesn't have to be looked up every time.\n        var path = this._path = this._path || this._elementRef.nativeElement.querySelector('path');\n        // Ensure that the path was found. This may not be the case if the\n        // animation function fires too early.\n        if (path) {\n            path.setAttribute('d', getSvgArc(currentValue, rotation));\n        }\n    };\n    __decorate$30([\n        _angular_core.Input(),\n        _angular_core.HostBinding('attr.aria-valuenow'), \n        __metadata$30('design:type', Object)\n    ], MdProgressCircle.prototype, \"value\", null);\n    __decorate$30([\n        _angular_core.HostBinding('attr.mode'),\n        _angular_core.Input(), \n        __metadata$30('design:type', Object)\n    ], MdProgressCircle.prototype, \"mode\", null);\n    MdProgressCircle = __decorate$30([\n        _angular_core.Component({selector: 'md-progress-circle',\n            host: {\n                'role': 'progressbar',\n                '[attr.aria-valuemin]': '_ariaValueMin',\n                '[attr.aria-valuemax]': '_ariaValueMax',\n            },\n            template: \"<!-- preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's center.  The center of the circle with remain at the center of the md-progress-circle element containing the SVG. --> <svg viewBox=\\\"0 0 100 100\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"> <path></path> </svg> \",\n            styles: [\":host { display: block; height: 100px; width: 100px; overflow: hidden; } :host svg { height: 100%; width: 100%; transform-origin: center; } :host path { fill: transparent; stroke-width: 10px; } :host[mode='indeterminate'] svg { animation-duration: 5250ms, 2887.5ms; animation-name: md-progress-circle-sporadic-rotate, md-progress-circle-linear-rotate; animation-timing-function: cubic-bezier(0.35, 0, 0.25, 1), linear; animation-iteration-count: infinite; transition: none; } @keyframes md-progress-circle-linear-rotate { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } } @keyframes md-progress-circle-sporadic-rotate { 12.5% { transform: rotate(135deg); } 25% { transform: rotate(270deg); } 37.5% { transform: rotate(405deg); } 50% { transform: rotate(540deg); } 62.5% { transform: rotate(675deg); } 75% { transform: rotate(810deg); } 87.5% { transform: rotate(945deg); } 100% { transform: rotate(1080deg); } } /*# sourceMappingURL=progress-circle.css.map */ \"],\n            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n        }), \n        __metadata$30('design:paramtypes', [_angular_core.ChangeDetectorRef, _angular_core.NgZone, _angular_core.ElementRef])\n    ], MdProgressCircle);\n    return MdProgressCircle;\n}());\n/**\n * <md-spinner> component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate <md-progress-circle> instance.\n */\nvar MdSpinner = (function (_super) {\n    __extends$12(MdSpinner, _super);\n    function MdSpinner(changeDetectorRef, elementRef, ngZone) {\n        _super.call(this, changeDetectorRef, ngZone, elementRef);\n        this.mode = 'indeterminate';\n    }\n    MdSpinner = __decorate$30([\n        _angular_core.Component({selector: 'md-spinner',\n            host: {\n                'role': 'progressbar',\n                'mode': 'indeterminate',\n            },\n            template: \"<!-- preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's center.  The center of the circle with remain at the center of the md-progress-circle element containing the SVG. --> <svg viewBox=\\\"0 0 100 100\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"> <path></path> </svg> \",\n            styles: [\":host { display: block; height: 100px; width: 100px; overflow: hidden; } :host svg { height: 100%; width: 100%; transform-origin: center; } :host path { fill: transparent; stroke-width: 10px; } :host[mode='indeterminate'] svg { animation-duration: 5250ms, 2887.5ms; animation-name: md-progress-circle-sporadic-rotate, md-progress-circle-linear-rotate; animation-timing-function: cubic-bezier(0.35, 0, 0.25, 1), linear; animation-iteration-count: infinite; transition: none; } @keyframes md-progress-circle-linear-rotate { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } } @keyframes md-progress-circle-sporadic-rotate { 12.5% { transform: rotate(135deg); } 25% { transform: rotate(270deg); } 37.5% { transform: rotate(405deg); } 50% { transform: rotate(540deg); } 62.5% { transform: rotate(675deg); } 75% { transform: rotate(810deg); } 87.5% { transform: rotate(945deg); } 100% { transform: rotate(1080deg); } } /*# sourceMappingURL=progress-circle.css.map */ \"],\n        }), \n        __metadata$30('design:paramtypes', [_angular_core.ChangeDetectorRef, _angular_core.ElementRef, _angular_core.NgZone])\n    ], MdSpinner);\n    return MdSpinner;\n}(MdProgressCircle));\n/**\n * Module functions.\n */\n/** Clamps a value to be between 0 and 100. */\nfunction clamp(v) {\n    return Math.max(0, Math.min(100, v));\n}\n/**\n * Converts Polar coordinates to Cartesian.\n */\nfunction polarToCartesian(radius, pathRadius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;\n    return (radius + (pathRadius * Math.cos(angleInRadians))) +\n        ',' + (radius + (pathRadius * Math.sin(angleInRadians)));\n}\n/**\n * Easing function for linear animation.\n */\nfunction linearEase(currentTime, startValue, changeInValue, duration) {\n    return changeInValue * currentTime / duration + startValue;\n}\n/**\n * Easing function to match material design indeterminate animation.\n */\nfunction materialEase(currentTime, startValue, changeInValue, duration) {\n    var time = currentTime / duration;\n    var timeCubed = Math.pow(time, 3);\n    var timeQuad = Math.pow(time, 4);\n    var timeQuint = Math.pow(time, 5);\n    return startValue + changeInValue * ((6 * timeQuint) + (-15 * timeQuad) + (10 * timeCubed));\n}\n/**\n * Determines the path value to define the arc.  Converting percentage values to to polar\n * coordinates on the circle, and then to cartesian coordinates in the viewport.\n *\n * @param currentValue The current percentage value of the progress circle, the percentage of the\n *    circle to fill.\n * @param rotation The starting point of the circle with 0 being the 0 degree point.\n * @return A string for an SVG path representing a circle filled from the starting point to the\n *    percentage value provided.\n */\nfunction getSvgArc(currentValue, rotation) {\n    var startPoint = rotation || 0;\n    var radius = 50;\n    var pathRadius = 40;\n    var startAngle = startPoint * MAX_ANGLE;\n    var endAngle = currentValue * MAX_ANGLE;\n    var start = polarToCartesian(radius, pathRadius, startAngle);\n    var end = polarToCartesian(radius, pathRadius, endAngle + startAngle);\n    var arcSweep = endAngle < 0 ? 0 : 1;\n    var largeArcFlag;\n    if (endAngle < 0) {\n        largeArcFlag = endAngle >= -180 ? 0 : 1;\n    }\n    else {\n        largeArcFlag = endAngle <= 180 ? 0 : 1;\n    }\n    return \"M\" + start + \"A\" + pathRadius + \",\" + pathRadius + \" 0 \" + largeArcFlag + \",\" + arcSweep + \" \" + end;\n}\nvar MdProgressCircleModule = (function () {\n    function MdProgressCircleModule() {\n    }\n    MdProgressCircleModule.forRoot = function () {\n        return {\n            ngModule: MdProgressCircleModule,\n            providers: []\n        };\n    };\n    MdProgressCircleModule = __decorate$30([\n        _angular_core.NgModule({\n            exports: [MdProgressCircle, MdSpinner],\n            declarations: [MdProgressCircle, MdSpinner],\n        }), \n        __metadata$30('design:paramtypes', [])\n    ], MdProgressCircleModule);\n    return MdProgressCircleModule;\n}());\n\nvar __decorate$31 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$31 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n// TODO(josephperrott): Benchpress tests.\n// TODO(josephperrott): Add ARIA attributes for progressbar \"for\".\n/**\n * <md-progress-bar> component.\n */\nvar MdProgressBar = (function () {\n    function MdProgressBar() {\n        /** Value of the progressbar. Defaults to zero. Mirrored to aria-valuenow. */\n        this._value = 0;\n        /** Buffer value of the progress bar. Defaults to zero. */\n        this._bufferValue = 0;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n    }\n    Object.defineProperty(MdProgressBar.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (v) {\n            this._value = clamp$1(v || 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdProgressBar.prototype, \"bufferValue\", {\n        get: function () {\n            return this._bufferValue;\n        },\n        set: function (v) {\n            this._bufferValue = clamp$1(v || 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Gets the current transform value for the progress bar's primary indicator. */\n    MdProgressBar.prototype._primaryTransform = function () {\n        var scale = this.value / 100;\n        return { transform: \"scaleX(\" + scale + \")\" };\n    };\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator.  Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     */\n    MdProgressBar.prototype._bufferTransform = function () {\n        if (this.mode == 'buffer') {\n            var scale = this.bufferValue / 100;\n            return { transform: \"scaleX(\" + scale + \")\" };\n        }\n    };\n    __decorate$31([\n        _angular_core.Input(),\n        _angular_core.HostBinding('attr.aria-valuenow'), \n        __metadata$31('design:type', Object)\n    ], MdProgressBar.prototype, \"value\", null);\n    __decorate$31([\n        _angular_core.Input(), \n        __metadata$31('design:type', Object)\n    ], MdProgressBar.prototype, \"bufferValue\", null);\n    __decorate$31([\n        _angular_core.Input(),\n        _angular_core.HostBinding('attr.mode'), \n        __metadata$31('design:type', Object)\n    ], MdProgressBar.prototype, \"mode\", void 0);\n    MdProgressBar = __decorate$31([\n        _angular_core.Component({selector: 'md-progress-bar',\n            host: {\n                'role': 'progressbar',\n                'aria-valuemin': '0',\n                'aria-valuemax': '100',\n            },\n            template: \"<!-- The background div is named as such because it appears below the other divs and is not sized based on values. --> <div class=\\\"md-progress-bar-background\\\"></div> <div class=\\\"md-progress-bar-buffer\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div> <div class=\\\"md-progress-bar-primary md-progress-bar-fill\\\" [ngStyle]=\\\"_primaryTransform()\\\"></div> <div class=\\\"md-progress-bar-secondary md-progress-bar-fill\\\"></div> \",\n            styles: [\":host { display: block; height: 5px; overflow: hidden; position: relative; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; } :host .md-progress-bar-background { background-repeat: repeat-x; background-size: 10px 4px; height: 100%; position: absolute; visibility: hidden; width: 100%; } :host .md-progress-bar-buffer { height: 100%; position: absolute; transform-origin: top left; transition: transform 250ms ease; width: 100%; } :host .md-progress-bar-secondary { visibility: hidden; } :host .md-progress-bar-fill { animation: none; height: 100%; position: absolute; transform-origin: top left; transition: transform 250ms ease; width: 100%; } :host .md-progress-bar-fill::after { animation: none; content: ''; display: inline-block; height: 100%; position: absolute; width: 100%; left: 0; } :host[mode='query'] { transform: rotateZ(180deg); } :host[mode='indeterminate'] .md-progress-bar-fill, :host[mode='query'] .md-progress-bar-fill { transition: none; } :host[mode='indeterminate'] .md-progress-bar-primary, :host[mode='query'] .md-progress-bar-primary { animation: md-progress-bar-primary-indeterminate-translate 2000ms infinite linear; left: -145.166611%; } :host[mode='indeterminate'] .md-progress-bar-primary.md-progress-bar-fill::after, :host[mode='query'] .md-progress-bar-primary.md-progress-bar-fill::after { animation: md-progress-bar-primary-indeterminate-scale 2000ms infinite linear; } :host[mode='indeterminate'] .md-progress-bar-secondary, :host[mode='query'] .md-progress-bar-secondary { animation: md-progress-bar-secondary-indeterminate-translate 2000ms infinite linear; left: -54.888891%; visibility: visible; } :host[mode='indeterminate'] .md-progress-bar-secondary.md-progress-bar-fill::after, :host[mode='query'] .md-progress-bar-secondary.md-progress-bar-fill::after { animation: md-progress-bar-secondary-indeterminate-scale 2000ms infinite linear; } :host[mode='buffer'] .md-progress-bar-background { animation: md-progress-bar-background-scroll 250ms infinite linear; visibility: visible; } :host-context([dir='rtl']) { transform: rotateY(180deg); } @keyframes md-progress-bar-primary-indeterminate-translate { 0% { transform: translateX(0); } 20% { animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582); transform: translateX(0); } 59.15% { animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635); transform: translateX(83.67142%); } 100% { transform: translateX(200.61106%); } } @keyframes md-progress-bar-primary-indeterminate-scale { 0% { transform: scaleX(0.08); } 36.65% { animation-timing-function: cubic-bezier(0.33473, 0.12482, 0.78584, 1); transform: scaleX(0.08); } 69.15% { animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1); transform: scaleX(0.66148); } 100% { transform: scaleX(0.08); } } @keyframes md-progress-bar-secondary-indeterminate-translate { 0% { animation-timing-function: cubic-bezier(0.15, 0, 0.51506, 0.40969); transform: translateX(0); } 25% { animation-timing-function: cubic-bezier(0.31033, 0.28406, 0.8, 0.73371); transform: translateX(37.65191%); } 48.35% { animation-timing-function: cubic-bezier(0.4, 0.62704, 0.6, 0.90203); transform: translateX(84.38617%); } 100% { transform: translateX(160.27778%); } } @keyframes md-progress-bar-secondary-indeterminate-scale { 0% { animation-timing-function: cubic-bezier(0.15, 0, 0.51506, 0.40969); transform: scaleX(0.08); } 19.15% { animation-timing-function: cubic-bezier(0.31033, 0.28406, 0.8, 0.73371); transform: scaleX(0.4571); } 44.15% { animation-timing-function: cubic-bezier(0.4, 0.62704, 0.6, 0.90203); transform: scaleX(0.72796); } 100% { transform: scaleX(0.08); } } @keyframes md-progress-bar-background-scroll { to { transform: translateX(-10px); } } /*# sourceMappingURL=progress-bar.css.map */ \"],\n            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n        }), \n        __metadata$31('design:paramtypes', [])\n    ], MdProgressBar);\n    return MdProgressBar;\n}());\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp$1(v, min, max) {\n    if (min === void 0) { min = 0; }\n    if (max === void 0) { max = 100; }\n    return Math.max(min, Math.min(max, v));\n}\nvar MdProgressBarModule = (function () {\n    function MdProgressBarModule() {\n    }\n    MdProgressBarModule.forRoot = function () {\n        return {\n            ngModule: MdProgressBarModule,\n            providers: []\n        };\n    };\n    MdProgressBarModule = __decorate$31([\n        _angular_core.NgModule({\n            imports: [_angular_common.CommonModule],\n            exports: [MdProgressBar],\n            declarations: [MdProgressBar],\n        }), \n        __metadata$31('design:paramtypes', [])\n    ], MdProgressBarModule);\n    return MdProgressBarModule;\n}());\n\nvar __extends$13 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate$32 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$32 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar noop = function () { };\nvar MD_INPUT_CONTROL_VALUE_ACCESSOR = {\n    provide: _angular_forms.NG_VALUE_ACCESSOR,\n    useExisting: _angular_core.forwardRef(function () { return MdInput; }),\n    multi: true\n};\n// Invalid input type. Using one of these will throw an MdInputUnsupportedTypeError.\nvar MD_INPUT_INVALID_INPUT_TYPE = [\n    'file',\n    'radio',\n    'checkbox',\n];\nvar nextUniqueId$1 = 0;\nvar MdInputPlaceholderConflictError = (function (_super) {\n    __extends$13(MdInputPlaceholderConflictError, _super);\n    function MdInputPlaceholderConflictError() {\n        _super.call(this, 'Placeholder attribute and child element were both specified.');\n    }\n    return MdInputPlaceholderConflictError;\n}(MdError));\nvar MdInputUnsupportedTypeError = (function (_super) {\n    __extends$13(MdInputUnsupportedTypeError, _super);\n    function MdInputUnsupportedTypeError(type) {\n        _super.call(this, \"Input type \\\"\" + type + \"\\\" isn't supported by md-input.\");\n    }\n    return MdInputUnsupportedTypeError;\n}(MdError));\nvar MdInputDuplicatedHintError = (function (_super) {\n    __extends$13(MdInputDuplicatedHintError, _super);\n    function MdInputDuplicatedHintError(align) {\n        _super.call(this, \"A hint was already declared for 'align=\\\"\" + align + \"\\\"'.\");\n    }\n    return MdInputDuplicatedHintError;\n}(MdError));\n/**\n * The placeholder directive. The content can declare this to implement more\n * complex placeholders.\n */\nvar MdPlaceholder = (function () {\n    function MdPlaceholder() {\n    }\n    MdPlaceholder = __decorate$32([\n        _angular_core.Directive({\n            selector: 'md-placeholder'\n        }), \n        __metadata$32('design:paramtypes', [])\n    ], MdPlaceholder);\n    return MdPlaceholder;\n}());\n/** The hint directive, used to tag content as hint labels (going under the input). */\nvar MdHint = (function () {\n    function MdHint() {\n        // Whether to align the hint label at the start or end of the line.\n        this.align = 'start';\n    }\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Object)\n    ], MdHint.prototype, \"align\", void 0);\n    MdHint = __decorate$32([\n        _angular_core.Directive({\n            selector: 'md-hint',\n            host: {\n                '[class.md-right]': 'align == \"end\"',\n                '[class.md-hint]': 'true'\n            }\n        }), \n        __metadata$32('design:paramtypes', [])\n    ], MdHint);\n    return MdHint;\n}());\n/**\n * Component that represents a text input. It encapsulates the <input> HTMLElement and\n * improve on its behaviour, along with styling it according to the Material Design.\n */\nvar MdInput = (function () {\n    function MdInput(elementRef) {\n        this._focused = false;\n        this._value = '';\n        /** Callback registered via registerOnTouched (ControlValueAccessor) */\n        this._onTouchedCallback = noop;\n        /** Callback registered via registerOnChange (ControlValueAccessor) */\n        this._onChangeCallback = noop;\n        /**\n         * Bindings.\n         */\n        this.align = 'start';\n        this.dividerColor = 'primary';\n        this.hintLabel = '';\n        this.id = \"md-input-\" + nextUniqueId$1++;\n        this.list = null;\n        this.max = null;\n        this.maxlength = null;\n        this.min = null;\n        this.minlength = null;\n        this.placeholder = null;\n        this.step = null;\n        this.tabindex = null;\n        this.type = 'text';\n        this.name = null;\n        // textarea-specific\n        this.rows = null;\n        this.cols = null;\n        this.wrap = null;\n        this._floatingPlaceholder = true;\n        this._autofocus = false;\n        this._disabled = false;\n        this._readonly = false;\n        this._required = false;\n        this._spellcheck = false;\n        this._blurEmitter = new _angular_core.EventEmitter();\n        this._focusEmitter = new _angular_core.EventEmitter();\n        // Set the element type depending on normalized selector used(md-input / md-textarea)\n        this._elementType = elementRef.nativeElement.nodeName.toLowerCase() === 'md-input' ?\n            'input' :\n            'textarea';\n    }\n    Object.defineProperty(MdInput.prototype, \"ariaDisabled\", {\n        get: function () { return this._ariaDisabled; },\n        set: function (value) { this._ariaDisabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInput.prototype, \"ariaRequired\", {\n        get: function () { return this._ariaRequired; },\n        set: function (value) { this._ariaRequired = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInput.prototype, \"ariaInvalid\", {\n        get: function () { return this._ariaInvalid; },\n        set: function (value) { this._ariaInvalid = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInput.prototype, \"focused\", {\n        /** Readonly properties. */\n        get: function () { return this._focused; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInput.prototype, \"empty\", {\n        get: function () { return (this._value == null || this._value === '') && this.type !== 'date'; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInput.prototype, \"characterCount\", {\n        get: function () {\n            return this.empty ? 0 : ('' + this._value).length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInput.prototype, \"inputId\", {\n        get: function () { return this.id + \"-input\"; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInput.prototype, \"floatingPlaceholder\", {\n        get: function () { return this._floatingPlaceholder; },\n        set: function (value) { this._floatingPlaceholder = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInput.prototype, \"autofocus\", {\n        get: function () { return this._autofocus; },\n        set: function (value) { this._autofocus = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInput.prototype, \"disabled\", {\n        get: function () { return this._disabled; },\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInput.prototype, \"readonly\", {\n        get: function () { return this._readonly; },\n        set: function (value) { this._readonly = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInput.prototype, \"required\", {\n        get: function () { return this._required; },\n        set: function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInput.prototype, \"spellcheck\", {\n        get: function () { return this._spellcheck; },\n        set: function (value) { this._spellcheck = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInput.prototype, \"onBlur\", {\n        get: function () {\n            return this._blurEmitter.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInput.prototype, \"onFocus\", {\n        get: function () {\n            return this._focusEmitter.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInput.prototype, \"value\", {\n        get: function () { return this._value; },\n        set: function (v) {\n            v = this._convertValueForInputType(v);\n            if (v !== this._value) {\n                this._value = v;\n                this._onChangeCallback(v);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(MdInput.prototype, \"_align\", {\n        // This is to remove the `align` property of the `md-input` itself. Otherwise HTML5\n        // might place it as RTL when we don't want to. We still want to use `align` as an\n        // Input though, so we use HostBinding.\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    /** Set focus on input */\n    MdInput.prototype.focus = function () {\n        this._inputElement.nativeElement.focus();\n    };\n    MdInput.prototype._handleFocus = function (event) {\n        this._focused = true;\n        this._focusEmitter.emit(event);\n    };\n    MdInput.prototype._handleBlur = function (event) {\n        this._focused = false;\n        this._onTouchedCallback();\n        this._blurEmitter.emit(event);\n    };\n    MdInput.prototype._handleChange = function (event) {\n        this.value = event.target.value;\n        this._onTouchedCallback();\n    };\n    MdInput.prototype._hasPlaceholder = function () {\n        return !!this.placeholder || this._placeholderChild != null;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * TODO: internal\n     */\n    MdInput.prototype.writeValue = function (value) {\n        this._value = value;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * TODO: internal\n     */\n    MdInput.prototype.registerOnChange = function (fn) {\n        this._onChangeCallback = fn;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * TODO: internal\n     */\n    MdInput.prototype.registerOnTouched = function (fn) {\n        this._onTouchedCallback = fn;\n    };\n    /** TODO: internal */\n    MdInput.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._validateConstraints();\n        // Trigger validation when the hint children change.\n        this._hintChildren.changes.subscribe(function () {\n            _this._validateConstraints();\n        });\n    };\n    /** TODO: internal */\n    MdInput.prototype.ngOnChanges = function (changes) {\n        this._validateConstraints();\n    };\n    /**\n     * Convert the value passed in to a value that is expected from the type of the md-input.\n     * This is normally performed by the *_VALUE_ACCESSOR in forms, but since the type is bound\n     * on our internal input it won't work locally.\n     * @private\n     */\n    MdInput.prototype._convertValueForInputType = function (v) {\n        switch (this.type) {\n            case 'number': return parseFloat(v);\n            default: return v;\n        }\n    };\n    /**\n     * Ensure that all constraints defined by the API are validated, or throw errors otherwise.\n     * Constraints for now:\n     *   - placeholder attribute and <md-placeholder> are mutually exclusive.\n     *   - type attribute is not one of the forbidden types (see constant at the top).\n     *   - Maximum one of each `<md-hint>` alignment specified, with the attribute being\n     *     considered as align=\"start\".\n     * @private\n     */\n    MdInput.prototype._validateConstraints = function () {\n        var _this = this;\n        if (this.placeholder != '' && this.placeholder != null && this._placeholderChild != null) {\n            throw new MdInputPlaceholderConflictError();\n        }\n        if (MD_INPUT_INVALID_INPUT_TYPE.indexOf(this.type) != -1) {\n            throw new MdInputUnsupportedTypeError(this.type);\n        }\n        if (this._hintChildren) {\n            // Validate the hint labels.\n            var startHint_1 = null;\n            var endHint_1 = null;\n            this._hintChildren.forEach(function (hint) {\n                if (hint.align == 'start') {\n                    if (startHint_1 || _this.hintLabel) {\n                        throw new MdInputDuplicatedHintError('start');\n                    }\n                    startHint_1 = hint;\n                }\n                else if (hint.align == 'end') {\n                    if (endHint_1) {\n                        throw new MdInputDuplicatedHintError('end');\n                    }\n                    endHint_1 = hint;\n                }\n            });\n        }\n    };\n    __decorate$32([\n        _angular_core.Input('aria-label'), \n        __metadata$32('design:type', String)\n    ], MdInput.prototype, \"ariaLabel\", void 0);\n    __decorate$32([\n        _angular_core.Input('aria-labelledby'), \n        __metadata$32('design:type', String)\n    ], MdInput.prototype, \"ariaLabelledBy\", void 0);\n    __decorate$32([\n        _angular_core.Input('aria-disabled'), \n        __metadata$32('design:type', Boolean)\n    ], MdInput.prototype, \"ariaDisabled\", null);\n    __decorate$32([\n        _angular_core.Input('aria-required'), \n        __metadata$32('design:type', Boolean)\n    ], MdInput.prototype, \"ariaRequired\", null);\n    __decorate$32([\n        _angular_core.Input('aria-invalid'), \n        __metadata$32('design:type', Boolean)\n    ], MdInput.prototype, \"ariaInvalid\", null);\n    __decorate$32([\n        _angular_core.ContentChild(MdPlaceholder), \n        __metadata$32('design:type', MdPlaceholder)\n    ], MdInput.prototype, \"_placeholderChild\", void 0);\n    __decorate$32([\n        _angular_core.ContentChildren(MdHint), \n        __metadata$32('design:type', _angular_core.QueryList)\n    ], MdInput.prototype, \"_hintChildren\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Object)\n    ], MdInput.prototype, \"align\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Object)\n    ], MdInput.prototype, \"dividerColor\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', String)\n    ], MdInput.prototype, \"hintLabel\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', String)\n    ], MdInput.prototype, \"autocomplete\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', String)\n    ], MdInput.prototype, \"autocorrect\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', String)\n    ], MdInput.prototype, \"autocapitalize\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', String)\n    ], MdInput.prototype, \"id\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', String)\n    ], MdInput.prototype, \"list\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Object)\n    ], MdInput.prototype, \"max\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Number)\n    ], MdInput.prototype, \"maxlength\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Object)\n    ], MdInput.prototype, \"min\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Number)\n    ], MdInput.prototype, \"minlength\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', String)\n    ], MdInput.prototype, \"placeholder\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Number)\n    ], MdInput.prototype, \"step\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Number)\n    ], MdInput.prototype, \"tabindex\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', String)\n    ], MdInput.prototype, \"type\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', String)\n    ], MdInput.prototype, \"name\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Number)\n    ], MdInput.prototype, \"rows\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Number)\n    ], MdInput.prototype, \"cols\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Object)\n    ], MdInput.prototype, \"wrap\", void 0);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Boolean)\n    ], MdInput.prototype, \"floatingPlaceholder\", null);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Boolean)\n    ], MdInput.prototype, \"autofocus\", null);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Boolean)\n    ], MdInput.prototype, \"disabled\", null);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Boolean)\n    ], MdInput.prototype, \"readonly\", null);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Boolean)\n    ], MdInput.prototype, \"required\", null);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Boolean)\n    ], MdInput.prototype, \"spellcheck\", null);\n    __decorate$32([\n        _angular_core.Output('blur'), \n        __metadata$32('design:type', rxjs_Observable.Observable)\n    ], MdInput.prototype, \"onBlur\", null);\n    __decorate$32([\n        _angular_core.Output('focus'), \n        __metadata$32('design:type', rxjs_Observable.Observable)\n    ], MdInput.prototype, \"onFocus\", null);\n    __decorate$32([\n        _angular_core.Input(), \n        __metadata$32('design:type', Object)\n    ], MdInput.prototype, \"value\", null);\n    __decorate$32([\n        _angular_core.HostBinding('attr.align'), \n        __metadata$32('design:type', Object)\n    ], MdInput.prototype, \"_align\", null);\n    __decorate$32([\n        _angular_core.ViewChild('input'), \n        __metadata$32('design:type', _angular_core.ElementRef)\n    ], MdInput.prototype, \"_inputElement\", void 0);\n    MdInput = __decorate$32([\n        _angular_core.Component({selector: 'md-input, md-textarea',\n            template: \"<div class=\\\"md-input-wrapper\\\"> <div class=\\\"md-input-table\\\"> <div class=\\\"md-input-prefix\\\"><ng-content select=\\\"[md-prefix]\\\"></ng-content></div> <div class=\\\"md-input-infix\\\"> <input #input *ngIf=\\\"_elementType === 'input'\\\" class=\\\"md-input-element\\\" [class.md-end]=\\\"align == 'end'\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledBy\\\" [attr.aria-disabled]=\\\"ariaDisabled\\\" [attr.aria-required]=\\\"ariaRequired\\\" [attr.aria-invalid]=\\\"ariaInvalid\\\" [attr.autocomplete]=\\\"autocomplete\\\" [attr.autocorrect]=\\\"autocorrect\\\" [attr.autocapitalize]=\\\"autocapitalize\\\" [autofocus]=\\\"autofocus\\\" [disabled]=\\\"disabled\\\" [id]=\\\"inputId\\\" [attr.list]=\\\"list\\\" [attr.max]=\\\"max\\\" [attr.maxlength]=\\\"maxlength\\\" [attr.min]=\\\"min\\\" [attr.minlength]=\\\"minlength\\\" [readonly]=\\\"readonly\\\" [required]=\\\"required\\\" [spellcheck]=\\\"spellcheck\\\" [attr.step]=\\\"step\\\" [attr.tabindex]=\\\"tabindex\\\" [type]=\\\"type\\\" [attr.name]=\\\"name\\\" (focus)=\\\"_handleFocus($event)\\\" (blur)=\\\"_handleBlur($event)\\\" [(ngModel)]=\\\"value\\\" (change)=\\\"_handleChange($event)\\\"> <textarea #input *ngIf=\\\"_elementType === 'textarea'\\\" class=\\\"md-input-element  md-input-element-textarea\\\" [class.md-end]=\\\"align == 'end'\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledBy\\\" [attr.aria-disabled]=\\\"ariaDisabled\\\" [attr.aria-required]=\\\"ariaRequired\\\" [attr.aria-invalid]=\\\"ariaInvalid\\\" [attr.autocomplete]=\\\"autocomplete\\\" [attr.autocapitalize]=\\\"autocapitalize\\\" [attr.cols]=\\\"cols\\\" [attr.rows]=\\\"rows\\\" [attr.wrap]=\\\"wrap\\\" [autofocus]=\\\"autofocus\\\" [disabled]=\\\"disabled\\\" [id]=\\\"inputId\\\" [attr.maxlength]=\\\"maxlength\\\" [attr.minlength]=\\\"minlength\\\" [readonly]=\\\"readonly\\\" [required]=\\\"required\\\" [spellcheck]=\\\"spellcheck\\\" [attr.tabindex]=\\\"tabindex\\\" [attr.name]=\\\"name\\\" (focus)=\\\"_handleFocus($event)\\\" (blur)=\\\"_handleBlur($event)\\\" [(ngModel)]=\\\"value\\\" (change)=\\\"_handleChange($event)\\\"></textarea> <label class=\\\"md-input-placeholder\\\" [attr.for]=\\\"inputId\\\" [class.md-empty]=\\\"empty\\\" [class.md-focused]=\\\"focused\\\" [class.md-float]=\\\"floatingPlaceholder\\\" [class.md-accent]=\\\"dividerColor == 'accent'\\\" [class.md-warn]=\\\"dividerColor == 'warn'\\\" *ngIf=\\\"_hasPlaceholder()\\\"> <ng-content select=\\\"md-placeholder\\\"></ng-content> {{placeholder}} <span class=\\\"md-placeholder-required\\\" *ngIf=\\\"required\\\">*</span> </label> </div> <div class=\\\"md-input-suffix\\\"><ng-content select=\\\"[md-suffix]\\\"></ng-content></div> </div> <div class=\\\"md-input-underline\\\" [class.md-disabled]=\\\"disabled\\\"> <span class=\\\"md-input-ripple\\\" [class.md-focused]=\\\"focused\\\" [class.md-accent]=\\\"dividerColor == 'accent'\\\" [class.md-warn]=\\\"dividerColor == 'warn'\\\"></span> </div> <div *ngIf=\\\"hintLabel != ''\\\" class=\\\"md-hint\\\">{{hintLabel}}</div> <ng-content select=\\\"md-hint\\\"></ng-content> </div> \",\n            styles: [\"md-input, md-textarea { display: inline-block; position: relative; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; line-height: normal; text-align: left; } [dir='rtl'] md-input, [dir='rtl'] md-textarea { text-align: right; } .md-input-wrapper { margin: 16px 0; } .md-input-table { display: inline-table; flex-flow: column; vertical-align: bottom; width: 100%; } .md-input-table > * { display: table-cell; } .md-input-infix { position: relative; } .md-input-element { font: inherit; background: transparent; color: currentColor; border: none; outline: none; padding: 0; width: 100%; } .md-input-element.md-end { text-align: right; } [dir='rtl'] .md-input-element.md-end { text-align: left; } .md-input-element:-moz-ui-invalid { box-shadow: none; } .md-input-element:-webkit-autofill + .md-input-placeholder.md-float { display: block; padding-bottom: 5px; transform: translateY(-100%) scale(0.75); width: 133.33333%; } .md-input-placeholder { position: absolute; left: 0; top: 0; font-size: 100%; pointer-events: none; z-index: 1; width: 100%; display: none; white-space: nowrap; text-overflow: ellipsis; overflow-x: hidden; transform: translateY(0); transform-origin: bottom left; transition: transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1), scale 400ms cubic-bezier(0.25, 0.8, 0.25, 1), color 400ms cubic-bezier(0.25, 0.8, 0.25, 1), width 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } .md-input-placeholder.md-empty { display: block; cursor: text; } .md-input-placeholder.md-float:not(.md-empty), .md-input-placeholder.md-float.md-focused { display: block; padding-bottom: 5px; transform: translateY(-100%) scale(0.75); width: 133.33333%; } [dir='rtl'] .md-input-placeholder { transform-origin: bottom right; } .md-input-underline { position: absolute; height: 1px; width: 100%; margin-top: 4px; border-top-width: 1px; border-top-style: solid; } .md-input-underline.md-disabled { border-top: 0; background-image: linear-gradient(to right, rgba(0, 0, 0, 0.26) 0%, rgba(0, 0, 0, 0.26) 33%, transparent 0%); background-position: 0; background-size: 4px 1px; background-repeat: repeat-x; } .md-input-underline .md-input-ripple { position: absolute; height: 2px; z-index: 1; top: -1px; width: 100%; transform-origin: top; opacity: 0; transform: scaleY(0); transition: transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1), opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } .md-input-underline .md-input-ripple.md-focused { opacity: 1; transform: scaleY(1); } .md-hint { display: block; position: absolute; font-size: 75%; bottom: -0.5em; } .md-hint.md-right { right: 0; } [dir='rtl'] .md-hint { right: 0; left: auto; } [dir='rtl'] .md-hint.md-right { right: auto; left: 0; } /*# sourceMappingURL=input.css.map */ \"],\n            providers: [MD_INPUT_CONTROL_VALUE_ACCESSOR],\n            host: { '(click)': 'focus()' },\n            encapsulation: _angular_core.ViewEncapsulation.None,\n        }), \n        __metadata$32('design:paramtypes', [_angular_core.ElementRef])\n    ], MdInput);\n    return MdInput;\n}());\nvar MdInputModule = (function () {\n    function MdInputModule() {\n    }\n    MdInputModule.forRoot = function () {\n        return {\n            ngModule: MdInputModule,\n            providers: []\n        };\n    };\n    MdInputModule = __decorate$32([\n        _angular_core.NgModule({\n            declarations: [MdPlaceholder, MdInput, MdHint],\n            imports: [_angular_common.CommonModule, _angular_forms.FormsModule],\n            exports: [MdPlaceholder, MdInput, MdHint],\n        }), \n        __metadata$32('design:paramtypes', [])\n    ], MdInputModule);\n    return MdInputModule;\n}());\n\n/**\n * Configuration used when opening a snack-bar.\n */\nvar MdSnackBarConfig = (function () {\n    function MdSnackBarConfig() {\n        /** The politeness level for the MdAriaLiveAnnouncer announcement. */\n        this.politeness = 'assertive';\n        /** Message to be announced by the MdAriaLiveAnnouncer */\n        this.announcementMessage = '';\n        /** The view container to place the overlay for the snack bar into. */\n        this.viewContainerRef = null;\n    }\n    return MdSnackBarConfig;\n}());\n\n// TODO(josephperrott): Implement onAction observable.\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nvar MdSnackBarRef = (function () {\n    function MdSnackBarRef(instance, containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the snack bar has closed. */\n        this._afterClosed = new rxjs_Subject.Subject();\n        // Sets the readonly instance of the snack bar content component.\n        this.instance = instance;\n        this.containerInstance = containerInstance;\n    }\n    /** Dismisses the snack bar. */\n    MdSnackBarRef.prototype.dismiss = function () {\n        var _this = this;\n        if (!this._afterClosed.closed) {\n            this.containerInstance.exit().subscribe(function () {\n                _this._overlayRef.dispose();\n                _this._afterClosed.next();\n                _this._afterClosed.complete();\n            });\n        }\n    };\n    /** Gets an observable that is notified when the snack bar is finished closing. */\n    MdSnackBarRef.prototype.afterDismissed = function () {\n        return this._afterClosed.asObservable();\n    };\n    return MdSnackBarRef;\n}());\n\nvar __extends$15 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MdSnackBarContentAlreadyAttached = (function (_super) {\n    __extends$15(MdSnackBarContentAlreadyAttached, _super);\n    function MdSnackBarContentAlreadyAttached() {\n        _super.call(this, 'Attempting to attach snack bar content after content is already attached');\n    }\n    return MdSnackBarContentAlreadyAttached;\n}(MdError));\n\nvar __extends$14 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate$34 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$34 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n// TODO(jelbourn): we can't use constants from animation.ts here because you can't use\n// a text interpolation in anything that is analyzed statically with ngc (for AoT compile).\nvar SHOW_ANIMATION = '225ms cubic-bezier(0.4,0.0,1,1)';\nvar HIDE_ANIMATION = '195ms cubic-bezier(0.0,0.0,0.2,1)';\n/**\n * Internal component that wraps user-provided snack bar content.\n */\nvar MdSnackBarContainer = (function (_super) {\n    __extends$14(MdSnackBarContainer, _super);\n    function MdSnackBarContainer(_ngZone) {\n        _super.call(this);\n        this._ngZone = _ngZone;\n        /** Subject for notifying that the snack bar has exited from view. */\n        this._onExit = new rxjs_Subject.Subject();\n        /** The state of the snack bar animations. */\n        this.animationState = 'initial';\n    }\n    /** Attach a component portal as content to this snack bar container. */\n    MdSnackBarContainer.prototype.attachComponentPortal = function (portal) {\n        if (this._portalHost.hasAttached()) {\n            throw new MdSnackBarContentAlreadyAttached();\n        }\n        return this._portalHost.attachComponentPortal(portal);\n    };\n    /** Attach a template portal as content to this snack bar container. */\n    MdSnackBarContainer.prototype.attachTemplatePortal = function (portal) {\n        throw Error('Not yet implemented');\n    };\n    /** Begin animation of the snack bar exiting from view. */\n    MdSnackBarContainer.prototype.exit = function () {\n        this.animationState = 'complete';\n        return this._onExit.asObservable();\n    };\n    /** Mark snack bar as exited from the view. */\n    MdSnackBarContainer.prototype.markAsExited = function (event) {\n        var _this = this;\n        if (event.toState === 'void' || event.toState === 'complete') {\n            this._ngZone.run(function () {\n                _this._onExit.next();\n                _this._onExit.complete();\n            });\n        }\n    };\n    /** Begin animation of snack bar entrance into view. */\n    MdSnackBarContainer.prototype.enter = function () {\n        this.animationState = 'visible';\n    };\n    __decorate$34([\n        _angular_core.ViewChild(PortalHostDirective), \n        __metadata$34('design:type', PortalHostDirective)\n    ], MdSnackBarContainer.prototype, \"_portalHost\", void 0);\n    MdSnackBarContainer = __decorate$34([\n        _angular_core.Component({selector: 'snack-bar-container',\n            template: \"<template portalHost></template>\",\n            styles: [\":host { box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); background: #323232; border-radius: 2px; box-sizing: content-box; display: block; height: 20px; max-width: 568px; min-width: 288px; overflow: hidden; padding: 14px 24px; transform: translateY(100%); } /*# sourceMappingURL=snack-bar-container.css.map */ \"],\n            host: {\n                'role': 'alert',\n                '[@state]': 'animationState',\n                '(@state.done)': 'markAsExited($event)'\n            },\n            animations: [\n                _angular_core.trigger('state', [\n                    _angular_core.state('initial', _angular_core.style({ transform: 'translateY(100%)' })),\n                    _angular_core.state('visible', _angular_core.style({ transform: 'translateY(0%)' })),\n                    _angular_core.state('complete', _angular_core.style({ transform: 'translateY(100%)' })),\n                    _angular_core.transition('visible => complete', _angular_core.animate(HIDE_ANIMATION)),\n                    _angular_core.transition('initial => visible, void => visible', _angular_core.animate(SHOW_ANIMATION)),\n                ])\n            ],\n        }), \n        __metadata$34('design:paramtypes', [_angular_core.NgZone])\n    ], MdSnackBarContainer);\n    return MdSnackBarContainer;\n}(BasePortalHost));\n\nvar __decorate$35 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$35 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nvar SimpleSnackBar = (function () {\n    function SimpleSnackBar() {\n    }\n    /** Dismisses the snack bar. */\n    SimpleSnackBar.prototype.dismiss = function () {\n        this.snackBarRef.dismiss();\n    };\n    Object.defineProperty(SimpleSnackBar.prototype, \"hasAction\", {\n        /** If the action button should be shown. */\n        get: function () { return !!this.action; },\n        enumerable: true,\n        configurable: true\n    });\n    SimpleSnackBar = __decorate$35([\n        _angular_core.Component({selector: 'simple-snack-bar',\n            template: \"<span class=\\\"md-simple-snackbar-message\\\">{{message}}</span> <button md-button class=\\\"md-simple-snackbar-action\\\" *ngIf=\\\"hasAction\\\" (click)=\\\"dismiss()\\\">{{action}}</button>\",\n            styles: [\"md-simple-snackbar { display: flex; justify-content: space-between; } .md-simple-snackbar-message { box-sizing: border-box; border: none; color: white; font-family: Roboto, 'Helvetica Neue', sans-serif; font-size: 14px; line-height: 20px; outline: none; text-decoration: none; word-break: break-all; } .md-simple-snackbar-action { box-sizing: border-box; color: white; float: right; font-weight: 600; line-height: 20px; margin: -5px 0 0 48px; min-width: initial; padding: 5px; text-transform: uppercase; } /*# sourceMappingURL=simple-snack-bar.css.map */ \"],\n        }), \n        __metadata$35('design:paramtypes', [])\n    ], SimpleSnackBar);\n    return SimpleSnackBar;\n}());\n\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nfunction extendObject(dest) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {\n        var source = sources_1[_a];\n        if (source != null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n\nvar __decorate$33 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$33 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n// TODO(josephperrott): Automate dismiss after timeout.\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nvar MdSnackBar = (function () {\n    function MdSnackBar(_overlay, _live) {\n        this._overlay = _overlay;\n        this._live = _live;\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     */\n    MdSnackBar.prototype.openFromComponent = function (component, config) {\n        var _this = this;\n        config = _applyConfigDefaults(config);\n        var overlayRef = this._createOverlay();\n        var snackBarContainer = this._attachSnackBarContainer(overlayRef, config);\n        var snackBarRef = this._attachSnackbarContent(component, snackBarContainer, overlayRef);\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(function () {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (_this._snackBarRef == snackBarRef) {\n                _this._snackBarRef = null;\n            }\n        });\n        // If a snack bar is already in view, dismiss it and enter the new snack bar after exit\n        // animation is complete.\n        if (this._snackBarRef) {\n            this._snackBarRef.afterDismissed().subscribe(function () {\n                snackBarRef.containerInstance.enter();\n            });\n            this._snackBarRef.dismiss();\n        }\n        else {\n            snackBarRef.containerInstance.enter();\n        }\n        this._live.announce(config.announcementMessage, config.politeness);\n        this._snackBarRef = snackBarRef;\n        return this._snackBarRef;\n    };\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param message The message to show in the snackbar.\n     * @param action The label for the snackbar action.\n     * @param config Additional configuration options for the snackbar.\n     * @returns {MdSnackBarRef<SimpleSnackBar>}\n     */\n    MdSnackBar.prototype.open = function (message, action, config) {\n        if (action === void 0) { action = ''; }\n        if (config === void 0) { config = {}; }\n        config.announcementMessage = message;\n        var simpleSnackBarRef = this.openFromComponent(SimpleSnackBar, config);\n        simpleSnackBarRef.instance.snackBarRef = simpleSnackBarRef;\n        simpleSnackBarRef.instance.message = message;\n        simpleSnackBarRef.instance.action = action;\n        return simpleSnackBarRef;\n    };\n    /**\n     * Attaches the snack bar container component to the overlay.\n     */\n    MdSnackBar.prototype._attachSnackBarContainer = function (overlayRef, config) {\n        var containerPortal = new ComponentPortal(MdSnackBarContainer, config.viewContainerRef);\n        var containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    };\n    /**\n     * Places a new component as the content of the snack bar container.\n     */\n    MdSnackBar.prototype._attachSnackbarContent = function (component, container, overlayRef) {\n        var portal = new ComponentPortal(component);\n        var contentRef = container.attachComponentPortal(portal);\n        return new MdSnackBarRef(contentRef.instance, container, overlayRef);\n    };\n    /**\n     * Creates a new overlay and places it in the correct location.\n     */\n    MdSnackBar.prototype._createOverlay = function () {\n        var state = new OverlayState();\n        state.positionStrategy = this._overlay.position().global()\n            .fixed()\n            .centerHorizontally()\n            .bottom('0');\n        return this._overlay.create(state);\n    };\n    MdSnackBar = __decorate$33([\n        _angular_core.Injectable(), \n        __metadata$33('design:paramtypes', [Overlay, MdLiveAnnouncer])\n    ], MdSnackBar);\n    return MdSnackBar;\n}());\n/**\n * Applies default options to the snackbar config.\n * @param config The configuration to which the defaults will be applied.\n * @returns The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(config) {\n    return extendObject(new MdSnackBarConfig(), config);\n}\nvar MdSnackBarModule = (function () {\n    function MdSnackBarModule() {\n    }\n    MdSnackBarModule.forRoot = function () {\n        return {\n            ngModule: MdSnackBarModule,\n            providers: [MdSnackBar, OVERLAY_PROVIDERS, MdLiveAnnouncer]\n        };\n    };\n    MdSnackBarModule = __decorate$33([\n        _angular_core.NgModule({\n            imports: [OverlayModule, PortalModule, _angular_common.CommonModule],\n            exports: [MdSnackBarContainer],\n            declarations: [MdSnackBarContainer, SimpleSnackBar],\n            entryComponents: [MdSnackBarContainer, SimpleSnackBar],\n        }), \n        __metadata$33('design:paramtypes', [])\n    ], MdSnackBarModule);\n    return MdSnackBarModule;\n}());\n\nvar __extends$16 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate$37 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$37 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/** Used to flag tab labels for use with the portal directive */\nvar MdTabLabel = (function (_super) {\n    __extends$16(MdTabLabel, _super);\n    function MdTabLabel(templateRef, viewContainerRef) {\n        _super.call(this, templateRef, viewContainerRef);\n    }\n    MdTabLabel = __decorate$37([\n        _angular_core.Directive({\n            selector: '[md-tab-label]',\n        }), \n        __metadata$37('design:paramtypes', [_angular_core.TemplateRef, _angular_core.ViewContainerRef])\n    ], MdTabLabel);\n    return MdTabLabel;\n}(TemplatePortalDirective));\n\nvar __decorate$38 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$38 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/** Used in the `md-tab-group` view to display tab labels */\nvar MdTabLabelWrapper = (function () {\n    function MdTabLabelWrapper(elementRef) {\n        this.elementRef = elementRef;\n    }\n    /**\n     * Sets focus on the wrapper element\n     */\n    MdTabLabelWrapper.prototype.focus = function () {\n        this.elementRef.nativeElement.focus();\n    };\n    MdTabLabelWrapper = __decorate$38([\n        _angular_core.Directive({\n            selector: '[md-tab-label-wrapper]'\n        }), \n        __metadata$38('design:paramtypes', [_angular_core.ElementRef])\n    ], MdTabLabelWrapper);\n    return MdTabLabelWrapper;\n}());\n\nvar __decorate$40 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$40 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/** The ink-bar is used to display and animate the line underneath the current active tab label. */\nvar MdInkBar = (function () {\n    function MdInkBar(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * @param element\n     */\n    MdInkBar.prototype.alignToElement = function (element) {\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'left', this._getLeftPosition(element));\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'width', this._getElementWidth(element));\n    };\n    /**\n     * Generates the pixel distance from the left based on the provided element in string format.\n     * @param element\n     * @returns {string}\n     */\n    MdInkBar.prototype._getLeftPosition = function (element) {\n        return element ? element.offsetLeft + 'px' : '0';\n    };\n    /**\n     * Generates the pixel width from the provided element in string format.\n     * @param element\n     * @returns {string}\n     */\n    MdInkBar.prototype._getElementWidth = function (element) {\n        return element ? element.offsetWidth + 'px' : '0';\n    };\n    MdInkBar = __decorate$40([\n        _angular_core.Directive({\n            selector: 'md-ink-bar',\n        }), \n        __metadata$40('design:paramtypes', [_angular_core.Renderer, _angular_core.ElementRef])\n    ], MdInkBar);\n    return MdInkBar;\n}());\n\nvar __decorate$39 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$39 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nvar MdTabNavBar = (function () {\n    function MdTabNavBar() {\n    }\n    /** Animates the ink bar to the position of the active link element. */\n    MdTabNavBar.prototype.updateActiveLink = function (element) {\n        this._inkBar.alignToElement(element);\n    };\n    __decorate$39([\n        _angular_core.ViewChild(MdInkBar), \n        __metadata$39('design:type', MdInkBar)\n    ], MdTabNavBar.prototype, \"_inkBar\", void 0);\n    MdTabNavBar = __decorate$39([\n        _angular_core.Component({selector: '[md-tab-nav-bar]',\n            template: \"<ng-content></ng-content> <md-ink-bar></md-ink-bar> \",\n            styles: [\"[md-tab-nav-bar] { overflow: hidden; position: relative; display: flex; flex-direction: row; flex-shrink: 0; } [md-tab-link] { line-height: 48px; height: 48px; padding: 0 12px; font-size: 14px; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; font-weight: 500; cursor: pointer; box-sizing: border-box; color: currentColor; opacity: 0.6; min-width: 160px; text-align: center; text-decoration: none; } [md-tab-link]:focus { outline: none; opacity: 1; } @media (max-width: 600px) { [md-tab-link] { min-width: 72px; } } md-ink-bar { position: absolute; bottom: 0; height: 2px; transition: 350ms ease-out; } /*# sourceMappingURL=tab-nav-bar.css.map */ \"],\n            encapsulation: _angular_core.ViewEncapsulation.None,\n        }), \n        __metadata$39('design:paramtypes', [])\n    ], MdTabNavBar);\n    return MdTabNavBar;\n}());\nvar MdTabLink = (function () {\n    function MdTabLink(_mdTabNavBar, _element) {\n        this._mdTabNavBar = _mdTabNavBar;\n        this._element = _element;\n        this._isActive = false;\n    }\n    Object.defineProperty(MdTabLink.prototype, \"active\", {\n        get: function () {\n            return this._isActive;\n        },\n        set: function (value) {\n            this._isActive = value;\n            if (value) {\n                this._mdTabNavBar.updateActiveLink(this._element.nativeElement);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate$39([\n        _angular_core.Input(), \n        __metadata$39('design:type', Boolean)\n    ], MdTabLink.prototype, \"active\", null);\n    MdTabLink = __decorate$39([\n        _angular_core.Directive({\n            selector: '[md-tab-link]',\n        }), \n        __metadata$39('design:paramtypes', [MdTabNavBar, _angular_core.ElementRef])\n    ], MdTabLink);\n    return MdTabLink;\n}());\n\nvar __decorate$36 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$36 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/** Used to generate unique ID's for each tab component */\nvar nextId$2 = 0;\n/** A simple change event emitted on focus or selection changes. */\nvar MdTabChangeEvent = (function () {\n    function MdTabChangeEvent() {\n    }\n    return MdTabChangeEvent;\n}());\nvar MdTab = (function () {\n    function MdTab(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n        /** The plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        this._contentPortal = null;\n        this._disabled = false;\n    }\n    MdTab.prototype.ngOnInit = function () {\n        this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n    };\n    Object.defineProperty(MdTab.prototype, \"disabled\", {\n        get: function () { return this._disabled; },\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTab.prototype, \"content\", {\n        get: function () {\n            return this._contentPortal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate$36([\n        _angular_core.ContentChild(MdTabLabel), \n        __metadata$36('design:type', MdTabLabel)\n    ], MdTab.prototype, \"templateLabel\", void 0);\n    __decorate$36([\n        _angular_core.ViewChild(_angular_core.TemplateRef), \n        __metadata$36('design:type', _angular_core.TemplateRef)\n    ], MdTab.prototype, \"_content\", void 0);\n    __decorate$36([\n        _angular_core.Input('label'), \n        __metadata$36('design:type', String)\n    ], MdTab.prototype, \"textLabel\", void 0);\n    __decorate$36([\n        _angular_core.Input(), \n        __metadata$36('design:type', Boolean), \n        __metadata$36('design:paramtypes', [Boolean])\n    ], MdTab.prototype, \"disabled\", null);\n    MdTab = __decorate$36([\n        _angular_core.Component({selector: 'md-tab',\n            template: \"<!-- Create a template for the content of the <md-tab> so that we can grab a reference to this TemplateRef and use it in a Portal to render the tab content in the appropriate place in the tab-group. --> <template><ng-content></ng-content></template> \",\n        }), \n        __metadata$36('design:paramtypes', [_angular_core.ViewContainerRef])\n    ], MdTab);\n    return MdTab;\n}());\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://www.google.com/design/spec/components/tabs.html\n */\nvar MdTabGroup = (function () {\n    function MdTabGroup(_zone) {\n        this._zone = _zone;\n        this._isInitialized = false;\n        this._selectedIndex = 0;\n        this._onFocusChange = new _angular_core.EventEmitter();\n        this._onSelectChange = new _angular_core.EventEmitter();\n        this._focusIndex = 0;\n        this._groupId = nextId$2++;\n    }\n    Object.defineProperty(MdTabGroup.prototype, \"selectedIndex\", {\n        get: function () {\n            return this._selectedIndex;\n        },\n        set: function (value) {\n            if (value != this._selectedIndex && this.isValidIndex(value)) {\n                this._selectedIndex = value;\n                if (this._isInitialized) {\n                    this._onSelectChange.emit(this._createChangeEvent(value));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    MdTabGroup.prototype.isValidIndex = function (index) {\n        if (this._tabs) {\n            var tab = this._tabs.toArray()[index];\n            return tab && !tab.disabled;\n        }\n        else {\n            return true;\n        }\n    };\n    Object.defineProperty(MdTabGroup.prototype, \"selectedIndexChange\", {\n        /** Output to enable support for two-way binding on `selectedIndex`. */\n        get: function () {\n            return this.selectChange.map(function (event) { return event.index; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTabGroup.prototype, \"focusChange\", {\n        get: function () {\n            return this._onFocusChange.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTabGroup.prototype, \"selectChange\", {\n        get: function () {\n            return this._onSelectChange.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Waits one frame for the view to update, then updates the ink bar\n     * Note: This must be run outside of the zone or it will create an infinite change detection loop\n     * TODO: internal\n     */\n    MdTabGroup.prototype.ngAfterViewChecked = function () {\n        var _this = this;\n        this._zone.runOutsideAngular(function () {\n            window.requestAnimationFrame(function () {\n                _this._updateInkBar();\n            });\n        });\n        this._isInitialized = true;\n    };\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    MdTabGroup.prototype._updateInkBar = function () {\n        this._inkBar.toArray()[0].alignToElement(this._currentLabelWrapper);\n    };\n    Object.defineProperty(MdTabGroup.prototype, \"_currentLabelWrapper\", {\n        /**\n         * Reference to the current label wrapper; defaults to null for initial render before the\n         * ViewChildren references are ready.\n         */\n        get: function () {\n            return this._labelWrappers && this._labelWrappers.length\n                ? this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement\n                : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTabGroup.prototype, \"focusIndex\", {\n        /** Tracks which element has focus; used for keyboard navigation */\n        get: function () {\n            return this._focusIndex;\n        },\n        /** When the focus index is set, we must manually send focus to the correct label */\n        set: function (value) {\n            if (this.isValidIndex(value)) {\n                this._focusIndex = value;\n                if (this._isInitialized) {\n                    this._onFocusChange.emit(this._createChangeEvent(value));\n                }\n                if (this._labelWrappers && this._labelWrappers.length) {\n                    this._labelWrappers.toArray()[value].focus();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdTabGroup.prototype._createChangeEvent = function (index) {\n        var event = new MdTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    };\n    /** Returns a unique id for each tab label element */\n    MdTabGroup.prototype._getTabLabelId = function (i) {\n        return \"md-tab-label-\" + this._groupId + \"-\" + i;\n    };\n    /** Returns a unique id for each tab content element */\n    MdTabGroup.prototype._getTabContentId = function (i) {\n        return \"md-tab-content-\" + this._groupId + \"-\" + i;\n    };\n    MdTabGroup.prototype.handleKeydown = function (event) {\n        switch (event.keyCode) {\n            case RIGHT_ARROW:\n                this.focusNextTab();\n                break;\n            case LEFT_ARROW:\n                this.focusPreviousTab();\n                break;\n            case ENTER:\n                this.selectedIndex = this.focusIndex;\n                break;\n        }\n    };\n    /**\n     * Moves the focus left or right depending on the offset provided.  Valid offsets are 1 and -1.\n     */\n    MdTabGroup.prototype.moveFocus = function (offset) {\n        if (this._labelWrappers) {\n            var tabs = this._tabs.toArray();\n            for (var i = this.focusIndex + offset; i < tabs.length && i >= 0; i += offset) {\n                if (this.isValidIndex(i)) {\n                    this.focusIndex = i;\n                    return;\n                }\n            }\n        }\n    };\n    /** Increment the focus index by 1 until a valid tab is found. */\n    MdTabGroup.prototype.focusNextTab = function () {\n        this.moveFocus(1);\n    };\n    /** Decrement the focus index by 1 until a valid tab is found. */\n    MdTabGroup.prototype.focusPreviousTab = function () {\n        this.moveFocus(-1);\n    };\n    __decorate$36([\n        _angular_core.ContentChildren(MdTab), \n        __metadata$36('design:type', _angular_core.QueryList)\n    ], MdTabGroup.prototype, \"_tabs\", void 0);\n    __decorate$36([\n        _angular_core.ViewChildren(MdTabLabelWrapper), \n        __metadata$36('design:type', _angular_core.QueryList)\n    ], MdTabGroup.prototype, \"_labelWrappers\", void 0);\n    __decorate$36([\n        _angular_core.ViewChildren(MdInkBar), \n        __metadata$36('design:type', _angular_core.QueryList)\n    ], MdTabGroup.prototype, \"_inkBar\", void 0);\n    __decorate$36([\n        _angular_core.Input(), \n        __metadata$36('design:type', Number), \n        __metadata$36('design:paramtypes', [Number])\n    ], MdTabGroup.prototype, \"selectedIndex\", null);\n    __decorate$36([\n        _angular_core.Output(), \n        __metadata$36('design:type', rxjs_Observable.Observable)\n    ], MdTabGroup.prototype, \"selectedIndexChange\", null);\n    __decorate$36([\n        _angular_core.Output(), \n        __metadata$36('design:type', rxjs_Observable.Observable)\n    ], MdTabGroup.prototype, \"focusChange\", null);\n    __decorate$36([\n        _angular_core.Output(), \n        __metadata$36('design:type', rxjs_Observable.Observable)\n    ], MdTabGroup.prototype, \"selectChange\", null);\n    MdTabGroup = __decorate$36([\n        _angular_core.Component({selector: 'md-tab-group',\n            template: \"<div class=\\\"md-tab-header\\\" role=\\\"tablist\\\" (keydown)=\\\"handleKeydown($event)\\\"> <div class=\\\"md-tab-label\\\" role=\\\"tab\\\" md-tab-label-wrapper *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [tabIndex]=\\\"selectedIndex == i ? 0 : -1\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [class.md-tab-active]=\\\"selectedIndex == i\\\" [class.md-tab-disabled]=\\\"tab.disabled\\\" (click)=\\\"focusIndex = selectedIndex = i\\\"> <!-- If there is a label template, use it. --> <template [ngIf]=\\\"tab.templateLabel\\\"> <template [portalHost]=\\\"tab.templateLabel\\\"></template> </template> <!-- If there is not a label template, fall back to the text label. --> <template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</template> </div> <md-ink-bar></md-ink-bar> </div> <div class=\\\"md-tab-body-wrapper\\\"> <div class=\\\"md-tab-body\\\" role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [class.md-tab-active]=\\\"selectedIndex == i\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"> <template [ngIf]=\\\"selectedIndex == i\\\"> <template [portalHost]=\\\"tab.content\\\"></template> </template> </div> </div> \",\n            styles: [\":host { display: flex; flex-direction: column; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; } .md-tab-header { overflow: hidden; position: relative; display: flex; flex-direction: row; flex-shrink: 0; } .md-tab-label { line-height: 48px; height: 48px; padding: 0 12px; font-size: 14px; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; font-weight: 500; cursor: pointer; box-sizing: border-box; color: currentColor; opacity: 0.6; min-width: 160px; text-align: center; } .md-tab-label:focus { outline: none; opacity: 1; } @media (max-width: 600px) { .md-tab-label { min-width: 72px; } } md-ink-bar { position: absolute; bottom: 0; height: 2px; transition: 350ms ease-out; } .md-tab-body-wrapper { position: relative; overflow: hidden; flex-grow: 1; display: flex; } .md-tab-body { display: none; overflow: auto; box-sizing: border-box; flex-grow: 1; flex-shrink: 1; } .md-tab-body.md-tab-active { display: block; } .md-tab-disabled { cursor: default; pointer-events: none; } /*# sourceMappingURL=tab-group.css.map */ \"],\n        }), \n        __metadata$36('design:paramtypes', [_angular_core.NgZone])\n    ], MdTabGroup);\n    return MdTabGroup;\n}());\nvar MdTabsModule = (function () {\n    function MdTabsModule() {\n    }\n    MdTabsModule.forRoot = function () {\n        return {\n            ngModule: MdTabsModule,\n            providers: []\n        };\n    };\n    MdTabsModule = __decorate$36([\n        _angular_core.NgModule({\n            imports: [_angular_common.CommonModule, PortalModule],\n            // Don't export MdInkBar or MdTabLabelWrapper, as they are internal implementation details.\n            exports: [MdTabGroup, MdTabLabel, MdTab, MdTabNavBar, MdTabLink],\n            declarations: [MdTabGroup, MdTabLabel, MdTab, MdInkBar, MdTabLabelWrapper,\n                MdTabNavBar, MdTabLink],\n        }), \n        __metadata$36('design:paramtypes', [])\n    ], MdTabsModule);\n    return MdTabsModule;\n}());\n\nvar __decorate$41 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$41 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar MdToolbarRow = (function () {\n    function MdToolbarRow() {\n    }\n    MdToolbarRow = __decorate$41([\n        _angular_core.Directive({\n            selector: 'md-toolbar-row'\n        }), \n        __metadata$41('design:paramtypes', [])\n    ], MdToolbarRow);\n    return MdToolbarRow;\n}());\nvar MdToolbar = (function () {\n    function MdToolbar(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n    }\n    Object.defineProperty(MdToolbar.prototype, \"color\", {\n        get: function () {\n            return this._color;\n        },\n        set: function (value) {\n            this._updateColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdToolbar.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    MdToolbar.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this.renderer.setElementClass(this.elementRef.nativeElement, \"md-\" + color, isAdd);\n        }\n    };\n    __decorate$41([\n        _angular_core.Input(), \n        __metadata$41('design:type', String)\n    ], MdToolbar.prototype, \"color\", null);\n    MdToolbar = __decorate$41([\n        _angular_core.Component({selector: 'md-toolbar',\n            template: \"<div class=\\\"md-toolbar-layout\\\"> <md-toolbar-row> <ng-content></ng-content> </md-toolbar-row> <ng-content select=\\\"md-toolbar-row\\\"></ng-content> </div>\",\n            styles: [\"md-toolbar { display: flex; box-sizing: border-box; width: 100%; min-height: 64px; font-size: 20px; font-weight: 400; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; padding: 0 16px; flex-direction: column; } md-toolbar md-toolbar-row { display: flex; box-sizing: border-box; width: 100%; height: 64px; flex-direction: row; align-items: center; } /*# sourceMappingURL=toolbar.css.map */ \"],\n            changeDetection: _angular_core.ChangeDetectionStrategy.OnPush,\n            encapsulation: _angular_core.ViewEncapsulation.None\n        }), \n        __metadata$41('design:paramtypes', [_angular_core.ElementRef, _angular_core.Renderer])\n    ], MdToolbar);\n    return MdToolbar;\n}());\nvar MdToolbarModule = (function () {\n    function MdToolbarModule() {\n    }\n    MdToolbarModule.forRoot = function () {\n        return {\n            ngModule: MdToolbarModule,\n            providers: []\n        };\n    };\n    MdToolbarModule = __decorate$41([\n        _angular_core.NgModule({\n            exports: [MdToolbar, MdToolbarRow],\n            declarations: [MdToolbar, MdToolbarRow],\n        }), \n        __metadata$41('design:paramtypes', [])\n    ], MdToolbarModule);\n    return MdToolbarModule;\n}());\n\nvar __decorate$42 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$42 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/** Time in ms to delay before changing the tooltip visibility to hidden */\nvar TOOLTIP_HIDE_DELAY = 1500;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.google.com/components/tooltips.html\n */\nvar MdTooltip = (function () {\n    function MdTooltip(_overlay, _elementRef, _viewContainerRef, _ngZone) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        /** Allows the user to define the position of the tooltip relative to the parent element */\n        this._position = 'below';\n    }\n    Object.defineProperty(MdTooltip.prototype, \"position\", {\n        get: function () {\n            return this._position;\n        },\n        set: function (value) {\n            if (value !== this._position) {\n                this._position = value;\n                // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\n                // the tooltip.\n                if (this._tooltipInstance) {\n                    this._disposeTooltip();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"message\", {\n        get: function () {\n            return this._message;\n        },\n        set: function (value) {\n            this._message = value;\n            if (this._tooltipInstance) {\n                this._setTooltipMessage(this._message);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Dispose the tooltip when destroyed */\n    MdTooltip.prototype.ngOnDestroy = function () {\n        if (this._tooltipInstance) {\n            this._disposeTooltip();\n        }\n    };\n    /** Shows the tooltip */\n    MdTooltip.prototype.show = function () {\n        if (!this._tooltipInstance) {\n            this._createTooltip();\n        }\n        this._setTooltipMessage(this._message);\n        this._tooltipInstance.show(this._position);\n    };\n    /**\n     * Create the overlay config and position strategy\n     * Hides the tooltip after the provided delay in ms. Defaults the delay to the material design\n     * prescribed delay time\n     */\n    MdTooltip.prototype.hide = function (delay) {\n        if (delay === void 0) { delay = TOOLTIP_HIDE_DELAY; }\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    };\n    /** Shows/hides the tooltip */\n    MdTooltip.prototype.toggle = function () {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    };\n    /** Returns true if the tooltip is currently visible to the user */\n    MdTooltip.prototype._isTooltipVisible = function () {\n        return this._tooltipInstance && this._tooltipInstance.isVisible();\n    };\n    /** Create the tooltip to display */\n    MdTooltip.prototype._createTooltip = function () {\n        var _this = this;\n        this._createOverlay();\n        var portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = this._overlayRef.attach(portal).instance;\n        // Dispose the overlay when finished the shown tooltip.\n        this._tooltipInstance.afterHidden().subscribe(function () {\n            _this._disposeTooltip();\n        });\n    };\n    /** Create the overlay config and position strategy */\n    MdTooltip.prototype._createOverlay = function () {\n        var origin = this._getOrigin();\n        var position = this._getOverlayPosition();\n        var strategy = this._overlay.position().connectedTo(this._elementRef, origin, position);\n        var config = new OverlayState();\n        config.positionStrategy = strategy;\n        this._overlayRef = this._overlay.create(config);\n    };\n    /** Disposes the current tooltip and the overlay it is attached to */\n    MdTooltip.prototype._disposeTooltip = function () {\n        this._overlayRef.dispose();\n        this._overlayRef = null;\n        this._tooltipInstance = null;\n    };\n    /** Returns the origin position based on the user's position preference */\n    MdTooltip.prototype._getOrigin = function () {\n        switch (this.position) {\n            case 'before': return { originX: 'start', originY: 'center' };\n            case 'after': return { originX: 'end', originY: 'center' };\n            case 'above': return { originX: 'center', originY: 'top' };\n            case 'below': return { originX: 'center', originY: 'bottom' };\n        }\n    };\n    /** Returns the overlay position based on the user's preference */\n    MdTooltip.prototype._getOverlayPosition = function () {\n        switch (this.position) {\n            case 'before': return { overlayX: 'end', overlayY: 'center' };\n            case 'after': return { overlayX: 'start', overlayY: 'center' };\n            case 'above': return { overlayX: 'center', overlayY: 'bottom' };\n            case 'below': return { overlayX: 'center', overlayY: 'top' };\n        }\n    };\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    MdTooltip.prototype._setTooltipMessage = function (message) {\n        var _this = this;\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        this._tooltipInstance.message = message;\n        this._ngZone.onMicrotaskEmpty.first().subscribe(function () {\n            if (_this._tooltipInstance) {\n                _this._overlayRef.updatePosition();\n            }\n        });\n    };\n    __decorate$42([\n        _angular_core.Input('tooltip-position'), \n        __metadata$42('design:type', String)\n    ], MdTooltip.prototype, \"position\", null);\n    __decorate$42([\n        _angular_core.Input('md-tooltip'), \n        __metadata$42('design:type', Object)\n    ], MdTooltip.prototype, \"message\", null);\n    MdTooltip = __decorate$42([\n        _angular_core.Directive({\n            selector: '[md-tooltip]',\n            host: {\n                '(mouseenter)': 'show()',\n                '(mouseleave)': 'hide()',\n            },\n            exportAs: 'mdTooltip',\n        }), \n        __metadata$42('design:paramtypes', [Overlay, _angular_core.ElementRef, _angular_core.ViewContainerRef, _angular_core.NgZone])\n    ], MdTooltip);\n    return MdTooltip;\n}());\nvar TooltipComponent = (function () {\n    function TooltipComponent() {\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** The transform origin used in the animation for showing and hiding the tooltip */\n        this._transformOrigin = 'bottom';\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new rxjs_Subject.Subject();\n    }\n    /** Shows the tooltip with an animation originating from the provided origin */\n    TooltipComponent.prototype.show = function (position) {\n        var _this = this;\n        this._closeOnInteraction = false;\n        this._visibility = 'visible';\n        this._setTransformOrigin(position);\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        // If this was set to true immediately, then the body click would trigger interaction and\n        // close the tooltip right after it was displayed.\n        setTimeout(function () { _this._closeOnInteraction = true; }, 0);\n    };\n    /** Begins the animation to hide the tooltip after the provided delay in ms */\n    TooltipComponent.prototype.hide = function (delay) {\n        var _this = this;\n        this._hideTimeoutId = setTimeout(function () {\n            _this._visibility = 'hidden';\n            _this._closeOnInteraction = false;\n        }, delay);\n    };\n    /** Returns an observable that notifies when the tooltip has been hidden from view */\n    TooltipComponent.prototype.afterHidden = function () {\n        return this._onHide.asObservable();\n    };\n    /** Whether the tooltip is being displayed */\n    TooltipComponent.prototype.isVisible = function () {\n        return this._visibility === 'visible';\n    };\n    /** Sets the tooltip transform origin according to the tooltip position */\n    TooltipComponent.prototype._setTransformOrigin = function (value) {\n        switch (value) {\n            case 'before':\n                this._transformOrigin = 'right';\n                break;\n            case 'after':\n                this._transformOrigin = 'left';\n                break;\n            case 'above':\n                this._transformOrigin = 'bottom';\n                break;\n            case 'below':\n                this._transformOrigin = 'top';\n                break;\n        }\n    };\n    TooltipComponent.prototype._afterVisibilityAnimation = function (e) {\n        if (e.toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n    };\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.google.com/components/tooltips.html#tooltips-interaction\n     */\n    TooltipComponent.prototype._handleBodyInteraction = function () {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    };\n    TooltipComponent = __decorate$42([\n        _angular_core.Component({selector: 'md-tooltip-component',\n            template: \"<div class=\\\"md-tooltip\\\" [style.transform-origin]=\\\"_transformOrigin\\\" [@state]=\\\"_visibility\\\" (@state.done)=\\\"this._afterVisibilityAnimation($event)\\\"> {{message}} </div>\",\n            styles: [\":host { pointer-events: none; } .md-tooltip { color: white; padding: 0 8px; border-radius: 2px; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; font-size: 10px; margin: 14px; height: 22px; line-height: 22px; } /*# sourceMappingURL=tooltip.css.map */ \"],\n            animations: [\n                _angular_core.trigger('state', [\n                    _angular_core.state('void', _angular_core.style({ transform: 'scale(0)' })),\n                    _angular_core.state('visible', _angular_core.style({ transform: 'scale(1)' })),\n                    _angular_core.state('hidden', _angular_core.style({ transform: 'scale(0)' })),\n                    _angular_core.transition('* => visible', _angular_core.animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n                    _angular_core.transition('* => hidden', _angular_core.animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n                ])\n            ],\n            host: {\n                '(body:click)': 'this._handleBodyInteraction()'\n            }\n        }), \n        __metadata$42('design:paramtypes', [])\n    ], TooltipComponent);\n    return TooltipComponent;\n}());\nvar MdTooltipModule = (function () {\n    function MdTooltipModule() {\n    }\n    MdTooltipModule.forRoot = function () {\n        return {\n            ngModule: MdTooltipModule,\n            providers: OVERLAY_PROVIDERS,\n        };\n    };\n    MdTooltipModule = __decorate$42([\n        _angular_core.NgModule({\n            imports: [OverlayModule],\n            exports: [MdTooltip, TooltipComponent],\n            declarations: [MdTooltip, TooltipComponent],\n            entryComponents: [TooltipComponent],\n        }), \n        __metadata$42('design:paramtypes', [])\n    ], MdTooltipModule);\n    return MdTooltipModule;\n}());\n\nvar __extends$17 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * Exception thrown when menu trigger doesn't have a valid md-menu instance\n */\nvar MdMenuMissingError = (function (_super) {\n    __extends$17(MdMenuMissingError, _super);\n    function MdMenuMissingError() {\n        _super.call(this, \"md-menu-trigger: must pass in an md-menu instance.\\n\\n    Example:\\n      <md-menu #menu=\\\"mdMenu\\\"></md-menu>\\n      <button [md-menu-trigger-for]=\\\"menu\\\"></button>\\n    \");\n    }\n    return MdMenuMissingError;\n}(MdError));\n/**\n * Exception thrown when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n */\nvar MdMenuInvalidPositionX = (function (_super) {\n    __extends$17(MdMenuInvalidPositionX, _super);\n    function MdMenuInvalidPositionX() {\n        _super.call(this, \"x-position value must be either 'before' or after'.\\n      Example: <md-menu x-position=\\\"before\\\" #menu=\\\"mdMenu\\\"></md-menu>\\n    \");\n    }\n    return MdMenuInvalidPositionX;\n}(MdError));\n/**\n * Exception thrown when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n */\nvar MdMenuInvalidPositionY = (function (_super) {\n    __extends$17(MdMenuInvalidPositionY, _super);\n    function MdMenuInvalidPositionY() {\n        _super.call(this, \"y-position value must be either 'above' or below'.\\n      Example: <md-menu y-position=\\\"above\\\" #menu=\\\"mdMenu\\\"></md-menu>\\n    \");\n    }\n    return MdMenuInvalidPositionY;\n}(MdError));\n\nvar __decorate$45 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$45 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/**\n * This directive is intended to be used inside an md-menu tag.\n * It exists mostly to set the role attribute.\n */\nvar MdMenuItem = (function () {\n    function MdMenuItem(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n    MdMenuItem.prototype.focus = function () {\n        this._renderer.invokeElementMethod(this._elementRef.nativeElement, 'focus');\n    };\n    Object.defineProperty(MdMenuItem.prototype, \"disabled\", {\n        // this is necessary to support anchors\n        get: function () {\n            return this._disabled;\n        },\n        set: function (value) {\n            this._disabled = (value === false || value === undefined) ? null : true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdMenuItem.prototype, \"isAriaDisabled\", {\n        get: function () {\n            return String(!!this.disabled);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdMenuItem.prototype, \"_tabindex\", {\n        get: function () {\n            return this.disabled ? '-1' : '0';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MdMenuItem.prototype._getHostElement = function () {\n        return this._elementRef.nativeElement;\n    };\n    MdMenuItem.prototype._checkDisabled = function (event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n    __decorate$45([\n        _angular_core.HostBinding('attr.disabled'),\n        _angular_core.Input(), \n        __metadata$45('design:type', Boolean)\n    ], MdMenuItem.prototype, \"disabled\", null);\n    __decorate$45([\n        _angular_core.HostBinding('attr.aria-disabled'), \n        __metadata$45('design:type', String)\n    ], MdMenuItem.prototype, \"isAriaDisabled\", null);\n    MdMenuItem = __decorate$45([\n        _angular_core.Component({selector: '[md-menu-item]',\n            host: {\n                'role': 'menuitem',\n                '(click)': '_checkDisabled($event)',\n                '[attr.tabindex]': '_tabindex'\n            },\n            template: \"<ng-content></ng-content> <div class=\\\"md-menu-ripple\\\" *ngIf=\\\"!disabled\\\" md-ripple md-ripple-background-color=\\\"rgba(0,0,0,0)\\\" [md-ripple-trigger]=\\\"_getHostElement()\\\"> </div> \",\n            exportAs: 'mdMenuItem'\n        }), \n        __metadata$45('design:paramtypes', [_angular_core.Renderer, _angular_core.ElementRef])\n    ], MdMenuItem);\n    return MdMenuItem;\n}());\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of focusable items, it will focus the correct item when arrow events occur.\n */\nvar ListKeyManager = (function () {\n    function ListKeyManager(_items) {\n        this._items = _items;\n        this._tabOut = new rxjs_Subject.Subject();\n    }\n    Object.defineProperty(ListKeyManager.prototype, \"tabOut\", {\n        /**\n         * Observable that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        get: function () {\n            return this._tabOut.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ListKeyManager.prototype, \"focusedItemIndex\", {\n        get: function () {\n            return this._focusedItemIndex;\n        },\n        set: function (value) {\n            this._focusedItemIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ListKeyManager.prototype.onKeydown = function (event) {\n        if (event.keyCode === DOWN_ARROW) {\n            this._focusNextItem();\n        }\n        else if (event.keyCode === UP_ARROW) {\n            this._focusPreviousItem();\n        }\n        else if (event.keyCode === TAB) {\n            this._tabOut.next(null);\n        }\n    };\n    ListKeyManager.prototype._focusNextItem = function () {\n        var items = this._items.toArray();\n        this._updateFocusedItemIndex(1, items);\n        items[this._focusedItemIndex].focus();\n    };\n    ListKeyManager.prototype._focusPreviousItem = function () {\n        var items = this._items.toArray();\n        this._updateFocusedItemIndex(-1, items);\n        items[this._focusedItemIndex].focus();\n    };\n    /**\n     * This method sets focus to the correct item, given a list of items and the delta\n     * between the currently focused item and the new item to be focused. It will\n     * continue to move down the list until it finds an item that is not disabled, and it will wrap\n     * if it encounters either end of the list.\n     *\n     * @param delta the desired change in focus index\n     */\n    ListKeyManager.prototype._updateFocusedItemIndex = function (delta, items) {\n        // when focus would leave menu, wrap to beginning or end\n        this._focusedItemIndex =\n            (this._focusedItemIndex + delta + items.length) % items.length;\n        // skip all disabled menu items recursively until an active one\n        // is reached or the menu closes for overreaching bounds\n        while (items[this._focusedItemIndex].disabled) {\n            this._updateFocusedItemIndex(delta, items);\n        }\n    };\n    return ListKeyManager;\n}());\n\n/**\n * Below are all the animations for the md-menu component.\n * Animation duration and timing values are based on Material 1.\n */\n/**\n * This animation controls the menu panel's entry and exit from the page.\n *\n * When the menu panel is added to the DOM, it scales in and fades in its border.\n *\n * When the menu panel is removed from the DOM, it simply fades out after a brief\n * delay to display the ripple.\n *\n * TODO(kara): switch to :enter and :leave once Mobile Safari is sorted out.\n */\nvar transformMenu = _angular_core.trigger('transformMenu', [\n    _angular_core.state('showing', _angular_core.style({\n        opacity: 1,\n        transform: \"scale(1)\"\n    })),\n    _angular_core.transition('void => *', [\n        _angular_core.style({\n            opacity: 0,\n            transform: \"scale(0)\"\n        }),\n        _angular_core.animate(\"200ms cubic-bezier(0.25, 0.8, 0.25, 1)\")\n    ]),\n    _angular_core.transition('* => void', [\n        _angular_core.animate('50ms 100ms linear', _angular_core.style({ opacity: 0 }))\n    ])\n]);\n/**\n * This animation fades in the background color and content of the menu panel\n * after its containing element is scaled in.\n */\nvar fadeInItems = _angular_core.trigger('fadeInItems', [\n    _angular_core.state('showing', _angular_core.style({ opacity: 1 })),\n    _angular_core.transition('void => *', [\n        _angular_core.style({ opacity: 0 }),\n        _angular_core.animate(\"200ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)\")\n    ])\n]);\n\n// TODO(kara): prevent-close functionality\nvar __decorate$44 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$44 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param$6 = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar MdMenu = (function () {\n    function MdMenu(posX, posY) {\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        this.positionX = 'after';\n        this.positionY = 'below';\n        this.close = new _angular_core.EventEmitter();\n        if (posX) {\n            this._setPositionX(posX);\n        }\n        if (posY) {\n            this._setPositionY(posY);\n        }\n        this._setPositionClasses();\n    }\n    // TODO: internal\n    MdMenu.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._keyManager = new ListKeyManager(this.items);\n        this._tabSubscription = this._keyManager.tabOut.subscribe(function () {\n            _this._emitCloseEvent();\n        });\n    };\n    // TODO: internal\n    MdMenu.prototype.ngOnDestroy = function () {\n        this._tabSubscription.unsubscribe();\n    };\n    Object.defineProperty(MdMenu.prototype, \"classList\", {\n        /**\n         * This method takes classes set on the host md-menu element and applies them on the\n         * menu template that displays in the overlay container.  Otherwise, it's difficult\n         * to style the containing menu from outside the component.\n         * @param classes list of class names\n         */\n        set: function (classes) {\n            this._classList = classes.split(' ').reduce(function (obj, className) {\n                obj[className] = true;\n                return obj;\n            }, {});\n            this._setPositionClasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Focus the first item in the menu. This method is used by the menu trigger\n     * to focus the first item when the menu is opened by the ENTER key.\n     * TODO: internal\n     */\n    MdMenu.prototype.focusFirstItem = function () {\n        // The menu always opens with the first item focused.\n        this.items.first.focus();\n        this._keyManager.focusedItemIndex = 0;\n    };\n    /**\n     * This emits a close event to which the trigger is subscribed. When emitted, the\n     * trigger will close the menu.\n     */\n    MdMenu.prototype._emitCloseEvent = function () {\n        this.close.emit();\n    };\n    MdMenu.prototype._setPositionX = function (pos) {\n        if (pos !== 'before' && pos !== 'after') {\n            throw new MdMenuInvalidPositionX();\n        }\n        this.positionX = pos;\n    };\n    MdMenu.prototype._setPositionY = function (pos) {\n        if (pos !== 'above' && pos !== 'below') {\n            throw new MdMenuInvalidPositionY();\n        }\n        this.positionY = pos;\n    };\n    /**\n     * It's necessary to set position-based classes to ensure the menu panel animation\n     * folds out from the correct direction.\n     */\n    MdMenu.prototype._setPositionClasses = function () {\n        this._classList['md-menu-before'] = this.positionX == 'before';\n        this._classList['md-menu-after'] = this.positionX == 'after';\n        this._classList['md-menu-above'] = this.positionY == 'above';\n        this._classList['md-menu-below'] = this.positionY == 'below';\n    };\n    __decorate$44([\n        _angular_core.ViewChild(_angular_core.TemplateRef), \n        __metadata$44('design:type', _angular_core.TemplateRef)\n    ], MdMenu.prototype, \"templateRef\", void 0);\n    __decorate$44([\n        _angular_core.ContentChildren(MdMenuItem), \n        __metadata$44('design:type', _angular_core.QueryList)\n    ], MdMenu.prototype, \"items\", void 0);\n    __decorate$44([\n        _angular_core.Input('class'), \n        __metadata$44('design:type', String), \n        __metadata$44('design:paramtypes', [String])\n    ], MdMenu.prototype, \"classList\", null);\n    __decorate$44([\n        _angular_core.Output(), \n        __metadata$44('design:type', Object)\n    ], MdMenu.prototype, \"close\", void 0);\n    MdMenu = __decorate$44([\n        _angular_core.Component({selector: 'md-menu',\n            host: { 'role': 'menu' },\n            template: \"<template> <div class=\\\"md-menu-panel\\\" [ngClass]=\\\"_classList\\\" (keydown)=\\\"_keyManager.onKeydown($event)\\\" (click)=\\\"_emitCloseEvent()\\\" [@transformMenu]=\\\"'showing'\\\"> <div class=\\\"md-menu-content\\\" [@fadeInItems]=\\\"'showing'\\\"> <ng-content></ng-content> </div> </div> </template> \",\n            styles: [\"/** The mixins below are shared between md-menu and md-select */ /** * This mixin adds the correct panel transform styles based * on the direction that the menu panel opens. */ .md-menu-panel { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); min-width: 112px; max-width: 280px; overflow: auto; -webkit-overflow-scrolling: touch; max-height: calc(100vh + 48px); } .md-menu-panel.md-menu-after.md-menu-below { transform-origin: left top; } .md-menu-panel.md-menu-after.md-menu-above { transform-origin: left bottom; } .md-menu-panel.md-menu-before.md-menu-below { transform-origin: right top; } .md-menu-panel.md-menu-before.md-menu-above { transform-origin: right bottom; } [dir='rtl'] .md-menu-panel.md-menu-after.md-menu-below { transform-origin: right top; } [dir='rtl'] .md-menu-panel.md-menu-after.md-menu-above { transform-origin: right bottom; } [dir='rtl'] .md-menu-panel.md-menu-before.md-menu-below { transform-origin: left top; } [dir='rtl'] .md-menu-panel.md-menu-before.md-menu-above { transform-origin: left bottom; } .md-menu-content { padding-top: 8px; padding-bottom: 8px; } [md-menu-item] { cursor: pointer; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; outline: none; border: none; white-space: nowrap; overflow-x: hidden; text-overflow: ellipsis; display: flex; flex-direction: row; align-items: center; height: 48px; padding: 0 16px; font-size: 16px; font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; text-align: start; text-decoration: none; position: relative; } [md-menu-item][disabled] { cursor: default; } [md-menu-item] md-icon { margin-right: 16px; } [dir='rtl'] [md-menu-item] md-icon { margin-left: 16px; } button[md-menu-item] { width: 100%; } .md-menu-ripple { position: absolute; top: 0; left: 0; bottom: 0; right: 0; } /*# sourceMappingURL=menu.css.map */ \"],\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            animations: [\n                transformMenu,\n                fadeInItems\n            ],\n            exportAs: 'mdMenu'\n        }),\n        __param$6(0, _angular_core.Attribute('x-position')),\n        __param$6(1, _angular_core.Attribute('y-position')), \n        __metadata$44('design:paramtypes', [String, String])\n    ], MdMenu);\n    return MdMenu;\n}());\n\nvar __decorate$46 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$46 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param$7 = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/**\n * This directive is intended to be used in conjunction with an md-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nvar MdMenuTrigger = (function () {\n    function MdMenuTrigger(_overlay, _element, _viewContainerRef, _renderer, _dir) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._dir = _dir;\n        this._menuOpen = false;\n        // tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedByMouse = false;\n        this.onMenuOpen = new _angular_core.EventEmitter();\n        this.onMenuClose = new _angular_core.EventEmitter();\n    }\n    MdMenuTrigger.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this._checkMenu();\n        this.menu.close.subscribe(function () { return _this.closeMenu(); });\n    };\n    MdMenuTrigger.prototype.ngOnDestroy = function () { this.destroyMenu(); };\n    Object.defineProperty(MdMenuTrigger.prototype, \"menuOpen\", {\n        get: function () { return this._menuOpen; },\n        enumerable: true,\n        configurable: true\n    });\n    MdMenuTrigger.prototype.toggleMenu = function () {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    };\n    MdMenuTrigger.prototype.openMenu = function () {\n        if (!this._menuOpen) {\n            this._createOverlay();\n            this._overlayRef.attach(this._portal);\n            this._subscribeToBackdrop();\n            this._initMenu();\n        }\n    };\n    MdMenuTrigger.prototype.closeMenu = function () {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this._backdropSubscription.unsubscribe();\n            this._resetMenu();\n        }\n    };\n    MdMenuTrigger.prototype.destroyMenu = function () {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n            if (this._backdropSubscription) {\n                this._backdropSubscription.unsubscribe();\n            }\n        }\n    };\n    MdMenuTrigger.prototype.focus = function () {\n        this._renderer.invokeElementMethod(this._element.nativeElement, 'focus');\n    };\n    Object.defineProperty(MdMenuTrigger.prototype, \"dir\", {\n        /** The text direction of the containing app. */\n        get: function () {\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * This method ensures that the menu closes when the overlay backdrop is clicked.\n     * We do not use first() here because doing so would not catch clicks from within\n     * the menu, and it would fail to unsubscribe properly. Instead, we unsubscribe\n     * explicitly when the menu is closed or destroyed.\n     */\n    MdMenuTrigger.prototype._subscribeToBackdrop = function () {\n        var _this = this;\n        this._backdropSubscription = this._overlayRef.backdropClick().subscribe(function () {\n            _this.closeMenu();\n        });\n    };\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    MdMenuTrigger.prototype._initMenu = function () {\n        this._setIsMenuOpen(true);\n        // Should only set focus if opened via the keyboard, so keyboard users can\n        // can easily navigate menu items. According to spec, mouse users should not\n        // see the focus style.\n        if (!this._openedByMouse) {\n            this.menu.focusFirstItem();\n        }\n    };\n    ;\n    /**\n     * This method resets the menu when it's closed, most importantly restoring\n     * focus to the menu trigger if the menu was opened via the keyboard.\n     */\n    MdMenuTrigger.prototype._resetMenu = function () {\n        this._setIsMenuOpen(false);\n        // Focus only needs to be reset to the host element if the menu was opened\n        // by the keyboard and manually shifted to the first menu item.\n        if (!this._openedByMouse) {\n            this.focus();\n        }\n        this._openedByMouse = false;\n    };\n    // set state rather than toggle to support triggers sharing a menu\n    MdMenuTrigger.prototype._setIsMenuOpen = function (isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.onMenuOpen.emit() : this.onMenuClose.emit();\n    };\n    /**\n     *  This method checks that a valid instance of MdMenu has been passed into\n     *  md-menu-trigger-for.  If not, an exception is thrown.\n     */\n    MdMenuTrigger.prototype._checkMenu = function () {\n        if (!this.menu) {\n            throw new MdMenuMissingError();\n        }\n    };\n    /**\n     *  This method creates the overlay from the provided menu's template and saves its\n     *  OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    MdMenuTrigger.prototype._createOverlay = function () {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n            this._overlayRef = this._overlay.create(this._getOverlayConfig());\n        }\n    };\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayState\n     */\n    MdMenuTrigger.prototype._getOverlayConfig = function () {\n        var overlayState = new OverlayState();\n        overlayState.positionStrategy = this._getPosition()\n            .withDirection(this.dir);\n        overlayState.hasBackdrop = true;\n        overlayState.backdropClass = 'md-overlay-transparent-backdrop';\n        overlayState.direction = this.dir;\n        return overlayState;\n    };\n    /**\n     * This method builds the position strategy for the overlay, so the menu is properly connected\n     * to the trigger.\n     * @returns ConnectedPositionStrategy\n     */\n    MdMenuTrigger.prototype._getPosition = function () {\n        var positionX = this.menu.positionX === 'before' ? 'end' : 'start';\n        var positionY = this.menu.positionY === 'above' ? 'bottom' : 'top';\n        return this._overlay.position().connectedTo(this._element, { originX: positionX, originY: positionY }, { overlayX: positionX, overlayY: positionY });\n    };\n    MdMenuTrigger.prototype._handleMousedown = function (event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            this._openedByMouse = true;\n        }\n    };\n    __decorate$46([\n        _angular_core.Input('md-menu-trigger-for'), \n        __metadata$46('design:type', Object)\n    ], MdMenuTrigger.prototype, \"menu\", void 0);\n    __decorate$46([\n        _angular_core.Output(), \n        __metadata$46('design:type', Object)\n    ], MdMenuTrigger.prototype, \"onMenuOpen\", void 0);\n    __decorate$46([\n        _angular_core.Output(), \n        __metadata$46('design:type', Object)\n    ], MdMenuTrigger.prototype, \"onMenuClose\", void 0);\n    MdMenuTrigger = __decorate$46([\n        _angular_core.Directive({\n            selector: '[md-menu-trigger-for]',\n            host: {\n                'aria-haspopup': 'true',\n                '(mousedown)': '_handleMousedown($event)',\n                '(click)': 'toggleMenu()',\n            },\n            exportAs: 'mdMenuTrigger'\n        }),\n        __param$7(4, _angular_core.Optional()), \n        __metadata$46('design:paramtypes', [Overlay, _angular_core.ElementRef, _angular_core.ViewContainerRef, _angular_core.Renderer, Dir])\n    ], MdMenuTrigger);\n    return MdMenuTrigger;\n}());\n\nvar __decorate$43 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$43 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar MdMenuModule = (function () {\n    function MdMenuModule() {\n    }\n    MdMenuModule.forRoot = function () {\n        return {\n            ngModule: MdMenuModule,\n            providers: OVERLAY_PROVIDERS,\n        };\n    };\n    MdMenuModule = __decorate$43([\n        _angular_core.NgModule({\n            imports: [OverlayModule, _angular_common.CommonModule, MdRippleModule],\n            exports: [MdMenu, MdMenuItem, MdMenuTrigger],\n            declarations: [MdMenu, MdMenuItem, MdMenuTrigger],\n        }), \n        __metadata$43('design:paramtypes', [])\n    ], MdMenuModule);\n    return MdMenuModule;\n}());\n\n/**\n * Configuration for opening a modal dialog with the MdDialog service.\n */\nvar MdDialogConfig = (function () {\n    function MdDialogConfig() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Whether the user can use escape or clicking outside to close a modal. */\n        this.disableClose = false;\n    }\n    return MdDialogConfig;\n}());\n\n// TODO(jelbourn): resizing\n// TODO(jelbourn): afterOpen and beforeClose\n/**\n * Reference to a dialog opened via the MdDialog service.\n */\nvar MdDialogRef = (function () {\n    function MdDialogRef(_overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the dialog has finished closing. */\n        this._afterClosed = new rxjs_Subject.Subject();\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    MdDialogRef.prototype.close = function (dialogResult) {\n        this._overlayRef.dispose();\n        this._afterClosed.next(dialogResult);\n        this._afterClosed.complete();\n    };\n    /** Gets an observable that is notified when the dialog is finished closing. */\n    MdDialogRef.prototype.afterClosed = function () {\n        return this._afterClosed.asObservable();\n    };\n    return MdDialogRef;\n}());\n\n/** Custom injector type specifically for instantiating components with a dialog. */\nvar DialogInjector = (function () {\n    function DialogInjector(_dialogRef, _parentInjector) {\n        this._dialogRef = _dialogRef;\n        this._parentInjector = _parentInjector;\n    }\n    DialogInjector.prototype.get = function (token, notFoundValue) {\n        if (token === MdDialogRef) {\n            return this._dialogRef;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    };\n    return DialogInjector;\n}());\n\nvar __extends$19 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/** Exception thrown when a ComponentPortal is attached to a DomPortalHost without an origin. */\nvar MdDialogContentAlreadyAttachedError = (function (_super) {\n    __extends$19(MdDialogContentAlreadyAttachedError, _super);\n    function MdDialogContentAlreadyAttachedError() {\n        _super.call(this, 'Attempting to attach dialog content after content is already attached');\n    }\n    return MdDialogContentAlreadyAttachedError;\n}(MdError));\n\nvar __extends$18 = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate$48 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$48 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/**\n * Internal component that wraps user-provided dialog content.\n */\nvar MdDialogContainer = (function (_super) {\n    __extends$18(MdDialogContainer, _super);\n    function MdDialogContainer(_ngZone) {\n        _super.call(this);\n        this._ngZone = _ngZone;\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n    }\n    /** Attach a portal as content to this dialog container. */\n    MdDialogContainer.prototype.attachComponentPortal = function (portal) {\n        var _this = this;\n        if (this._portalHost.hasAttached()) {\n            throw new MdDialogContentAlreadyAttachedError();\n        }\n        var attachResult = this._portalHost.attachComponentPortal(portal);\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        this._ngZone.onMicrotaskEmpty.first().subscribe(function () {\n            _this._elementFocusedBeforeDialogWasOpened = document.activeElement;\n            _this._focusTrap.focusFirstTabbableElement();\n        });\n        return attachResult;\n    };\n    MdDialogContainer.prototype.attachTemplatePortal = function (portal) {\n        throw Error('Not yet implemented');\n    };\n    /** Handles the user pressing the Escape key. */\n    MdDialogContainer.prototype.handleEscapeKey = function () {\n        if (!this.dialogConfig.disableClose) {\n            this.dialogRef.close();\n        }\n    };\n    MdDialogContainer.prototype.ngOnDestroy = function () {\n        var _this = this;\n        // When the dialog is destroyed, return focus to the element that originally had it before\n        // the dialog was opened. Wait for the DOM to finish settling before changing the focus so\n        // that it doesn't end up back on the <body>.\n        this._ngZone.onMicrotaskEmpty.first().subscribe(function () {\n            _this._elementFocusedBeforeDialogWasOpened.focus();\n        });\n    };\n    __decorate$48([\n        _angular_core.ViewChild(PortalHostDirective), \n        __metadata$48('design:type', PortalHostDirective)\n    ], MdDialogContainer.prototype, \"_portalHost\", void 0);\n    __decorate$48([\n        _angular_core.ViewChild(FocusTrap), \n        __metadata$48('design:type', FocusTrap)\n    ], MdDialogContainer.prototype, \"_focusTrap\", void 0);\n    MdDialogContainer = __decorate$48([\n        _angular_core.Component({selector: 'md-dialog-container',\n            template: \"<focus-trap> <template portalHost></template> </focus-trap> \",\n            styles: [\"md-dialog-container { box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); display: block; overflow: hidden; padding: 24px; } /*# sourceMappingURL=dialog-container.css.map */ \"],\n            host: {\n                'class': 'md-dialog-container',\n                '[attr.role]': 'dialogConfig?.role',\n                '(keydown.escape)': 'handleEscapeKey()',\n            },\n            encapsulation: _angular_core.ViewEncapsulation.None,\n        }), \n        __metadata$48('design:paramtypes', [_angular_core.NgZone])\n    ], MdDialogContainer);\n    return MdDialogContainer;\n}(BasePortalHost));\n\nvar __decorate$47 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$47 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n// TODO(jelbourn): add support for opening with a TemplateRef\n// TODO(jelbourn): add `closeAll` method\n// TODO(jelbourn): default dialog config\n// TODO(jelbourn): escape key closes dialog\n// TODO(jelbourn): dialog content directives (e.g., md-dialog-header)\n// TODO(jelbourn): animations\n/**\n * Service to open Material Design modal dialogs.\n */\nvar MdDialog = (function () {\n    function MdDialog(_overlay, _injector) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n    }\n    /**\n     * Opens a modal dialog containing the given component.\n     * @param component Type of the component to load into the load.\n     * @param config\n     */\n    MdDialog.prototype.open = function (component, config) {\n        config = _applyConfigDefaults$1(config);\n        var overlayRef = this._createOverlay(config);\n        var dialogContainer = this._attachDialogContainer(overlayRef, config);\n        return this._attachDialogContent(component, dialogContainer, overlayRef);\n    };\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @param dialogConfig The dialog configuration.\n     * @returns A promise resolving to the OverlayRef for the created overlay.\n     */\n    MdDialog.prototype._createOverlay = function (dialogConfig) {\n        var overlayState = this._getOverlayState(dialogConfig);\n        return this._overlay.create(overlayState);\n    };\n    /**\n     * Attaches an MdDialogContainer to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    MdDialog.prototype._attachDialogContainer = function (overlay, config) {\n        var viewContainer = config ? config.viewContainerRef : null;\n        var containerPortal = new ComponentPortal(MdDialogContainer, viewContainer);\n        var containerRef = overlay.attach(containerPortal);\n        containerRef.instance.dialogConfig = config;\n        return containerRef.instance;\n    };\n    /**\n     * Attaches the user-provided component to the already-created MdDialogContainer.\n     * @param component The type of component being loaded into the dialog.\n     * @param dialogContainer Reference to the wrapping MdDialogContainer.\n     * @param overlayRef Reference to the overlay in which the dialog resides.\n     * @returns A promise resolving to the MdDialogRef that should be returned to the user.\n     */\n    MdDialog.prototype._attachDialogContent = function (component, dialogContainer, overlayRef) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        var dialogRef = new MdDialogRef(overlayRef);\n        if (!dialogContainer.dialogConfig.disableClose) {\n            // When the dialog backdrop is clicked, we want to close it.\n            overlayRef.backdropClick().first().subscribe(function () { return dialogRef.close(); });\n        }\n        // Set the dialogRef to the container so that it can use the ref to close the dialog.\n        dialogContainer.dialogRef = dialogRef;\n        // We create an injector specifically for the component we're instantiating so that it can\n        // inject the MdDialogRef. This allows a component loaded inside of a dialog to close itself\n        // and, optionally, to return a value.\n        var dialogInjector = new DialogInjector(dialogRef, this._injector);\n        var contentPortal = new ComponentPortal(component, null, dialogInjector);\n        var contentRef = dialogContainer.attachComponentPortal(contentPortal);\n        dialogRef.componentInstance = contentRef.instance;\n        return dialogRef;\n    };\n    /**\n     * Creates an overlay state from a dialog config.\n     * @param dialogConfig The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    MdDialog.prototype._getOverlayState = function (dialogConfig) {\n        var state = new OverlayState();\n        state.hasBackdrop = true;\n        state.positionStrategy = this._overlay.position()\n            .global()\n            .centerHorizontally()\n            .centerVertically();\n        return state;\n    };\n    MdDialog = __decorate$47([\n        _angular_core.Injectable(), \n        __metadata$47('design:paramtypes', [Overlay, _angular_core.Injector])\n    ], MdDialog);\n    return MdDialog;\n}());\n/**\n * Applies default options to the dialog config.\n * @param dialogConfig Config to be modified.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults$1(dialogConfig) {\n    return extendObject(new MdDialogConfig(), dialogConfig);\n}\nvar MdDialogModule = (function () {\n    function MdDialogModule() {\n    }\n    MdDialogModule.forRoot = function () {\n        return {\n            ngModule: MdDialogModule,\n            providers: [MdDialog, OVERLAY_PROVIDERS, InteractivityChecker],\n        };\n    };\n    MdDialogModule = __decorate$47([\n        _angular_core.NgModule({\n            imports: [OverlayModule, PortalModule, A11yModule],\n            exports: [MdDialogContainer],\n            declarations: [MdDialogContainer],\n            entryComponents: [MdDialogContainer],\n        }), \n        __metadata$47('design:paramtypes', [])\n    ], MdDialogModule);\n    return MdDialogModule;\n}());\n\nvar __decorate$16 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$16 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar MATERIAL_MODULES = [\n    MdButtonModule,\n    MdButtonToggleModule,\n    MdCardModule,\n    MdCheckboxModule,\n    MdDialogModule,\n    MdGridListModule,\n    MdIconModule,\n    MdInputModule,\n    MdListModule,\n    MdMenuModule,\n    MdProgressBarModule,\n    MdProgressCircleModule,\n    MdRadioModule,\n    MdRippleModule,\n    MdSidenavModule,\n    MdSliderModule,\n    MdSlideToggleModule,\n    MdSnackBarModule,\n    MdTabsModule,\n    MdToolbarModule,\n    MdTooltipModule,\n    OverlayModule,\n    PortalModule,\n    RtlModule,\n    A11yModule,\n    StyleCompatibilityModule,\n];\nvar MaterialRootModule = (function () {\n    function MaterialRootModule() {\n    }\n    MaterialRootModule = __decorate$16([\n        _angular_core.NgModule({\n            imports: [\n                MdButtonModule.forRoot(),\n                MdCardModule.forRoot(),\n                MdCheckboxModule.forRoot(),\n                MdGridListModule.forRoot(),\n                MdInputModule.forRoot(),\n                MdListModule.forRoot(),\n                MdProgressBarModule.forRoot(),\n                MdProgressCircleModule.forRoot(),\n                MdRippleModule.forRoot(),\n                MdSidenavModule.forRoot(),\n                MdTabsModule.forRoot(),\n                MdToolbarModule.forRoot(),\n                PortalModule.forRoot(),\n                RtlModule.forRoot(),\n                // These modules include providers.\n                A11yModule.forRoot(),\n                MdButtonToggleModule.forRoot(),\n                MdDialogModule.forRoot(),\n                MdIconModule.forRoot(),\n                MdMenuModule.forRoot(),\n                MdRadioModule.forRoot(),\n                MdSliderModule.forRoot(),\n                MdSlideToggleModule.forRoot(),\n                MdSnackBarModule.forRoot(),\n                MdTooltipModule.forRoot(),\n                OverlayModule.forRoot(),\n                StyleCompatibilityModule.forRoot(),\n            ],\n            exports: MATERIAL_MODULES,\n        }), \n        __metadata$16('design:paramtypes', [])\n    ], MaterialRootModule);\n    return MaterialRootModule;\n}());\nvar MaterialModule = (function () {\n    function MaterialModule() {\n    }\n    MaterialModule.forRoot = function () {\n        return { ngModule: MaterialRootModule };\n    };\n    MaterialModule = __decorate$16([\n        _angular_core.NgModule({\n            imports: MATERIAL_MODULES,\n            exports: MATERIAL_MODULES,\n        }), \n        __metadata$16('design:paramtypes', [])\n    ], MaterialModule);\n    return MaterialModule;\n}());\n\nexports.MdCoreModule = MdCoreModule;\nexports.Dir = Dir;\nexports.RtlModule = RtlModule;\nexports.Portal = Portal;\nexports.BasePortalHost = BasePortalHost;\nexports.ComponentPortal = ComponentPortal;\nexports.TemplatePortal = TemplatePortal;\nexports.PortalHostDirective = PortalHostDirective;\nexports.TemplatePortalDirective = TemplatePortalDirective;\nexports.PortalModule = PortalModule;\nexports.DomPortalHost = DomPortalHost;\nexports.Overlay = Overlay;\nexports.OVERLAY_PROVIDERS = OVERLAY_PROVIDERS;\nexports.OverlayContainer = OverlayContainer;\nexports.OverlayRef = OverlayRef;\nexports.OverlayState = OverlayState;\nexports.ConnectedOverlayDirective = ConnectedOverlayDirective;\nexports.OverlayOrigin = OverlayOrigin;\nexports.OverlayModule = OverlayModule;\nexports.MdGestureConfig = MdGestureConfig;\nexports.MdRipple = MdRipple;\nexports.MdRippleModule = MdRippleModule;\nexports.MdLiveAnnouncer = MdLiveAnnouncer;\nexports.LIVE_ANNOUNCER_ELEMENT_TOKEN = LIVE_ANNOUNCER_ELEMENT_TOKEN;\nexports.FocusTrap = FocusTrap;\nexports.InteractivityChecker = InteractivityChecker;\nexports.isFakeMousedownFromScreenReader = isFakeMousedownFromScreenReader;\nexports.A11yModule = A11yModule;\nexports.MdUniqueSelectionDispatcher = MdUniqueSelectionDispatcher;\nexports.MdLineModule = MdLineModule;\nexports.MdLine = MdLine;\nexports.MdLineSetter = MdLineSetter;\nexports.applyCssTransform = applyCssTransform;\nexports.MdError = MdError;\nexports.coerceBooleanProperty = coerceBooleanProperty;\nexports.coerceNumberProperty = coerceNumberProperty;\nexports.ConnectedPositionStrategy = ConnectedPositionStrategy;\nexports.ConnectionPositionPair = ConnectionPositionPair;\nexports.UP_ARROW = UP_ARROW;\nexports.DOWN_ARROW = DOWN_ARROW;\nexports.RIGHT_ARROW = RIGHT_ARROW;\nexports.LEFT_ARROW = LEFT_ARROW;\nexports.ENTER = ENTER;\nexports.SPACE = SPACE;\nexports.TAB = TAB;\nexports.ELEMENTS_SELECTOR = ELEMENTS_SELECTOR;\nexports.StyleCompatibility = StyleCompatibility;\nexports.StyleCompatibilityModule = StyleCompatibilityModule;\nexports.AnimationCurves = AnimationCurves;\nexports.AnimationDurations = AnimationDurations;\nexports.MaterialRootModule = MaterialRootModule;\nexports.MaterialModule = MaterialModule;\nexports.MdButton = MdButton;\nexports.MdAnchor = MdAnchor;\nexports.MdButtonModule = MdButtonModule;\nexports.MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR;\nexports.MdButtonToggleChange = MdButtonToggleChange;\nexports.MdButtonToggleGroup = MdButtonToggleGroup;\nexports.MdButtonToggleGroupMultiple = MdButtonToggleGroupMultiple;\nexports.MdButtonToggle = MdButtonToggle;\nexports.MdButtonToggleModule = MdButtonToggleModule;\nexports.MdCardContent = MdCardContent;\nexports.MdCardTitle = MdCardTitle;\nexports.MdCardSubtitle = MdCardSubtitle;\nexports.MdCardActions = MdCardActions;\nexports.MdCardFooter = MdCardFooter;\nexports.MdCard = MdCard;\nexports.MdCardHeader = MdCardHeader;\nexports.MdCardTitleGroup = MdCardTitleGroup;\nexports.MdCardModule = MdCardModule;\nexports.MD_CHECKBOX_CONTROL_VALUE_ACCESSOR = MD_CHECKBOX_CONTROL_VALUE_ACCESSOR;\nexports.MdCheckboxChange = MdCheckboxChange;\nexports.MdCheckbox = MdCheckbox;\nexports.MdCheckboxModule = MdCheckboxModule;\nexports.MdDialog = MdDialog;\nexports.MdDialogModule = MdDialogModule;\nexports.MdDialogConfig = MdDialogConfig;\nexports.MdDialogRef = MdDialogRef;\nexports.MdDialogContainer = MdDialogContainer;\nexports.MdGridList = MdGridList;\nexports.MdGridListModule = MdGridListModule;\nexports.MdIconInvalidNameError = MdIconInvalidNameError;\nexports.MdIcon = MdIcon;\nexports.MdIconModule = MdIconModule;\nexports.MdIconRegistry = MdIconRegistry;\nexports.MD_INPUT_CONTROL_VALUE_ACCESSOR = MD_INPUT_CONTROL_VALUE_ACCESSOR;\nexports.MdInputPlaceholderConflictError = MdInputPlaceholderConflictError;\nexports.MdInputUnsupportedTypeError = MdInputUnsupportedTypeError;\nexports.MdInputDuplicatedHintError = MdInputDuplicatedHintError;\nexports.MdPlaceholder = MdPlaceholder;\nexports.MdHint = MdHint;\nexports.MdInput = MdInput;\nexports.MdInputModule = MdInputModule;\nexports.MdListDivider = MdListDivider;\nexports.MdList = MdList;\nexports.MdListAvatar = MdListAvatar;\nexports.MdListItem = MdListItem;\nexports.MdListModule = MdListModule;\nexports.MdMenuModule = MdMenuModule;\nexports.MdMenu = MdMenu;\nexports.MdMenuItem = MdMenuItem;\nexports.MdMenuTrigger = MdMenuTrigger;\nexports.MdProgressBar = MdProgressBar;\nexports.MdProgressBarModule = MdProgressBarModule;\nexports.MdProgressCircle = MdProgressCircle;\nexports.MdSpinner = MdSpinner;\nexports.MdProgressCircleModule = MdProgressCircleModule;\nexports.MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR;\nexports.MdRadioChange = MdRadioChange;\nexports.MdRadioGroup = MdRadioGroup;\nexports.MdRadioButton = MdRadioButton;\nexports.MdRadioModule = MdRadioModule;\nexports.MdDuplicatedSidenavError = MdDuplicatedSidenavError;\nexports.MdSidenav = MdSidenav;\nexports.MdSidenavLayout = MdSidenavLayout;\nexports.MdSidenavModule = MdSidenavModule;\nexports.MD_SLIDER_VALUE_ACCESSOR = MD_SLIDER_VALUE_ACCESSOR;\nexports.MdSliderChange = MdSliderChange;\nexports.MdSlider = MdSlider;\nexports.SliderRenderer = SliderRenderer;\nexports.MdSliderModule = MdSliderModule;\nexports.MD_SLIDE_TOGGLE_VALUE_ACCESSOR = MD_SLIDE_TOGGLE_VALUE_ACCESSOR;\nexports.MdSlideToggleChange = MdSlideToggleChange;\nexports.MdSlideToggle = MdSlideToggle;\nexports.MdSlideToggleModule = MdSlideToggleModule;\nexports.MdSnackBar = MdSnackBar;\nexports.MdSnackBarModule = MdSnackBarModule;\nexports.SHOW_ANIMATION = SHOW_ANIMATION;\nexports.HIDE_ANIMATION = HIDE_ANIMATION;\nexports.MdSnackBarContainer = MdSnackBarContainer;\nexports.MdSnackBarConfig = MdSnackBarConfig;\nexports.MdSnackBarRef = MdSnackBarRef;\nexports.MdTabChangeEvent = MdTabChangeEvent;\nexports.MdTab = MdTab;\nexports.MdTabGroup = MdTabGroup;\nexports.MdTabsModule = MdTabsModule;\nexports.MdTabNavBar = MdTabNavBar;\nexports.MdTabLink = MdTabLink;\nexports.MdToolbarRow = MdToolbarRow;\nexports.MdToolbar = MdToolbar;\nexports.MdToolbarModule = MdToolbarModule;\nexports.TOOLTIP_HIDE_DELAY = TOOLTIP_HIDE_DELAY;\nexports.MdTooltip = MdTooltip;\nexports.TooltipComponent = TooltipComponent;\nexports.MdTooltipModule = MdTooltipModule;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n//# sourceMappingURL=./material.umd.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/material/material.umd.js\n// module id = 66\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar core_1 = require('@angular/core');\nvar common_1 = require('@angular/common');\nvar forms_1 = require('@angular/forms');\nvar table_component_1 = require('./components/table.component');\nexports.DataTable = table_component_1.DataTable;\nvar column_component_1 = require('./components/column.component');\nexports.DataTableColumn = column_component_1.DataTableColumn;\nvar row_component_1 = require('./components/row.component');\nexports.DataTableRow = row_component_1.DataTableRow;\nvar pagination_component_1 = require('./components/pagination.component');\nexports.DataTablePagination = pagination_component_1.DataTablePagination;\nvar header_component_1 = require('./components/header.component');\nexports.DataTableHeader = header_component_1.DataTableHeader;\nvar px_1 = require('./utils/px');\nvar hide_1 = require('./utils/hide');\nvar min_1 = require('./utils/min');\n__export(require('./components/types'));\n__export(require('./tools/data-table-resource'));\nexports.DATA_TABLE_DIRECTIVES = [table_component_1.DataTable, column_component_1.DataTableColumn];\nvar DataTableModule = (function () {\n    function DataTableModule() {\n    }\n    DataTableModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule, forms_1.FormsModule],\n            declarations: [\n                table_component_1.DataTable, column_component_1.DataTableColumn,\n                row_component_1.DataTableRow, pagination_component_1.DataTablePagination, header_component_1.DataTableHeader,\n                px_1.PixelConverter, hide_1.Hide, min_1.MinPipe\n            ],\n            exports: [table_component_1.DataTable, column_component_1.DataTableColumn]\n        }), \n        __metadata('design:paramtypes', [])\n    ], DataTableModule);\n    return DataTableModule;\n}());\nexports.DataTableModule = DataTableModule;\n//# sourceMappingURL=/index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/index.js\n// module id = 84\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar column_component_1 = require('./column.component');\nvar row_component_1 = require('./row.component');\nvar types_1 = require('./types');\nvar drag_1 = require('../utils/drag');\nvar table_template_1 = require('./table.template');\nvar table_style_1 = require(\"./table.style\");\nvar DataTable = (function () {\n    function DataTable() {\n        this._items = [];\n        this.header = true;\n        this.pagination = true;\n        this.indexColumn = true;\n        this.indexColumnHeader = '';\n        this.selectColumn = false;\n        this.multiSelect = true;\n        this.substituteRows = true;\n        this.expandableRows = false;\n        this.translations = types_1.defaultTranslations;\n        this.selectOnRowClick = false;\n        this.autoReload = true;\n        this.showReloading = false;\n        this._sortAsc = true;\n        this._offset = 0;\n        this._limit = 10;\n        // Reloading:\n        this._reloading = false;\n        this.reload = new core_1.EventEmitter();\n        this._displayParams = {}; // params of the last finished reload\n        this._scheduledReload = null;\n        // event handlers:\n        this.rowClick = new core_1.EventEmitter();\n        this.rowDoubleClick = new core_1.EventEmitter();\n        this.headerClick = new core_1.EventEmitter();\n        this.cellClick = new core_1.EventEmitter();\n        this.selectedRows = [];\n        this._selectAllCheckbox = false;\n        // column resizing:\n        this._resizeInProgress = false;\n        this.resizeLimit = 30;\n    }\n    Object.defineProperty(DataTable.prototype, \"items\", {\n        get: function () {\n            return this._items;\n        },\n        set: function (items) {\n            this._items = items;\n            this._onReloadFinished();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTable.prototype, \"sortBy\", {\n        get: function () {\n            return this._sortBy;\n        },\n        set: function (value) {\n            this._sortBy = value;\n            this._triggerReload();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTable.prototype, \"sortAsc\", {\n        get: function () {\n            return this._sortAsc;\n        },\n        set: function (value) {\n            this._sortAsc = value;\n            this._triggerReload();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTable.prototype, \"offset\", {\n        get: function () {\n            return this._offset;\n        },\n        set: function (value) {\n            this._offset = value;\n            this._triggerReload();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTable.prototype, \"limit\", {\n        get: function () {\n            return this._limit;\n        },\n        set: function (value) {\n            this._limit = value;\n            this._triggerReload();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTable.prototype, \"page\", {\n        // calculated property:\n        get: function () {\n            return Math.floor(this.offset / this.limit) + 1;\n        },\n        set: function (value) {\n            this.offset = (value - 1) * this.limit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTable.prototype, \"lastPage\", {\n        get: function () {\n            return Math.ceil(this.itemCount / this.limit);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // setting multiple observable properties simultaneously\n    DataTable.prototype.sort = function (sortBy, asc) {\n        this.sortBy = sortBy;\n        this.sortAsc = asc;\n    };\n    // init\n    DataTable.prototype.ngOnInit = function () {\n        this._initDefaultValues();\n        this._initDefaultClickEvents();\n        this._updateDisplayParams();\n        if (this.autoReload && this._scheduledReload == null) {\n            this.reloadItems();\n        }\n    };\n    DataTable.prototype._initDefaultValues = function () {\n        this.indexColumnVisible = this.indexColumn;\n        this.selectColumnVisible = this.selectColumn;\n        this.expandColumnVisible = this.expandableRows;\n    };\n    DataTable.prototype._initDefaultClickEvents = function () {\n        var _this = this;\n        this.headerClick.subscribe(function (tableEvent) { return _this.sortColumn(tableEvent.column); });\n        if (this.selectOnRowClick) {\n            this.rowClick.subscribe(function (tableEvent) { return tableEvent.row.selected = !tableEvent.row.selected; });\n        }\n    };\n    Object.defineProperty(DataTable.prototype, \"reloading\", {\n        get: function () {\n            return this._reloading;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataTable.prototype.reloadItems = function () {\n        this._reloading = true;\n        this.reload.emit(this._getRemoteParameters());\n    };\n    DataTable.prototype._onReloadFinished = function () {\n        this._updateDisplayParams();\n        this._selectAllCheckbox = false;\n        this._reloading = false;\n    };\n    Object.defineProperty(DataTable.prototype, \"displayParams\", {\n        get: function () {\n            return this._displayParams;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataTable.prototype._updateDisplayParams = function () {\n        this._displayParams = {\n            sortBy: this.sortBy,\n            sortAsc: this.sortAsc,\n            offset: this.offset,\n            limit: this.limit\n        };\n    };\n    // for avoiding cascading reloads if multiple params are set at once:\n    DataTable.prototype._triggerReload = function () {\n        var _this = this;\n        if (this._scheduledReload) {\n            clearTimeout(this._scheduledReload);\n        }\n        this._scheduledReload = setTimeout(function () {\n            _this.reloadItems();\n        });\n    };\n    DataTable.prototype.rowClicked = function (row, event) {\n        this.rowClick.emit({ row: row, event: event });\n    };\n    DataTable.prototype.rowDoubleClicked = function (row, event) {\n        this.rowDoubleClick.emit({ row: row, event: event });\n    };\n    DataTable.prototype.headerClicked = function (column, event) {\n        if (!this._resizeInProgress) {\n            this.headerClick.emit({ column: column, event: event });\n        }\n        else {\n            this._resizeInProgress = false; // this is because I can't prevent click from mousup of the drag end\n        }\n    };\n    DataTable.prototype.cellClicked = function (column, row, event) {\n        this.cellClick.emit({ row: row, column: column, event: event });\n    };\n    // functions:\n    DataTable.prototype._getRemoteParameters = function () {\n        var params = {};\n        if (this.sortBy) {\n            params.sortBy = this.sortBy;\n            params.sortAsc = this.sortAsc;\n        }\n        if (this.pagination) {\n            params.offset = this.offset;\n            params.limit = this.limit;\n        }\n        return params;\n    };\n    DataTable.prototype.sortColumn = function (column) {\n        if (column.sortable) {\n            var ascending = this.sortBy === column.property ? !this.sortAsc : true;\n            this.sort(column.property, ascending);\n        }\n    };\n    Object.defineProperty(DataTable.prototype, \"columnCount\", {\n        get: function () {\n            var count = 0;\n            count += this.indexColumnVisible ? 1 : 0;\n            count += this.selectColumnVisible ? 1 : 0;\n            count += this.expandColumnVisible ? 1 : 0;\n            this.columns.toArray().forEach(function (column) {\n                count += column.visible ? 1 : 0;\n            });\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataTable.prototype.getRowColor = function (item, index, row) {\n        if (this.rowColors !== undefined) {\n            return this.rowColors(item, row, index);\n        }\n    };\n    Object.defineProperty(DataTable.prototype, \"selectAllCheckbox\", {\n        get: function () {\n            return this._selectAllCheckbox;\n        },\n        set: function (value) {\n            this._selectAllCheckbox = value;\n            this._onSelectAllChanged(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataTable.prototype._onSelectAllChanged = function (value) {\n        this.rows.toArray().forEach(function (row) { return row.selected = value; });\n    };\n    DataTable.prototype.onRowSelectChanged = function (row) {\n        // maintain the selectedRow(s) view\n        if (this.multiSelect) {\n            var index = this.selectedRows.indexOf(row);\n            if (row.selected && index < 0) {\n                this.selectedRows.push(row);\n            }\n            else if (!row.selected && index >= 0) {\n                this.selectedRows.splice(index, 1);\n            }\n        }\n        else {\n            if (row.selected) {\n                this.selectedRow = row;\n            }\n            else if (this.selectedRow === row) {\n                this.selectedRow = undefined;\n            }\n        }\n        // unselect all other rows:\n        if (row.selected && !this.multiSelect) {\n            this.rows.toArray().filter(function (row_) { return row_.selected; }).forEach(function (row_) {\n                if (row_ !== row) {\n                    row_.selected = false;\n                }\n            });\n        }\n    };\n    Object.defineProperty(DataTable.prototype, \"substituteItems\", {\n        // other:\n        get: function () {\n            return Array.from({ length: this.displayParams.limit - this.items.length });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataTable.prototype.resizeColumnStart = function (event, column, columnElement) {\n        var _this = this;\n        this._resizeInProgress = true;\n        drag_1.drag(event, {\n            move: function (moveEvent, dx) {\n                if (_this._isResizeInLimit(columnElement, dx)) {\n                    column.width = columnElement.offsetWidth + dx;\n                }\n            },\n        });\n    };\n    DataTable.prototype._isResizeInLimit = function (columnElement, dx) {\n        /* This is needed because CSS min-width didn't work on table-layout: fixed.\n         Without the limits, resizing can make the next column disappear completely,\n         and even increase the table width. The current implementation suffers from the fact,\n         that offsetWidth sometimes contains out-of-date values. */\n        if ((dx < 0 && (columnElement.offsetWidth + dx) <= this.resizeLimit) ||\n            !columnElement.nextElementSibling ||\n            (dx >= 0 && (columnElement.nextElementSibling.offsetWidth + dx) <= this.resizeLimit)) {\n            return false;\n        }\n        return true;\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"items\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Number)\n    ], DataTable.prototype, \"itemCount\", void 0);\n    __decorate([\n        core_1.ContentChildren(column_component_1.DataTableColumn), \n        __metadata('design:type', core_1.QueryList)\n    ], DataTable.prototype, \"columns\", void 0);\n    __decorate([\n        core_1.ViewChildren(row_component_1.DataTableRow), \n        __metadata('design:type', core_1.QueryList)\n    ], DataTable.prototype, \"rows\", void 0);\n    __decorate([\n        core_1.ContentChild('dataTableExpand'), \n        __metadata('design:type', core_1.TemplateRef)\n    ], DataTable.prototype, \"expandTemplate\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], DataTable.prototype, \"headerTitle\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"header\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"pagination\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"indexColumn\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"indexColumnHeader\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Function)\n    ], DataTable.prototype, \"rowColors\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Function)\n    ], DataTable.prototype, \"rowTooltip\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"selectColumn\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"multiSelect\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"substituteRows\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"expandableRows\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"translations\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"selectOnRowClick\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"autoReload\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"showReloading\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"sortBy\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"sortAsc\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"offset\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"limit\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"page\", null);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"reload\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"rowClick\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"rowDoubleClick\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"headerClick\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], DataTable.prototype, \"cellClick\", void 0);\n    DataTable = __decorate([\n        core_1.Component({\n            selector: 'data-table',\n            template: table_template_1.TABLE_TEMPLATE,\n            styles: [table_style_1.TABLE_STYLE]\n        }), \n        __metadata('design:paramtypes', [])\n    ], DataTable);\n    return DataTable;\n}());\nexports.DataTable = DataTable;\n//# sourceMappingURL=/components/table.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/components/table.component.js\n// module id = 85\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar DataTableColumn = (function () {\n    function DataTableColumn() {\n        this.sortable = false;\n        this.resizable = false;\n        this.visible = true;\n        this.styleClassObject = {}; // for [ngClass]\n    }\n    DataTableColumn.prototype.getCellColor = function (row, index) {\n        if (this.cellColors !== undefined) {\n            return this.cellColors(row.item, row, this, index);\n        }\n    };\n    DataTableColumn.prototype.ngOnInit = function () {\n        this._initCellClass();\n    };\n    DataTableColumn.prototype._initCellClass = function () {\n        if (!this.styleClass && this.property) {\n            if (/^[a-zA-Z0-9_]+$/.test(this.property)) {\n                this.styleClass = 'column-' + this.property;\n            }\n            else {\n                this.styleClass = 'column-' + this.property.replace(/[^a-zA-Z0-9_]/g, '');\n            }\n        }\n        if (this.styleClass != null) {\n            this.styleClassObject = (_a = {},\n                _a[this.styleClass] = true,\n                _a\n            );\n        }\n        var _a;\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], DataTableColumn.prototype, \"header\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTableColumn.prototype, \"sortable\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTableColumn.prototype, \"resizable\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], DataTableColumn.prototype, \"property\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], DataTableColumn.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Function)\n    ], DataTableColumn.prototype, \"cellColors\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTableColumn.prototype, \"width\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTableColumn.prototype, \"visible\", void 0);\n    __decorate([\n        core_1.ContentChild('dataTableCell'), \n        __metadata('design:type', Object)\n    ], DataTableColumn.prototype, \"cellTemplate\", void 0);\n    __decorate([\n        core_1.ContentChild('dataTableHeader'), \n        __metadata('design:type', Object)\n    ], DataTableColumn.prototype, \"headerTemplate\", void 0);\n    DataTableColumn = __decorate([\n        core_1.Directive({\n            selector: 'data-table-column'\n        }), \n        __metadata('design:paramtypes', [])\n    ], DataTableColumn);\n    return DataTableColumn;\n}());\nexports.DataTableColumn = DataTableColumn;\n//# sourceMappingURL=/components/column.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/components/column.component.js\n// module id = 86\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar core_1 = require('@angular/core');\nvar table_component_1 = require('./table.component');\nvar row_template_1 = require('./row.template');\nvar row_style_1 = require(\"./row.style\");\nvar DataTableRow = (function () {\n    function DataTableRow(dataTable) {\n        this.dataTable = dataTable;\n        this.selectedChange = new core_1.EventEmitter();\n        this._this = this; // FIXME is there no template keyword for this in angular 2?\n    }\n    Object.defineProperty(DataTableRow.prototype, \"selected\", {\n        get: function () {\n            return this._selected;\n        },\n        set: function (selected) {\n            this._selected = selected;\n            this.selectedChange.emit(selected);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableRow.prototype, \"displayIndex\", {\n        // other:\n        get: function () {\n            if (this.dataTable.pagination) {\n                return this.dataTable.displayParams.offset + this.index + 1;\n            }\n            else {\n                return this.index + 1;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataTableRow.prototype.getTooltip = function () {\n        if (this.dataTable.rowTooltip) {\n            return this.dataTable.rowTooltip(this.item, this, this.index);\n        }\n        return '';\n    };\n    DataTableRow.prototype.ngOnDestroy = function () {\n        this.selected = false;\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], DataTableRow.prototype, \"item\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Number)\n    ], DataTableRow.prototype, \"index\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], DataTableRow.prototype, \"selectedChange\", void 0);\n    DataTableRow = __decorate([\n        core_1.Component({\n            selector: '[dataTableRow]',\n            template: row_template_1.ROW_TEMPLATE,\n            styles: [row_style_1.ROW_STYLE]\n        }),\n        __param(0, core_1.Inject(core_1.forwardRef(function () { return table_component_1.DataTable; }))), \n        __metadata('design:paramtypes', [table_component_1.DataTable])\n    ], DataTableRow);\n    return DataTableRow;\n}());\nexports.DataTableRow = DataTableRow;\n//# sourceMappingURL=/components/row.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/components/row.component.js\n// module id = 87\n// module chunks = 0","\"use strict\";\nexports.ROW_TEMPLATE = \"\\n<tr\\tclass=\\\"data-table-row\\\"\\n    [title]=\\\"getTooltip()\\\"\\n    [style.background-color]=\\\"dataTable.getRowColor(item, index, _this)\\\"\\n    [class.row-odd]=\\\"index % 2 === 0\\\"\\n    [class.row-even]=\\\"index % 2 === 1\\\"\\n    [class.selected]=\\\"selected\\\"\\n    [class.clickable]=\\\"dataTable.selectOnRowClick\\\"\\n    (dblclick)=\\\"dataTable.rowDoubleClicked(_this, $event)\\\"\\n    (click)=\\\"dataTable.rowClicked(_this, $event)\\\"\\n    >\\n    <td [hide]=\\\"!dataTable.expandColumnVisible\\\" (click)=\\\"expanded = !expanded; $event.stopPropagation()\\\" class=\\\"row-expand-button\\\">\\n        <span class=\\\"glyphicon glyphicon-triangle-right\\\" [hide]=\\\"expanded\\\"></span>\\n        <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" [hide]=\\\"!expanded\\\"></span>\\n    </td>\\n    <td [hide]=\\\"!dataTable.indexColumnVisible\\\" class=\\\"index-column\\\" [textContent]=\\\"displayIndex\\\"></td>\\n    <td [hide]=\\\"!dataTable.selectColumnVisible\\\" class=\\\"select-column\\\">\\n        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"selected\\\"/>\\n    </td>\\n    <td *ngFor=\\\"let column of dataTable.columns\\\" [hide]=\\\"!column.visible\\\" [ngClass]=\\\"column.styleClassObject\\\" class=\\\"data-column\\\"\\n        [style.background-color]=\\\"column.getCellColor(_this, index)\\\">\\n        <div *ngIf=\\\"!column.cellTemplate\\\" [textContent]=\\\"item[column.property]\\\"></div>\\n        <div *ngIf=\\\"column.cellTemplate\\\" [ngTemplateOutlet]=\\\"column.cellTemplate\\\" [ngOutletContext]=\\\"{column: column, row: _this, item: item}\\\"></div>\\n    </td>\\n</tr>\\n<tr *ngIf=\\\"dataTable.expandableRows\\\" [hide]=\\\"!expanded\\\" class=\\\"row-expansion\\\">\\n    <td [attr.colspan]=\\\"dataTable.columnCount\\\">\\n        <div [ngTemplateOutlet]=\\\"dataTable.expandTemplate\\\" [ngOutletContext]=\\\"{row: _this, item: item}\\\"></div>\\n    </td>\\n</tr>\\n\";\n//# sourceMappingURL=/components/row.template.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/components/row.template.js\n// module id = 88\n// module chunks = 0","\"use strict\";\nexports.ROW_STYLE = \"\\n.select-column {\\n    text-align: center;\\n}\\n\\n.row-expand-button {\\n    cursor: pointer;\\n    text-align: center;\\n}\\n\\n.clickable {\\n    cursor: pointer;\\n}\\n\";\n//# sourceMappingURL=/components/row.style.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/components/row.style.js\n// module id = 89\n// module chunks = 0","\"use strict\";\nexports.defaultTranslations = {\n    indexColumn: 'index',\n    selectColumn: 'select',\n    expandColumn: 'expand',\n    paginationLimit: 'Limit',\n    paginationRange: 'Results'\n};\n//# sourceMappingURL=/components/types.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/components/types.js\n// module id = 90\n// module chunks = 0","\"use strict\";\nfunction drag(event, _a) {\n    var move = _a.move, up = _a.up;\n    var startX = event.pageX;\n    var startY = event.pageY;\n    var x = startX;\n    var y = startY;\n    var moved = false;\n    function mouseMoveHandler(event) {\n        var dx = event.pageX - x;\n        var dy = event.pageY - y;\n        x = event.pageX;\n        y = event.pageY;\n        if (dx || dy)\n            moved = true;\n        move(event, dx, dy, x, y);\n        event.preventDefault(); // to avoid text selection\n    }\n    function mouseUpHandler(event) {\n        x = event.pageX;\n        y = event.pageY;\n        document.removeEventListener('mousemove', mouseMoveHandler);\n        document.removeEventListener('mouseup', mouseUpHandler);\n        if (up)\n            up(event, x, y, moved);\n    }\n    document.addEventListener('mousemove', mouseMoveHandler);\n    document.addEventListener('mouseup', mouseUpHandler);\n}\nexports.drag = drag;\n//# sourceMappingURL=/utils/drag.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/utils/drag.js\n// module id = 91\n// module chunks = 0","\"use strict\";\nexports.TABLE_TEMPLATE = \"\\n<div class=\\\"data-table-wrapper\\\">\\n    <data-table-header *ngIf=\\\"header\\\"></data-table-header>\\n\\n    <div class=\\\"data-table-box\\\">\\n        <table class=\\\"table table-condensed table-bordered data-table\\\">\\n            <thead>\\n                <tr>\\n                    <th [hide]=\\\"!expandColumnVisible\\\" class=\\\"expand-column-header\\\">\\n                    <th [hide]=\\\"!indexColumnVisible\\\" class=\\\"index-column-header\\\">\\n                        <span [textContent]=\\\"indexColumnHeader\\\"></span>\\n                    </th>\\n                    <th [hide]=\\\"!selectColumnVisible\\\" class=\\\"select-column-header\\\">\\n                        <input [hide]=\\\"!multiSelect\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"selectAllCheckbox\\\"/>\\n                    </th>\\n                    <th *ngFor=\\\"let column of columns\\\" #th [hide]=\\\"!column.visible\\\" (click)=\\\"headerClicked(column, $event)\\\"\\n                        [class.sortable]=\\\"column.sortable\\\" [class.resizable]=\\\"column.resizable\\\"\\n                        [ngClass]=\\\"column.styleClassObject\\\" class=\\\"column-header\\\" [style.width]=\\\"column.width | px\\\">\\n                        <span *ngIf=\\\"!column.headerTemplate\\\" [textContent]=\\\"column.header\\\"></span>\\n                        <span *ngIf=\\\"column.headerTemplate\\\" [ngTemplateOutlet]=\\\"column.headerTemplate\\\" [ngOutletContext]=\\\"{column: column}\\\"></span>\\n                        <span class=\\\"column-sort-icon\\\" *ngIf=\\\"column.sortable\\\">\\n                            <span class=\\\"glyphicon glyphicon-sort column-sortable-icon\\\" [hide]=\\\"column.property === sortBy\\\"></span>\\n                            <span [hide]=\\\"column.property !== sortBy\\\">\\n                                <span class=\\\"glyphicon glyphicon-triangle-top\\\" [hide]=\\\"sortAsc\\\"></span>\\n                                <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" [hide]=\\\"!sortAsc\\\"></span>\\n                            </span>\\n                        </span>\\n                        <span *ngIf=\\\"column.resizable\\\" class=\\\"column-resize-handle\\\" (mousedown)=\\\"resizeColumnStart($event, column, th)\\\"></span>\\n                    </th>\\n                </tr>\\n            </thead>\\n            <tbody *ngFor=\\\"let item of items; let index=index\\\" class=\\\"data-table-row-wrapper\\\"\\n                   dataTableRow #row [item]=\\\"item\\\" [index]=\\\"index\\\" (selectedChange)=\\\"onRowSelectChanged(row)\\\">\\n            </tbody>\\n            <tbody class=\\\"substitute-rows\\\" *ngIf=\\\"pagination && substituteRows\\\">\\n                <tr *ngFor=\\\"let item of substituteItems, let index = index\\\"\\n                    [class.row-odd]=\\\"(index + items.length) % 2 === 0\\\"\\n                    [class.row-even]=\\\"(index + items.length) % 2 === 1\\\"\\n                    >\\n                    <td [hide]=\\\"!expandColumnVisible\\\"></td>\\n                    <td [hide]=\\\"!indexColumnVisible\\\">&nbsp;</td>\\n                    <td [hide]=\\\"!selectColumnVisible\\\"></td>\\n                    <td *ngFor=\\\"let column of columns\\\" [hide]=\\\"!column.visible\\\">\\n                </tr>\\n            </tbody>\\n        </table>\\n        <div class=\\\"loading-cover\\\" *ngIf=\\\"showReloading && reloading\\\"></div>\\n    </div>\\n\\n    <data-table-pagination *ngIf=\\\"pagination\\\"></data-table-pagination>\\n</div>\\n\";\n//# sourceMappingURL=/components/table.template.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/components/table.template.js\n// module id = 92\n// module chunks = 0","\"use strict\";\nexports.TABLE_STYLE = \"\\n/* bootstrap override: */\\n\\n:host /deep/ .data-table.table > tbody+tbody {\\n    border-top: none;\\n}\\n:host /deep/ .data-table.table td {\\n    vertical-align: middle;\\n}\\n\\n:host /deep/ .data-table > thead > tr > th,\\n:host /deep/ .data-table > tbody > tr > td {\\n\\toverflow: hidden;\\n}\\n\\n/* I can't use the bootstrap striped table, because of the expandable rows */\\n:host /deep/ .row-odd {\\n    background-color: #F6F6F6;\\n}\\n:host /deep/ .row-even {\\n}\\n\\n.data-table .substitute-rows > tr:hover,\\n:host /deep/ .data-table .data-table-row:hover {\\n    background-color: #ECECEC;\\n}\\n/* table itself: */\\n\\n.data-table {\\n    box-shadow: 0 0 15px rgb(236, 236, 236);\\n    table-layout: fixed;\\n}\\n\\n/* header cells: */\\n\\n.column-header {\\n    position: relative;\\n}\\n.expand-column-header {\\n\\twidth: 50px;\\n}\\n.select-column-header {\\n\\twidth: 50px;\\n\\ttext-align: center;\\n}\\n.index-column-header {\\n\\twidth: 40px;\\n}\\n.column-header.sortable {\\n    cursor: pointer;\\n}\\n.column-header .column-sort-icon {\\n\\tfloat: right;\\n}\\n.column-header.resizable .column-sort-icon {\\n    margin-right: 8px;\\n}\\n.column-header .column-sort-icon .column-sortable-icon {\\n    color: lightgray;\\n}\\n.column-header .column-resize-handle {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    margin: 0;\\n    padding: 0;\\n    width: 8px;\\n    height: 100%;\\n    cursor: col-resize;\\n}\\n\\n/* cover: */\\n\\n.data-table-box {\\n    position: relative;\\n}\\n\\n.loading-cover {\\n   position: absolute;\\n   width: 100%;\\n   height: 100%;\\n   background-color: rgba(255, 255, 255, 0.3);\\n   top: 0;\\n}\\n\";\n//# sourceMappingURL=/components/table.style.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/components/table.style.js\n// module id = 93\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar core_1 = require('@angular/core');\nvar table_component_1 = require('./table.component');\nvar pagination_template_1 = require('./pagination.template');\nvar pagination_style_1 = require(\"./pagination.style\");\nvar DataTablePagination = (function () {\n    function DataTablePagination(dataTable) {\n        this.dataTable = dataTable;\n    }\n    DataTablePagination.prototype.pageBack = function () {\n        this.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);\n    };\n    DataTablePagination.prototype.pageForward = function () {\n        this.dataTable.offset += this.dataTable.limit;\n    };\n    DataTablePagination.prototype.pageFirst = function () {\n        this.dataTable.offset = 0;\n    };\n    DataTablePagination.prototype.pageLast = function () {\n        this.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;\n    };\n    Object.defineProperty(DataTablePagination.prototype, \"maxPage\", {\n        get: function () {\n            return Math.ceil(this.dataTable.itemCount / this.dataTable.limit);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTablePagination.prototype, \"limit\", {\n        get: function () {\n            return this.dataTable.limit;\n        },\n        set: function (value) {\n            this.dataTable.limit = Number(value); // TODO better way to handle that value of number <input> is string?\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTablePagination.prototype, \"page\", {\n        get: function () {\n            return this.dataTable.page;\n        },\n        set: function (value) {\n            this.dataTable.page = Number(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataTablePagination = __decorate([\n        core_1.Component({\n            selector: 'data-table-pagination',\n            template: pagination_template_1.PAGINATION_TEMPLATE,\n            styles: [pagination_style_1.PAGINATION_STYLE]\n        }),\n        __param(0, core_1.Inject(core_1.forwardRef(function () { return table_component_1.DataTable; }))), \n        __metadata('design:paramtypes', [table_component_1.DataTable])\n    ], DataTablePagination);\n    return DataTablePagination;\n}());\nexports.DataTablePagination = DataTablePagination;\n//# sourceMappingURL=/components/pagination.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/components/pagination.component.js\n// module id = 94\n// module chunks = 0","\"use strict\";\nexports.PAGINATION_TEMPLATE = \"\\n<div class=\\\"pagination-box\\\">\\n    <div class=\\\"pagination-range\\\">\\n        {{dataTable.translations.paginationRange}}:\\n        <span [textContent]=\\\"dataTable.offset + 1\\\"></span>\\n        -\\n        <span [textContent]=\\\"[dataTable.offset + dataTable.limit , dataTable.itemCount] | min\\\"></span>\\n        /\\n        <span [textContent]=\\\"dataTable.itemCount\\\"></span>\\n    </div>\\n    <div class=\\\"pagination-controllers\\\">\\n        <div class=\\\"pagination-limit\\\">\\n            <div class=\\\"input-group\\\">\\n                <span class=\\\"input-group-addon\\\">{{dataTable.translations.paginationLimit}}:</span>\\n                <input #limitInput type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"1\\\" step=\\\"1\\\"\\n                       [ngModel]=\\\"limit\\\" (blur)=\\\"limit = limitInput.value\\\"\\n                       (keyup.enter)=\\\"limit = limitInput.value\\\" (keyup.esc)=\\\"limitInput.value = limit\\\"/>\\n            </div>\\n        </div>\\n        <div class=\\\" pagination-pages\\\">\\n            <button [disabled]=\\\"dataTable.offset <= 0\\\" (click)=\\\"pageFirst()\\\" class=\\\"btn btn-default pagination-firstpage\\\">&laquo;</button>\\n            <button [disabled]=\\\"dataTable.offset <= 0\\\" (click)=\\\"pageBack()\\\" class=\\\"btn btn-default pagination-prevpage\\\">&lsaquo;</button>\\n            <div class=\\\"pagination-page\\\">\\n                <div class=\\\"input-group\\\">\\n                    <input #pageInput type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"1\\\" step=\\\"1\\\" max=\\\"{{maxPage}}\\\"\\n                           [ngModel]=\\\"page\\\" (blur)=\\\"page = pageInput.value\\\"\\n                           (keyup.enter)=\\\"page = pageInput.value\\\" (keyup.esc)=\\\"pageInput.value = page\\\"/>\\n                    <div class=\\\"input-group-addon\\\">\\n                        <span>/</span>\\n                        <span [textContent]=\\\"dataTable.lastPage\\\"></span>\\n                    </div>\\n                </div>\\n            </div>\\n            <button [disabled]=\\\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\\\" (click)=\\\"pageForward()\\\" class=\\\"btn btn-default pagination-nextpage\\\">&rsaquo;</button>\\n            <button [disabled]=\\\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\\\" (click)=\\\"pageLast()\\\" class=\\\"btn btn-default pagination-lastpage\\\">&raquo;</button>\\n        </div>\\n    </div>\\n</div>\\n\";\n//# sourceMappingURL=/components/pagination.template.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/components/pagination.template.js\n// module id = 95\n// module chunks = 0","\"use strict\";\nexports.PAGINATION_STYLE = \"\\n.pagination-box {\\n    position: relative;\\n    margin-top: -10px;\\n}\\n.pagination-range {\\n    margin-top: 7px;\\n    margin-left: 3px;\\n    display: inline-block;\\n}\\n.pagination-controllers {\\n    float: right;\\n}\\n.pagination-controllers input {\\n    min-width: 60px;\\n    /*padding: 1px 0px 0px 5px;*/\\n    text-align: right;\\n}\\n\\n.pagination-limit {\\n    margin-right: 25px;\\n    display: inline-table;\\n    width: 150px;\\n}\\n.pagination-pages {\\n    display: inline-block;\\n}\\n.pagination-page {\\n    width: 110px;\\n    display: inline-table;\\n}\\n.pagination-box button {\\n    outline: none !important;\\n}\\n.pagination-prevpage,\\n.pagination-nextpage,\\n.pagination-firstpage,\\n.pagination-lastpage {\\n    vertical-align: top;\\n}\\n.pagination-reload {\\n    color: gray;\\n    font-size: 12px;\\n}\\n\";\n//# sourceMappingURL=/components/pagination.style.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/components/pagination.style.js\n// module id = 96\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar core_1 = require('@angular/core');\nvar table_component_1 = require('./table.component');\nvar header_template_1 = require('./header.template');\nvar header_style_1 = require(\"./header.style\");\nvar DataTableHeader = (function () {\n    function DataTableHeader(dataTable) {\n        this.dataTable = dataTable;\n        this.columnSelectorOpen = false;\n    }\n    DataTableHeader.prototype._closeSelector = function () {\n        this.columnSelectorOpen = false;\n    };\n    DataTableHeader = __decorate([\n        core_1.Component({\n            selector: 'data-table-header',\n            template: header_template_1.HEADER_TEMPLATE,\n            styles: [header_style_1.HEADER_STYLE],\n            host: {\n                '(document:click)': '_closeSelector()'\n            }\n        }),\n        __param(0, core_1.Inject(core_1.forwardRef(function () { return table_component_1.DataTable; }))), \n        __metadata('design:paramtypes', [table_component_1.DataTable])\n    ], DataTableHeader);\n    return DataTableHeader;\n}());\nexports.DataTableHeader = DataTableHeader;\n//# sourceMappingURL=/components/header.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/components/header.component.js\n// module id = 97\n// module chunks = 0","\"use strict\";\nexports.HEADER_TEMPLATE = \"\\n<div class=\\\"data-table-header\\\">\\n    <h4 class=\\\"title\\\" [textContent]=\\\"dataTable.headerTitle\\\"></h4>\\n    <div class=\\\"button-panel\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm refresh-button\\\"\\n            (click)=\\\"dataTable.reloadItems()\\\">\\n            <span class=\\\"glyphicon glyphicon-refresh\\\"></span>\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm column-selector-button\\\" [class.active]=\\\"columnSelectorOpen\\\"\\n            (click)=\\\"columnSelectorOpen = !columnSelectorOpen; $event.stopPropagation()\\\" >\\n            <span class=\\\"glyphicon glyphicon-list\\\"></span>\\n        </button>\\n        <div class=\\\"column-selector-wrapper\\\" (click)=\\\"$event.stopPropagation()\\\">\\n            <div *ngIf=\\\"columnSelectorOpen\\\" class=\\\"column-selector-box panel panel-default\\\">\\n                <div *ngIf=\\\"dataTable.expandableRows\\\" class=\\\"column-selector-fixed-column checkbox\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"dataTable.expandColumnVisible\\\"/>\\n                        <span>{{dataTable.translations.expandColumn}}</span>\\n                    </label>\\n                </div>\\n                <div *ngIf=\\\"dataTable.indexColumn\\\" class=\\\"column-selector-fixed-column checkbox\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"dataTable.indexColumnVisible\\\"/>\\n                        <span>{{dataTable.translations.indexColumn}}</span>\\n                    </label>\\n                </div>\\n                <div *ngIf=\\\"dataTable.selectColumn\\\" class=\\\"column-selector-fixed-column checkbox\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"dataTable.selectColumnVisible\\\"/>\\n                        <span>{{dataTable.translations.selectColumn}}</span>\\n                    </label>\\n                </div>\\n                <div *ngFor=\\\"let column of dataTable.columns\\\" class=\\\"column-selector-column checkbox\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"column.visible\\\"/>\\n                        <span [textContent]=\\\"column.header\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n//# sourceMappingURL=/components/header.template.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/components/header.template.js\n// module id = 98\n// module chunks = 0","\"use strict\";\nexports.HEADER_STYLE = \"\\n.data-table-header {\\n    min-height: 25px;\\n    margin-bottom: 10px;\\n}\\n.title {\\n    display: inline-block;\\n    margin: 5px 0 0 5px;\\n}\\n.button-panel {\\n    float: right;\\n}\\n.button-panel button {\\n    outline: none !important;\\n}\\n\\n.column-selector-wrapper {\\n    position: relative;\\n}\\n.column-selector-box {\\n    box-shadow: 0 0 10px lightgray;\\n    width: 150px;\\n    padding: 10px;\\n    position: absolute;\\n    right: 0;\\n    top: 1px;\\n    z-index: 1060;\\n}\\n.column-selector-box .checkbox {\\n    margin-bottom: 4px;\\n}\\n.column-selector-fixed-column {\\n    font-style: italic;\\n}\\n\";\n//# sourceMappingURL=/components/header.style.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/components/header.style.js\n// module id = 99\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar PixelConverter = (function () {\n    function PixelConverter() {\n    }\n    PixelConverter.prototype.transform = function (value, args) {\n        if (value === undefined) {\n            return;\n        }\n        if (typeof value === 'string') {\n            return value;\n        }\n        if (typeof value === 'number') {\n            return value + 'px';\n        }\n    };\n    PixelConverter = __decorate([\n        core_1.Pipe({\n            name: 'px'\n        }), \n        __metadata('design:paramtypes', [])\n    ], PixelConverter);\n    return PixelConverter;\n}());\nexports.PixelConverter = PixelConverter;\n//# sourceMappingURL=/utils/px.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/utils/px.js\n// module id = 100\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nfunction isBlank(obj) {\n    return obj === undefined || obj === null;\n}\nvar Hide = (function () {\n    function Hide(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._prevCondition = null;\n    }\n    Object.defineProperty(Hide.prototype, \"hide\", {\n        set: function (newCondition) {\n            this.initDisplayStyle();\n            if (newCondition && (isBlank(this._prevCondition) || !this._prevCondition)) {\n                this._prevCondition = true;\n                this._renderer.setElementStyle(this._elementRef.nativeElement, 'display', 'none');\n            }\n            else if (!newCondition && (isBlank(this._prevCondition) || this._prevCondition)) {\n                this._prevCondition = false;\n                this._renderer.setElementStyle(this._elementRef.nativeElement, 'display', this._displayStyle);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Hide.prototype.initDisplayStyle = function () {\n        if (this._displayStyle === undefined) {\n            var displayStyle = this._elementRef.nativeElement.style.display;\n            if (displayStyle && displayStyle !== 'none') {\n                this._displayStyle = displayStyle;\n            }\n        }\n    };\n    Hide = __decorate([\n        core_1.Directive({ selector: '[hide]', inputs: ['hide'] }), \n        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer])\n    ], Hide);\n    return Hide;\n}());\nexports.Hide = Hide;\n//# sourceMappingURL=/utils/hide.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/utils/hide.js\n// module id = 101\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar MinPipe = (function () {\n    function MinPipe() {\n    }\n    MinPipe.prototype.transform = function (value, args) {\n        return Math.min.apply(null, value);\n    };\n    MinPipe = __decorate([\n        core_1.Pipe({\n            name: 'min'\n        }), \n        __metadata('design:paramtypes', [])\n    ], MinPipe);\n    return MinPipe;\n}());\nexports.MinPipe = MinPipe;\n//# sourceMappingURL=/utils/min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/utils/min.js\n// module id = 102\n// module chunks = 0","\"use strict\";\nvar DataTableResource = (function () {\n    function DataTableResource(items) {\n        this.items = items;\n    }\n    DataTableResource.prototype.query = function (params, filter) {\n        var result = [];\n        if (filter) {\n            result = this.items.filter(filter);\n        }\n        else {\n            result = this.items.slice(); // shallow copy to use for sorting instead of changing the original\n        }\n        if (params.sortBy) {\n            result.sort(function (a, b) {\n                if (typeof a[params.sortBy] === 'string') {\n                    return a[params.sortBy].localeCompare(b[params.sortBy]);\n                }\n                else {\n                    return a[params.sortBy] - b[params.sortBy];\n                }\n            });\n            if (params.sortAsc === false) {\n                result.reverse();\n            }\n        }\n        if (params.offset !== undefined) {\n            if (params.limit === undefined) {\n                result = result.slice(params.offset, result.length);\n            }\n            else {\n                result = result.slice(params.offset, params.offset + params.limit);\n            }\n        }\n        return new Promise(function (resolve, reject) {\n            setTimeout(function () { return resolve(result); });\n        });\n    };\n    DataTableResource.prototype.count = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            setTimeout(function () { return resolve(_this.items.length); });\n        });\n    };\n    return DataTableResource;\n}());\nexports.DataTableResource = DataTableResource;\n//# sourceMappingURL=/tools/data-table-resource.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-2-data-table/dist/tools/data-table-resource.js\n// module id = 103\n// module chunks = 0","import {Component, AfterViewInit} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport '../public/styles/styles.css';\n\nimport constants = require('./shared/constants');\n\n\n@Component({\n    selector: 'discovery-app',\n    template: require('./app.component.html'),\n    styles: [require('./app.component.css')],\n})\nexport class AppComponent implements AfterViewInit {\n\n    constructor(private router:Router) {\n\n    }\n\n    ngAfterViewInit() {\n        this.router.navigateByUrl(\"/home\");\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/app.component.ts","module.exports = \"<main>\\n    <div #watsonOverlay id=\\\"watson-overlay\\\" class=\\\"overlay hide\\\">\\n        <div id=\\\"watson-thinking\\\" class=\\\"loading\\\"></div>\\n    </div>\\n    <nav class=\\\"navbar navbar-default\\\">\\n        <ul class=\\\"nav navbar-nav lower-navbar\\\">\\n            <li><a class=\\\"navbar-brand\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">Review Overview</a></li>\\n            <li><a class=\\\"navbar-brand\\\" routerLink=\\\"/enrichment-visualizer\\\" routerLinkActive=\\\"active\\\">Enrichment Visualizer</a></li>\\n            <li><a class=\\\"navbar-brand\\\" routerLink=\\\"/product-search\\\" routerLinkActive=\\\"active\\\">Product Search</a></li>\\n        </ul>\\n    </nav>\\n    <router-outlet></router-outlet>\\n</main>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 110\n// module chunks = 0","module.exports = \".header-tab {\\n    display: flex;\\n    justify-content: center;\\n    flex: 0 0 9rem;\\n    font-size: 1.5em;\\n    color: black;\\n}\\n\\n.header-tab:not(:last-child) {\\n    border-right: 2px solid black;\\n}\\n\\n.header-tab-option {\\n    cursor: pointer;\\n}\\n\\n.header-tab-selected {\\n    /*font-size: 1.75rem;*/\\n    color: purple;\\n}\\n.header-tab-selected .pdf-header-tab-option {\\n    color: purple;\\n}\\n\\na, a:visited {\\n    color: #333;\\n}\\n\\n/*Side bar*/\\nhtml, body, md-sidenav-layout, .side-nav {\\n    margin: 0;\\n    width: 100%;\\n    height: 100%;\\n}\\n.side-nav {\\n    width: 300px;\\n    background-color: gainsboro;\\n}\\n\\n.side-nav md-sidenav {\\n    max-width: 500px;\\n}\\n\\n.side-nav .md-sidenav-content,\\n.side-nav md-sidenav {\\n    display: flex;\\n}\\n\\n/*.side-nav {*/\\n    /*overflow: auto;*/\\n/*}*/\\n\\n.sub-container {\\n    width: 90%;\\n    background-color: gainsboro;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 111\n// module chunks = 0","import {Component, DoCheck} from '@angular/core';\nimport '../../public/styles/styles.css';\nimport {QueryService} from '../services/query.service';\n\nimport constants = require('../shared/constants');\n\n\n@Component({\n    selector: 'review-overview',\n    template: require('./review-overview.component.html'),\n    styles: [require('../app.component.css')],\n    providers: [QueryService]\n})\nexport class ReviewOverview implements DoCheck {\n    public showProductsOverview = false;\n    public bubbleChartResults: any = null;\n    public productResults: any = null;\n    public reviewTimeline: any = null;\n\n    public productOpened: boolean = true;\n    public bubbleOpened: boolean = true;\n    public reviewTimelineOpened: boolean = true;\n\n    private positiveLoaded = false;\n    private negativeLoaded = false;\n    private neutralLoaded = false;\n    private bubbleLoaded = false;\n    private productResultsLoaded = false;\n    private reviewTimelineLoaded = false;\n\n\n    constructor(private queryService: QueryService) {\n    }\n\n\n    ngOnInit() {\n        $(\"#watson-overlay\").removeClass(\"hide\");\n        this.getBubbleChartData();\n        this.getProducts();\n        this.getReviewTimeline();\n    }\n\n    ngDoCheck() {\n        if (this.bubbleLoaded && this.productResultsLoaded && this.reviewTimelineLoaded) {\n            $(\"#watson-overlay\").addClass(\"hide\");\n            this.showProductsOverview = true;\n        }\n    }\n\n    toggleProduct() {\n        this.productOpened = !this.productOpened;\n    }\n\n    toggleBubble() {\n        this.bubbleOpened = !this.bubbleOpened;\n    }\n\n    toggleReviewTimeline() {\n        this.reviewTimelineOpened = !this.reviewTimelineOpened;\n    }\n\n    getProducts() {\n        this.queryService.query(constants.queries[\"product-review-counts\"]).subscribe(\n            data => {\n                this.productResults = this.parseProducts(data.aggregations[0].results);\n                this.productResultsLoaded = true;\n            }, err => {\n                $(\"#watson-overlay\").addClass(\"hide\");\n                console.log(err);\n            }\n        )\n    }\n\n    getBubbleChartData() {\n        this.queryService.query(constants.queries[\"bubble-chart\"]).subscribe(\n            data => {\n                this.bubbleChartResults = this.parseBubbleChart(data.aggregations[0].aggregations[0].results);\n                this.bubbleLoaded = true;\n            }, err => {\n                $(\"#watson-overlay\").addClass(\"hide\");\n                console.log(err);\n            }\n        )\n    }\n\n    getReviewTimeline() {\n        this.queryService.query(constants.queries[\"review-timeline\"]).subscribe(\n            data => {\n                this.reviewTimeline = this.parseTimeline(data.aggregations[0].results);\n                this.reviewTimelineLoaded = true;\n            }, err => {\n                $(\"#watson-overlay\").addClass(\"hide\");\n                console.log(err);\n            }\n        )\n    }\n\n    parseBubbleChart(data) {\n        var result = [];\n\n        var total = 0;\n        for (var i in data) {\n            var obj = data[i];\n            var json = {\"name\": \"\", \"count\": \"\", \"word\": \"\"};\n\n            json.name = obj[\"key\"];\n            json.count = obj[\"matching_results\"];\n            json.word = obj[\"key\"];\n            result.push(json);\n        }\n\n        return result;\n    }\n\n    parseProducts(data) {\n        var result = [];\n\n        var total = 0;\n        for (var i in data) {\n            var obj = data[i];\n            var json = {\"name\": \"\", \"count\": \"\"};\n\n            json.name = obj[\"key\"];\n            json.count = obj[\"matching_results\"];\n            result.push(json);\n        }\n\n        return result;\n    }\n\n    parseTimeline(data) {\n        var result = [];\n\n        for (var i = 0; i < data.length; i++) {\n            var obj = {\"date\": data[i][\"key\"], \"sentiment\": data[i][\"matching_results\"]};\n\n            result.push(obj);\n        }\n\n        return result;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/pages/review-overview.component.ts","import {Injectable, Inject} from '@angular/core';\nimport {Http, Response, URLSearchParams, Headers, RequestOptions} from '@angular/http';\nimport {Observable} from 'rxjs/Rx';\n\n// Import RxJs required methods\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport constants = require('../shared/constants');\nimport helpers = require('../shared/helpers');\n\n\n@Injectable()\nexport class QueryService {\n    // private instance variable to hold base url\n\n    private queryUrl:string;\n    // Resolve HTTP using the constructor\n    constructor(private http : Http) {\n        this.queryUrl = constants.query_url\n    }\n\n    // Fetch all existing comments\n    query(paramObj): Observable<any> {\n\n        let params: URLSearchParams = new URLSearchParams();\n        if(paramObj.query) {\n            params.set('query', paramObj.query);\n\n        }\n        if(paramObj.count)\n            params.set('count', paramObj.count);\n        if(paramObj.filter) {\n            params.set('filter', paramObj.filterUnits);\n        }\n\n        if(paramObj.aggregation) {\n            params.set('aggregation', paramObj.aggregation);\n        }\n        if(paramObj.return)\n            params.set('return', paramObj.return);\n\n        // ...using get request\n        return this.http.get(this.queryUrl, {search: params})\n        // ...and calling .json() on the response to return data\n            .map((res: Response) => res.json())\n            //...errors if any\n            .catch((error: any) => Observable.throw(error.json || 'Server error'));\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/services/query.service.ts","'use strict';\n\nexport var query_url = window.location.href.split('#')[0] + \"discovery/query\";\n\nexport var escape_map = {\n    '&': '\\\\&',\n    '<': '\\\\<',\n    '>': '\\\\>',\n    '\"': '\\\\\"',\n    '?': '\\\\?',\n    '[': '\\\\[',\n    ']':'\\\\[',\n    '^':'\\\\^',\n    '$':'\\\\$',\n    '.':'\\\\.',\n    '|':'\\\\|',\n    '*':'\\\\*',\n    '+':'\\\\+',\n    '{':'\\\\{',\n    '}':'\\\\}',\n    '(':'\\\\(',\n    ')':'\\\\)',\n    '~':'\\\\~'\n};\n\nexport var escape_characters = /[&<>\"?\\[\\]^$.|*+{}~()]/g;\n\nexport var queries = {\n    \"review-timeline\": {\n        \"count\": 1000,\n        \"aggregation\": \"timeslice(field:review_date,interval:1year)\",\n        \"return\": \"aggregations\"\n    },\n    \"product-search\": {\n        \"count\": 1,\n        \"query\": \"product_name:%s\"\n    },\n    \"bubble-chart\": {\n        \"count\": 1000,\n        \"aggregation\": \"nested(review_text_enriched.keywords)\" +\n        \".term(review_text_enriched.keywords.text.raw,count:50)\" +\n        \".average(review_text_enriched.keywords.sentiment.score)\",\n        \"return\": \"aggregations\"\n    },\n    \"product-review-counts\": {\n        \"count\": 1000,\n        \"aggregation\": \"term(product_name.raw,count:50)\",\n        \"return\": \"aggregations\"\n    },\n    \"pie-chart-positive\": {\n        \"count\": 1000,\n        \"aggregation\": \"filter(review_text_enriched.docSentiment.type:positive)\" +\n        \".term(review_text_enriched.keywords.text.raw,count:15)\",\n        \"return\": \"aggregations\"\n    },\n    \"pie-chart-negative\":{\n        \"count\": 1000,\n        \"aggregation\": \"filter(review_text_enriched.docSentiment.type:negative)\" +\n        \".term(review_text_enriched.keywords.text.raw,count:15)\",\n        \"return\": \"aggregations\"\n    },\n    \"pie-chart-neutral\": {\n        \"count\": 1000,\n        \"aggregation\": \"filter(review_text_enriched.docSentiment.type:neutral)\" +\n        \".term(review_text_enriched.keywords.text.raw,count:15)\",\n        \"return\": \"aggregations\"\n    },\n    \"sentiment-by-keywords\": {\n        \"count\": 1000,\n        \"aggregation\": \"filter(product_name:%s)\" +\n        \".nested(review_text_enriched.keywords)\" +\n        \".[filter(review_text_enriched.keywords.sentiment.type:positive).term(review_text_enriched.keywords.text.raw)\" +\n        \",filter(review_text_enriched.keywords.sentiment.type:negative).term(review_text_enriched.keywords.text.raw)\" +\n        \",filter(review_text_enriched.keywords.sentiment.type:neutral).term(review_text_enriched.keywords.text.raw)]\",\n        \"return\": \"aggregations\"\n    },\n    \"product-sentiment\": {\n        \"count\": 1000,\n        \"aggregation\": \"filter(product_name:%s)\" +\n        \".[filter(review_text_enriched.docSentiment.type:positive)\" +\n        \",filter(review_text_enriched.docSentiment.type:negative)\" +\n        \",filter(review_text_enriched.docSentiment.type:neutral)]\",\n        \"return\": \"aggregations\"\n    },\n    \"average-product-sentiment\": {\n        \"count\": 1000,\n        \"aggregation\": \"filter(product_name:%s).average(review_text_enriched.docSentiment.score)\",\n        \"return\": \"aggregations\"\n    },\n    \"product-sentiment-timeline\": {\n        \"count\": 1000,\n        \"aggregation\": \"filter(product_name:%s).timeslice(field:review_date,interval:1year).average(review_text_enriched.docSentiment.score)\",\n        \"return\": \"aggregations\"\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/shared/constants.ts","module.exports = \"<div class=\\\"main-container\\\">\\n    <div class=\\\"text-center\\\">\\n        <div class=\\\"row\\\">\\n            <!--src=\\\"../public/images/inside-out-icons.png\\\"-->\\n            <div class=\\\"col-centered\\\"><h1>Home/Kitchen Amazon Product Reviews Overview</h1></div>\\n            <div class=\\\"col-sm-12\\\" *ngIf=\\\"showProductsOverview\\\">\\n                <div class=\\\"panel panel-default col-centered sub-container\\\">\\n                    <div class=\\\"panel-heading\\\" (click)=\\\"toggleProduct()\\\">\\n                        <h3 class=\\\"panel-title\\\">Product Review Counts</h3>\\n                    </div>\\n                    <div class=\\\"panel-body\\\" [ngClass]=\\\"{hide: !productOpened}\\\">\\n                        <product-data-table [products]=\\\"productResults\\\"></product-data-table>\\n                    </div>\\n                </div>\\n                <div class=\\\"panel panel-default col-centered sub-container\\\">\\n                    <div class=\\\"panel-heading\\\" (click)=\\\"toggleReviewTimeline()\\\">\\n                        <h3 class=\\\"panel-title\\\">Product Reviews Over Time</h3>\\n                    </div>\\n                    <div class=\\\"panel-body\\\" [ngClass]=\\\"{hide: !reviewTimelineOpened}\\\">\\n                        <product-sentiment-timeline [results]=\\\"reviewTimeline\\\" [width]=\\\"900\\\" [ylabel]=\\\"'Review Count'\\\"></product-sentiment-timeline>\\n                    </div>\\n                </div>\\n                <div class=\\\"panel panel-default col-centered sub-container\\\">\\n                    <div class=\\\"panel-heading\\\" (click)=\\\"toggleBubble()\\\">\\n                        <h3 class=\\\"panel-title\\\">Keyword Counts in Product Reviews</h3>\\n                    </div>\\n                    <div class=\\\"panel-body\\\" [ngClass]=\\\"{hide: !bubbleOpened}\\\">\\n                        <bubble-chart [data]=\\\"bubbleChartResults\\\"\\n                                      (resultChange)=\\\"onReceiveResult($event);\\\"></bubble-chart>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/review-overview.component.html\n// module id = 396\n// module chunks = 0","import {Component, ViewChild} from '@angular/core';\nimport '../../public/styles/styles.css';\nimport {QueryService} from '../services/query.service';\n\nimport * as d3 from 'd3';\n\nimport constants = require('../shared/constants');\nimport helpers = require('../shared/helpers');\n\n@Component({\n    selector: 'enrichment-visualizer',\n    template: require('./enrichment-visualizer.component.html'),\n    styles: [require('../app.component.css')],\n    providers: [QueryService]\n})\nexport class EnrichmentVisualizer {\n    @ViewChild('start') start;\n\n    public results: any = null;\n\n    public selected: any = null;\n    public relations: string = \"RELATIONS\";\n    public concepts: string = \"CONCEPTS\";\n    public entities: string = \"ENTITIES\";\n    public keywords: string = \"KEYWORDS\";\n\n    public csvResults: any = {\"concepts\": [], \"entities\": [], \"relations\": [], \"keywords\": []};\n\n\n    constructor() {}\n\n    onReceiveResult($event) {\n        this.results = null;\n        if($event[\"results\"] !== undefined && $event[\"results\"].length > 0) {\n            this.results = $event[\"results\"];\n            this.selected = this.relations;\n        } else {\n            $(\"#watson-overlay\").addClass(\"hide\");\n            this.results = [];\n        }\n\n\n    }\n\n    ngOnInit() {\n        (<any>$('[data-toggle=\"popover\"]')).popover({ container: 'body' });\n    }\n\n    showRelations() {\n        this.selected = this.relations;\n    };\n\n    showConcepts() {\n        this.selected = this.concepts;\n    };\n\n    showEntities() {\n        this.selected = this.entities;\n    };\n\n    showKeywords() {\n        this.selected = this.keywords;\n    };\n\n    convertToCSV(data) {\n        for (var i = 0; i < data.length; i++) {\n            //concepts\n            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"concepts\"].length > 0) {\n                var doc = data[i][\"review_text_enriched\"][\"concepts\"];\n                for (var j = 0; j < doc.length; j++) {\n                    var obj = doc[j];\n\n                    var jsonObj = {};\n\n                    jsonObj[\"product_name\"] = data[i][\"product_name\"];\n                    jsonObj[\"review_text\"] = data[i][\"review_text\"];\n                    jsonObj[\"summary\"] = data[i][\"summary\"];\n                    jsonObj[\"doc_sentiment_type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n                    jsonObj[\"doc_sentiment_score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n                    jsonObj[\"concept_text\"] = obj[\"text\"];\n                    jsonObj[\"concept_relevance\"] = obj[\"relevance\"];\n                    jsonObj[\"concept_references\"] = [];\n\n                    if (obj[\"dbpedia\"])\n                        jsonObj[\"concept_references\"].push(obj[\"dbpedia\"]);\n                    if (obj[\"freebase\"])\n                        jsonObj[\"concept_references\"].push(obj[\"freebase\"]);\n\n                    if (obj[\"opencyc\"])\n                        jsonObj[\"concept_references\"].push(obj[\"opencyc\"]);\n\n                    if (obj[\"yago\"])\n                        jsonObj[\"concept_references\"].push(obj[\"yago\"]);\n\n                    if (obj[\"website\"])\n                        jsonObj[\"concept_references\"].push(obj[\"website\"]);\n\n                    if (obj[\"crunchbase\"])\n                        jsonObj[\"concept_references\"].push(obj[\"crunchbase\"]);\n\n                    this.csvResults[\"concepts\"].push(jsonObj);\n\n                }\n            }\n\n            //entities\n            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"entities\"].length > 0) {\n                var doc = data[i][\"review_text_enriched\"][\"entities\"];\n                for (var j = 0; j < doc.length; j++) {\n                    var obj = doc[j];\n\n                    var jsonObj = {};\n\n                    jsonObj[\"product_name\"] = data[i][\"product_name\"];\n                    jsonObj[\"review_text\"] = data[i][\"review_text\"];\n                    jsonObj[\"summary\"] = data[i][\"summary\"];\n                    jsonObj[\"doc_sentiment_type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n                    jsonObj[\"doc_sentiment_score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n                    jsonObj[\"entity_text\"] = obj[\"text\"];\n                    jsonObj[\"entity_relevance\"] = obj[\"relevance\"];\n                    jsonObj[\"entity_type\"] = obj[\"type\"];\n                    jsonObj[\"sentiment_score\"] = obj[\"sentiment\"][\"score\"];\n                    jsonObj[\"sentiment_type\"] = obj[\"sentiment\"][\"type\"];\n\n                    this.csvResults[\"entities\"].push(jsonObj);\n\n                }\n            }\n\n            //keywords\n            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"keywords\"].length > 0) {\n                let doc = data[i][\"review_text_enriched\"][\"keywords\"];\n                for (var j = 0; j < doc.length; j++) {\n                    var obj = doc[j];\n\n                    var jsonObj = {};\n\n                    jsonObj[\"product_name\"] = data[i][\"product_name\"];\n                    jsonObj[\"review_text\"] = data[i][\"review_text\"];\n                    jsonObj[\"summary\"] = data[i][\"summary\"];\n                    jsonObj[\"doc_sentiment_type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n                    jsonObj[\"doc_sentiment_score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n                    jsonObj[\"keyword_text\"] = obj[\"text\"];\n                    jsonObj[\"keyword_relevance\"] = obj[\"relevance\"];\n                    jsonObj[\"sentiment_score\"] = obj[\"sentiment\"][\"score\"];\n                    jsonObj[\"sentiment_type\"] = obj[\"sentiment\"][\"type\"];\n\n                    this.csvResults[\"keywords\"].push(jsonObj);\n                }\n            }\n\n            //relations\n            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"relations\"].length > 0) {\n                var doc = data[i][\"review_text_enriched\"][\"relations\"];\n                for (var j = 0; j < doc.length; j++) {\n                    var relation = doc[j];\n                    var jsonObj = {};\n                    jsonObj[\"product_name\"] = data[i][\"product_name\"];\n                    jsonObj[\"review_text\"] = data[i][\"review_text\"];\n                    jsonObj[\"summary\"] = data[i][\"summary\"];\n                    jsonObj[\"doc_sentiment_type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n                    jsonObj[\"doc_sentiment_score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n                    jsonObj[\"relation_sentence\"] = relation[\"sentence\"];\n                    jsonObj[\"relation_sentence_subject\"] = relation[\"subject\"] ? relation[\"subject\"][\"text\"] : \"N/A\";\n                    jsonObj[\"relation_sentence_action\"] = relation[\"action\"] ? relation[\"action\"][\"text\"] : \"N/A\";\n                    jsonObj[\"relation_sentence_object\"] = relation[\"object\"] ? relation[\"object\"][\"text\"] : \"N/A\";\n                    jsonObj[\"relation_sentence_location\"] = relation[\"location\"] ? relation[\"location\"][\"text\"] : \"N/A\";\n\n                    this.csvResults[\"relations\"].push(jsonObj);\n                }\n            }\n\n        }\n    }\n\n    downloadAsCSV() {\n        if(this.results) {\n            this.convertToCSV(this.results);\n            var concepts = d3.csvFormat(this.csvResults[\"concepts\"]);\n            var entities = d3.csvFormat(this.csvResults[\"entities\"]);\n            var keywords = d3.csvFormat(this.csvResults[\"keywords\"]);\n            var relations = d3.csvFormat(this.csvResults[\"relations\"]);\n\n            helpers.exportToCSV(concepts, \"concepts-export.csv\");\n            helpers.exportToCSV(entities, \"entities-export.csv\");\n            helpers.exportToCSV(keywords, \"keywords-export.csv\");\n            helpers.exportToCSV(relations, \"relations-export.csv\");\n        }\n\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/pages/enrichment-visualizer.component.ts","'use strict';\n\nexport var escapeHTML = function (s, escape_characters, escape_map) {\n    return s.replace(escape_characters, function (c) {\n        return escape_map[c];\n    })\n};\n\nexport var exportToCSV = function (csvFile, fileName) {\n    if(csvFile !== null) {\n        var blob = new Blob([csvFile], {type: 'text/csv;charset=utf-8;'});\n        if (navigator.msSaveBlob) { // IE 10+\n            navigator.msSaveBlob(blob, fileName);\n        } else {\n            var link = document.createElement(\"a\");\n            if (link.download !== undefined) { // feature detection\n                // Browsers that support HTML5 download attribute\n                var url = URL.createObjectURL(blob);\n                link.setAttribute(\"href\", url);\n                link.setAttribute(\"download\", fileName);\n                link.style.visibility = 'hidden';\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            }\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/shared/helpers.ts","module.exports = \"<div class=\\\"main-container\\\">\\n    <query-form (resultChange)=\\\"onReceiveResult($event);\\\"></query-form>\\n    <div class=\\\"center-block sub-container\\\" *ngIf=\\\"results != null && results.length > 0\\\">\\n        <div class=\\\"row no-margin\\\">\\n            <div class=\\\"panel-heading whitesmoke-bg col-sm-3 header-tab text-center\\\" id=\\\"relations-tab\\\" (click)=\\\"showRelations()\\\"\\n                 [ngClass]=\\\"{'header-tab-selected': selected == relations}\\\">\\n                <div class=\\\"header-tab-option\\\">\\n                    Relations\\n                </div>\\n            </div>\\n            <div class=\\\"panel-heading whitesmoke-bg col-sm-3 header-tab\\\" id=\\\"concepts-tab\\\" (click)=\\\"showConcepts()\\\"\\n                 [ngClass]=\\\"{'header-tab-selected': selected == concepts}\\\">\\n                <div class=\\\"header-tab-option\\\">\\n                    Concepts\\n                </div>\\n            </div>\\n            <div class=\\\"panel-heading whitesmoke-bg col-sm-3 header-tab\\\" id=\\\"entities-tab\\\" (click)=\\\"showEntities()\\\"\\n                 [ngClass]=\\\"{'header-tab-selected': selected == entities}\\\">\\n                <div class=\\\"header-tab-option\\\">\\n                    Entities\\n                </div>\\n            </div>\\n            <div class=\\\"panel-heading whitesmoke-bg col-sm-3 header-tab\\\" id=\\\"keywords-tab\\\" (click)=\\\"showKeywords()\\\"\\n                 [ngClass]=\\\"{'header-tab-selected': selected == keywords}\\\">\\n                <div class=\\\"header-tab-option\\\">\\n                    Keywords\\n                </div>\\n            </div>\\n        </div>\\n        <i class=\\\"fa fa-download fa-3x fa-border\\\" (click)=\\\"downloadAsCSV()\\\"></i>\\n        <div class=\\\"\\\">\\n            <section class=\\\"\\\">\\n                <div [hidden]=\\\"selected != relations\\\" class=\\\"margin-tb-sm\\\">\\n                    <relations-list [data]=\\\"results\\\"></relations-list>\\n                </div>\\n                <div [hidden]=\\\"selected != concepts\\\" class=\\\"\\\">\\n                    <concepts-table [data]=\\\"results\\\"></concepts-table>\\n                </div>\\n                <div [hidden]=\\\"selected != entities\\\" class=\\\"\\\">\\n                    <entities-table [data]=\\\"results\\\"></entities-table>\\n                </div>\\n                <div [hidden]=\\\"selected != keywords\\\" class=\\\"\\\">\\n                    <keywords-table [data]=\\\"results\\\"></keywords-table>\\n                </div>\\n            </section>\\n        </div>\\n    </div>\\n    <div class=\\\"text-center row\\\" *ngIf=\\\"results !== null && results.length < 1\\\">\\n        <h1>There are no matching results.</h1>\\n    </div>\\n</div>\\n\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/enrichment-visualizer.component.html\n// module id = 400\n// module chunks = 0","import {Component, DoCheck} from '@angular/core';\nimport '../../public/styles/styles.css';\nimport {QueryService} from '../services/query.service';\n\nimport constants = require('../shared/constants');\nimport helpers = require('../shared/helpers');\nimport * as sprintf from 'sprintf-js';\n\n@Component({\n    selector: 'product-search',\n    template: require('./product-search.component.html'),\n    providers: [QueryService],\n    host: {\n        '(window:resize)': 'onResize($event)'\n    }\n})\nexport class ProductSearch implements DoCheck {\n\n    public product;\n    public pieChartResults;\n    public sentimentByKeywordResults: any;\n    public averageSentiment: any;\n    public sentimentTimeline: any;\n\n    public showProductsOverview = false;\n    private positiveLoaded = false;\n    private sentimentKeywordLoaded = false;\n    private averageSentimentLoaded = false;\n    private sentimentTimelineLoaded = false;\n\n    private noResults = false;\n\n\n\n    form = {\n        product: \"\"\n    };\n\n    constructor(private queryService: QueryService) {\n    }\n\n    onResize(event) {\n        console.log(event.target.innerWidth);\n        console.log(this);\n    }\n\n    ngOnInit() {\n        var product = localStorage.getItem('product-search');\n        if(product) {\n            this.form.product = product;\n            this.product = product;\n            product = helpers.escapeHTML(product, /['\"(),*:~^<>]/g, constants.escape_map);\n            this.getPieChartData(product);\n            this.getSentimentByKeyword(product);\n            this.getAverageSentiment(product);\n            this.getSentimentTimeline(product);  \n        }\n    }\n\n    autoComplete(searchTerm) {\n        var datalist = $(\"#queryResults\");\n\n        this.queryService.query({ \"query\": searchTerm, \"aggregation\": \"term%28product_name%29\" }).subscribe(\n            data => {\n                var suggestions = [];\n                var results = data.aggregations[0].results;\n\n                if(results.length > 0) {\n                    datalist.empty();\n\n                    results.forEach(function(aggregation) {\n                        suggestions.push(aggregation['key']);\n                        var opt = $(\"<option></option>\").attr(\"value\", aggregation['key']);\n                        datalist.append(opt);\n                    });                   \n                }\n            }, err => {\n                console.log(err);\n            }\n        );\n    }\n\n    searchProduct() {\n        $(\"#watson-overlay\").removeClass(\"hide\");\n        this.product = \"\";\n        this.showProductsOverview = false;\n        this.positiveLoaded = false;\n        this.sentimentKeywordLoaded = false;\n        this.averageSentimentLoaded = false;\n        this.sentimentTimelineLoaded = false;\n        this.noResults = false;\n\n        $(\"svg\").parent().html(\"\");\n        var escape_characters = /['\"(),*:~^<>]/g;\n\n        var count = constants.queries[\"product-search\"][\"count\"];\n        var formQuery = this.form.product.indexOf(\":\") > -1? this.form.product.substr(this.form.product.indexOf(\":\") + 1) : this.form.product;\n        formQuery = helpers.escapeHTML(formQuery, escape_characters, constants.escape_map);\n        var query = sprintf.sprintf(constants.queries[\"product-search\"][\"query\"], formQuery);\n\n        var param = {\"count\": count, \"query\": query};\n\n        this.queryService.query(param).subscribe(\n            data => {\n                if(data.results.length > 0) {\n                    this.product = data.results[0].product_name;\n                    localStorage.setItem('product-search', this.product);\n                    var product = helpers.escapeHTML(this.product, escape_characters, constants.escape_map);\n                    this.getPieChartData(product);\n                    this.getSentimentByKeyword(product);\n                    this.getAverageSentiment(product);\n                    this.getSentimentTimeline(product);\n                } else {\n                    $(\"#watson-overlay\").addClass(\"hide\");\n                    this.noResults = true;\n                }\n            }, err => {\n                $(\"#watson-overlay\").addClass(\"hide\");\n                console.log(err);\n            }\n        )\n    }\n\n    getPieChartData(product) {\n        var count = constants.queries[\"product-sentiment\"][\"count\"];\n        var aggregation = sprintf.sprintf(constants.queries[\"product-sentiment\"][\"aggregation\"], product);\n        var queryReturn = constants.queries[\"product-sentiment\"][\"return\"];\n\n        var query = {\"count\": count, \"aggregation\": aggregation, \"return\": queryReturn};\n\n        this.queryService.query(query).subscribe(\n            data => {\n                var input;\n                if (data.aggregations.length > 1) {\n                    input = data.aggregations;\n                } else if (data.aggregations[0].aggregations.length > 1) {\n                    input = data.aggregations[0].aggregations;\n                } else if (data.aggregations[0].aggregations[0].aggregations.length > 1) {\n                    input = data.aggregations[0].aggregations[0].aggregations;\n                } else\n                    input = null;\n\n                this.pieChartResults = this.parsePieChartResults(input);\n                this.positiveLoaded = true;\n            }, err => {\n                $(\"#watson-overlay\").addClass(\"hide\");\n                console.log(err);\n            }\n        )\n    }\n\n    getSentimentByKeyword(product) {\n        var count = constants.queries[\"sentiment-by-keywords\"][\"count\"];\n        var aggregation = sprintf.sprintf(constants.queries[\"sentiment-by-keywords\"][\"aggregation\"], product);\n        var queryReturn = constants.queries[\"sentiment-by-keywords\"][\"return\"];\n\n        var query = {\"count\": count, \"aggregation\": aggregation, \"return\": queryReturn};\n\n        this.queryService.query(query).subscribe(\n            data => {\n                var input;\n                if (data.aggregations[0].results) {\n                    input = data.aggregations;\n                } else if (data.aggregations[0].aggregations[0].results) {\n                    input = data.aggregations[0].aggregations;\n                } else if (!data.aggregations[0].aggregations[0].aggregations[0].results) {\n                    input = data.aggregations[0].aggregations[0].aggregations;\n                } else\n                    input = null;\n\n                this.sentimentByKeywordResults = this.parseKeywords(input);\n                this.sentimentKeywordLoaded = true;\n            }, err => {\n                $(\"#watson-overlay\").addClass(\"hide\");\n                console.log(err);\n            }\n        )\n    }\n\n    getAverageSentiment(product) {\n        var count = constants.queries[\"average-product-sentiment\"][\"count\"];\n        var aggregation = sprintf.sprintf(constants.queries[\"average-product-sentiment\"][\"aggregation\"], product);\n        var queryReturn = constants.queries[\"average-product-sentiment\"][\"return\"];\n\n        var query = {\"count\": count, \"aggregation\": aggregation, \"return\": queryReturn};\n\n        this.queryService.query(query).subscribe(\n            data => {\n                var value = 0;\n                if (data.aggregations[0] && data.aggregations[0].aggregations[0]) {\n                    value = data.aggregations[0].aggregations[0].value;\n                }\n                this.averageSentiment = [value];\n                this.averageSentimentLoaded = true;\n            }, err => {\n                $(\"#watson-overlay\").addClass(\"hide\");\n                console.log(err);\n            }\n        )\n    }\n\n    getSentimentTimeline(product) {\n        var count = constants.queries[\"product-sentiment-timeline\"][\"count\"];\n        var aggregation = sprintf.sprintf(constants.queries[\"product-sentiment-timeline\"][\"aggregation\"], product);\n        var queryReturn = constants.queries[\"product-sentiment-timeline\"][\"return\"];\n\n        var query = {\"count\": count, \"aggregation\": aggregation, \"return\": queryReturn};\n\n        this.queryService.query(query).subscribe(\n            data => {\n                var input;\n                if (data.aggregations[0].results) {\n                    input = data.aggregations;\n                } else if (data.aggregations[0].aggregations[0].results) {\n                    input = data.aggregations[0].aggregations;\n                } else if (!data.aggregations[0].aggregations[0].aggregations[0].results) {\n                    input = data.aggregations[0].aggregations[0].aggregations;\n                } else\n                    input = null;\n\n                this.sentimentTimeline = this.parseTimeline(input[0].results);\n                this.sentimentTimelineLoaded = true;\n            }, err => {\n                $(\"#watson-overlay\").addClass(\"hide\");\n                console.log(err);\n            }\n        )\n    }\n\n    ngDoCheck() {\n        if (this.positiveLoaded && this.sentimentKeywordLoaded && this.averageSentimentLoaded && this.sentimentTimelineLoaded) {\n            if(this.pieChartResults.labels.length > 0 && this.sentimentByKeywordResults.length > 0\n            && this.averageSentiment.length > 0 && this.sentimentTimeline.length > 0)\n                this.showProductsOverview = true;\n            else\n                this.noResults = true;\n\n            $(\"#watson-overlay\").addClass(\"hide\");\n        }\n    }\n\n    parsePieChartResults(data) {\n        var result = {\n            \"labels\": [],\n            \"percentages\": []\n        };\n\n        var total = 0;\n        for (let i in data) {\n            var obj = data[i];\n            result.labels.push(obj[\"match\"].split(\":\")[1]);\n            result.percentages.push(obj[\"matching_results\"]);\n            total += obj[\"matching_results\"];\n        }\n\n        for (let i in result.percentages) {\n            result.percentages[i] /= total;\n        }\n\n        return result;\n    }\n\n    parseKeywords(data) {\n        var result = [];\n        var keywordDict = {}\n\n        for (var i = 0; i < data.length; i++) {\n            var sentiment = data[i].match.substr(data[i].match.indexOf(\":\") + 1);\n            var keywords = data[i].aggregations[0].results;\n\n            for (var j = 0; j < keywords.length; j++) {\n                if (!keywordDict[keywords[j][\"key\"]]) {\n                    keywordDict[keywords[j][\"key\"]] = {\"positive\": 0, \"negative\": 0, \"neutral\": 0};\n                    keywordDict[keywords[j][\"key\"]][sentiment] += keywords[j][\"matching_results\"];\n                } else {\n                    keywordDict[keywords[j][\"key\"]][sentiment] += keywords[j][\"matching_results\"];\n                }\n            }\n        }\n\n        for (var k in keywordDict) {\n            if (keywordDict.hasOwnProperty(k)) {\n                result.push({\n                    \"keyword\": k,\n                    \"positive\": keywordDict[k][\"positive\"],\n                    \"negative\": keywordDict[k][\"negative\"],\n                    \"neutral\": keywordDict[k][\"neutral\"]\n                })\n            }\n        }\n\n        return result;\n\n    }\n\n    parseTimeline(data) {\n        var result = [];\n\n        for (var i = 0; i < data.length; i++) {\n            var obj = {\"date\": data[i][\"key\"], \"sentiment\": data[i].aggregations[0][\"value\"]};\n\n            result.push(obj);\n        }\n\n        return result;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/pages/product-search.component.ts","module.exports = \"<div class=\\\"main-container\\\">\\n    <div class=\\\"text-center\\\">\\n        <div class=\\\"row col-centered\\\">\\n            <h1>Search for a Specific Product</h1>\\n            <div class=\\\"form-group row top-30\\\">\\n                <div class=\\\"col-sm-8 col-sm-offset-2\\\">\\n                    <input class=\\\"form-control\\\" id=\\\"product\\\" [(ngModel)]=\\\"form.product\\\" name=\\\"product\\\" (ngModelChange)=\\\"autoComplete($event)\\\" (click)=\\\"autoComplete($event.target.value)\\\" list=\\\"queryResults\\\">\\n                    <datalist id=\\\"queryResults\\\"></datalist>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row text-center\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-lg submit-btn text-center\\\" (click)=\\\"searchProduct();\\\">Find Product\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"row no-margin no-padding\\\" *ngIf=\\\"showProductsOverview\\\">\\n            <div class=\\\"row col-centered\\\"><h3>{{product}}</h3></div>\\n            <div class=\\\"row no-margin no-padding top-60\\\">\\n                <div class=\\\"col-sm-6 no-padding\\\">\\n                    <div class=\\\"panel panel-default col-centered sub-container\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            <h3 class=\\\"panel-title\\\">Sentiment Breakdown of Reviews</h3>\\n                        </div>\\n                        <div class=\\\"panel-body\\\">\\n                            <pie-chart [results]=\\\"pieChartResults\\\"></pie-chart>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 no-margin no-padding\\\">\\n                    <div class=\\\"row no-margin no-padding\\\">\\n                        <div class=\\\"col-sm-12 panel panel-default col-centered sub-container no-margin no-padding\\\">\\n                            <div class=\\\"panel-heading\\\">\\n                                <h3 class=\\\"panel-title\\\">Average Sentiment of Reviews</h3>\\n                            </div>\\n                            <div class=\\\"panel-body\\\">\\n                                <number-line [results]=\\\"averageSentiment\\\"></number-line>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-12 panel panel-default col-centered sub-container no-margin no-padding\\\">\\n                            <div class=\\\"panel-heading\\\">\\n                                <h3 class=\\\"panel-title\\\">Product Sentiment Over Time</h3>\\n                            </div>\\n                            <div class=\\\"panel-body\\\">\\n                                <product-sentiment-timeline [results]=\\\"sentimentTimeline\\\" [ylabel]=\\\"'Sentiment'\\\"></product-sentiment-timeline>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12 panel panel-default col-centered sub-container no-margin no-padding\\\">\\n                    <div class=\\\"panel-heading\\\">\\n                        <h3 class=\\\"panel-title\\\">Sentiment by Keywords</h3>\\n                    </div>\\n                    <div class=\\\"panel-body\\\">\\n                        <stacked-barchart [results]=\\\"sentimentByKeywordResults\\\"></stacked-barchart>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row col-centered\\\" *ngIf=\\\"noResults\\\">There is no product by that name. Please search again.</div>\\n    </div>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/product-search.component.html\n// module id = 403\n// module chunks = 0","import {Component, Input, Output, EventEmitter, ElementRef, ViewChild} from '@angular/core';\nimport {QueryService} from '../services/query.service';\nimport '../../public/styles/styles.css';\n\n@Component({\n    selector: 'query-form',\n    template: require('./query-form.component.html'),\n    providers: [QueryService]\n})\n\nexport class QueryForm {\n    // Constructor\n    constructor(private queryService: QueryService, private elRef: ElementRef) {}\n\n    @Output() resultChange = new EventEmitter();\n\n    form = {\n        query: \"Cuisinart Ice Cream Maker\",\n        count: \"5\",\n        filter: \"positive\"\n    };\n\n    ngOnInit() {\n        var storedParams = JSON.parse(localStorage.getItem('query-params'));\n        if( storedParams && {} != storedParams ) {\n            this.form = storedParams;\n        }\n        this.onSubmit();\n    }\n\n    onSubmit() {\n        $(\"#watson-overlay\").removeClass(\"hide\");\n        var params = {\n            \"query\": this.form.query,\n            \"count\": this.form.count,\n            \"filter\": this.form.filter\n        };\n\n        localStorage.setItem('query-params', JSON.stringify(params));\n\n        this.queryService.query(params).subscribe(\n            data => {\n                this.resultChange.emit(data);\n            }, err => {\n                console.log(err);\n            }\n        )\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/query-form.component.ts","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"panel panel-default\\\">\\n                <div class=\\\"panel-body\\\"><h2 class=\\\"text-center\\\">Enrichment Visualization</h2>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"query\\\" class=\\\"col-sm-2 col-form-label\\\">Query:</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input class=\\\"form-control\\\" id=\\\"query\\\" [(ngModel)]=\\\"form.query\\\" name=\\\"query\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n                            <a tabindex=\\\"0\\\" role=\\\"button\\\" data-trigger=\\\"focus\\\"\\n                               data-toggle=\\\"popover\\\" title=\\\"Queries Help\\\" data-html=\\\"true\\\"\\n                               data-content=\\\"<span>Use the relations enrichement to search.<br/> Example: enriched_text.relations.sentence:Amazon%20Fire</span><br/><span>Please see the <a href='https://www.ibm.com/watson/developercloud/doc/discovery/using.shtml'>query documentation</a> for more information.</span>\\\">\\n                                <i class=\\\"fa fa-info-circle fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n                            </a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"count\\\" class=\\\"col-sm-2 col-form-label\\\">Count:</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"count\\\" [(ngModel)]=\\\"form.count\\\"\\n                                   name=\\\"count\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n                            <a tabindex=\\\"0\\\" role=\\\"button\\\" data-trigger=\\\"focus\\\"\\n                               data-toggle=\\\"popover\\\" title=\\\"Count Help\\\" data-html=\\\"true\\\"\\n                               data-content=\\\"<span>Specify the number of documents you want returned back.</span><br/><span>Please see the <a href='https://www.ibm.com/watson/developercloud/doc/discovery/using.shtml'>query documentation</a> for more information.</span>\\\">\\n                                <i class=\\\"fa fa-info-circle fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n                            </a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"filter\\\" class=\\\"col-sm-2 col-form-label\\\">Filter:</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input class=\\\"form-control\\\" id=\\\"filter\\\" [(ngModel)]=\\\"form.filter\\\" name=\\\"query\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n                            <a tabindex=\\\"0\\\" role=\\\"button\\\" data-trigger=\\\"focus\\\"\\n                               data-toggle=\\\"popover\\\" title=\\\"Filter Help\\\" data-html=\\\"true\\\"\\n                               data-content=\\\"<span>Use the filter to limit what your documents return.<br/> Example: review_text_enriched.docSentiment.type:positive</span><br/><span>Please see the <a href='https://www.ibm.com/watson/developercloud/doc/discovery/using.shtml'>query documentation</a> for more information.</span>\\\">\\n                                <i class=\\\"fa fa-info-circle fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n                            </a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row text-center\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-lg submit-btn text-center\\\" (click)=\\\"onSubmit();\\\">Submit\\n                            Query\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/query-form.component.html\n// module id = 405\n// module chunks = 0","import {Component, Input, OnChanges, SimpleChanges, ElementRef} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {PaginationInstance} from 'ng2-pagination';\n\nimport helpers = require('../shared/helpers');\nimport constants = require('../shared/constants');\nimport * as d3 from 'd3';\n\nimport '../../public/styles/styles.css';\nimport '../../public/styles/reviews.component.css';\n\n@Component({\n    selector: 'relations-list',\n    template: require('./relations-list.component.html'),\n})\nexport class RelationsList implements OnChanges {\n    @Input()\n    data: any;\n\n    //this array contains the image we will show for each page\n    relations: Array<any> = [];\n\n    public noResults = false;\n    public filter: string = '';\n    public maxSize: number = 7;\n    public directionLinks: boolean = true;\n    public autoHide: boolean = false;\n    public config: PaginationInstance = {\n\n        id: 'advanced',\n\n        itemsPerPage: 10,\n\n        currentPage: 1\n    };\n\n    opened: Boolean = false;\n\n    toggle(i) {\n        var index = (this.config.currentPage * this.config.itemsPerPage) - (this.config.itemsPerPage - i);\n        this.relations[index][\"opened\"] = !this.relations[index][\"opened\"];\n    }\n\n    constructor(private elRef: ElementRef, private sanitizer: DomSanitizer) {\n    }\n\n\n    onPageChange(number: number) {\n        this.config.currentPage = number;\n    }\n\n    public ngAfterViewChecked() {\n        (<any>$('[data-toggle=\"tooltip\"]')).tooltip();\n    }\n\n    // ngAfterContentInit() {\n    //     this.data.changes.subscribe(() => {\n    //         // will be called every time an item is added/removed\n    //     });\n    // }\n\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.data) {\n            this.relations = [];\n\n            this.parseData(this.data);\n            (<any>$('[data-toggle=\"tooltip\"]')).tooltip();\n\n        }\n        this.config.currentPage = 1;\n        $(\"#watson-overlay\").addClass(\"hide\");\n\n    }\n\n    parseData(data) {\n        for (var i = 0; i < data.length; i++) {\n            var jsonObj = {};\n            jsonObj[\"product_name\"] = data[i][\"product_name\"];\n            jsonObj[\"review_text\"] = data[i][\"review_text\"];\n            jsonObj[\"summary\"] = data[i][\"summary\"];\n            jsonObj[\"doc_sentiment\"] = {};\n            jsonObj[\"doc_emotions\"] = {};\n            jsonObj[\"relations\"] = [];\n            jsonObj[\"opened\"] = true;\n\n            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"relations\"].length > 0) {\n                jsonObj[\"doc_sentiment\"][\"type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n                jsonObj[\"doc_sentiment\"][\"score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n                jsonObj[\"doc_emotions\"] = data[i][\"review_text_enriched\"][\"docEmotions\"];\n\n                var doc = data[i][\"review_text_enriched\"][\"relations\"];\n                for (var j = 0; j < doc.length; j++) {\n                    var relation = doc[j];\n                    var sentence = relation[\"sentence\"];\n                    var subject = relation[\"subject\"] !== null && typeof relation[\"subject\"] !== 'undefined' ? relation[\"subject\"][\"text\"] : null;\n                    var action = relation[\"action\"] !== null && typeof relation[\"action\"] !== 'undefined' ? relation[\"action\"][\"text\"] : null;\n                    var object = relation[\"object\"] !== null && typeof relation[\"object\"] !== 'undefined' ? relation[\"object\"][\"text\"] : null;\n                    var location = relation[\"location\"] !== null && typeof relation[\"location\"] !== 'undefined' ? relation[\"location\"][\"text\"] : null;\n\n                    if (subject) {\n                        subject = helpers.escapeHTML(subject, constants.escape_characters, constants.escape_map);\n\n                        var regSub = new RegExp('\\\\b(' + subject + ')\\\\b', 'g');\n\n                        var html = this.createToolTip(relation[\"subject\"], \"goldenrod\", subject);\n                        sentence = sentence.replace(regSub, html);\n\n                    }\n\n\n                    if (action) {\n                        action = helpers.escapeHTML(action, constants.escape_characters, constants.escape_map);\n\n                        var regAction = new RegExp('\\\\b(' + action + ')\\\\b', 'g');\n\n                        var html = this.createToolTip(relation[\"action\"], \"crimsom\", action);\n                        sentence = sentence.replace(regAction, html);\n\n                    }\n\n                    if (object) {\n                        object = helpers.escapeHTML(object, constants.escape_characters, constants.escape_map);\n\n                        var regObj = new RegExp('\\\\b(' + object + ')\\\\b', 'g');\n\n                        var html = this.createToolTip(relation[\"object\"], \"darkblue\", object);\n                        sentence = sentence.replace(regObj, html);\n\n                    }\n\n                    if (location) {\n                        location = helpers.escapeHTML(location, constants.escape_characters, constants.escape_map);\n\n                        var regLoc = new RegExp('\\\\b(' + location + ')\\\\b', 'g');\n\n                        var html = this.createToolTip(relation[\"location\"], \"darkviolet\", location);\n                        sentence = sentence.replace(regLoc, html);\n\n                    }\n\n                    jsonObj[\"relations\"].push(this.sanitizer.bypassSecurityTrustHtml('<p class=\"sentence\">' + sentence + '</p>'));\n                }\n                this.relations.push(jsonObj);\n            }\n\n        }\n\n    }\n\n    createToolTip(data, color, text) {\n        if (data.sentiment) {\n            var title = \"<span>Sentiment Type: \" + data.sentiment.type + \"</span>\";\n            var template = \"\";\n\n\n            if (data.sentimentFromSubject) {\n                title += \"<br/><span>Sentiment Subject Type: \" + data.sentimentFromSubject.type + \"</span>\"\n            }\n\n            if (data.sentiment.type === 'positive')\n                template += \"<div class='tooltip' role='tooltip'><div class='tooltip-arrow green'></div><div class='tooltip-inner green'></div></div>\";\n            else\n                template += \"<div class='tooltip' role='tooltip'><div class='tooltip-arrow red'></div><div class='tooltip-inner red'></div></div>\";\n\n            return '<a class=\"' + color + '\" data-toggle=\"tooltip\" data-placement=\"top\" data-html=\"true\" title=\"' + title + '\" data-template=\"' + template + '\"><b><u>' + text + '</u></b></a>';\n\n        } else\n            return '<span class=\"' + color + '\"><b>' + text + '</b></span>';\n\n    };\n\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/relations-list.component.ts","module.exports = \"<div class=\\\"row margin-lr-sm\\\">\\n    <div id=\\\"relations\\\" class=\\\"text-center\\\">\\n        <div *ngIf=\\\"relations.length > 0\\\">\\n            <div style=\\\"text-align:left !important;\\\">\\n                <ul class=\\\"reviews-list list list-group\\\">\\n                    <li *ngFor=\\\"let review of (relations | paginate: config); let i = index\\\">\\n                        <div class=\\\"panel panel-default no-padding\\\">\\n                            <div class=\\\"panel-heading\\\" (click)=\\\"toggle(i)\\\">\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'positive'\\\">\\n                                    <i class=\\\"fa fa-smile-o fa-2x green\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>{{review.doc_sentiment.score}}</span>\\n                                </div>\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'negative'\\\">\\n                                    <i class=\\\"fa fa-frown-o fa-2x red\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>{{review.doc_sentiment.score}}</span>\\n                                </div>\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'neutral'\\\">\\n                                    <i class=\\\"fa fa-meh-o fa-2x goldenrod\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>Neutral</span>\\n                                </div>\\n                                <h5>Product Name: </h5>\\n                                <h4>{{review.product_name}}</h4>\\n                                <h5>Review Text: </h5>\\n                                <p>{{review.review_text}}</p>\\n                                <h5>Doc Emotions: </h5>\\n                                <div class=\\\"sprite-image row\\\">\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"joy\\\"></div>\\n                                        <figcaption>Joy - {{review.doc_emotions.joy | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"sadness\\\"></div>\\n                                        <figcaption>Sadness - {{review.doc_emotions.sadness | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"anger\\\"></div>\\n                                        <figcaption>Anger - {{review.doc_emotions.anger | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"disgust\\\"></div>\\n                                        <figcaption>Disgust - {{review.doc_emotions.disgust | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"fear\\\"></div>\\n                                        <figcaption>Fear - {{review.doc_emotions.fear | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"panel-body\\\" [ngClass]=\\\"{hide: !review.opened}\\\">\\n                            <div class=\\\"text-center\\\"><i>The Watson Discovery Service returns back all the relations per sentence it can find in the review. If you hover over one of the underlined words, it will show the sentiment if one is returned.</i></div>\\n                                <div class=\\\"row text-center margin-tb-sm\\\">\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <span class=\\\"fa fa-circle fa-2x goldenrod\\\" aria-hidden=\\\"true\\\"></span>\\n                                        <span>Subject</span></div>\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <span class=\\\"fa fa-circle fa-2x crimsom\\\" aria-hidden=\\\"true\\\"></span>\\n                                        <span>Action</span>\\n                                    </div>\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <span class=\\\"fa fa-circle fa-2x darkblue\\\" aria-hidden=\\\"true\\\"></span>\\n                                        <span>Object</span>\\n                                    </div>\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <span class=\\\"fa fa-circle fa-2x darkviolet\\\" aria-hidden=\\\"true\\\"></span>\\n                                        <span>Location</span>\\n                                    </div>\\n                                </div>\\n                                <ul id=\\\"relations-list\\\" class=\\\"list-group\\\">\\n                                    <li class=\\\"list-group-item\\\" *ngFor=\\\"let sentence of review.relations\\\"\\n                                        [innerHTML]=\\\"sentence\\\"></li>\\n                                </ul>\\n                            </div>\\n\\n                        </div>\\n                    </li>\\n                </ul>\\n                <div class=\\\"\\\">\\n                    <pagination-controls [id]=\\\"config.id\\\" [maxSize]=\\\"maxSize\\\"\\n                                         [directionLinks]=\\\"directionLinks\\\"\\n                                         [autoHide]=\\\"autoHide\\\" (pageChange)=\\\"onPageChange($event);\\\"\\n                                         style=\\\"text-align:center;font-size:2em\\\"></pagination-controls>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"relations.length < 1\\\">\\n            <h1>There are no relations.</h1>\\n        </div>\\n    </div>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/relations-list.component.html\n// module id = 409\n// module chunks = 0","import {Component, Input, AfterViewInit, ElementRef, SimpleChanges, OnChanges} from '@angular/core';\nimport * as d3 from 'd3';\n\nimport '../../public/styles/styles.css';\nimport '../../public/styles/keywords-chart.component.css';\n\n\n@Component({\n    selector: 'keywords-chart',\n    template: require('./keywords-chart.component.html'),\n})\nexport class KeywordsChart implements /*AfterViewInit,*/ OnChanges {\n    @Input() data: any;\n\n    constructor(private element: ElementRef) {\n    }\n\n    keywords: any = [];\n    labelArea: number = 160;\n    host: any = null;\n    chart: any = null;\n    width: number = 400;\n    bar_height: number = 20;\n    height: number = null; //this.bar_height * 3;\n    rightOffset: number = this.width + this.labelArea;\n\n    lCol: string = \"relevance\";\n    rCol: string = \"sentiment\";\n    xFrom = d3.scaleLinear().range([0, this.width - 100]);\n    xTo = d3.scaleLinear().range([0, this.width - 100]);\n    y = null;\n\n    // ngAfterViewInit() {\n    //     this.setupData(this.data);\n    //     this.host = d3.select(this.element.nativeElement.children[0]);\n    //     this.setup(this.keywords);\n    //     this.render(this.keywords);\n    // }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.setupData(this.data);\n        this.element.nativeElement.children[0].children\n        let node = this.element.nativeElement.children[0];\n        while (node.firstChild) {\n            node.removeChild(node.firstChild);\n        }\n\n        this.host = d3.select(this.element.nativeElement.children[0]);\n\n        this.setup(this.keywords);\n        this.render(this.keywords);\n\n    }\n\n    setupData(data) {\n        this.keywords = [];\n        for (let i = 0; i < data.length; i++) {\n            if(data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"keywords\"].length > 0) {\n                let words = data[i][\"review_text_enriched\"][\"keywords\"];\n                for (let j = 0; j < words.length; j++) {\n                    let kw = {\n                        \"keyword\": words[j][\"text\"],\n                        \"relevance\": words[j][\"relevance\"],\n                        \"sentiment\": words[j][\"sentiment\"] !== undefined && words[j][\"sentiment\"][\"score\"] !== undefined ? Math.abs(words[j][\"sentiment\"][\"score\"]) : 0,\n                        \"type\": words[j][\"sentiment\"][\"type\"]\n                    };\n\n                    this.keywords.push(kw);\n\n                }\n            }\n\n        }\n    }\n\n    setup(data) {\n        var height = data.length * 2;\n        this.height = this.bar_height * height;\n        this.y = d3.scaleBand().range([20, this.height]);\n    }\n\n    render(data) {\n        //this.element.nativeElement\n        this.chart = this.host\n            .append('svg')\n            .attr('class', 'chart')\n            .attr('width', this.labelArea + this.width + this.width)\n            .attr('height', this.height);\n\n        this.xFrom.domain(d3.extent(data, (d) => {\n            return <number>d[this.lCol];\n        }));\n\n        this.xTo.domain(d3.extent(data, (d) => {\n            return <number>d[this.rCol];\n        }));\n\n        this.y.domain(data.map((d) => {\n            return d[\"keyword\"];\n        }));\n\n        var yPosByIndex = (d) => {\n            return this.y(d[\"keyword\"]);\n        };\n\n        this.chart.selectAll(\"rect.left\")\n            .data(data)\n            .enter().append(\"rect\")\n            .attr(\"x\", (d) => {\n                return this.width - this.xFrom(d[this.lCol]);\n            })\n            .attr(\"y\", yPosByIndex)\n            .attr(\"class\", \"left\")\n            .attr(\"width\", (d) => {\n                return this.xFrom(d[this.lCol]);\n            })\n            .attr(\"height\", this.y.bandwidth());\n\n        this.chart.selectAll(\"text.leftscore\")\n            .data(data)\n            .enter().append(\"text\")\n            .attr(\"x\", (d) => {\n                return this.width - this.xFrom(d[this.lCol]) - 30;\n            })\n            .attr(\"y\", (d) => {\n                return <any>this.y(d[\"keyword\"]) + <any>this.y.bandwidth() / 2;\n            })\n            .attr(\"dx\", \"20\")\n            .attr(\"dy\", \".36em\")\n            .attr(\"text-anchor\", \"end\")\n            .attr('class', 'leftscore')\n            .text((d) => {\n                return d[this.lCol];\n            });\n\n        this.chart.selectAll(\"text.name\")\n            .data(data)\n            .enter().append(\"text\")\n            .attr(\"x\", (this.labelArea / 2) + this.width)\n            .attr(\"y\", (d) => {\n                return <any>this.y(d[\"keyword\"]) + <any>this.y.bandwidth() / 2;\n            })\n            .attr(\"dy\", \".20em\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr('class', 'name')\n            .text((d) => {\n                return d[\"keyword\"];\n            });\n\n        this.chart.selectAll(\"rect.right\")\n            .data(data)\n            .enter().append(\"rect\")\n            .attr(\"x\", this.rightOffset)\n            .attr(\"y\", yPosByIndex)\n            .attr(\"class\", (d) => {\n                var sentiment = d[\"type\"] == \"neutral\"? \"right-neutral\" : d[\"type\"] === \"positive\"? \"right-positive\" : \"right-negative\";\n                return \"right\" + \" \" + sentiment;\n            })\n            .attr(\"width\", (d) => {\n                return this.xTo(d[this.rCol]);\n            })\n            .attr(\"height\", this.y.bandwidth());\n\n        this.chart.selectAll(\"text.score\")\n            .data(data)\n            .enter().append(\"text\")\n            .attr(\"x\", (d) => {\n                let offset = d[\"type\"] == \"neutral\"? this.rightOffset + 10 : this.rightOffset + 80;\n                return <any>this.xTo(d[this.rCol]) + offset;\n            })\n            .attr(\"y\", (d) => {\n                return <any>this.y(d[\"keyword\"]) + <any>this.y.bandwidth() / 2;\n            })\n            .attr(\"dx\", -5)\n            .attr(\"dy\", \".36em\")\n            .attr(\"text-anchor\", \"end\")\n            .attr('class', 'score')\n            .text((d) => {\n                return d[this.rCol];\n            });\n\n        this.chart.append(\"text\").attr(\"x\", this.width / 3).attr(\"y\", 10).attr(\"class\", \"title\").text(\"Relevance\");\n        this.chart.append(\"text\").attr(\"x\", this.width / 3 + this.rightOffset).attr(\"y\", 10).attr(\"class\", \"title\").text(\"Sentiment\");\n        this.chart.append(\"text\").attr(\"x\", this.width + this.labelArea / 3).attr(\"y\", 10).attr(\"class\", \"title\").text(\"Keywords\");\n\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/keywords-chart.component.ts","module.exports = \"<div id=\\\"keywords-chart\\\" class=\\\"text-center top-80\\\"></div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/keywords-chart.component.html\n// module id = 413\n// module chunks = 0","import {Component, AfterViewInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, ElementRef} from '@angular/core';\nimport * as d3 from 'd3';\n\nimport '../../public/styles/styles.css';\nimport '../../public/styles/bubble-chart.component.css';\n\n\nimport {QueryService} from '../services/query.service';\n\n@Component({\n    selector: 'bubble-chart',\n    template: require('./bubble-chart.component.html'),\n    providers: [QueryService]\n})\nexport class BubbleChart implements AfterViewInit {\n\n\n    @Input()\n    data:any;\n\n    @Output() resultChange = new EventEmitter();\n\n    output: number = 0;\n    force:any;\n\n    form = {\n        jitter: .5\n    };\n\n    constructor(private queryService: QueryService) {\n    }\n\n    ngAfterViewInit() {\n        this.setupBubble();\n    }\n\n    submitKeywordQuery(word) {\n        $(\"#watson-overlay\").removeClass(\"hide\");\n        var params = {\n            \"query\": word\n        };\n\n        this.queryService.query(params).subscribe(\n            data => {\n                this.resultChange.emit(data);\n            }, err => {\n                console.log(err);\n            }\n        )\n    }\n\n    plotData = function (selector, data, plot) {\n        return d3.select(selector).datum(data).call(plot);\n    };\n\n    setupBubble(){\n        var display, plot, text;\n        plot = this.bubbles();\n\n        return this.plotData(\"#vis\", this.data, plot);\n\n\n    }\n\n    bubbles() {\n        var chart, clear, click, collide, collisionPadding, connectEvents, data, gravity, hashchange, height, idValue, jitter, label, margin, maxRadius, minCollisionRadius, mouseout, mouseover, node, rScale, rValue, textValue, tick, transformData, update, updateActive, updateLabels, updateNodes, width;\n        width = $(\"#vis\").width();\n        height = 510;\n        data = [];\n        node = null;\n        label = null;\n        var self = this;\n        margin = {\n            top: 5,\n            right: 0,\n            bottom: 0,\n            left: 0\n        };\n        maxRadius = 65;\n        rScale = d3.scaleSqrt().range([0, maxRadius]);\n        rValue = function (d) {\n            return parseInt(d.count);\n        };\n        idValue = function (d) {\n            return d.name;\n        };\n        textValue = function (d) {\n            return d.name;\n        };\n        collisionPadding = 4;\n        minCollisionRadius = 12;\n        jitter = .5;\n        transformData = function (rawData) {\n            rawData.forEach(function (d) {\n                d.count = parseInt(d.count);\n                return rawData.sort(function () {\n                    return 0.5 - Math.random();\n                });\n            });\n            return rawData;\n        };\n\n        tick = function (e) {\n            var dampenedAlpha = .1;\n\n            d3.selectAll(\".bubble-node\")\n                .each(gravity(dampenedAlpha))\n                .each(collide(jitter))\n                .attr(\"transform\", function (d) {\n                    return \"translate(\" + d[\"x\"] + \",\" + d[\"y\"] + \")\";\n                });\n\n            d3.selectAll(\".bubble-label\").style(\"left\", function (d) {\n                return ((margin.left + d[\"x\"]) - d[\"dx\"] / 2) + \"px\";\n            }).style(\"top\", function (d) {\n                return ((margin.top + d[\"y\"]) - d[\"dy\"] / 2) + \"px\";\n            });\n\n        };\n\n\n        // constants used in the simulation\n        var center = {x: width / 2, y: height / 2};\n        var forceStrength = 0.03;\n\n        function charge(d) {\n            return -forceStrength * Math.pow(d.radius, 2.0);\n        }\n\n        function dragstarted(d) {\n            if (!d3.event.active) self.force.alphaTarget(0.3).restart();\n            d.fx = d[\"x\"];\n            d.fy = d[\"y\"];\n        }\n\n        function dragged(d) {\n            d.fx = d3.event.x;\n            d.fy = d3.event.y;\n        }\n\n        function dragended(d) {\n            if (!d3.event.active) self.force.alphaTarget(0);\n            d.fx = null;\n            d.fy = null;\n        }\n\n\n        chart = function (selection) {\n            return selection.each(function (rawData) {\n                var maxDomainValue, svg, svgEnter;\n                data = transformData(rawData);\n                maxDomainValue = d3.max(data, function (d) {\n                    return rValue(d);\n                });\n                rScale.domain([0, maxDomainValue]);\n                svg = d3.select(this).selectAll(\"svg\").data([data]);\n                svgEnter = svg.enter().append(\"svg\");\n                svg.attr(\"width\", width + margin.left + margin.right);\n                svg.attr(\"height\", height + margin.top + margin.bottom);\n                node = svgEnter.append(\"g\").attr(\"id\", \"bubble-nodes\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n                node.append(\"rect\").attr(\"id\", \"bubble-background\").attr(\"width\", width).attr(\"height\", height).on(\"click\", clear);\n                label = d3.select(this).selectAll(\"#bubble-labels\").data([data]).enter().append(\"div\").attr(\"id\", \"bubble-labels\");\n\n                self.force = d3.forceSimulation()\n                    .velocityDecay(0.2)\n                    .on('tick', tick);\n\n                update();\n                //hashchange();\n                //return d3.select(window).on(\"hashchange\", hashchange);\n\n                return;\n            });\n        };\n\n\n        update = function () {\n            data.forEach(function (d, i) {\n                return d.forceR = Math.max(minCollisionRadius, rScale(rValue(d)));\n            });\n            self.force.nodes(data).restart();\n            updateNodes();\n            updateLabels();\n        };\n        updateNodes = function () {\n            node = node.selectAll(\".bubble-node\").data(data, function (d) {\n                return idValue(d);\n            });\n            node.exit().remove();\n            return node.enter().append(\"a\").attr(\"class\", \"bubble-node\").attr(\"xlink:href\", function (d) {\n                return \"#\" + (encodeURIComponent(idValue(d)));\n                // }).call(connectEvents).append(\"circle\").attr(\"r\", function (d) {\n            }).call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended)).call(connectEvents).append(\"circle\").attr(\"r\", function (d) {\n                return rScale(rValue(d));\n            });\n\n        };\n        updateLabels = function () {\n            var labelEnter;\n            label = label.selectAll(\".bubble-label\").data(data, function (d) {\n                return idValue(d);\n            });\n            label.exit().remove();\n            labelEnter = label.enter().append(\"a\").attr(\"class\", \"bubble-label\").attr(\"href\", function (d) {\n                return \"#\" + (encodeURIComponent(idValue(d)));\n            }).call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended)).call(connectEvents);\n            // }).call(connectEvents);\n            labelEnter.append(\"div\").attr(\"class\", \"bubble-label-name\").text(function (d) {\n                return textValue(d);\n            });\n            labelEnter.append(\"div\").attr(\"class\", \"bubble-label-value\").text(function (d) {\n                return rValue(d);\n            });\n            label.style(\"font-size\", function (d) {\n                return Math.max(8, rScale(rValue(d) / 2)) + \"px\";\n            }).style(\"width\", function (d) {\n                return 2.5 * rScale(rValue(d)) + \"px\";\n            });\n            labelEnter.append(\"span\").text(function (d) {\n                return textValue(d);\n            }).each(function (d) {\n                return d.dx = Math.max(2.5 * rScale(rValue(d)), this.getBoundingClientRect().width);\n            }).remove();\n            labelEnter.style(\"width\", function (d) {\n                return d.dx + \"px\";\n            });\n            return labelEnter.each(function (d) {\n                return d.dy = this.getBoundingClientRect().height;\n            });\n        };\n        gravity = function (alpha) {\n            var ax, ay, cx, cy;\n            cx = width / 2;\n            cy = height / 2;\n            ax = alpha / 8;\n            ay = alpha;\n            return function (d) {\n                d.x += (cx - d.x) * ax;\n                return d.y += (cy - d.y) * ay;\n            };\n        };\n        collide = function (jitter) {\n            return function (d) {\n                return data.forEach(function (d2) {\n                    var distance, minDistance, moveX, moveY, x, y;\n                    if (d !== d2) {\n                        x = d.x - d2.x;\n                        y = d.y - d2.y;\n                        distance = Math.sqrt(x * x + y * y);\n                        minDistance = d.forceR + d2.forceR + collisionPadding;\n                        if (distance < minDistance) {\n                            distance = (distance - minDistance) / distance * jitter;\n                            moveX = x * distance;\n                            moveY = y * distance;\n                            d.x -= moveX;\n                            d.y -= moveY;\n                            d2.x += moveX;\n                            return d2.y += moveY;\n                        }\n                    }\n                });\n            };\n        };\n        connectEvents = function (d) {\n            d.on(\"mouseover\", mouseover);\n            return d.on(\"mouseout\", mouseout);\n        };\n        clear = function () {\n            return location.replace(\"#\");\n        };\n        click = function (d) {\n            location.replace(\"#\" + encodeURIComponent(idValue(d)));\n            d3.event.preventDefault();\n            hashchange();\n            //return\n        };\n        hashchange = function () {\n            var id;\n            id = decodeURIComponent(location.hash.substring(1)).trim();\n            return updateActive(id);\n        };\n        updateActive = function (id) {\n            node.classed(\"bubble-selected\", function (d) {\n                return id === idValue(d);\n            });\n\n            if(id.length > 0) {\n                self.submitKeywordQuery(id);\n            }\n            // if (id.length > 0) {\n            //     return d3.select(\"#status\").html(\"<h3>The word <span class=\\\"active\\\">\" + id + \"</span> is now active</h3>\");\n            // } else {\n            //     return d3.select(\"#status\").html(\"<h3>No word is active</h3>\");\n            // }\n        };\n        mouseover = function (d) {\n            return node.classed(\"bubble-hover\", function (p) {\n                return p === d;\n            });\n        };\n        mouseout = function (d) {\n            return node.classed(\"bubble-hover\", false);\n        };\n        chart.jitter = function (_) {\n            if (!arguments.length) {\n                return jitter;\n            }\n            jitter = _;\n            //self.force.restart();\n            return chart;\n        };\n        chart.height = function (_) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _;\n            return chart;\n        };\n        chart.width = function (_) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _;\n            return chart;\n        };\n        chart.r = function (_) {\n            if (!arguments.length) {\n                return rValue;\n            }\n            rValue = _;\n            return chart;\n        };\n\n        return chart;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/bubble-chart.component.ts","module.exports = \"<div id=\\\"bubble-container\\\" class=\\\"\\\">\\n    <div id=\\\"main\\\" role=\\\"main\\\">\\n        <header><h1>Top Keywords</h1></header>\\n        <div id=\\\"vis\\\"></div>\\n        <div id=\\\"status\\\"></div>\\n    </div>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/bubble-chart.component.html\n// module id = 417\n// module chunks = 0","import {Component, Input, ElementRef, AfterContentInit} from '@angular/core';\n\nimport helpers = require('../shared/helpers');\nimport * as d3 from 'd3';\n\nimport '../../public/styles/styles.css';\nimport '../../public/styles/stacked-barchart.component.css';\n\n@Component({\n    selector: 'stacked-barchart',\n    template: require('./stacked-barchart.component.html'),\n})\nexport class StackedBarChart implements AfterContentInit{\n    @Input()\n    results: any;\n\n    public svg: any;\n\n\n    constructor(private el: ElementRef) {\n    }\n\n    ngAfterContentInit() {\n        this.createBarChart();\n    }\n\n\n    createBarChart() {\n\n        this.svg = d3.select(this.el.nativeElement.firstElementChild)\n            .append(\"svg\");\n\n        this.svg.attr(\"width\", this.el.nativeElement.parentElement.offsetWidth * .9);\n        this.svg.attr(\"height\", 560);\n\n\n        var margin = {top: 20, right: 20, bottom: 30, left: 40},\n            width = +this.svg.attr(\"width\") - margin.left - margin.right,\n            height = +this.svg.attr(\"height\") - margin.top - margin.bottom,\n            g = this.svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        var x = d3.scaleBand()\n            .rangeRound([0, width])\n            .padding(0.1)\n            .align(0.1);\n\n        var y = d3.scaleLinear()\n            .rangeRound([height, 0]);\n\n        var z = d3.scaleOrdinal()\n            .range([\"green\", \"red\", \"goldenrod\"])\n            //.range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\n        var stack = d3.stack();\n\n        let data: Array<any> = this.results;\n\n        let keys: Array<any> = this.getKeys(data[0]);\n\n        for(var i = 0; i < data.length; i++) {\n            data[i] = this.type(data[i], keys);\n        }\n\n\n        data.sort(function (a, b) {\n            return b[\"total\"] - a[\"total\"];\n        });\n\n        x.domain(data.map(function (d) {\n            return d[\"keyword\"];\n        }));\n        y.domain([0, d3.max(data, function (d) {\n            return d[\"total\"];\n        })]).nice();\n\n        z.domain(keys.slice(1));\n\n        g.selectAll(\".serie\")\n            .data(stack.keys(keys.slice(1))(data))\n            .enter().append(\"g\")\n            .attr(\"class\", \"serie\")\n            .attr(\"fill\", function (d) {\n                return z(d.key);\n            })\n            .selectAll(\"rect\")\n            .data(function (d) {\n                return d;\n            })\n            .enter().append(\"rect\")\n            .attr(\"x\", function (d) {\n                return x(d.data[\"keyword\"]);\n            })\n            .attr(\"y\", function (d) {\n                return y(d[1]);\n            })\n            .attr(\"height\", function (d) {\n                return y(d[0]) - y(d[1]);\n            })\n            .attr(\"width\", x.bandwidth());\n\n        g.append(\"g\")\n            .attr(\"class\", \"axis axis--x\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x));\n\n        g.append(\"g\")\n            .attr(\"class\", \"axis axis--y\")\n            .call(d3.axisLeft(y).ticks(10, \"s\"))\n            .append(\"text\")\n            .attr(\"x\", 2)\n            .attr(\"y\", y(y.ticks(10).pop()))\n            .attr(\"dy\", \"0.35em\")\n            .attr(\"text-anchor\", \"start\")\n            .attr(\"fill\", \"#000\")\n            .text(\"Keyword Count\");\n\n        var legend = g.selectAll(\".legend\")\n            .data(keys.slice(1).reverse())\n            .enter().append(\"g\")\n            .attr(\"class\", \"legend\")\n            .attr(\"transform\", function (d, i) {\n                return \"translate(0,\" + i * 20 + \")\";\n            })\n            .style(\"font\", \"10px sans-serif\");\n\n        legend.append(\"rect\")\n            .attr(\"x\", width - 18)\n            .attr(\"width\", 18)\n            .attr(\"height\", 18)\n            .attr(\"fill\", z);\n\n        legend.append(\"text\")\n            .attr(\"x\", width - 24)\n            .attr(\"y\", 9)\n            .attr(\"dy\", \".35em\")\n            .attr(\"text-anchor\", \"end\")\n            .text(function (d) {\n                return d;\n            });\n    }\n\n    type(d, columns) {\n        var i, t;\n        for (i = 1, t = 0; i < columns.length; ++i) t += d[columns[i]] = +d[columns[i]];\n        d[\"total\"] = t;\n        return d;\n    }\n\n    getKeys(obj) {\n        var keys = [];\n        for(var k in obj) keys.push(k);\n        return keys;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/stacked-barchart.component.ts","module.exports = \"<div class=\\\"text-center\\\"></div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/stacked-barchart.component.html\n// module id = 421\n// module chunks = 0","import {Component, ElementRef, AfterViewInit, AfterContentInit, Input} from '@angular/core';\nimport '../../public/styles/styles.css';\nimport '../../public/styles/pie-chart.component.css';\nimport * as d3 from 'd3';\n\n@Component({\n    selector: 'pie-chart',\n    template: require('./pie-chart.component.html'),\n})\nexport class PieChart implements AfterContentInit, AfterViewInit {\n\n    @Input()\n    results: any;\n\n    @Input()\n    width: number;\n\n    svg: any;\n    svgOriginal: any;\n    pie: any;\n    key: any;\n    arc: any;\n    outerArc: any;\n    radius: any;\n    color: any;\n    labels: any;\n    percentages: any;\n\n    constructor(private el: ElementRef) {\n\n    }\n\n    ngAfterViewInit() {\n        this.change(this.randomData(this.labels, this.percentages), this.svg, this.pie, this.key, this.arc, this.outerArc, this.color, this.radius, this.results.labels, this.svgOriginal);\n\n    }\n\n    ngAfterContentInit() {\n        this.createPieChart();\n    }\n\n    randomData(labels, percentages) {\n        return labels.map(function (label, i) {\n            return {label: label, value: percentages[i]}\n        });\n    }\n\n    createPieChart() {\n        this.svg = d3.select(this.el.nativeElement.firstElementChild)\n            .append(\"svg\");\n            //.append(\"g\");\n\n        var width = this.width? this.width : this.el.nativeElement.firstElementChild.offsetWidth * .9, //800,\n            height = 560;\n\n        this.svg.attr(\"width\", width);\n        this.svg.attr(\"height\", height);\n\n        this.svgOriginal = this.svg;\n\n        this.svg = this.svg.append(\"g\");\n\n        this.svg.append(\"g\")\n            .attr(\"class\", \"slices\");\n        this.svg.append(\"g\")\n            .attr(\"class\", \"labels\");\n        this.svg.append(\"g\")\n            .attr(\"class\", \"lines\");\n\n\n\n        this.radius = Math.min(width, height) / 2;\n\n        this.pie = d3.pie()\n            .sort(null)\n            .value(function (d) {\n                return d[\"value\"];\n            });\n\n        this.arc = d3.arc()\n            .outerRadius(this.radius * 0.8)\n            .innerRadius(this.radius * 0.4);\n\n        this.outerArc = d3.arc()\n            .innerRadius(this.radius * 0.9)\n            .outerRadius(this.radius * 0.9);\n\n        var transformWidth = this.width? width/2 + 50 : width/2;\n\n        this.svg.attr(\"transform\", \"translate(\" + transformWidth + \",\" + height / 2 + \")\");\n\n        this.key = function (d) {\n            return d.data.label;\n        };\n\n        this.labels = this.results.labels; //[\"Lorem ipsum\", \"dolor sit\", \"amet\", \"consectetur\", \"adipisicing\", \"elit\", \"sed\", \"do\", \"eiusmod\", \"tempor\", \"incididunt\"];\n\n        this.percentages = this.results.percentages; //[.1, .2, .05, .2, .05, .1, .05, .05, .05, .1, .05];\n\n        this.color = d3.scaleOrdinal(d3.schemeCategory20c).domain(this.labels)\n            //.range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n\n        var randomData = this.randomData;\n        var labels = this.labels;\n        var change = this.change;\n\n        var svg = this.svg,\n            svgOriginal = this.svgOriginal,\n            pie = this.pie,\n            key = this.key,\n            arc = this.arc,\n            outerArc = this.outerArc,\n            color = this.color,\n            radius = this.radius,\n            percentages = this.percentages;\n\n        this.change(randomData(labels, percentages), svg, pie, key, arc, outerArc, color, radius, labels, svgOriginal);\n\n        // d3.select(\".randomize\")\n        //     .on(\"click\", function () {\n        //         change(randomData(labels), svg, pie, key, arc, outerArc, color, radius);\n        //     });\n\n    }\n\n    change(data, svg, pie, key, arc, outerArc, color, radius, labels, svgOriginal) {\n        /* ------- PIE SLICES -------*/\n        var slice = svg.select(\".slices\").selectAll(\"path.slice\")\n            .data(pie(data), key);\n\n        slice.enter()\n            .insert(\"path\")\n            .style(\"fill\", function (d) {\n                return color(d.data.label);\n            })\n            .attr(\"class\", \"slice\");\n\n        slice\n            .transition().duration(1000)\n            .attrTween(\"d\", function (d) {\n                this._current = this._current || d;\n                var interpolate = d3.interpolate(this._current, d);\n                this._current = interpolate(0);\n                return function (t) {\n                    return arc(interpolate(t));\n                };\n            })\n\n        slice.exit()\n            .remove();\n\n        /* ------- TEXT LABELS -------*/\n\n        // var text = svg.select(\".labels\").selectAll(\"text\")\n        //     .data(pie(data), key);\n        //\n        // text.enter()\n        //     .append(\"text\")\n        //     .attr(\"dy\", \".35em\")\n        //     .text(function (d) {\n        //         return (d.data.value * 100).toFixed(2) + \"%\" + \" \" + d.data.label;\n        //     });\n        //\n        // function midAngle(d) {\n        //     return d.startAngle + (d.endAngle - d.startAngle) / 2;\n        // }\n        //\n        // text.transition().duration(1000)\n        //     .attrTween(\"transform\", function (d) {\n        //         this._current = this._current || d;\n        //         var interpolate = d3.interpolate(this._current, d);\n        //         this._current = interpolate(0);\n        //         return function (t) {\n        //             var d2 = interpolate(t);\n        //             var pos = outerArc.centroid(d2);\n        //             pos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n        //             return \"translate(\" + pos + \")\";\n        //         };\n        //     })\n        //     .styleTween(\"text-anchor\", function (d) {\n        //         this._current = this._current || d;\n        //         var interpolate = d3.interpolate(this._current, d);\n        //         this._current = interpolate(0);\n        //         return function (t) {\n        //             var d2 = interpolate(t);\n        //             return midAngle(d2) < Math.PI ? \"start\" : \"end\";\n        //         };\n        //     });\n        //\n        // text.exit()\n        //     .remove();\n\n        // /* ------- SLICE TO TEXT POLYLINES -------*/\n        //\n        // var polyline = svg.select(\".lines\").selectAll(\"polyline\")\n        //     .data(pie(data), key);\n        //\n        // polyline.enter()\n        //     .append(\"polyline\");\n        //\n        // polyline.transition().duration(1000)\n        //     .attrTween(\"points\", function (d) {\n        //         this._current = this._current || d;\n        //         var interpolate = d3.interpolate(this._current, d);\n        //         this._current = interpolate(0);\n        //         return function (t) {\n        //             var d2 = interpolate(t);\n        //             var pos = outerArc.centroid(d2);\n        //             pos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n        //             return [arc.centroid(d2), outerArc.centroid(d2), pos];\n        //         };\n        //     });\n        //\n        // polyline.exit()\n        //     .remove();\n\n        var legend = svg.selectAll(\".legend\")\n            .data(labels)\n            .enter().append(\"g\")\n            .attr(\"class\", \"legend\")\n            .attr(\"transform\", function (d, i) {\n                return \"translate(0,\" + i * 20 + \")\";\n            })\n            .style(\"font\", \"10px sans-serif\");\n\n        legend.append(\"rect\")\n            .attr(\"x\", 80 - (svgOriginal.attr(\"width\")/2))\n            .attr(\"y\", 45 - svgOriginal.attr(\"height\")/2)\n            .attr(\"width\", 18)\n            .attr(\"height\", 18)\n            .attr(\"fill\", color);\n\n        legend.append(\"text\")\n            .attr(\"x\", 70 - (svgOriginal.attr(\"width\")/2))\n            .attr(\"y\", 50 - svgOriginal.attr(\"height\")/2)\n            .attr(\"dy\", \".35em\")\n            .attr(\"text-anchor\", \"end\")\n            .text(function (d) {\n                return d;\n            });\n    };\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/pie-chart.component.ts","module.exports = \"<div class=\\\"pie-chart text-center top-60\\\">\\n    <!--<button class=\\\"randomize\\\">Randomize</button>-->\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/pie-chart.component.html\n// module id = 425\n// module chunks = 0","import {Component, Input, ElementRef, AfterContentInit} from '@angular/core';\n\nimport helpers = require('../shared/helpers');\nimport * as d3 from 'd3';\n\nimport '../../public/styles/styles.css';\n//import '../../public/styles/number-line.component.css';\n\n@Component({\n    selector: 'number-line',\n    template: require('./number-line.component.html'),\n})\nexport class NumberLine implements AfterContentInit{\n    @Input()\n    results: any;\n\n    public svg: any;\n\n\n    constructor(private el: ElementRef) {\n    }\n\n    ngAfterContentInit() {\n        this.createNumberLine();\n    }\n\n\n    createNumberLine() {\n\n        this.svg = d3.select(this.el.nativeElement.firstElementChild)\n            .append(\"svg\");\n\n        this.svg.attr(\"width\", this.el.nativeElement.parentElement.offsetWidth);\n        this.svg.attr(\"height\", 200);\n\n\n        var margin = {top: 20, right: 20, bottom: 30, left: 70},\n            width = +this.svg.attr(\"width\") - margin.left - margin.right,\n            height = +this.svg.attr(\"height\") - margin.top - margin.bottom;\n\n        var x = d3.scaleLinear()\n            .domain([-1, 1])\n            .range([0, width]);\n\n        var xAxis = d3.axisTop(x);\n\n\n        x.domain([-1, 1]);\n\n        this.svg.append(\"g\")\n            .attr(\"class\", \"axis--x\")\n            .attr(\"transform\", \"translate(30,100)\")\n            .call(xAxis.ticks(5))\n            .selectAll(\"rect\")\n            .data(this.results)\n            .enter()\n            .append(\"rect\")\n            .attr(\"transform\", \"translate(0,-70)\")\n            .attr(\"fill\", function(d) {\n                if(d > 0)\n                    return \"green\";\n                else if(d < 0)\n                    return \"red\";\n                else\n                    return \"goldenrod\";\n            })\n            .attr(\"x\", function (d) {\n                if(d > 0)\n                    return x(0);\n                else if(d < 0)\n                    return x(d);\n                else\n                    return x(-.01);\n            })\n            .attr(\"y\", 20)\n            .attr(\"width\", function (d) {\n                if(d > 0)\n                    return x(d) - x(0);\n                else if(d < 0)\n                    return x(0) - x(d);\n                else\n                    return x(-.98);\n            })\n            .attr(\"height\", 30);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/number-line.component.ts","import {Component, Input, ElementRef, AfterContentInit} from '@angular/core';\n\nimport helpers = require('../shared/helpers');\nimport * as d3 from 'd3';\n\nimport '../../public/styles/styles.css';\nimport '../../public/styles/product-sentiment-timeline.component.css';\n\n@Component({\n    selector: 'product-sentiment-timeline',\n    template: require('./product-sentiment-timeline.component.html'),\n})\nexport class ProductSentimentTimeline implements AfterContentInit {\n    @Input()\n    results: any;\n\n    @Input()\n    width: any;\n\n    @Input()\n    ylabel: any;\n\n    public svg: any;\n\n\n    private parseTime = d3.timeParse(\"%dd-%mm-%yyyy\");\n    private minDate = 0;\n    private maxDate = 0;\n\n\n    constructor(private el: ElementRef) {\n    }\n\n    ngAfterContentInit() {\n        this.createTimeline();\n    }\n\n\n    createTimeline() {\n\n        this.svg = d3.select(this.el.nativeElement.firstElementChild)\n            .append(\"svg\");\n\n        var w = this.width? this.width:  this.el.nativeElement.parentElement.offsetWidth;\n        this.svg.attr(\"width\", w);\n        this.svg.attr(\"height\", 345);\n\n\n        var margin = {top: 20, right: 20, bottom: 30, left: 50},\n            width = +this.svg.attr(\"width\") - margin.left - margin.right,\n            height = +this.svg.attr(\"height\") - margin.top - margin.bottom,\n            g = this.svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        //var parseTime = d3.timeParse(\"%dd-%mm-%yyyy\");\n\n        var x = d3.scaleTime()\n            .rangeRound([0, width]);\n\n        var y = d3.scaleLinear()\n            .rangeRound([height, 0]);\n\n        var line = d3.line()\n            .x(function (d) {\n                return x(d[\"date\"]);\n            })\n            .y(function (d) {\n                return y(d[\"sentiment\"]);\n            });\n\n        var data = this.results;\n\n\n        for(var i = 0; i < data.length; i++) {\n           this.type(data[i]);\n        }\n\n\n\n        x.domain([new Date(this.minDate), new Date(this.maxDate)]);\n        y.domain(d3.extent(data, function (d) {\n            return <number>d[\"sentiment\"];\n        }));\n\n        g.append(\"g\")\n            .attr(\"class\", \"axis axis--x\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x));\n\n        g.append(\"g\")\n            .attr(\"class\", \"axis axis--y\")\n            .call(d3.axisLeft(y))\n            .append(\"text\")\n            .attr(\"fill\", \"#000\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"y\", -40)\n            .attr(\"dy\", \"0.71em\")\n            .style(\"text-anchor\", \"end\")\n            .text(this.ylabel);\n\n        g.append(\"path\")\n            .datum(data)\n            .attr(\"class\", \"line\")\n            .attr(\"d\", line);\n    }\n\n    type(d) {\n        if(this.minDate == 0 && this.maxDate == 0) {\n            this.minDate = d[\"date\"];\n            this.maxDate = d[\"date\"];\n        } else if(d[\"date\"] < this.minDate) {\n            this.minDate = d[\"date\"];\n        } else if(d[\"date\"] > this.maxDate) {\n            this.maxDate = d[\"date\"];\n        }\n\n        var date = new Date(d[\"date\"]);\n        var curr_date = date.getDate();\n        var curr_month = date.getMonth() + 1; //Months are zero based\n        var curr_year = date.getFullYear();\n\n        var formattedDate = curr_date + \"-\" + curr_month + \"-\" + curr_year;\n\n        d[\"date\"] = <any>date;//this.parseTime(formattedDate);\n        d[\"sentiment\"] = +d.sentiment;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/product-sentiment-timeline.component.ts","import {Component, Input, AfterContentInit} from '@angular/core';\nimport { DataTableResource } from 'angular-2-data-table';\n\nimport '../../public/styles/styles.css';\nimport '../../public/styles/data-table.component.css';\n\n\n@Component({\n    selector: 'product-data-table',\n    template: require('./data-table.component.html'),\n})\nexport class ProductDataTable implements AfterContentInit {\n\n    @Input()\n    products:any;\n\n    itemResource;\n    items = [];\n    itemCount = 0;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n        this.itemResource = new DataTableResource(this.products);\n        this.items = [];\n        this.itemCount = 0;\n        this.itemResource.count().then(count => this.itemCount = count);\n\n\n    }\n    ngAfterContentInit() {\n    }\n\n    reloadItems(params) {\n        this.itemResource.query(params).then(items => this.items = items);\n    }\n\n    // special properties:\n\n    rowClick(rowEvent) {\n        console.log('Clicked: ' + rowEvent.row.item.name);\n    }\n\n    rowDoubleClick(rowEvent) {\n        alert('Double clicked: ' + rowEvent.row.item.name);\n    }\n\n    rowTooltip(item) { return item.jobTitle; }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/data-table.component.ts","module.exports = \"<div style=\\\"margin: auto; max-width: 1000px; margin-bottom: 50px;\\\">\\n    <data-table id=\\\"product-grid\\\"\\n                headerTitle=\\\"\\\"\\n                [items]=\\\"items\\\"\\n                [itemCount]=\\\"itemCount\\\"\\n                (reload)=\\\"reloadItems($event)\\\">\\n        <data-table-column\\n                [property]=\\\"'name'\\\"\\n                [header]=\\\"'Product Name'\\\"\\n                [sortable]=\\\"true\\\"\\n                [resizable]=\\\"true\\\">\\n        </data-table-column>\\n        <data-table-column\\n                [property]=\\\"'count'\\\"\\n                [header]=\\\"'Review Count'\\\"\\n                [sortable]=\\\"true\\\">\\n        </data-table-column>\\n    </data-table>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/data-table.component.html\n// module id = 435\n// module chunks = 0","import {Component, Input, OnChanges, SimpleChanges, ElementRef} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {PaginationInstance} from 'ng2-pagination';\n\nimport helpers = require('../shared/helpers')\nimport * as d3 from 'd3';\n\nimport '../../public/styles/styles.css';\nimport '../../public/styles/reviews.component.css';\n\n@Component({\n    selector: 'concepts-table',\n    template: require('./concepts-table.component.html'),\n})\nexport class ConceptsTable implements OnChanges {\n    @Input()\n    data: any;\n\n    //this array contains the image we will show for each page\n    reviews: Array<any> = [];\n\n    public noResults = false;\n    public filter: string = '';\n    public maxSize: number = 7;\n    public directionLinks: boolean = true;\n    public autoHide: boolean = false;\n    public config: PaginationInstance = {\n\n        id: 'concepts-pagination',\n\n        itemsPerPage: 10,\n\n        currentPage: 1\n    };\n\n    opened: Boolean = false;\n\n    toggle(i) {\n        var index = (this.config.currentPage * this.config.itemsPerPage) - (this.config.itemsPerPage - i);\n        this.reviews[index][\"opened\"] = !this.reviews[index][\"opened\"];\n    }\n\n    constructor(private elRef: ElementRef, private sanitizer: DomSanitizer) {\n    }\n\n\n    onPageChange(number: number) {\n        this.config.currentPage = number;\n    }\n\n    public ngAfterViewChecked() {\n    }\n\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.config.currentPage = 1;\n        if (this.data) {\n            this.reviews = [];\n            this.parseData(this.data);\n\n        }\n        this.config.currentPage = 1;\n\n    }\n\n    parseData(data) {\n        for (var i = 0; i < data.length; i++) {\n            var jsonObj = {};\n            jsonObj[\"product_name\"] = data[i][\"product_name\"];\n            jsonObj[\"review_text\"] = data[i][\"review_text\"];\n            jsonObj[\"summary\"] = data[i][\"summary\"];\n            jsonObj[\"doc_sentiment\"] = {};\n            jsonObj[\"concepts\"] = [];\n            jsonObj[\"opened\"] = true;\n\n            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"concepts\"].length > 0) {\n                jsonObj[\"doc_sentiment\"][\"type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n                jsonObj[\"doc_sentiment\"][\"score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n                jsonObj[\"doc_emotions\"] = data[i][\"review_text_enriched\"][\"docEmotions\"];\n\n                var doc = data[i][\"review_text_enriched\"][\"concepts\"];\n                for (var j = 0; j < doc.length; j++) {\n                    var concept = {\n                        \"text\": null,\n                        \"relevance\": null\n                    };\n\n                    var obj = doc[j];\n\n                    concept[\"text\"] = obj[\"text\"];\n                    concept[\"relevance\"] = obj[\"relevance\"];\n\n                    if (obj[\"dbpedia\"])\n                        concept[\"dbpedia\"] = obj[\"dbpedia\"];\n\n                    if (obj[\"freebase\"])\n                        concept[\"freebase\"] = obj[\"freebase\"];\n\n                    if (obj[\"opencyc\"])\n                        concept[\"opencyc\"] = obj[\"opencyc\"];\n\n                    if (obj[\"yago\"])\n                        concept[\"yago\"] = obj[\"yago\"];\n\n                    if (obj[\"website\"])\n                        concept[\"website\"] = obj[\"website\"];\n\n                    if (obj[\"crunchbase\"])\n                        concept[\"crunchbase\"] = obj[\"crunchbase\"];\n                    jsonObj[\"concepts\"].push(concept);\n\n                }\n                this.reviews.push(jsonObj);\n            }\n\n        }\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/concepts-table.component.ts","module.exports = \"<div class=\\\"row margin-lr-sm margin-tb-sm\\\">\\n    <div id=\\\"\\\" class=\\\"text-center\\\">\\n        <div *ngIf=\\\"reviews.length > 0\\\">\\n            <div style=\\\"text-align:left !important;\\\">\\n                <ul class=\\\"reviews-list list list-group\\\">\\n                    <li *ngFor=\\\"let review of (reviews | paginate: config); let i = index\\\">\\n                        <div class=\\\"panel panel-default no-padding\\\">\\n                            <div class=\\\"panel-heading\\\" (click)=\\\"toggle(i)\\\">\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'positive'\\\">\\n                                    <i class=\\\"fa fa-smile-o fa-2x green\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>{{review.doc_sentiment.score}}</span>\\n                                </div>\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'negative'\\\">\\n                                    <i class=\\\"fa fa-frown-o fa-2x red\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>{{review.doc_sentiment.score}}</span>\\n                                </div>\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'neutral'\\\">\\n                                    <i class=\\\"fa fa-meh-o fa-2x goldenrod\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>Neutral</span>\\n                                </div>\\n                                <h5>Product Name: </h5>\\n                                <h4>{{review.product_name}}</h4>\\n                                <h5>Review Text: </h5>\\n                                <p>{{review.review_text}}</p>\\n                                <h5>Doc Emotions: </h5>\\n                                <div class=\\\"sprite-image row\\\">\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"joy\\\"></div>\\n                                        <figcaption>Joy - {{review.doc_emotions.joy | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"sadness\\\"></div>\\n                                        <figcaption>Sadness - {{review.doc_emotions.sadness | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"anger\\\"></div>\\n                                        <figcaption>Anger - {{review.doc_emotions.anger | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"disgust\\\"></div>\\n                                        <figcaption>Disgust - {{review.doc_emotions.disgust | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"fear\\\"></div>\\n                                        <figcaption>Fear - {{review.doc_emotions.fear | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"panel-body\\\" [ngClass]=\\\"{hide: !review.opened}\\\">\\n                                <table class=\\\"table\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>Concept</th>\\n                                        <th>Relevance</th>\\n                                        <th>References</th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let concept of review.concepts\\\">\\n                                        <td>{{concept.text}}</td>\\n                                        <td>{{concept.relevance | percent: \\\"1.1-1\\\"}}</td>\\n                                        <td>\\n                                            <a *ngIf=\\\"concept.dbpedia\\\" href=\\\"{{concept.dbpedia}}\\\">DBPedia</a>\\n                                            <span *ngIf=\\\"concept.dbpedia\\\"> | </span>\\n                                            <a *ngIf=\\\"concept.freebase\\\" href=\\\"{{concept.freebase}}\\\">Freebase</a>\\n                                            <span *ngIf=\\\"concept.freebase\\\"> | </span>\\n                                            <a *ngIf=\\\"concept.opencyc\\\" href=\\\"{{concept.opencyc}}\\\">OpenCyc</a>\\n                                            <span *ngIf=\\\"concept.opencyc\\\"> | </span>\\n                                            <a *ngIf=\\\"concept.yago\\\" href=\\\"{{concept.yago}}\\\">Yago</a>\\n                                            <span *ngIf=\\\"concept.yago\\\"> | </span>\\n                                            <a *ngIf=\\\"concept.crunchbase\\\" href=\\\"{{concept.crunchbase}}\\\">Crunchbase</a>\\n                                            <span *ngIf=\\\"concept.crunchbase\\\"> | </span>\\n                                            <a *ngIf=\\\"concept.website\\\" href=\\\"{{concept.website}}\\\">Website</a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n\\n                        </div>\\n                    </li>\\n                </ul>\\n                <div class=\\\"\\\">\\n                    <pagination-controls [id]=\\\"config.id\\\" [maxSize]=\\\"maxSize\\\"\\n                                         [directionLinks]=\\\"directionLinks\\\"\\n                                         [autoHide]=\\\"autoHide\\\" (pageChange)=\\\"onPageChange($event);\\\"\\n                                         style=\\\"text-align:center;font-size:2em\\\"></pagination-controls>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"reviews.length < 1\\\">\\n            <h1>There are no concepts.</h1>\\n        </div>\\n    </div>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/concepts-table.component.html\n// module id = 437\n// module chunks = 0","import {Component, Input, OnChanges, SimpleChanges, ElementRef} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {PaginationInstance} from 'ng2-pagination';\n\nimport helpers = require('../shared/helpers')\nimport * as d3 from 'd3';\n\nimport '../../public/styles/styles.css';\nimport '../../public/styles/reviews.component.css';\n\n@Component({\n    selector: 'entities-table',\n    template: require('./entities-table.component.html'),\n})\nexport class EntitiesTable implements OnChanges {\n    @Input()\n    data: any;\n\n    //this array contains the image we will show for each page\n    reviews: Array<any> = [];\n\n    public noResults = false;\n    public filter: string = '';\n    public maxSize: number = 7;\n    public directionLinks: boolean = true;\n    public autoHide: boolean = false;\n    public config: PaginationInstance = {\n\n        id: 'entities-pagination',\n\n        itemsPerPage: 10,\n\n        currentPage: 1\n    };\n\n    opened: Boolean = false;\n\n    toggle(i) {\n        var index = (this.config.currentPage * this.config.itemsPerPage) - (this.config.itemsPerPage - i);\n        this.reviews[index][\"opened\"] = !this.reviews[index][\"opened\"];\n    }\n\n    constructor(private elRef: ElementRef, private sanitizer: DomSanitizer) {\n    }\n\n\n    onPageChange(number: number) {\n        this.config.currentPage = number;\n    }\n\n    public ngAfterViewChecked() {\n    }\n\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.config.currentPage = 1;\n        if (this.data) {\n            this.reviews = [];\n            this.parseData(this.data);\n\n        }\n        this.config.currentPage = 1;\n\n    }\n\n    parseData(data) {\n        for (var i = 0; i < data.length; i++) {\n            var jsonObj = {};\n            jsonObj[\"product_name\"] = data[i][\"product_name\"];\n            jsonObj[\"review_text\"] = data[i][\"review_text\"];\n            jsonObj[\"summary\"] = data[i][\"summary\"];\n            jsonObj[\"doc_sentiment\"] = {};\n            jsonObj[\"entities\"] = [];\n            jsonObj[\"opened\"] = true;\n\n            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"entities\"].length > 0) {\n                jsonObj[\"doc_sentiment\"][\"type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n                jsonObj[\"doc_sentiment\"][\"score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n                jsonObj[\"doc_emotions\"] = data[i][\"review_text_enriched\"][\"docEmotions\"];\n\n                var doc = data[i][\"review_text_enriched\"][\"entities\"];\n                for (var j = 0; j < doc.length; j++) {\n                    var entity = {\n                        \"text\": null,\n                        \"relevance\": null,\n                        \"count\": null,\n                        \"sentiment\": {\n                            \"type\": null,\n                            \"score\": null\n                        },\n                        \"type\": null\n                    };\n\n                    var obj = doc[j];\n\n                    entity[\"text\"] = obj[\"text\"];\n                    entity[\"relevance\"] = obj[\"relevance\"];\n                    entity[\"type\"] = obj[\"type\"];\n                    entity[\"sentiment\"][\"type\"] = obj[\"sentiment\"][\"type\"];\n\n                    if (obj[\"sentiment\"][\"score\"])\n                        entity[\"sentiment\"][\"score\"] = obj[\"sentiment\"][\"score\"];\n\n                    jsonObj[\"entities\"].push(entity);\n\n                }\n                this.reviews.push(jsonObj);\n            }\n\n        }\n\n    }\n\n    convertToCSV(data) {\n        var csvReviews = [];\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"entities\"].length > 0) {\n                var doc = data[i][\"review_text_enriched\"][\"entities\"];\n                for (var j = 0; j < doc.length; j++) {\n                    var obj = doc[j];\n\n                    var jsonObj = {};\n\n                    jsonObj[\"product_name\"] = data[i][\"product_name\"];\n                    jsonObj[\"review_text\"] = data[i][\"review_text\"];\n                    jsonObj[\"summary\"] = data[i][\"summary\"];\n                    jsonObj[\"doc_sentiment_type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n                    jsonObj[\"doc_sentiment_score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n                    jsonObj[\"entity_text\"] = obj[\"text\"];\n                    jsonObj[\"entity_relevance\"] = obj[\"relevance\"];\n                    jsonObj[\"entity_type\"] = obj[\"type\"];\n                    jsonObj[\"sentiment_score\"] = obj[\"sentiment\"][\"score\"];\n                    jsonObj[\"sentiment_type\"] = obj[\"sentiment\"][\"type\"];\n\n                    csvReviews.push(jsonObj);\n\n                }\n            }\n\n        }\n\n        return csvReviews;\n    }\n\n\n    downloadAsCSV() {\n        var csvFile = d3.csvFormat(this.convertToCSV(this.data));\n        helpers.exportToCSV(csvFile, \"entities-export.csv\");\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/entities-table.component.ts","module.exports = \"<div class=\\\"row margin-lr-sm margin-tb-sm\\\">\\n    <div id=\\\"\\\" class=\\\"text-center\\\">\\n        <div *ngIf=\\\"reviews.length > 0\\\">\\n            <div style=\\\"text-align:left !important;\\\">\\n                <ul class=\\\"reviews-list list list-group\\\">\\n                    <li *ngFor=\\\"let review of (reviews | paginate: config); let i = index\\\">\\n                        <div class=\\\"panel panel-default no-padding\\\">\\n                            <div class=\\\"panel-heading\\\" (click)=\\\"toggle(i)\\\">\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'positive'\\\">\\n                                    <i class=\\\"fa fa-smile-o fa-2x green\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>{{review.doc_sentiment.score}}</span>\\n                                </div>\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'negative'\\\">\\n                                    <i class=\\\"fa fa-frown-o fa-2x red\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>{{review.doc_sentiment.score}}</span>\\n                                </div>\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'neutral'\\\">\\n                                    <i class=\\\"fa fa-meh-o fa-2x goldenrod\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>Neutral</span>\\n                                </div>\\n                                <h5>Product Name: </h5>\\n                                <h4>{{review.product_name}}</h4>\\n                                <h5>Review Text: </h5>\\n                                <p>{{review.review_text}}</p>\\n                                <h5>Doc Emotions: </h5>\\n                                <div class=\\\"sprite-image row\\\">\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"joy\\\"></div>\\n                                        <figcaption>Joy - {{review.doc_emotions.joy | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"sadness\\\"></div>\\n                                        <figcaption>Sadness - {{review.doc_emotions.sadness | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"anger\\\"></div>\\n                                        <figcaption>Anger - {{review.doc_emotions.anger | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"disgust\\\"></div>\\n                                        <figcaption>Disgust - {{review.doc_emotions.disgust | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"fear\\\"></div>\\n                                        <figcaption>Fear - {{review.doc_emotions.fear | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"panel-body\\\" [ngClass]=\\\"{hide: !review.opened}\\\">\\n                                <table class=\\\"table\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>Entity</th>\\n                                        <th>Relevance</th>\\n                                        <th>Type</th>\\n                                        <th>Sentiment</th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let entity of review.entities\\\">\\n                                        <td>{{entity.text}}</td>\\n                                        <td>{{entity.relevance | percent: \\\"1.1-1\\\"}}</td>\\n                                        <td>{{entity.type}}</td>\\n                                        <td>\\n                                            <p *ngIf=\\\"entity.sentiment.type == 'positive'\\\">\\n                                                <i class=\\\"fa fa-smile-o fa-2x green\\\" aria-hidden=\\\"true\\\"></i>\\n                                                <span>{{entity.sentiment.score}}</span>\\n                                            </p>\\n                                            <p *ngIf=\\\"entity.sentiment.type == 'negative'\\\">\\n                                                <i class=\\\"fa fa-frown-o fa-2x red\\\" aria-hidden=\\\"true\\\"></i>\\n                                                <span>{{entity.sentiment.score}}</span>\\n                                            </p>\\n                                            <p *ngIf=\\\"entity.sentiment.type == 'neutral'\\\">\\n                                                <i class=\\\"fa fa-meh-o fa-2x goldenrod\\\" aria-hidden=\\\"true\\\"></i>\\n                                                <span>Neutral</span>\\n                                            </p>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n\\n                        </div>\\n                    </li>\\n                </ul>\\n                <div class=\\\"\\\">\\n                    <pagination-controls [id]=\\\"config.id\\\" [maxSize]=\\\"maxSize\\\"\\n                                         [directionLinks]=\\\"directionLinks\\\"\\n                                         [autoHide]=\\\"autoHide\\\" (pageChange)=\\\"onPageChange($event);\\\"\\n                                         style=\\\"text-align:center;font-size:2em\\\"></pagination-controls>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"reviews.length < 1\\\">\\n            <h1>There are no entities.</h1>\\n        </div>\\n    </div>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/entities-table.component.html\n// module id = 439\n// module chunks = 0","import {Component, Input, OnChanges, SimpleChanges, ElementRef} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {PaginationInstance} from 'ng2-pagination';\n\nimport helpers = require('../shared/helpers');\nimport * as d3 from 'd3';\n\nimport '../../public/styles/styles.css';\nimport '../../public/styles/reviews.component.css';\n\n@Component({\n    selector: 'keywords-table',\n    template: require('./keywords-table.component.html'),\n})\nexport class KeywordsTable implements OnChanges {\n    @Input()\n    data: any;\n\n    //this array contains the image we will show for each page\n    reviews: Array<any> = [];\n\n    public noResults = false;\n    public filter: string = '';\n    public maxSize: number = 7;\n    public directionLinks: boolean = true;\n    public autoHide: boolean = false;\n    public config: PaginationInstance = {\n\n        id: 'keywords-pagination',\n\n        itemsPerPage: 10,\n\n        currentPage: 1\n    };\n\n    opened: Boolean = false;\n\n    toggle(i) {\n        var index = (this.config.currentPage * this.config.itemsPerPage) - (this.config.itemsPerPage - i);\n        this.reviews[index][\"opened\"] = !this.reviews[index][\"opened\"];\n    }\n\n    constructor(private elRef: ElementRef, private sanitizer: DomSanitizer) {\n    }\n\n\n    onPageChange(number: number) {\n        this.config.currentPage = number;\n    }\n\n    public ngAfterViewChecked() {\n    }\n\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.config.currentPage = 1;\n        if (this.data) {\n            this.reviews = [];\n            this.parseData(this.data);\n\n        }\n        this.config.currentPage = 1;\n\n    }\n\n    parseData(data) {\n        for (var i = 0; i < data.length; i++) {\n            var jsonObj = {};\n            jsonObj[\"product_name\"] = data[i][\"product_name\"];\n            jsonObj[\"review_text\"] = data[i][\"review_text\"];\n            jsonObj[\"summary\"] = data[i][\"summary\"];\n            jsonObj[\"doc_sentiment\"] = {};\n            jsonObj[\"keywords\"] = [];\n            jsonObj[\"opened\"] = true;\n\n            if (data[i][\"review_text_enriched\"] && data[i][\"review_text_enriched\"][\"keywords\"].length > 0) {\n                jsonObj[\"doc_sentiment\"][\"type\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"type\"];\n                jsonObj[\"doc_sentiment\"][\"score\"] = data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] ? data[i][\"review_text_enriched\"][\"docSentiment\"][\"score\"] : null;\n                jsonObj[\"doc_emotions\"] = data[i][\"review_text_enriched\"][\"docEmotions\"];\n\n                var doc = data[i][\"review_text_enriched\"][\"keywords\"];\n                for (var j = 0; j < doc.length; j++) {\n                    var keyword = {\n                        \"text\": null,\n                        \"relevance\": null,\n                        \"sentiment\": {\n                            \"type\": null,\n                            \"score\": null\n                        }\n                    };\n\n                    var obj = doc[j];\n\n                    keyword[\"text\"] = obj[\"text\"];\n                    keyword[\"relevance\"] = obj[\"relevance\"];\n                    keyword[\"sentiment\"][\"type\"] = obj[\"sentiment\"][\"type\"];\n\n                    if (obj[\"sentiment\"][\"score\"])\n                        keyword[\"sentiment\"][\"score\"] = obj[\"sentiment\"][\"score\"];\n\n                    jsonObj[\"keywords\"].push(keyword);\n\n                }\n                this.reviews.push(jsonObj);\n            }\n\n        }\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/keywords-table.component.ts","module.exports = \"<div class=\\\"row margin-lr-sm margin-tb-sm\\\">\\n    <div id=\\\"\\\" class=\\\"text-center\\\">\\n        <div *ngIf=\\\"reviews.length > 0\\\">\\n            <div style=\\\"text-align:left !important;\\\">\\n                <ul class=\\\"reviews-list list list-group\\\">\\n                    <li *ngFor=\\\"let review of (reviews | paginate: config); let i = index\\\">\\n                        <div class=\\\"panel panel-default no-padding\\\">\\n                            <div class=\\\"panel-heading\\\" (click)=\\\"toggle(i)\\\">\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'positive'\\\">\\n                                    <i class=\\\"fa fa-smile-o fa-2x green\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>{{review.doc_sentiment.score}}</span>\\n                                </div>\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'negative'\\\">\\n                                    <i class=\\\"fa fa-frown-o fa-2x red\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>{{review.doc_sentiment.score}}</span>\\n                                </div>\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"review.doc_sentiment.type == 'neutral'\\\">\\n                                    <i class=\\\"fa fa-meh-o fa-2x goldenrod\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <span>Neutral</span>\\n                                </div>\\n                                <h5>Product Name: </h5>\\n                                <h4>{{review.product_name}}</h4>\\n                                <h5>Review Text: </h5>\\n                                <p>{{review.review_text}}</p>\\n                                <h5>Doc Emotions: </h5>\\n                                <div class=\\\"sprite-image row\\\">\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"joy\\\"></div>\\n                                        <figcaption>Joy - {{review.doc_emotions.joy | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"sadness\\\"></div>\\n                                        <figcaption>Sadness - {{review.doc_emotions.sadness | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"anger\\\"></div>\\n                                        <figcaption>Anger - {{review.doc_emotions.anger | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"disgust\\\"></div>\\n                                        <figcaption>Disgust - {{review.doc_emotions.disgust | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                    <figure class=\\\"col-sm-1 text-center\\\">\\n                                        <div class =\\\"emotion-block\\\" id=\\\"fear\\\"></div>\\n                                        <figcaption>Fear - {{review.doc_emotions.fear | number : '1.2-2'}}</figcaption>\\n                                    </figure>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"panel-body\\\" [ngClass]=\\\"{hide: !review.opened}\\\">\\n                                <table class=\\\"table\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>Keyword</th>\\n                                        <th>Relevance</th>\\n                                        <th>Sentiment</th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let keyword of review.keywords\\\">\\n                                        <td>{{keyword.text}}</td>\\n                                        <td>{{keyword.relevance | percent: \\\"1.1-1\\\"}}</td>\\n                                        <td>\\n                                            <p *ngIf=\\\"keyword.sentiment.type == 'positive'\\\">\\n                                                <i class=\\\"fa fa-smile-o fa-2x green\\\" aria-hidden=\\\"true\\\"></i>\\n                                                <span>{{keyword.sentiment.score}}</span>\\n                                            </p>\\n                                            <p *ngIf=\\\"keyword.sentiment.type == 'negative'\\\">\\n                                                <i class=\\\"fa fa-frown-o fa-2x red\\\" aria-hidden=\\\"true\\\"></i>\\n                                                <span>{{keyword.sentiment.score}}</span>\\n                                            </p>\\n                                            <p *ngIf=\\\"keyword.sentiment.type == 'neutral'\\\">\\n                                                <i class=\\\"fa fa-meh-o fa-2x goldenrod\\\" aria-hidden=\\\"true\\\"></i>\\n                                                <span>Neutral</span>\\n                                            </p>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n\\n                        </div>\\n                    </li>\\n                </ul>\\n                <div class=\\\"\\\">\\n                    <pagination-controls [id]=\\\"config.id\\\" [maxSize]=\\\"maxSize\\\"\\n                                         [directionLinks]=\\\"directionLinks\\\"\\n                                         [autoHide]=\\\"autoHide\\\" (pageChange)=\\\"onPageChange($event);\\\"\\n                                         style=\\\"text-align:center;font-size:2em\\\"></pagination-controls>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"reviews.length < 1\\\">\\n            <h1>There are no concepts.</h1>\\n        </div>\\n    </div>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/keywords-table.component.html\n// module id = 441\n// module chunks = 0"],"sourceRoot":""}